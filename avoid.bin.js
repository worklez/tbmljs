// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
try {
  this['Module'] = Module;
} catch(e) {
  this['Module'] = Module = {};
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function(filename) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename).toString();
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename).toString();
    }
    return ret;
  };

  Module['load'] = function(f) {
    globalEval(read(f));
  };

  if (!Module['arguments']) {
    Module['arguments'] = process['argv'].slice(2);
  }
}

if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  // Polyfill over SpiderMonkey/V8 differences
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function(f) { snarf(f) };
  }

  if (!Module['arguments']) {
    if (typeof scriptArgs != 'undefined') {
      Module['arguments'] = scriptArgs;
    } else if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}

if (ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER) {
  if (!Module['print']) {
    Module['print'] = function(x) {
      console.log(x);
    };
  }

  if (!Module['printErr']) {
    Module['printErr'] = function(x) {
      console.log(x);
    };
  }
}

if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (!Module['arguments']) {
    if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}

if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...
  var TRY_USE_DUMP = false;
  if (!Module['print']) {
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  Module['load'] = importScripts;
}

if (!ENVIRONMENT_IS_WORKER && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_SHELL) {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
if (!Module['preRun']) Module['preRun'] = [];
if (!Module['postRun']) Module['postRun'] = [];

  
// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (/^\[\d+\ x\ (.*)\]/.test(type)) return true; // [15 x ?] blocks. Like structs
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  BITSHIFT64_SHL: 0,
  BITSHIFT64_ASHR: 1,
  BITSHIFT64_LSHR: 2,
  bitshift64: function (low, high, op, bits) {
    var ret;
    var ander = Math.pow(2, bits)-1;
    if (bits < 32) {
      switch (op) {
        case Runtime.BITSHIFT64_SHL:
          ret = [low << bits, (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits))];
          break;
        case Runtime.BITSHIFT64_ASHR:
          ret = [(((low >>> bits ) | ((high&ander) << (32 - bits))) >> 0) >>> 0, (high >> bits) >>> 0];
          break;
        case Runtime.BITSHIFT64_LSHR:
          ret = [((low >>> bits) | ((high&ander) << (32 - bits))) >>> 0, high >>> bits];
          break;
      }
    } else if (bits == 32) {
      switch (op) {
        case Runtime.BITSHIFT64_SHL:
          ret = [0, low];
          break;
        case Runtime.BITSHIFT64_ASHR:
          ret = [high, (high|0) < 0 ? ander : 0];
          break;
        case Runtime.BITSHIFT64_LSHR:
          ret = [high, 0];
          break;
      }
    } else { // bits > 32
      switch (op) {
        case Runtime.BITSHIFT64_SHL:
          ret = [0, low << (bits - 32)];
          break;
        case Runtime.BITSHIFT64_ASHR:
          ret = [(high >> (bits - 32)) >>> 0, (high|0) < 0 ? ander : 0];
          break;
        case Runtime.BITSHIFT64_LSHR:
          ret = [high >>>  (bits - 32) , 0];
          break;
      }
    }
    HEAP32[tempDoublePtr>>2] = ret[0]; // cannot use utility functions since we are in runtime itself
    HEAP32[tempDoublePtr+4>>2] = ret[1];
  },
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type.charAt(type.length-1) == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = size;
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Types.types[field].alignSize;
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      alignSize = type.packed ? 1 : Math.min(alignSize, Runtime.QUANTUM_SIZE);
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return FUNCTION_TABLE[ptr].apply(null, args);
    } else {
      return FUNCTION_TABLE[ptr]();
    }
  },
  addFunction: function (func, sig) {
    //assert(sig); // TODO: support asm
    var table = FUNCTION_TABLE; // TODO: support asm
    var ret = table.length;
    table.push(func);
    table.push(0);
    return ret;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xff;
      if (needed) {
        buffer.push(code);
        needed--;
      }
      if (buffer.length == 0) {
        if (code < 128) return String.fromCharCode(code);
        buffer.push(code);
        if (code > 191 && code < 224) {
          needed = 1;
        } else {
          needed = 2;
        }
        return '';
      }
      if (needed > 0) return '';
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var ret;
      if (c1 > 191 && c1 < 224) {
        ret = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
      } else {
        ret = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function stackAlloc(size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = ((((STACKTOP)+3)>>2)<<2); return ret; },
  staticAlloc: function staticAlloc(size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = ((((STATICTOP)+3)>>2)<<2); if (STATICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function alignMemory(size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 4))*(quantum ? quantum : 4); return ret; },
  makeBigInt: function makeBigInt(low,high,unsigned) { var ret = (unsigned ? (((low)>>>0)+(((high)>>>0)*4294967296)) : (((low)>>>0)+(((high)|0)*4294967296))); return ret; },
  QUANTUM_SIZE: 4,
  __dummy__: 0
}







//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.
var setjmpId = 1; // Used in setjmp/longjmp
var setjmpLabels = {};

var ABORT = false;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function abort(text) {
  Module.print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = eval('_' + ident);
  } catch(e) {
    try {
      func = globalScope['Module']['_' + ident]; // closure exported function
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,Math.min(Math.floor((value)/4294967296), 4294967295)>>>0],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': (HEAPF64[(tempDoublePtr)>>3]=value,HEAP32[((ptr)>>2)]=HEAP32[((tempDoublePtr)>>2)],HEAP32[(((ptr)+(4))>>2)]=HEAP32[(((tempDoublePtr)+(4))>>2)]); break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return (HEAP32[((tempDoublePtr)>>2)]=HEAP32[((ptr)>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((ptr)+(4))>>2)],HEAPF64[(tempDoublePtr)>>3]);
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_NONE = 3; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// Simple unoptimized memset - necessary during startup
var _memset = function(ptr, value, num) {
  var stop = ptr + num;
  while (ptr < stop) {
    HEAP8[((ptr++)|0)]=value;
  }
}

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    _memset(ret, 0, size);
    return ret;
  }

  if (singleType === 'i8') {
    HEAPU8.set(new Uint8Array(slab), ret);
    return ret;
  }

  var i = 0, type;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);
    i += Runtime.getNativeTypeSize(type);
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  var utf8 = new Runtime.UTF8Processor();
  var nullTerminated = typeof(length) == "undefined";
  var ret = "";
  var i = 0;
  var t;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (nullTerminated && t == 0) break;
    ret += utf8.processCChar(t);
    i += 1;
    if (!nullTerminated && i == length) break;
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function Array_stringify(array) {
  var ret = "";
  for (var i = 0; i < array.length; i++) {
    ret += String.fromCharCode(array[i]);
  }
  return ret;
}
Module['Array_stringify'] = Array_stringify;

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STACK_ROOT, STACKTOP, STACK_MAX;
var STATICTOP;
function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

STACK_ROOT = STACKTOP = Runtime.alignMemory(1);
STACK_MAX = TOTAL_STACK; // we lose a little stack here, but TOTAL_STACK is nice and round so use that as the max

var tempDoublePtr = Runtime.alignMemory(allocate(12, 'i8', ALLOC_STACK), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}

STATICTOP = STACK_MAX;
assert(STATICTOP < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY

var nullString = allocate(intArrayFromString('(null)'), 'i8', ALLOC_STACK);

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATINIT__ = []; // functions called during startup
var __ATMAIN__ = []; // functions called when main() is to be run
var __ATEXIT__ = []; // functions called during shutdown

function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

if (!Math.imul) Math.imul = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var calledRun = false;
var runDependencyWatcher = null;
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 6000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    } 
    // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
    if (!calledRun && shouldRunNow) run();
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data

// === Body ===



assert(STATICTOP == STACK_MAX); assert(STACK_MAX == TOTAL_STACK);

STATICTOP += 31696;

assert(STATICTOP < TOTAL_MEMORY);


var _stdout;
var _stdin;
var _stderr;


__ATINIT__ = __ATINIT__.concat([
  { func: function() { __GLOBAL__I_a1000() } },
  { func: function() { __GLOBAL__I_a291() } }
]);
















































































































































































































































































































































































var ___dso_handle;










































































































































































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
var __ZTVN10__cxxabiv119__pointer_type_infoE;
var __ZTVN10__cxxabiv117__class_type_infoE;








































































































var __ZTIc;







































































































































































































allocate([87,97,114,110,105,110,103,44,32,110,111,110,111,114,116,104,111,103,111,110,97,108,32,101,100,103,101,46,0] /* Warning, nonorthogon */, "i8", ALLOC_NONE, 5242880);
allocate(24, "i8", ALLOC_NONE, 5242912);
allocate([65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5242936);
allocate([77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5242952);
allocate([117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0] /* unsupported locale f */, "i8", ALLOC_NONE, 5242968);
allocate([40,112,111,115,110,41,61,61,40,112,111,115,110,41,0] /* (posn)==(posn)\00 */, "i8", ALLOC_NONE, 5243008);
allocate([70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243024);
allocate([112,99,46,105,110,100,101,120,49,32,33,61,32,112,99,46,105,110,100,101,120,50,0] /* pc.index1 != pc.inde */, "i8", ALLOC_NONE, 5243040);
allocate([74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243064);
allocate([101,110,100,115,46,102,105,114,115,116,32,33,61,32,95,95,110,117,108,108,0] /* ends.first != __null */, "i8", ALLOC_NONE, 5243080);
allocate([109,95,99,111,110,110,95,114,101,102,32,61,61,32,95,95,110,117,108,108,0] /* m_conn_ref == __null */, "i8", ALLOC_NONE, 5243104);
allocate([68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243128);
allocate([78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243164);
allocate([40,33,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,32,38,38,32,40,95,115,104,97,112,101,86,101,114,116,105,99,101,115,32,61,61,32,48,41,41,32,124,124,32,40,40,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,45,62,108,115,116,80,114,101,118,32,61,61,32,95,95,110,117,108,108,41,32,38,38,32,40,95,115,104,97,112,101,86,101,114,116,105,99,101,115,32,62,32,48,41,41,0] /* (!_firstShapeVert && */, "i8", ALLOC_NONE, 5243200);
allocate([110,101,119,32,83,104,97,112,101,82,101,102,40,114,111,117,116,101,114,44,32,112,111,108,121,37,117,44,32,37,117,41,59,10,0] /* new ShapeRef(router, */, "i8", ALLOC_NONE, 5243312);
allocate([79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243348);
allocate([118,105,115,71,114,97,112,104,46,115,105,122,101,40,41,32,61,61,32,48,0] /* visGraph.size() == 0 */, "i8", ALLOC_NONE, 5243380);
allocate([83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243404);
allocate([32,32,32,32,42,47,10,0] /*     _/\0A\00 */, "i8", ALLOC_NONE, 5243444);
allocate([65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243452);
allocate([74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243480);
allocate([32,32,32,32,110,101,119,32,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,40,115,104,97,112,101,82,101,102,37,117,44,32,37,117,44,32,37,103,44,32,37,103,44,32,37,103,44,32,40,67,111,110,110,68,105,114,70,108,97,103,115,41,32,37,117,41,59,10,0] /*     new ShapeConnect */, "i8", ALLOC_NONE, 5243500);
allocate([74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243576);
allocate([65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243596);
allocate([112,111,116,101,110,116,105,97,108,67,111,110,115,116,114,97,105,110,116,115,46,115,105,122,101,40,41,32,62,32,48,0] /* potentialConstraints */, "i8", ALLOC_NONE, 5243620);
allocate([77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243652);
allocate([101,110,100,115,46,102,105,114,115,116,32,61,61,32,115,111,117,114,99,101,0] /* ends.first == source */, "i8", ALLOC_NONE, 5243676);
allocate([109,95,97,110,99,104,111,114,95,111,98,106,0] /* m_anchor_obj\00 */, "i8", ALLOC_NONE, 5243700);
allocate([40,116,121,112,101,32,61,61,32,83,104,97,112,101,77,111,118,101,41,32,124,124,32,40,116,121,112,101,32,61,61,32,83,104,97,112,101,65,100,100,41,32,124,124,32,40,116,121,112,101,32,61,61,32,83,104,97,112,101,82,101,109,111,118,101,41,32,124,124,32,40,116,121,112,101,32,61,61,32,74,117,110,99,116,105,111,110,77,111,118,101,41,32,124,124,32,40,116,121,112,101,32,61,61,32,74,117,110,99,116,105,111,110,65,100,100,41,32,124,124,32,40,116,121,112,101,32,61,61,32,74,117,110,99,116,105,111,110,82,101,109,111,118,101,41,0] /* (type == ShapeMove)  */, "i8", ALLOC_NONE, 5243716);
allocate([70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243864);
allocate([33,40,99,101,110,116,101,114,73,68,46,105,115,67,111,110,110,80,116,40,41,41,32,124,124,32,40,115,115,46,102,105,110,100,40,107,45,62,105,100,46,111,98,106,73,68,41,32,61,61,32,115,115,46,101,110,100,40,41,41,0] /* !(centerID.isConnPt( */, "i8", ALLOC_NONE, 5243900);
allocate([74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5243964);
allocate([40,33,95,102,105,114,115,116,67,111,110,110,86,101,114,116,32,38,38,32,40,95,99,111,110,110,86,101,114,116,105,99,101,115,32,61,61,32,48,41,41,32,124,124,32,40,40,95,102,105,114,115,116,67,111,110,110,86,101,114,116,45,62,108,115,116,80,114,101,118,32,61,61,32,95,95,110,117,108,108,41,32,38,38,32,40,95,99,111,110,110,86,101,114,116,105,99,101,115,32,62,32,48,41,41,0] /* (!_firstConnVert &&  */, "i8", ALLOC_NONE, 5243996);
allocate([83,104,97,112,101,82,101,102,32,42,115,104,97,112,101,82,101,102,37,117,32,61,32,0] /* ShapeRef _shapeRef%u */, "i8", ALLOC_NONE, 5244104);
allocate([99,111,110,110,82,101,102,115,46,115,105,122,101,40,41,32,61,61,32,48,0] /* connRefs.size() == 0 */, "i8", ALLOC_NONE, 5244128);
allocate([80,77,0] /* PM\00 */, "i8", ALLOC_NONE, 5244152);
allocate([118,112,115,99,46,99,112,112,0] /* vpsc.cpp\00 */, "i8", ALLOC_NONE, 5244156);
allocate([99,117,114,114,32,61,61,32,109,95,102,105,114,115,116,95,118,101,114,116,0] /* curr == m_first_vert */, "i8", ALLOC_NONE, 5244168);
allocate([105,115,79,114,116,104,111,103,111,110,97,108,32,124,124,32,114,111,117,116,101,114,45,62,118,101,114,116,105,99,101,115,46,103,101,116,86,101,114,116,101,120,66,121,80,111,115,40,99,66,111,117,110,100,97,114,121,46,97,116,40,106,41,41,0] /* isOrthogonal || rout */, "i8", ALLOC_NONE, 5244192);
allocate([32,32,32,32,47,47,32,84,104,105,115,32,109,97,121,32,98,101,32,117,115,101,102,117,108,32,105,102,32,106,117,110,99,116,105,111,110,32,112,105,110,115,32,97,114,101,32,109,111,100,105,102,105,101,100,46,10,0] /*     // This may be u */, "i8", ALLOC_NONE, 5244260);
allocate([65,77,0] /* AM\00 */, "i8", ALLOC_NONE, 5244320);
allocate([109,95,114,111,117,116,101,114,45,62,73,110,118,105,115,105,98,105,108,105,116,121,71,114,112,104,0] /* m_router-_Invisibili */, "i8", ALLOC_NONE, 5244324);
allocate([98,97,115,105,99,95,115,116,114,105,110,103,0] /* basic_string\00 */, "i8", ALLOC_NONE, 5244352);
allocate([80,0,0,0,77,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5244368);
allocate([115,99,97,110,108,105,110,101,46,99,112,112,0] /* scanline.cpp\00 */, "i8", ALLOC_NONE, 5244380);
allocate([65,0,0,0,77,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5244396);
allocate([117,110,115,97,116,105,115,102,105,101,100,82,97,110,103,101,115,46,115,105,122,101,40,41,32,62,32,48,0] /* unsatisfiedRanges.si */, "i8", ALLOC_NONE, 5244408);
allocate([99,111,110,110,32,33,61,32,95,95,110,117,108,108,0] /* conn != __null\00 */, "i8", ALLOC_NONE, 5244440);
allocate([105,115,80,105,110,67,111,110,110,101,99,116,105,111,110,40,41,0] /* isPinConnection()\00 */, "i8", ALLOC_NONE, 5244456);
allocate([116,121,112,101,32,61,61,32,67,111,110,110,101,99,116,105,111,110,80,105,110,67,104,97,110,103,101,0] /* type == ConnectionPi */, "i8", ALLOC_NONE, 5244476);
allocate([99,101,110,116,101,114,73,110,102,32,33,61,32,107,0] /* centerInf != k\00 */, "i8", ALLOC_NONE, 5244504);
allocate([111,114,116,104,111,103,111,110,97,108,46,99,112,112,0] /* orthogonal.cpp\00 */, "i8", ALLOC_NONE, 5244520);
allocate([32,32,32,32,0] /*     \00 */, "i8", ALLOC_NONE, 5244536);
allocate([109,95,111,98,115,116,97,99,108,101,115,46,115,105,122,101,40,41,32,61,61,32,48,0] /* m_obstacles.size() = */, "i8", ALLOC_NONE, 5244544);
allocate([99,117,114,114,45,62,105,110,118,105,115,76,105,115,116,83,105,122,101,32,61,61,32,48,0] /* curr-_invisListSize  */, "i8", ALLOC_NONE, 5244568);
allocate([99,66,111,117,110,100,97,114,121,46,112,115,91,48,93,32,33,61,32,99,66,111,117,110,100,97,114,121,46,112,115,91,99,66,111,117,110,100,97,114,121,46,115,105,122,101,40,41,32,45,32,49,93,0] /* cBoundary.ps[0] != c */, "i8", ALLOC_NONE, 5244596);
allocate(1, "i8", ALLOC_NONE, 5244652);
allocate([32,32,32,32,47,42,10,0] /*     /_\0A\00 */, "i8", ALLOC_NONE, 5244656);
allocate([33,109,95,97,100,100,101,100,0] /* !m_added\00 */, "i8", ALLOC_NONE, 5244664);
allocate([109,95,115,104,97,112,101,32,124,124,32,109,95,106,117,110,99,116,105,111,110,0] /* m_shape || m_junctio */, "i8", ALLOC_NONE, 5244676);
allocate([109,116,115,116,46,99,112,112,0] /* mtst.cpp\00 */, "i8", ALLOC_NONE, 5244700);
allocate([118,45,62,108,101,102,116,45,62,98,108,111,99,107,32,61,61,32,118,45,62,114,105,103,104,116,45,62,98,108,111,99,107,0] /* v-_left-_block == v- */, "i8", ALLOC_NONE, 5244712);
allocate([98,97,115,101,83,101,112,68,105,115,116,32,62,61,32,48,0] /* baseSepDist _= 0\00 */, "i8", ALLOC_NONE, 5244748);
allocate([109,95,97,99,116,105,118,101,95,112,105,110,32,61,61,32,95,95,110,117,108,108,0] /* m_active_pin == __nu */, "i8", ALLOC_NONE, 5244768);
allocate([108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0] /* locale not supported */, "i8", ALLOC_NONE, 5244792);
allocate([116,121,112,101,32,61,61,32,67,111,110,110,67,104,97,110,103,101,0] /* type == ConnChange\0 */, "i8", ALLOC_NONE, 5244816);
allocate([109,95,97,99,116,105,118,101,0] /* m_active\00 */, "i8", ALLOC_NONE, 5244836);
allocate([37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5244848);
allocate([112,97,116,104,108,101,110,32,60,32,50,48,48,48,48,0] /* pathlen _ 20000\00 */, "i8", ALLOC_NONE, 5244896);
allocate([104,121,112,101,114,101,100,103,101,46,99,112,112,0] /* hyperedge.cpp\00 */, "i8", ALLOC_NONE, 5244912);
allocate([32,32,32,32,112,111,108,121,37,117,46,112,115,91,37,108,117,93,32,61,32,80,111,105,110,116,40,37,103,44,32,37,103,41,59,10,0] /*     poly%u.ps[%lu] = */, "i8", ALLOC_NONE, 5244928);
allocate([37,73,58,37,77,58,37,83,32,37,112,0] /* %I:%M:%S %p\00 */, "i8", ALLOC_NONE, 5244968);
allocate([37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5244980);
allocate([99,117,114,114,45,62,118,105,115,76,105,115,116,83,105,122,101,32,61,61,32,48,0] /* curr-_visListSize == */, "i8", ALLOC_NONE, 5245064);
allocate([78,111,100,101,46,103,32,62,61,32,40,97,116,105,46,103,32,45,32,49,48,101,45,49,48,41,0] /* Node.g _= (ati.g - 1 */, "i8", ALLOC_NONE, 5245088);
allocate([108,108,0] /* ll\00 */, "i8", ALLOC_NONE, 5245116);
allocate([32,32,32,32,106,117,110,99,116,105,111,110,82,101,102,37,117,45,62,115,101,116,80,111,115,105,116,105,111,110,70,105,120,101,100,40,116,114,117,101,41,59,10,0] /*     junctionRef%u-_s */, "i8", ALLOC_NONE, 5245120);
allocate([37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0] /* %a %b %d %H:%M:%S %Y */, "i8", ALLOC_NONE, 5245164);
allocate([109,95,97,100,100,101,100,32,61,61,32,116,114,117,101,0] /* m_added == true\00 */, "i8", ALLOC_NONE, 5245188);
allocate([87,97,114,110,105,110,103,58,32,73,110,32,67,111,110,110,82,101,102,58,58,103,101,116,67,111,110,110,69,110,100,70,111,114,69,110,100,112,111,105,110,116,86,101,114,116,101,120,40,41,58,10,32,32,32,32,32,32,32,32,32,67,111,110,110,69,110,100,32,102,111,114,32,99,111,110,110,101,99,116,111,114,32,37,100,32,105,115,32,117,110,105,110,105,116,105,97,108,105,115,101,100,46,32,32,73,116,32,109,97,121,32,104,97,118,101,32,98,101,101,110,10,32,32,32,32,32,32,32,32,32,115,101,116,32,98,117,116,32,82,111,117,116,101,114,58,58,112,114,111,99,101,115,115,84,114,97,110,99,97,99,116,105,111,110,32,104,97,115,32,110,111,116,32,121,101,116,32,98,101,101,110,32,99,97,108,108,101,100,46,10,0] /* Warning: In ConnRef: */, "i8", ALLOC_NONE, 5245204);
allocate([109,97,121,98,101,90,101,114,111,32,62,61,32,48,0] /* maybeZero _= 0\00 */, "i8", ALLOC_NONE, 5245396);
allocate([37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5245412);
allocate([97,99,116,105,111,110,105,110,102,111,46,99,112,112,0] /* actioninfo.cpp\00 */, "i8", ALLOC_NONE, 5245448);
allocate([109,95,106,117,110,99,116,105,111,110,32,33,61,32,95,95,110,117,108,108,0] /* m_junction != __null */, "i8", ALLOC_NONE, 5245464);
allocate([37,72,58,37,77,58,37,83,0] /* %H:%M:%S\00 */, "i8", ALLOC_NONE, 5245488);
allocate([37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5245500);
allocate([33,118,45,62,101,113,117,97,108,105,116,121,0] /* !v-_equality\00 */, "i8", ALLOC_NONE, 5245536);
allocate([99,111,110,110,101,110,100,46,99,112,112,0] /* connend.cpp\00 */, "i8", ALLOC_NONE, 5245552);
allocate([37,109,47,37,100,47,37,121,0] /* %m/%d/%y\00 */, "i8", ALLOC_NONE, 5245564);
allocate([109,95,98,97,108,97,110,99,101,95,99,111,117,110,116,32,33,61,32,48,0] /* m_balance_count != 0 */, "i8", ALLOC_NONE, 5245576);
allocate([98,108,117,101,0] /* blue\00 */, "i8", ALLOC_NONE, 5245600);
allocate([109,95,99,111,110,110,95,114,101,102,32,33,61,32,95,95,110,117,108,108,0] /* m_conn_ref != __null */, "i8", ALLOC_NONE, 5245608);
allocate([40,116,121,112,101,32,61,61,32,74,117,110,99,116,105,111,110,65,100,100,41,32,124,124,32,40,116,121,112,101,32,61,61,32,74,117,110,99,116,105,111,110,82,101,109,111,118,101,41,32,124,124,32,40,116,121,112,101,32,61,61,32,74,117,110,99,116,105,111,110,77,111,118,101,41,0] /* (type == JunctionAdd */, "i8", ALLOC_NONE, 5245632);
allocate([102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5245708);
allocate([112,73,68,46,105,115,67,111,110,110,80,116,40,41,0] /* pID.isConnPt()\00 */, "i8", ALLOC_NONE, 5245732);
allocate([33,109,95,97,99,116,105,118,101,0] /* !m_active\00 */, "i8", ALLOC_NONE, 5245748);
allocate([105,100,46,105,115,67,111,110,110,80,116,40,41,0] /* id.isConnPt()\00 */, "i8", ALLOC_NONE, 5245760);
allocate([102,97,108,115,101,0] /* false\00 */, "i8", ALLOC_NONE, 5245776);
allocate([32,32,32,32,80,111,108,121,103,111,110,32,112,111,108,121,37,117,40,37,108,117,41,59,10,0] /*     Polygon poly%u(% */, "i8", ALLOC_NONE, 5245784);
allocate([116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5245812);
allocate([40,112,48,46,120,32,61,61,32,112,49,46,120,41,32,124,124,32,40,112,48,46,121,32,61,61,32,112,49,46,121,41,0] /* (p0.x == p1.x) || (p */, "i8", ALLOC_NONE, 5245832);
allocate([116,114,117,101,0] /* true\00 */, "i8", ALLOC_NONE, 5245868);
allocate([109,95,112,111,108,121,103,111,110,46,115,105,122,101,40,41,32,61,61,32,112,111,108,121,46,115,105,122,101,40,41,0] /* m_polygon.size() ==  */, "i8", ALLOC_NONE, 5245876);
allocate([99,117,114,114,46,112,114,101,118,73,110,100,101,120,32,61,61,32,48,0] /* curr.prevIndex == 0\ */, "i8", ALLOC_NONE, 5245908);
allocate([32,32,32,32,74,117,110,99,116,105,111,110,82,101,102,32,42,106,117,110,99,116,105,111,110,82,101,102,37,117,32,61,32,110,101,119,32,74,117,110,99,116,105,111,110,82,101,102,40,114,111,117,116,101,114,44,32,80,111,105,110,116,40,37,103,44,32,37,103,41,44,32,37,117,41,59,10,0] /*     JunctionRef _jun */, "i8", ALLOC_NONE, 5245928);
allocate([98,50,32,33,61,32,99,80,116,0] /* b2 != cPt\00 */, "i8", ALLOC_NONE, 5246008);
allocate([109,95,118,105,115,105,98,108,101,0] /* m_visible\00 */, "i8", ALLOC_NONE, 5246020);
allocate([40,116,121,112,101,32,61,61,32,40,117,110,115,105,103,110,101,100,32,105,110,116,41,32,86,101,114,116,73,68,58,58,115,114,99,41,32,124,124,32,40,116,121,112,101,32,61,61,32,40,117,110,115,105,103,110,101,100,32,105,110,116,41,32,86,101,114,116,73,68,58,58,116,97,114,41,0] /* (type == (unsigned i */, "i8", ALLOC_NONE, 5246032);
allocate([105,110,100,101,120,32,60,32,115,105,122,101,40,41,0] /* index _ size()\00 */, "i8", ALLOC_NONE, 5246112);
allocate([46,46,47,108,105,98,97,118,111,105,100,47,103,101,111,109,101,116,114,121,46,104,0] /* ../libavoid/geometry */, "i8", ALLOC_NONE, 5246128);
allocate([98,49,32,33,61,32,99,80,116,0] /* b1 != cPt\00 */, "i8", ALLOC_NONE, 5246152);
allocate([97,50,32,33,61,32,99,80,116,0] /* a2 != cPt\00 */, "i8", ALLOC_NONE, 5246164);
allocate([121,80,111,114,116,105,111,110,79,102,102,115,101,116,32,118,97,108,117,101,32,40,37,103,41,32,105,110,32,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,32,99,111,110,115,116,114,117,99,116,111,114,32,110,111,116,32,98,101,116,119,101,101,110,32,48,32,97,110,100,32,49,46,10,0] /* yPortionOffset value */, "i8", ALLOC_NONE, 5246176);
allocate([97,49,32,33,61,32,99,80,116,0] /* a1 != cPt\00 */, "i8", ALLOC_NONE, 5246260);
allocate([85,110,115,97,116,105,115,102,105,101,100,32,99,111,110,115,116,114,97,105,110,116,58,32,0] /* Unsatisfied constrai */, "i8", ALLOC_NONE, 5246272);
allocate([33,112,111,108,121,73,115,67,111,110,110,32,124,124,32,40,106,32,62,61,32,50,41,0] /* !polyIsConn || (j _= */, "i8", ALLOC_NONE, 5246300);
allocate([109,95,98,97,108,97,110,99,101,95,99,111,117,110,116,95,115,101,116,0] /* m_balance_count_set\ */, "i8", ALLOC_NONE, 5246324);
allocate([60,112,97,116,104,32,105,100,61,34,37,115,45,37,117,34,32,100,61,34,77,32,37,103,32,37,103,32,76,32,37,103,32,37,103,34,32,99,108,97,115,115,61,34,104,121,112,101,114,101,100,103,101,34,32,115,116,121,108,101,61,34,115,116,114,111,107,101,58,32,37,115,59,34,32,47,62,10,0] /* _path id=\22%s-%u\22 */, "i8", ALLOC_NONE, 5246344);
allocate([115,101,108,102,45,62,106,117,110,99,116,105,111,110,0] /* self-_junction\00 */, "i8", ALLOC_NONE, 5246424);
allocate([109,95,116,111,112,111,108,111,103,121,95,97,100,100,111,110,0] /* m_topology_addon\00 */, "i8", ALLOC_NONE, 5246440);
allocate([109,95,99,111,110,110,101,99,116,105,111,110,95,112,105,110,95,99,108,97,115,115,95,105,100,32,33,61,32,67,79,78,78,69,67,84,73,79,78,80,73,78,95,85,78,83,69,84,0] /* m_connection_pin_cla */, "i8", ALLOC_NONE, 5246460);
allocate([97,112,32,61,61,32,98,112,0] /* ap == bp\00 */, "i8", ALLOC_NONE, 5246512);
allocate([118,105,115,105,98,105,108,105,116,121,46,99,112,112,0] /* visibility.cpp\00 */, "i8", ALLOC_NONE, 5246524);
allocate([97,110,32,61,61,32,98,110,0] /* an == bn\00 */, "i8", ALLOC_NONE, 5246540);
allocate([111,114,112,104,97,110,101,100,40,41,0] /* orphaned()\00 */, "i8", ALLOC_NONE, 5246552);
allocate([99,68,105,102,102,32,60,32,50,49,52,55,52,56,51,54,52,55,76,0] /* cDiff _ 2147483647L\ */, "i8", ALLOC_NONE, 5246564);
allocate([116,105,109,101,114,46,99,112,112,0] /* timer.cpp\00 */, "i8", ALLOC_NONE, 5246584);
allocate([99,111,110,110,69,110,100,45,62,109,95,99,111,110,110,95,114,101,102,32,33,61,32,95,95,110,117,108,108,0] /* connEnd-_m_conn_ref  */, "i8", ALLOC_NONE, 5246596);
allocate([115,105,122,101,32,62,32,48,32,124,124,32,98,97,99,107,95,115,97,109,101,0] /* size _ 0 || back_sam */, "i8", ALLOC_NONE, 5246628);
allocate([40,42,118,50,41,45,62,115,112,116,102,68,105,115,116,32,61,61,32,48,0] /* (_v2)-_sptfDist == 0 */, "i8", ALLOC_NONE, 5246652);
allocate([115,105,122,101,32,62,32,40,115,116,97,114,116,80,116,32,43,32,49,41,0] /* size _ (startPt + 1) */, "i8", ALLOC_NONE, 5246676);
allocate([109,95,102,105,114,115,116,95,118,101,114,116,32,33,61,32,95,95,110,117,108,108,0] /* m_first_vert != __nu */, "i8", ALLOC_NONE, 5246700);
allocate([60,47,103,62,10,60,103,32,105,100,61,34,112,114,117,110,101,100,45,37,117,34,32,105,110,107,115,99,97,112,101,58,103,114,111,117,112,109,111,100,101,61,34,108,97,121,101,114,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,32,110,111,110,101,59,34,32,105,110,107,115,99,97,112,101,58,108,97,98,101,108,61,34,112,114,117,110,101,100,45,37,48,50,117,34,62,10,0] /* _/g_\0A_g id=\22prun */, "i8", ALLOC_NONE, 5246724);
allocate([99,117,114,114,32,33,61,32,95,95,110,117,108,108,0] /* curr != __null\00 */, "i8", ALLOC_NONE, 5246828);
allocate([114,111,117,116,101,114,0] /* router\00 */, "i8", ALLOC_NONE, 5246844);
allocate([69,82,82,79,82,58,32,83,104,97,112,101,82,101,102,58,58,126,83,104,97,112,101,82,101,102,40,41,32,115,104,111,117,108,100,110,39,116,32,98,101,32,99,97,108,108,101,100,32,100,105,114,101,99,116,108,121,46,10,0] /* ERROR: ShapeRef::~Sh */, "i8", ALLOC_NONE, 5246852);
allocate([109,95,97,100,100,101,100,32,61,61,32,102,97,108,115,101,0] /* m_added == false\00 */, "i8", ALLOC_NONE, 5246912);
allocate([111,108,100,84,114,101,101,82,111,111,116,80,116,114,50,0] /* oldTreeRootPtr2\00 */, "i8", ALLOC_NONE, 5246932);
allocate([32,32,32,32,32,32,32,73,116,32,105,115,32,111,119,110,101,100,32,98,121,32,116,104,101,32,114,111,117,116,101,114,46,32,32,67,97,108,108,32,82,111,117,116,101,114,58,58,100,101,108,101,116,101,67,111,110,110,101,99,116,111,114,40,41,32,105,110,115,116,101,97,100,46,10,0] /*        It is owned b */, "i8", ALLOC_NONE, 5246948);
allocate([97,110,103,32,60,61,32,51,54,48,0] /* ang _= 360\00 */, "i8", ALLOC_NONE, 5247024);
allocate([111,108,100,84,114,101,101,82,111,111,116,80,116,114,49,0] /* oldTreeRootPtr1\00 */, "i8", ALLOC_NONE, 5247036);
allocate([99,73,110,100,101,120,32,60,32,99,111,110,110,46,115,105,122,101,40,41,0] /* cIndex _ conn.size() */, "i8", ALLOC_NONE, 5247052);
allocate([120,80,111,114,116,105,111,110,79,102,102,115,101,116,32,118,97,108,117,101,32,40,37,103,41,32,105,110,32,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,32,99,111,110,115,116,114,117,99,116,111,114,32,110,111,116,32,98,101,116,119,101,101,110,32,48,32,97,110,100,32,49,46,10,0] /* xPortionOffset value */, "i8", ALLOC_NONE, 5247076);
allocate([110,101,119,82,111,111,116,0] /* newRoot\00 */, "i8", ALLOC_NONE, 5247160);
allocate([99,73,110,100,101,120,32,62,61,32,49,0] /* cIndex _= 1\00 */, "i8", ALLOC_NONE, 5247168);
allocate([60,47,103,62,10,60,103,32,105,110,107,115,99,97,112,101,58,103,114,111,117,112,109,111,100,101,61,34,108,97,121,101,114,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,32,110,111,110,101,59,34,32,105,110,107,115,99,97,112,101,58,108,97,98,101,108,61,34,102,111,114,101,115,116,45,37,48,50,117,34,62,10,0] /* _/g_\0A_g inkscape:g */, "i8", ALLOC_NONE, 5247180);
allocate([33,115,112,108,105,116,67,111,110,115,116,114,97,105,110,116,45,62,97,99,116,105,118,101,0] /* !splitConstraint-_ac */, "i8", ALLOC_NONE, 5247272);
allocate([107,32,60,32,110,111,100,101,115,91,100,105,109,93,46,115,105,122,101,40,41,0] /* k _ nodes[dim].size( */, "i8", ALLOC_NONE, 5247300);
allocate([60,112,97,116,104,32,100,61,34,77,32,37,103,32,37,103,32,76,32,37,103,32,37,103,34,32,115,116,121,108,101,61,34,102,105,108,108,58,32,110,111,110,101,59,32,115,116,114,111,107,101,58,32,37,115,59,32,115,116,114,111,107,101,45,119,105,100,116,104,58,32,49,112,120,59,34,32,47,62,10,0] /* _path d=\22M %g %g L */, "i8", ALLOC_NONE, 5247324);
allocate([115,104,97,112,101,83,105,100,101,32,61,61,32,114,104,115,46,115,104,97,112,101,83,105,100,101,0] /* shapeSide == rhs.sha */, "i8", ALLOC_NONE, 5247408);
allocate([42,0] /* _\00 */, "i8", ALLOC_NONE, 5247436);
allocate([105,110,110,101,114,32,33,61,32,111,117,116,101,114,0] /* inner != outer\00 */, "i8", ALLOC_NONE, 5247440);
allocate([101,100,103,101,0] /* edge\00 */, "i8", ALLOC_NONE, 5247456);
allocate([99,111,110,110,32,124,124,32,106,117,110,99,116,105,111,110,0] /* conn || junction\00 */, "i8", ALLOC_NONE, 5247464);
allocate([60,47,103,62,10,60,103,32,105,100,61,34,106,111,105,110,45,37,117,34,32,105,110,107,115,99,97,112,101,58,103,114,111,117,112,109,111,100,101,61,34,108,97,121,101,114,34,32,105,110,107,115,99,97,112,101,58,108,97,98,101,108,61,34,106,111,105,110,45,37,48,50,117,34,62,10,0] /* _/g_\0A_g id=\22join */, "i8", ALLOC_NONE, 5247484);
allocate([40,116,121,112,101,32,61,61,32,83,104,97,112,101,65,100,100,41,32,124,124,32,40,116,121,112,101,32,61,61,32,83,104,97,112,101,82,101,109,111,118,101,41,32,124,124,32,40,116,121,112,101,32,61,61,32,83,104,97,112,101,77,111,118,101,41,0] /* (type == ShapeAdd) | */, "i8", ALLOC_NONE, 5247564);
allocate([109,95,99,111,110,110,101,99,116,105,111,110,95,112,105,110,95,99,108,97,115,115,95,105,100,32,62,32,48,0] /* m_connection_pin_cla */, "i8", ALLOC_NONE, 5247632);
allocate([109,95,115,116,97,114,116,95,118,101,114,116,0] /* m_start_vert\00 */, "i8", ALLOC_NONE, 5247664);
allocate([118,101,99,116,111,114,0] /* vector\00 */, "i8", ALLOC_NONE, 5247680);
allocate([112,117,114,112,108,101,0] /* purple\00 */, "i8", ALLOC_NONE, 5247688);
allocate([101,120,105,115,116,105,110,103,80,97,116,104,83,116,97,114,116,32,33,61,32,48,0] /* existingPathStart != */, "i8", ALLOC_NONE, 5247696);
allocate([118,101,114,116,105,99,101,115,46,99,112,112,0] /* vertices.cpp\00 */, "i8", ALLOC_NONE, 5247720);
allocate([60,112,97,116,104,32,100,61,34,77,32,37,103,32,37,103,32,76,32,37,103,32,37,103,34,32,100,98,58,115,112,116,102,68,105,115,116,61,34,37,103,34,32,115,116,121,108,101,61,34,102,105,108,108,58,32,110,111,110,101,59,32,115,116,114,111,107,101,58,32,37,115,59,32,115,116,114,111,107,101,45,119,105,100,116,104,58,32,49,112,120,59,34,32,47,62,10,0] /* _path d=\22M %g %g L */, "i8", ALLOC_NONE, 5247736);
allocate([114,117,110,110,105,110,103,0] /* running\00 */, "i8", ALLOC_NONE, 5247836);
allocate([115,104,97,112,101,46,99,112,112,0] /* shape.cpp\00 */, "i8", ALLOC_NONE, 5247844);
allocate([109,95,114,111,117,116,101,114,45,62,73,103,110,111,114,101,82,101,103,105,111,110,115,32,61,61,32,116,114,117,101,0] /* m_router-_IgnoreRegi */, "i8", ALLOC_NONE, 5247856);
allocate([98,108,97,99,107,0] /* black\00 */, "i8", ALLOC_NONE, 5247888);
allocate([87,97,114,110,105,110,103,58,32,115,107,105,112,112,105,110,103,32,99,104,101,99,107,112,111,105,110,116,32,102,111,114,32,99,111,110,110,101,99,116,111,114,32,37,100,32,97,116,32,40,37,103,44,32,37,103,41,46,10,0] /* Warning: skipping ch */, "i8", ALLOC_NONE, 5247896);
allocate([109,95,97,99,116,105,118,101,32,61,61,32,102,97,108,115,101,0] /* m_active == false\00 */, "i8", ALLOC_NONE, 5247956);
allocate([60,99,105,114,99,108,101,32,99,120,61,34,37,103,34,32,99,121,61,34,37,103,34,32,114,61,34,51,34,32,100,98,58,115,112,116,102,68,105,115,116,61,34,37,103,34,32,115,116,121,108,101,61,34,102,105,108,108,58,32,37,115,59,32,115,116,114,111,107,101,58,32,37,115,59,32,102,105,108,108,45,111,112,97,99,105,116,121,58,32,48,46,53,59,32,115,116,114,111,107,101,45,119,105,100,116,104,58,32,49,112,120,59,32,115,116,114,111,107,101,45,111,112,97,99,105,116,121,58,48,46,53,34,32,47,62,10,0] /* _circle cx=\22%g\22  */, "i8", ALLOC_NONE, 5247976);
allocate([114,111,117,116,101,114,45,62,73,103,110,111,114,101,82,101,103,105,111,110,115,32,61,61,32,116,114,117,101,0] /* router-_IgnoreRegion */, "i8", ALLOC_NONE, 5248116);
allocate([106,117,110,99,116,105,111,110,46,99,112,112,0] /* junction.cpp\00 */, "i8", ALLOC_NONE, 5248148);
allocate([112,97,116,104,46,115,105,122,101,40,41,32,61,61,32,50,0] /* path.size() == 2\00 */, "i8", ALLOC_NONE, 5248164);
allocate([114,111,117,116,101,114,46,99,112,112,0] /* router.cpp\00 */, "i8", ALLOC_NONE, 5248184);
allocate([109,95,118,101,114,116,49,45,62,95,114,111,117,116,101,114,32,61,61,32,109,95,118,101,114,116,50,45,62,95,114,111,117,116,101,114,0] /* m_vert1-__router ==  */, "i8", ALLOC_NONE, 5248196);
allocate([118,101,114,116,45,62,116,114,101,101,82,111,111,116,40,41,32,33,61,32,95,95,110,117,108,108,0] /* vert-_treeRoot() !=  */, "i8", ALLOC_NONE, 5248236);
allocate([69,82,82,79,82,58,32,67,111,110,110,82,101,102,58,58,126,67,111,110,110,82,101,102,40,41,32,115,104,111,117,108,100,110,39,116,32,98,101,32,99,97,108,108,101,100,32,100,105,114,101,99,116,108,121,46,10,0] /* ERROR: ConnRef::~Con */, "i8", ALLOC_NONE, 5248264);
allocate([37,46,48,76,102,0] /* %.0Lf\00 */, "i8", ALLOC_NONE, 5248324);
allocate([97,110,103,32,62,61,32,48,0] /* ang _= 0\00 */, "i8", ALLOC_NONE, 5248332);
allocate([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0] /* std::bad_alloc\00 */, "i8", ALLOC_NONE, 5248344);
allocate([118,101,114,116,45,62,116,114,101,101,82,111,111,116,80,111,105,110,116,101,114,40,41,32,33,61,32,95,95,110,117,108,108,0] /* vert-_treeRootPointe */, "i8", ALLOC_NONE, 5248360);
allocate([97,98,115,40,118,101,114,116,101,120,45,62,112,97,116,104,78,101,120,116,45,62,105,100,46,118,110,32,45,32,118,101,114,116,101,120,45,62,105,100,46,118,110,41,32,33,61,32,50,0] /* abs(vertex-_pathNext */, "i8", ALLOC_NONE, 5248396);
allocate([109,95,99,108,97,115,115,95,105,100,32,62,32,48,0] /* m_class_id _ 0\00 */, "i8", ALLOC_NONE, 5248448);
allocate([103,114,101,101,110,0] /* green\00 */, "i8", ALLOC_NONE, 5248464);
allocate([109,95,114,101,114,111,117,116,101,95,102,108,97,103,95,112,116,114,32,33,61,32,95,95,110,117,108,108,0] /* m_reroute_flag_ptr ! */, "i8", ALLOC_NONE, 5248472);
allocate([33,118,45,62,97,99,116,105,118,101,0] /* !v-_active\00 */, "i8", ALLOC_NONE, 5248504);
allocate([109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0] /* money_get error\00 */, "i8", ALLOC_NONE, 5248516);
allocate([118,101,114,116,105,99,101,115,91,118,101,114,116,105,99,101,115,46,115,105,122,101,40,41,32,45,32,49,93,32,61,61,32,100,115,116,40,41,0] /* vertices[vertices.si */, "i8", ALLOC_NONE, 5248532);
allocate([101,97,45,62,118,32,33,61,32,101,98,45,62,118,0] /* ea-_v != eb-_v\00 */, "i8", ALLOC_NONE, 5248572);
allocate([60,47,103,62,10,60,47,103,62,10,0] /* _/g_\0A_/g_\0A\00 */, "i8", ALLOC_NONE, 5248588);
allocate([111,98,115,116,97,99,108,101,46,99,112,112,0] /* obstacle.cpp\00 */, "i8", ALLOC_NONE, 5248600);
allocate([115,99,97,110,108,105,110,101,46,115,105,122,101,40,41,32,61,61,32,48,0] /* scanline.size() == 0 */, "i8", ALLOC_NONE, 5248616);
allocate([37,76,102,0] /* %Lf\00 */, "i8", ALLOC_NONE, 5248640);
allocate([118,101,114,116,105,99,101,115,91,48,93,32,61,61,32,115,114,99,40,41,0] /* vertices[0] == src() */, "i8", ALLOC_NONE, 5248644);
allocate([99,117,114,114,86,101,114,116,32,33,61,32,95,95,110,117,108,108,0] /* currVert != __null\0 */, "i8", ALLOC_NONE, 5248668);
allocate([104,121,112,101,114,101,100,103,101,116,114,101,101,46,99,112,112,0] /* hyperedgetree.cpp\00 */, "i8", ALLOC_NONE, 5248688);
allocate([111,114,105,103,84,101,114,109,105,110,97,108,115,46,115,105,122,101,40,41,32,61,61,32,49,0] /* origTerminals.size() */, "i8", ALLOC_NONE, 5248708);
allocate([76,0] /* L\00 */, "i8", ALLOC_NONE, 5248736);
allocate([109,95,108,97,115,116,95,101,100,103,101,32,33,61,32,95,95,110,117,108,108,0] /* m_last_edge != __nul */, "i8", ALLOC_NONE, 5248740);
allocate([116,121,112,101,32,61,61,32,83,104,97,112,101,77,111,118,101,0] /* type == ShapeMove\00 */, "i8", ALLOC_NONE, 5248764);
allocate([118,101,114,116,105,99,101,115,46,115,105,122,101,40,41,32,62,61,32,50,0] /* vertices.size() _= 2 */, "i8", ALLOC_NONE, 5248784);
allocate([109,95,97,110,99,104,111,114,95,111,98,106,32,33,61,32,95,95,110,117,108,108,0] /* m_anchor_obj != __nu */, "i8", ALLOC_NONE, 5248808);
allocate([40,118,97,114,115,32,104,97,118,101,32,110,111,32,112,111,115,105,116,105,111,110,41,0] /* (vars have no positi */, "i8", ALLOC_NONE, 5248832);
allocate([98,101,103,105,110,32,60,32,102,105,110,105,115,104,0] /* begin _ finish\00 */, "i8", ALLOC_NONE, 5248856);
allocate([60,112,97,116,104,32,105,100,61,34,102,114,115,116,45,37,117,34,32,99,108,97,115,115,61,34,102,111,114,101,115,116,34,32,100,61,34,77,32,37,103,32,37,103,32,76,32,37,103,32,37,103,34,32,47,62,10,0] /* _path id=\22frst-%u\ */, "i8", ALLOC_NONE, 5248872);
allocate([109,97,107,101,112,97,116,104,46,99,112,112,0] /* makepath.cpp\00 */, "i8", ALLOC_NONE, 5248932);
allocate([111,112,116,105,111,110,32,60,32,108,97,115,116,82,111,117,116,105,110,103,79,112,116,105,111,110,77,97,114,107,101,114,0] /* option _ lastRouting */, "i8", ALLOC_NONE, 5248948);
allocate([109,95,108,97,115,116,95,101,100,103,101,32,61,61,32,95,95,110,117,108,108,0] /* m_last_edge == __nul */, "i8", ALLOC_NONE, 5248984);
allocate([118,101,99,68,105,114,40,100,44,32,98,44,32,101,41,32,62,32,48,0] /* vecDir(d, b, e) _ 0\ */, "i8", ALLOC_NONE, 5249008);
allocate([40,108,109,61,0] /* (lm=\00 */, "i8", ALLOC_NONE, 5249028);
allocate([118,101,114,116,76,105,110,101,46,112,111,115,32,60,32,104,111,114,105,76,105,110,101,46,102,105,110,105,115,104,0] /* vertLine.pos _ horiL */, "i8", ALLOC_NONE, 5249036);
allocate([117,45,62,112,97,116,104,78,101,120,116,32,124,124,32,40,117,45,62,115,112,116,102,68,105,115,116,32,61,61,32,48,41,0] /* u-_pathNext || (u-_s */, "i8", ALLOC_NONE, 5249068);
allocate([33,114,117,110,110,105,110,103,0] /* !running\00 */, "i8", ALLOC_NONE, 5249104);
allocate([112,97,114,97,109,101,116,101,114,32,60,32,108,97,115,116,82,111,117,116,105,110,103,80,97,114,97,109,101,116,101,114,77,97,114,107,101,114,0] /* parameter _ lastRout */, "i8", ALLOC_NONE, 5249116);
allocate([32,32,32,32,32,32,32,73,116,32,105,115,32,111,119,110,101,100,32,98,121,32,116,104,101,32,114,111,117,116,101,114,46,32,32,67,97,108,108,32,82,111,117,116,101,114,58,58,100,101,108,101,116,101,83,104,97,112,101,40,41,32,105,110,115,116,101,97,100,46,10,0] /*        It is owned b */, "i8", ALLOC_NONE, 5249156);
allocate([33,109,95,111,114,116,104,111,103,111,110,97,108,32,124,124,32,101,100,103,101,45,62,105,115,79,114,116,104,111,103,111,110,97,108,40,41,32,124,124,32,101,100,103,101,45,62,105,115,68,117,109,109,121,67,111,110,110,101,99,116,105,111,110,40,41,0] /* !m_orthogonal || edg */, "i8", ALLOC_NONE, 5249228);
allocate([101,73,110,102,32,33,61,32,95,95,110,117,108,108,0] /* eInf != __null\00 */, "i8", ALLOC_NONE, 5249296);
allocate([118,101,114,116,76,105,110,101,46,112,111,115,32,62,32,104,111,114,105,76,105,110,101,46,98,101,103,105,110,0] /* vertLine.pos _ horiL */, "i8", ALLOC_NONE, 5249312);
allocate([60,103,32,105,110,107,115,99,97,112,101,58,103,114,111,117,112,109,111,100,101,61,34,108,97,121,101,114,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,32,110,111,110,101,59,34,32,105,110,107,115,99,97,112,101,58,108,97,98,101,108,61,34,103,114,111,119,45,37,48,50,117,34,62,10,0] /* _g inkscape:groupmod */, "i8", ALLOC_NONE, 5249344);
allocate([37,112,0] /* %p\00 */, "i8", ALLOC_NONE, 5249428);
allocate([58,32,0] /* : \00 */, "i8", ALLOC_NONE, 5249432);
allocate([109,95,99,111,117,110,116,32,61,61,32,48,0] /* m_count == 0\00 */, "i8", ALLOC_NONE, 5249436);
allocate([69,82,82,79,82,58,32,74,117,110,99,116,105,111,110,82,101,102,58,58,126,74,117,110,99,116,105,111,110,82,101,102,40,41,32,115,104,111,117,108,100,110,39,116,32,98,101,32,99,97,108,108,101,100,32,100,105,114,101,99,116,108,121,46,10,0] /* ERROR: JunctionRef:: */, "i8", ALLOC_NONE, 5249452);
allocate([100,73,110,102,32,33,61,32,95,95,110,117,108,108,0] /* dInf != __null\00 */, "i8", ALLOC_NONE, 5249520);
allocate([45,97,99,116,105,118,101,0] /* -active\00 */, "i8", ALLOC_NONE, 5249536);
allocate([33,115,101,103,109,101,110,116,115,46,101,109,112,116,121,40,41,0] /* !segments.empty()\00 */, "i8", ALLOC_NONE, 5249544);
allocate([60,103,32,105,110,107,115,99,97,112,101,58,103,114,111,117,112,109,111,100,101,61,34,108,97,121,101,114,34,32,105,110,107,115,99,97,112,101,58,108,97,98,101,108,61,34,105,110,116,101,114,108,101,97,118,101,100,34,62,10,0] /* _g inkscape:groupmod */, "i8", ALLOC_NONE, 5249564);
allocate([97,46,112,114,101,118,73,110,100,101,120,32,33,61,32,98,46,112,114,101,118,73,110,100,101,120,0] /* a.prevIndex != b.pre */, "i8", ALLOC_NONE, 5249628);
allocate([32,32,32,32,32,32,32,73,116,32,105,115,32,111,119,110,101,100,32,98,121,32,116,104,101,32,114,111,117,116,101,114,46,32,32,67,97,108,108,32,82,111,117,116,101,114,58,58,100,101,108,101,116,101,74,117,110,99,116,105,111,110,40,41,32,105,110,115,116,101,97,100,46,10,0] /*        It is owned b */, "i8", ALLOC_NONE, 5249656);
allocate([101,120,105,115,116,105,110,103,69,100,103,101,40,105,44,32,106,41,32,61,61,32,95,95,110,117,108,108,0] /* existingEdge(i, j) = */, "i8", ALLOC_NONE, 5249732);
allocate([98,73,110,102,32,33,61,32,95,95,110,117,108,108,0] /* bInf != __null\00 */, "i8", ALLOC_NONE, 5249764);
allocate([118,49,32,38,38,32,118,50,0] /* v1 && v2\00 */, "i8", ALLOC_NONE, 5249780);
allocate([41,0] /* )\00 */, "i8", ALLOC_NONE, 5249792);
allocate([40,117,45,62,112,111,105,110,116,46,120,32,61,61,32,118,45,62,112,111,105,110,116,46,120,41,32,124,124,32,40,117,45,62,112,111,105,110,116,46,121,32,61,61,32,118,45,62,112,111,105,110,116,46,121,41,0] /* (u-_point.x == v-_po */, "i8", ALLOC_NONE, 5249796);
allocate([114,111,111,116,86,101,114,116,101,120,80,111,105,110,116,101,114,115,46,101,109,112,116,121,40,41,0] /* rootVertexPointers.e */, "i8", ALLOC_NONE, 5249856);
allocate([105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0] /* ios_base::clear\00 */, "i8", ALLOC_NONE, 5249884);
allocate([40,100,105,109,101,110,115,105,111,110,32,61,61,32,48,41,32,124,124,32,40,100,105,109,101,110,115,105,111,110,32,61,61,32,49,41,0] /* (dimension == 0) ||  */, "i8", ALLOC_NONE, 5249900);
allocate([106,45,62,105,100,32,33,61,32,100,117,109,109,121,79,114,116,104,111,103,73,68,0] /* j-_id != dummyOrthog */, "i8", ALLOC_NONE, 5249940);
allocate([118,101,99,68,105,114,40,97,44,32,98,44,32,99,44,32,101,112,115,105,108,111,110,41,32,61,61,32,48,0] /* vecDir(a, b, c, epsi */, "i8", ALLOC_NONE, 5249964);
allocate([40,0] /* (\00 */, "i8", ALLOC_NONE, 5249996);
allocate([118,101,114,116,45,62,118,101,114,116,45,62,112,111,105,110,116,32,33,61,32,108,97,115,116,45,62,118,101,114,116,45,62,112,111,105,110,116,0] /* vert-_vert-_point != */, "i8", ALLOC_NONE, 5250000);
allocate([95,108,97,115,116,67,111,110,110,86,101,114,116,45,62,108,115,116,78,101,120,116,32,61,61,32,95,95,110,117,108,108,0] /* _lastConnVert-_lstNe */, "i8", ALLOC_NONE, 5250040);
allocate([83,101,108,101,99,116,105,118,101,82,101,114,111,117,116,101,0] /* SelectiveReroute\00 */, "i8", ALLOC_NONE, 5250076);
allocate([105,45,62,105,100,32,33,61,32,100,117,109,109,121,79,114,116,104,111,103,73,68,0] /* i-_id != dummyOrthog */, "i8", ALLOC_NONE, 5250096);
allocate([109,95,115,104,97,112,101,32,33,61,32,95,95,110,117,108,108,0] /* m_shape != __null\00 */, "i8", ALLOC_NONE, 5250120);
allocate([43,0] /* +\00 */, "i8", ALLOC_NONE, 5250140);
allocate([118,101,114,116,32,33,61,32,108,97,115,116,0] /* vert != last\00 */, "i8", ALLOC_NONE, 5250144);
allocate([118,101,114,116,45,62,108,115,116,78,101,120,116,32,61,61,32,95,95,110,117,108,108,0] /* vert-_lstNext == __n */, "i8", ALLOC_NONE, 5250160);
allocate([33,73,110,118,105,115,105,98,105,108,105,116,121,71,114,112,104,0] /* !InvisibilityGrph\00 */, "i8", ALLOC_NONE, 5250184);
allocate([40,118,101,114,116,32,61,61,32,109,95,118,101,114,116,49,41,32,124,124,32,40,118,101,114,116,32,61,61,32,109,95,118,101,114,116,50,41,0] /* (vert == m_vert1) || */, "i8", ALLOC_NONE, 5250204);
allocate([33,98,114,101,97,107,80,111,105,110,116,115,46,101,109,112,116,121,40,41,0] /* !breakPoints.empty() */, "i8", ALLOC_NONE, 5250244);
allocate([112,97,114,116,110,101,114,0] /* partner\00 */, "i8", ALLOC_NONE, 5250268);
allocate([103,114,97,112,104,46,99,112,112,0] /* graph.cpp\00 */, "i8", ALLOC_NONE, 5250276);
allocate([118,101,114,116,45,62,108,115,116,80,114,101,118,32,61,61,32,95,95,110,117,108,108,0] /* vert-_lstPrev == __n */, "i8", ALLOC_NONE, 5250288);
allocate([73,110,118,105,115,105,98,105,108,105,116,121,71,114,112,104,0] /* InvisibilityGrph\00 */, "i8", ALLOC_NONE, 5250312);
allocate([118,45,62,102,105,110,97,108,80,111,115,105,116,105,111,110,61,61,118,45,62,102,105,110,97,108,80,111,115,105,116,105,111,110,0] /* v-_finalPosition==v- */, "i8", ALLOC_NONE, 5250332);
allocate([60,61,0] /* _=\00 */, "i8", ALLOC_NONE, 5250368);
allocate([114,101,115,117,108,116,32,61,61,32,49,0] /* result == 1\00 */, "i8", ALLOC_NONE, 5250372);
allocate([114,101,97,108,86,101,114,116,45,62,105,100,32,33,61,32,100,105,109,101,110,115,105,111,110,67,104,97,110,103,101,86,101,114,116,101,120,73,68,0] /* realVert-_id != dime */, "i8", ALLOC_NONE, 5250384);
allocate([33,95,108,97,115,116,67,111,110,110,86,101,114,116,32,124,124,32,95,108,97,115,116,67,111,110,110,86,101,114,116,45,62,105,100,46,105,115,67,111,110,110,80,116,40,41,0] /* !_lastConnVert || _l */, "i8", ALLOC_NONE, 5250424);
allocate([67,0] /* C\00 */, "i8", ALLOC_NONE, 5250472);
allocate([61,0] /* =\00 */, "i8", ALLOC_NONE, 5250476);
allocate([114,101,115,117,108,116,46,115,101,99,111,110,100,0] /* result.second\00 */, "i8", ALLOC_NONE, 5250480);
allocate([118,101,114,116,0] /* vert\00 */, "i8", ALLOC_NONE, 5250496);
allocate([33,95,102,105,114,115,116,67,111,110,110,86,101,114,116,32,124,124,32,95,102,105,114,115,116,67,111,110,110,86,101,114,116,45,62,105,100,46,105,115,67,111,110,110,80,116,40,41,0] /* !_firstConnVert || _ */, "i8", ALLOC_NONE, 5250504);
allocate([111,98,106,101,99,116,73,100,73,115,85,110,117,115,101,100,40,97,115,115,105,103,110,101,100,73,100,41,0] /* objectIdIsUnused(ass */, "i8", ALLOC_NONE, 5250556);
allocate([83,97,116,0] /* Sat\00 */, "i8", ALLOC_NONE, 5250588);
allocate([70,114,105,0] /* Fri\00 */, "i8", ALLOC_NONE, 5250592);
allocate([84,104,117,0] /* Thu\00 */, "i8", ALLOC_NONE, 5250596);
allocate([78,85,76,76,0] /* NULL\00 */, "i8", ALLOC_NONE, 5250600);
allocate([87,101,100,0] /* Wed\00 */, "i8", ALLOC_NONE, 5250608);
allocate([108,111,119,80,116,91,97,108,116,68,105,109,93,32,60,32,104,105,103,104,80,116,91,97,108,116,68,105,109,93,0] /* lowPt[altDim] _ high */, "i8", ALLOC_NONE, 5250612);
allocate([114,101,100,0] /* red\00 */, "i8", ALLOC_NONE, 5250644);
allocate([84,117,101,0] /* Tue\00 */, "i8", ALLOC_NONE, 5250648);
allocate([116,114,101,101,82,111,111,116,0] /* treeRoot\00 */, "i8", ALLOC_NONE, 5250652);
allocate([77,111,110,0] /* Mon\00 */, "i8", ALLOC_NONE, 5250664);
allocate([83,117,110,0] /* Sun\00 */, "i8", ALLOC_NONE, 5250668);
allocate([33,95,108,97,115,116,83,104,97,112,101,86,101,114,116,32,124,124,32,33,40,95,108,97,115,116,83,104,97,112,101,86,101,114,116,45,62,105,100,46,105,115,67,111,110,110,80,116,40,41,41,0] /* !_lastShapeVert || ! */, "i8", ALLOC_NONE, 5250672);
allocate([83,97,116,117,114,100,97,121,0] /* Saturday\00 */, "i8", ALLOC_NONE, 5250724);
allocate([105,111,115,116,114,101,97,109,0] /* iostream\00 */, "i8", ALLOC_NONE, 5250736);
allocate([102,105,110,100,40,97,99,116,105,111,110,76,105,115,116,46,98,101,103,105,110,40,41,44,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,44,32,65,99,116,105,111,110,73,110,102,111,40,74,117,110,99,116,105,111,110,65,100,100,44,32,106,117,110,99,116,105,111,110,41,41,32,61,61,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,0] /* find(actionList.begi */, "i8", ALLOC_NONE, 5250748);
allocate([70,114,105,100,97,121,0] /* Friday\00 */, "i8", ALLOC_NONE, 5250848);
allocate([84,104,117,114,115,100,97,121,0] /* Thursday\00 */, "i8", ALLOC_NONE, 5250856);
allocate([87,101,100,110,101,115,100,97,121,0] /* Wednesday\00 */, "i8", ALLOC_NONE, 5250868);
allocate([84,117,101,115,100,97,121,0] /* Tuesday\00 */, "i8", ALLOC_NONE, 5250880);
allocate([77,111,110,100,97,121,0] /* Monday\00 */, "i8", ALLOC_NONE, 5250888);
allocate([83,117,110,100,97,121,0] /* Sunday\00 */, "i8", ALLOC_NONE, 5250896);
allocate([108,111,119,80,116,91,100,105,109,93,32,61,61,32,104,105,103,104,80,116,91,100,105,109,93,0] /* lowPt[dim] == highPt */, "i8", ALLOC_NONE, 5250904);
allocate([109,97,121,98,101,78,101,119,86,101,114,116,101,120,46,115,101,99,111,110,100,32,33,61,32,95,95,110,117,108,108,0] /* maybeNewVertex.secon */, "i8", ALLOC_NONE, 5250932);
allocate([83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5250964);
allocate([112,46,97,110,103,108,101,32,62,32,97,110,103,108,101,0] /* p.angle _ angle\00 */, "i8", ALLOC_NONE, 5250980);
allocate([70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5250996);
allocate([33,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,32,124,124,32,33,40,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,45,62,105,100,46,105,115,67,111,110,110,80,116,40,41,41,0] /* !_firstShapeVert ||  */, "i8", ALLOC_NONE, 5251012);
allocate([84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251068);
allocate([102,105,110,100,40,97,99,116,105,111,110,76,105,115,116,46,98,101,103,105,110,40,41,44,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,44,32,65,99,116,105,111,110,73,110,102,111,40,74,117,110,99,116,105,111,110,77,111,118,101,44,32,106,117,110,99,116,105,111,110,41,41,32,61,61,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,0] /* find(actionList.begi */, "i8", ALLOC_NONE, 5251084);
allocate([87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251184);
allocate([84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251200);
allocate([77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251216);
allocate([83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251232);
allocate([83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251248);
allocate([70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251284);
allocate([114,104,115,76,111,119,91,100,105,109,101,110,115,105,111,110,93,32,61,61,32,114,104,115,72,105,103,104,91,100,105,109,101,110,115,105,111,110,93,0] /* rhsLow[dimension] == */, "i8", ALLOC_NONE, 5251312);
allocate([84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251352);
allocate([87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251388);
allocate([109,95,114,111,117,116,101,114,32,33,61,32,95,95,110,117,108,108,0] /* m_router != __null\0 */, "i8", ALLOC_NONE, 5251428);
allocate([103,101,111,109,116,121,112,101,115,46,99,112,112,0] /* geomtypes.cpp\00 */, "i8", ALLOC_NONE, 5251448);
allocate([97,110,103,108,101,32,61,61,32,114,104,115,46,97,110,103,108,101,0] /* angle == rhs.angle\0 */, "i8", ALLOC_NONE, 5251464);
allocate([84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251484);
allocate([40,33,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,32,38,38,32,33,95,108,97,115,116,83,104,97,112,101,86,101,114,116,41,32,124,124,32,40,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,32,38,38,32,95,108,97,115,116,83,104,97,112,101,86,101,114,116,41,0] /* (!_firstShapeVert && */, "i8", ALLOC_NONE, 5251516);
allocate([77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251596);
allocate([102,105,110,100,40,97,99,116,105,111,110,76,105,115,116,46,98,101,103,105,110,40,41,44,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,44,32,65,99,116,105,111,110,73,110,102,111,40,74,117,110,99,116,105,111,110,82,101,109,111,118,101,44,32,106,117,110,99,116,105,111,110,41,41,32,61,61,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,0] /* find(actionList.begi */, "i8", ALLOC_NONE, 5251624);
allocate([83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5251728);
allocate([68,101,99,0] /* Dec\00 */, "i8", ALLOC_NONE, 5251756);
allocate([78,111,118,0] /* Nov\00 */, "i8", ALLOC_NONE, 5251760);
allocate([99,111,110,110,101,99,116,111,114,46,99,112,112,0] /* connector.cpp\00 */, "i8", ALLOC_NONE, 5251764);
allocate([79,99,116,0] /* Oct\00 */, "i8", ALLOC_NONE, 5251780);
allocate([83,101,112,0] /* Sep\00 */, "i8", ALLOC_NONE, 5251784);
allocate([108,104,115,76,111,119,91,100,105,109,101,110,115,105,111,110,93,32,61,61,32,108,104,115,72,105,103,104,91,100,105,109,101,110,115,105,111,110,93,0] /* lhsLow[dimension] == */, "i8", ALLOC_NONE, 5251788);
allocate([65,117,103,0] /* Aug\00 */, "i8", ALLOC_NONE, 5251828);
allocate([42,99,117,114,114,32,33,61,32,95,95,110,117,108,108,0] /* _curr != __null\00 */, "i8", ALLOC_NONE, 5251832);
allocate([74,117,108,0] /* Jul\00 */, "i8", ALLOC_NONE, 5251848);
allocate([74,117,110,0] /* Jun\00 */, "i8", ALLOC_NONE, 5251852);
allocate([40,33,95,102,105,114,115,116,67,111,110,110,86,101,114,116,32,38,38,32,33,95,108,97,115,116,67,111,110,110,86,101,114,116,41,32,124,124,32,40,95,102,105,114,115,116,67,111,110,110,86,101,114,116,32,38,38,32,95,108,97,115,116,67,111,110,110,86,101,114,116,41,0] /* (!_firstConnVert &&  */, "i8", ALLOC_NONE, 5251856);
allocate([65,112,114,0] /* Apr\00 */, "i8", ALLOC_NONE, 5251932);
allocate([77,97,114,0] /* Mar\00 */, "i8", ALLOC_NONE, 5251936);
allocate([109,95,114,111,117,116,101,114,0] /* m_router\00 */, "i8", ALLOC_NONE, 5251940);
allocate([70,101,98,0] /* Feb\00 */, "i8", ALLOC_NONE, 5251952);
allocate([74,97,110,0] /* Jan\00 */, "i8", ALLOC_NONE, 5251956);
allocate([68,101,99,101,109,98,101,114,0] /* December\00 */, "i8", ALLOC_NONE, 5251960);
allocate([78,111,118,101,109,98,101,114,0] /* November\00 */, "i8", ALLOC_NONE, 5251972);
allocate([79,99,116,111,98,101,114,0] /* October\00 */, "i8", ALLOC_NONE, 5251984);
allocate([109,97,120,83,112,97,99,101,76,105,109,105,116,32,60,32,67,72,65,78,78,69,76,95,77,65,88,0] /* maxSpaceLimit _ CHAN */, "i8", ALLOC_NONE, 5251992);
allocate([60,47,103,62,10,0] /* _/g_\0A\00 */, "i8", ALLOC_NONE, 5252020);
allocate([83,101,112,116,101,109,98,101,114,0] /* September\00 */, "i8", ALLOC_NONE, 5252028);
allocate([118,101,114,116,101,120,32,33,61,32,95,95,110,117,108,108,0] /* vertex != __null\00 */, "i8", ALLOC_NONE, 5252040);
allocate([99,111,110,110,101,99,116,111,114,45,62,109,95,100,115,116,95,118,101,114,116,0] /* connector-_m_dst_ver */, "i8", ALLOC_NONE, 5252060);
allocate([65,117,103,117,115,116,0] /* August\00 */, "i8", ALLOC_NONE, 5252084);
allocate([74,117,108,121,0] /* July\00 */, "i8", ALLOC_NONE, 5252092);
allocate([117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0] /* unspecified iostream */, "i8", ALLOC_NONE, 5252100);
allocate([74,117,110,101,0] /* June\00 */, "i8", ALLOC_NONE, 5252136);
allocate([33,95,108,97,115,116,67,111,110,110,86,101,114,116,32,124,124,32,40,95,108,97,115,116,67,111,110,110,86,101,114,116,45,62,108,115,116,78,101,120,116,32,61,61,32,95,102,105,114,115,116,83,104,97,112,101,86,101,114,116,41,0] /* !_lastConnVert || (_ */, "i8", ALLOC_NONE, 5252144);
allocate([77,97,121,0] /* May\00 */, "i8", ALLOC_NONE, 5252208);
allocate([102,105,110,100,40,97,99,116,105,111,110,76,105,115,116,46,98,101,103,105,110,40,41,44,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,44,32,65,99,116,105,111,110,73,110,102,111,40,83,104,97,112,101,77,111,118,101,44,32,115,104,97,112,101,41,41,32,61,61,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,0] /* find(actionList.begi */, "i8", ALLOC_NONE, 5252212);
allocate([33,109,95,112,111,108,121,103,111,110,46,101,109,112,116,121,40,41,0] /* !m_polygon.empty()\0 */, "i8", ALLOC_NONE, 5252308);
allocate([65,112,114,105,108,0] /* April\00 */, "i8", ALLOC_NONE, 5252328);
allocate([77,97,114,99,104,0] /* March\00 */, "i8", ALLOC_NONE, 5252336);
allocate([70,101,98,114,117,97,114,121,0] /* February\00 */, "i8", ALLOC_NONE, 5252344);
allocate([103,101,111,109,101,116,114,121,46,99,112,112,0] /* geometry.cpp\00 */, "i8", ALLOC_NONE, 5252356);
allocate([109,95,114,111,117,116,101,114,32,61,61,32,114,104,115,46,109,95,114,111,117,116,101,114,0] /* m_router == rhs.m_ro */, "i8", ALLOC_NONE, 5252372);
allocate([74,97,110,117,97,114,121,0] /* January\00 */, "i8", ALLOC_NONE, 5252400);
allocate([115,116,100,58,58,98,97,100,95,99,97,115,116,0] /* std::bad_cast\00 */, "i8", ALLOC_NONE, 5252408);
allocate([68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252424);
allocate([109,105,110,83,112,97,99,101,76,105,109,105,116,32,62,32,45,67,72,65,78,78,69,76,95,77,65,88,0] /* minSpaceLimit _ -CHA */, "i8", ALLOC_NONE, 5252440);
allocate([78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252472);
allocate([101,110,100,115,46,115,101,99,111,110,100,32,33,61,32,95,95,110,117,108,108,0] /* ends.second != __nul */, "i8", ALLOC_NONE, 5252488);
allocate([87,97,114,110,105,110,103,58,32,73,110,32,67,111,110,110,69,110,100,58,58,97,115,115,105,103,110,80,105,110,86,105,115,105,98,105,108,105,116,121,84,111,40,41,58,10,32,32,32,32,32,32,32,32,32,67,111,110,110,69,110,100,32,102,111,114,32,99,111,110,110,101,99,116,111,114,32,37,100,32,99,97,110,39,116,32,99,111,110,110,101,99,116,32,116,111,32,115,104,97,112,101,32,37,100,10,32,32,32,32,32,32,32,32,32,115,105,110,99,101,32,105,116,32,104,97,115,32,110,111,32,112,105,110,115,32,119,105,116,104,32,99,108,97,115,115,32,105,100,32,111,102,32,37,117,46,10,0] /* Warning: In ConnEnd: */, "i8", ALLOC_NONE, 5252512);
allocate([99,111,110,110,101,99,116,111,114,45,62,109,95,115,114,99,95,118,101,114,116,0] /* connector-_m_src_ver */, "i8", ALLOC_NONE, 5252672);
allocate([79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252696);
allocate([83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252712);
allocate([33,95,108,97,115,116,83,104,97,112,101,86,101,114,116,32,124,124,32,40,95,108,97,115,116,83,104,97,112,101,86,101,114,116,45,62,108,115,116,78,101,120,116,32,61,61,32,95,95,110,117,108,108,41,0] /* !_lastShapeVert || ( */, "i8", ALLOC_NONE, 5252728);
allocate([65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252784);
allocate([102,105,110,100,40,97,99,116,105,111,110,76,105,115,116,46,98,101,103,105,110,40,41,44,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,44,32,65,99,116,105,111,110,73,110,102,111,40,83,104,97,112,101,82,101,109,111,118,101,44,32,115,104,97,112,101,41,41,32,61,61,32,97,99,116,105,111,110,76,105,115,116,46,101,110,100,40,41,0] /* find(actionList.begi */, "i8", ALLOC_NONE, 5252800);
allocate([74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252896);
allocate([74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252912);
allocate([77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5252928);
allocate([32,32,32,32,110,101,119,32,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,40,106,117,110,99,116,105,111,110,82,101,102,37,117,44,32,37,117,44,32,40,67,111,110,110,68,105,114,70,108,97,103,115,41,32,37,117,41,59,10,0] /*     new ShapeConnect */, "i8", ALLOC_NONE, 5252944);
allocate([116,32,33,61,32,116,109,78,111,110,0] /* t != tmNon\00 */, "i8", ALLOC_NONE, 5253012);
allocate([99,111,110,110,101,99,116,105,111,110,112,105,110,46,99,112,112,0] /* connectionpin.cpp\00 */, "i8", ALLOC_NONE, 5253024);
allocate(468, "i8", ALLOC_NONE, 5253044);
allocate([67,111,110,110,82,101,102,76,105,115,116,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,97,116,116,97,99,104,101,100,67,111,110,110,101,99,116,111,114,115,40,41,32,99,111,110,115,116,0] /* ConnRefList Avoid::O */, "i8", ALLOC_NONE, 5253512);
allocate([65,118,111,105,100,58,58,80,111,108,121,103,111,110,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,114,111,117,116,105,110,103,80,111,108,121,103,111,110,40,41,32,99,111,110,115,116,0] /* Avoid::Polygon Avoid */, "i8", ALLOC_NONE, 5253568);
allocate([65,118,111,105,100,58,58,66,111,120,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,114,111,117,116,105,110,103,66,111,120,40,41,32,99,111,110,115,116,0] /* Avoid::Box Avoid::Ob */, "i8", ALLOC_NONE, 5253624);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,69,100,103,101,80,97,105,114,58,58,111,112,101,114,97,116,111,114,60,40,99,111,110,115,116,32,65,118,111,105,100,58,58,69,100,103,101,80,97,105,114,32,38,41,32,99,111,110,115,116,0] /* bool Avoid::EdgePair */, "i8", ALLOC_NONE, 5253672);
allocate([117,110,115,105,103,110,101,100,32,105,110,116,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,58,58,112,97,116,104,76,101,97,100,115,66,97,99,107,84,111,40,99,111,110,115,116,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,32,99,111,110,115,116,0] /* unsigned int Avoid:: */, "i8", ALLOC_NONE, 5253736);
allocate([118,105,114,116,117,97,108,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,65,118,111,105,100,58,58,80,111,108,121,103,111,110,58,58,97,116,40,115,105,122,101,95,116,41,32,99,111,110,115,116,0] /* virtual const Avoid: */, "i8", ALLOC_NONE, 5253812);
allocate([65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,111,116,104,101,114,86,101,114,116,40,99,111,110,115,116,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,32,99,111,110,115,116,0] /* Avoid::VertInf _Avoi */, "i8", ALLOC_NONE, 5253876);
allocate([115,116,100,58,58,112,97,105,114,60,98,111,111,108,44,32,86,101,114,116,73,110,102,32,42,62,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,103,101,116,72,121,112,101,114,101,100,103,101,86,101,114,116,101,120,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,41,32,99,111,110,115,116,0] /* std::pair_bool, Vert */, "i8", ALLOC_NONE, 5253948);
allocate([117,110,115,105,103,110,101,100,32,105,110,116,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,101,110,100,112,111,105,110,116,84,121,112,101,40,41,32,99,111,110,115,116,0] /* unsigned int Avoid:: */, "i8", ALLOC_NONE, 5254036);
allocate([100,111,117,98,108,101,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,114,111,117,116,105,110,103,80,97,114,97,109,101,116,101,114,40,99,111,110,115,116,32,65,118,111,105,100,58,58,82,111,117,116,105,110,103,80,97,114,97,109,101,116,101,114,41,32,99,111,110,115,116,0] /* double Avoid::Router */, "i8", ALLOC_NONE, 5254088);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,114,111,117,116,105,110,103,79,112,116,105,111,110,40,99,111,110,115,116,32,65,118,111,105,100,58,58,82,111,117,116,105,110,103,79,112,116,105,111,110,41,32,99,111,110,115,116,0] /* bool Avoid::Router:: */, "i8", ALLOC_NONE, 5254164);
allocate([99,111,110,115,116,32,100,111,117,98,108,101,32,38,65,118,111,105,100,58,58,80,111,105,110,116,58,58,111,112,101,114,97,116,111,114,91,93,40,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,32,99,111,110,115,116,0] /* const double &Avoid: */, "i8", ALLOC_NONE, 5254232);
allocate([105,110,116,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,83,104,105,102,116,83,101,103,109,101,110,116,58,58,98,97,108,97,110,99,101,67,111,117,110,116,40,41,32,99,111,110,115,116,0] /* int Avoid::HyperEdge */, "i8", ALLOC_NONE, 5254300);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,58,58,111,112,101,114,97,116,111,114,60,40,99,111,110,115,116,32,65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,32,38,41,32,99,111,110,115,116,0] /* bool Avoid::ShapeCon */, "i8", ALLOC_NONE, 5254356);
allocate([117,110,115,105,103,110,101,100,32,105,110,116,32,65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,58,58,99,111,110,116,97,105,110,105,110,103,79,98,106,101,99,116,73,100,40,41,32,99,111,110,115,116,0] /* unsigned int Avoid:: */, "i8", ALLOC_NONE, 5254440);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,58,58,111,117,116,112,117,116,67,111,100,101,40,70,73,76,69,32,42,41,32,99,111,110,115,116,0] /* void Avoid::ShapeCon */, "i8", ALLOC_NONE, 5254508);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,67,109,112,76,105,110,101,79,114,100,101,114,58,58,111,112,101,114,97,116,111,114,40,41,40,99,111,110,115,116,32,65,118,111,105,100,58,58,83,104,105,102,116,83,101,103,109,101,110,116,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,83,104,105,102,116,83,101,103,109,101,110,116,32,42,44,32,98,111,111,108,32,42,41,32,99,111,110,115,116,0] /* bool Avoid::CmpLineO */, "i8", ALLOC_NONE, 5254568);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,76,105,110,101,83,101,103,109,101,110,116,58,58,111,112,101,114,97,116,111,114,60,40,99,111,110,115,116,32,65,118,111,105,100,58,58,76,105,110,101,83,101,103,109,101,110,116,32,38,41,32,99,111,110,115,116,0] /* bool Avoid::LineSegm */, "i8", ALLOC_NONE, 5254680);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,67,109,112,86,101,114,116,73,110,102,58,58,111,112,101,114,97,116,111,114,40,41,40,99,111,110,115,116,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,32,99,111,110,115,116,0] /* bool Avoid::CmpVertI */, "i8", ALLOC_NONE, 5254752);
allocate([65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,32,42,65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,111,98,115,116,97,99,108,101,40,41,32,99,111,110,115,116,0] /* Avoid::Obstacle _Avo */, "i8", ALLOC_NONE, 5254844);
allocate([65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,99,111,110,110,40,41,32,99,111,110,115,116,0] /* Avoid::ConnRef _Avoi */, "i8", ALLOC_NONE, 5254900);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,111,112,101,114,97,116,111,114,60,40,99,111,110,115,116,32,65,118,111,105,100,58,58,65,78,111,100,101,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,65,78,111,100,101,32,38,41,0] /* bool Avoid::operator */, "i8", ALLOC_NONE, 5254948);
allocate([105,110,116,32,65,118,111,105,100,58,58,118,101,99,68,105,114,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,100,111,117,98,108,101,41,0] /* int Avoid::vecDir(co */, "i8", ALLOC_NONE, 5255016);
allocate([100,111,117,98,108,101,32,65,118,111,105,100,58,58,99,111,115,116,40,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,44,32,99,111,110,115,116,32,100,111,117,98,108,101,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,115,116,100,58,58,118,101,99,116,111,114,60,65,78,111,100,101,62,32,38,44,32,105,110,116,41,0] /* double Avoid::cost(A */, "i8", ALLOC_NONE, 5255116);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,98,117,105,108,100,79,114,116,104,111,103,111,110,97,108,67,104,97,110,110,101,108,73,110,102,111,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,99,111,110,115,116,32,115,105,122,101,95,116,44,32,83,104,105,102,116,83,101,103,109,101,110,116,76,105,115,116,32,38,41,0] /* void Avoid::buildOrt */, "i8", ALLOC_NONE, 5255232);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,110,117,100,103,101,79,114,116,104,111,103,111,110,97,108,82,111,117,116,101,115,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,115,105,122,101,95,116,44,32,80,116,79,114,100,101,114,77,97,112,32,38,44,32,83,104,105,102,116,83,101,103,109,101,110,116,76,105,115,116,32,38,44,32,98,111,111,108,41,0] /* void Avoid::nudgeOrt */, "i8", ALLOC_NONE, 5255324);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,112,114,111,99,101,115,115,83,104,105,102,116,69,118,101,110,116,40,78,111,100,101,83,101,116,32,38,44,32,65,118,111,105,100,58,58,69,118,101,110,116,32,42,44,32,115,105,122,101,95,116,44,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* void Avoid::processS */, "i8", ALLOC_NONE, 5255424);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,105,110,116,101,114,115,101,99,116,83,101,103,109,101,110,116,115,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,83,101,103,109,101,110,116,76,105,115,116,32,38,44,32,65,118,111,105,100,58,58,76,105,110,101,83,101,103,109,101,110,116,32,38,41,0] /* void Avoid::intersec */, "i8", ALLOC_NONE, 5255504);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,112,114,111,99,101,115,115,69,118,101,110,116,86,101,114,116,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,78,111,100,101,83,101,116,32,38,44,32,65,118,111,105,100,58,58,83,101,103,109,101,110,116,76,105,115,116,87,114,97,112,112,101,114,32,38,44,32,65,118,111,105,100,58,58,69,118,101,110,116,32,42,44,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* void Avoid::processE */, "i8", ALLOC_NONE, 5255588);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,112,114,111,99,101,115,115,69,118,101,110,116,72,111,114,105,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,78,111,100,101,83,101,116,32,38,44,32,65,118,111,105,100,58,58,83,101,103,109,101,110,116,76,105,115,116,87,114,97,112,112,101,114,32,38,44,32,65,118,111,105,100,58,58,69,118,101,110,116,32,42,44,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* void Avoid::processE */, "i8", ALLOC_NONE, 5255704);
allocate([105,110,116,32,65,118,111,105,100,58,58,109,105,100,86,101,114,116,101,120,78,117,109,98,101,114,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,41,0] /* int Avoid::midVertex */, "i8", ALLOC_NONE, 5255820);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,118,101,114,116,101,120,83,119,101,101,112,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* void Avoid::vertexSw */, "i8", ALLOC_NONE, 5255916);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,105,110,66,101,116,119,101,101,110,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,41,0] /* bool Avoid::inBetwee */, "i8", ALLOC_NONE, 5255960);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,97,83,116,97,114,80,97,116,104,40,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* void Avoid::aStarPat */, "i8", ALLOC_NONE, 5256048);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,73,110,99,83,111,108,118,101,114,58,58,115,97,116,105,115,102,121,40,41,0] /* bool Avoid::IncSolve */, "i8", ALLOC_NONE, 5256144);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,73,110,99,83,111,108,118,101,114,58,58,115,112,108,105,116,66,108,111,99,107,115,40,41,0] /* void Avoid::IncSolve */, "i8", ALLOC_NONE, 5256180);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,73,110,99,83,111,108,118,101,114,58,58,99,111,112,121,82,101,115,117,108,116,40,41,0] /* void Avoid::IncSolve */, "i8", ALLOC_NONE, 5256220);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,58,58,109,111,118,101,65,116,116,97,99,104,101,100,67,111,110,110,115,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,108,121,103,111,110,32,38,41,0] /* void Avoid::ShapeRef */, "i8", ALLOC_NONE, 5256256);
allocate([118,105,114,116,117,97,108,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,126,79,98,115,116,97,99,108,101,40,41,0] /* virtual Avoid::Obsta */, "i8", ALLOC_NONE, 5256320);
allocate([65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,79,98,115,116,97,99,108,101,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,65,118,111,105,100,58,58,80,111,108,121,103,111,110,44,32,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* Avoid::Obstacle::Obs */, "i8", ALLOC_NONE, 5256360);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,109,97,107,101,73,110,97,99,116,105,118,101,40,41,0] /* void Avoid::Obstacle */, "i8", ALLOC_NONE, 5256440);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,115,101,116,78,101,119,80,111,108,121,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,108,121,103,111,110,32,38,41,0] /* void Avoid::Obstacle */, "i8", ALLOC_NONE, 5256480);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,58,58,109,97,107,101,65,99,116,105,118,101,40,41,0] /* void Avoid::Obstacle */, "i8", ALLOC_NONE, 5256540);
allocate([100,111,117,98,108,101,32,65,118,111,105,100,58,58,69,100,103,101,80,97,105,114,58,58,115,101,116,67,117,114,114,65,110,103,108,101,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,80,97,105,114,32,38,41,0] /* double Avoid::EdgePa */, "i8", ALLOC_NONE, 5256576);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,69,100,103,101,76,105,115,116,58,58,97,100,100,69,100,103,101,40,65,118,111,105,100,58,58,69,100,103,101,73,110,102,32,42,41,0] /* void Avoid::EdgeList */, "i8", ALLOC_NONE, 5256640);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,69,100,103,101,76,105,115,116,58,58,99,108,101,97,114,40,41,0] /* void Avoid::EdgeList */, "i8", ALLOC_NONE, 5256688);
allocate([65,118,111,105,100,58,58,86,101,114,116,73,110,102,58,58,126,86,101,114,116,73,110,102,40,41,0] /* Avoid::VertInf::~Ver */, "i8", ALLOC_NONE, 5256720);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,58,58,114,101,109,111,118,101,70,114,111,109,71,114,97,112,104,40,99,111,110,115,116,32,98,111,111,108,41,0] /* void Avoid::VertInf: */, "i8", ALLOC_NONE, 5256748);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,80,116,79,114,100,101,114,58,58,115,111,114,116,40,99,111,110,115,116,32,115,105,122,101,95,116,41,0] /* void Avoid::PtOrder: */, "i8", ALLOC_NONE, 5256800);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,80,116,79,114,100,101,114,58,58,97,100,100,79,114,100,101,114,101,100,80,111,105,110,116,115,40,99,111,110,115,116,32,115,105,122,101,95,116,44,32,99,111,110,115,116,32,80,116,67,111,110,110,80,116,114,80,97,105,114,32,38,44,32,99,111,110,115,116,32,80,116,67,111,110,110,80,116,114,80,97,105,114,32,38,44,32,98,111,111,108,41,0] /* void Avoid::PtOrder: */, "i8", ALLOC_NONE, 5256840);
allocate([65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,69,100,103,101,73,110,102,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,99,111,110,115,116,32,98,111,111,108,41,0] /* Avoid::EdgeInf::Edge */, "i8", ALLOC_NONE, 5256944);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,115,101,116,68,105,115,116,40,100,111,117,98,108,101,41,0] /* void Avoid::EdgeInf: */, "i8", ALLOC_NONE, 5257016);
allocate([115,116,97,116,105,99,32,65,118,111,105,100,58,58,69,100,103,101,73,110,102,32,42,65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,99,104,101,99,107,69,100,103,101,86,105,115,105,98,105,108,105,116,121,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,98,111,111,108,41,0] /* static Avoid::EdgeIn */, "i8", ALLOC_NONE, 5257056);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,109,97,107,101,73,110,97,99,116,105,118,101,40,41,0] /* void Avoid::EdgeInf: */, "i8", ALLOC_NONE, 5257160);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,109,97,107,101,65,99,116,105,118,101,40,41,0] /* void Avoid::EdgeInf: */, "i8", ALLOC_NONE, 5257196);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,69,100,103,101,73,110,102,58,58,97,100,100,66,108,111,99,107,101,114,40,105,110,116,41,0] /* void Avoid::EdgeInf: */, "i8", ALLOC_NONE, 5257232);
allocate([65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,67,111,110,110,82,101,102,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* Avoid::ConnRef::Conn */, "i8", ALLOC_NONE, 5257272);
allocate([65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,67,111,110,110,82,101,102,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,32,38,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,32,38,44,32,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* Avoid::ConnRef::Conn */, "i8", ALLOC_NONE, 5257336);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,103,101,110,101,114,97,116,101,67,104,101,99,107,112,111,105,110,116,115,80,97,116,104,40,115,116,100,58,58,118,101,99,116,111,114,60,80,111,105,110,116,62,32,38,44,32,115,116,100,58,58,118,101,99,116,111,114,60,86,101,114,116,73,110,102,32,42,62,32,38,41,0] /* void Avoid::ConnRef: */, "i8", ALLOC_NONE, 5257448);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,99,111,109,109,111,110,95,117,112,100,97,116,101,69,110,100,80,111,105,110,116,40,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,44,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,41,0] /* void Avoid::ConnRef: */, "i8", ALLOC_NONE, 5257544);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,103,101,110,101,114,97,116,101,83,116,97,110,100,97,114,100,80,97,116,104,40,115,116,100,58,58,118,101,99,116,111,114,60,80,111,105,110,116,62,32,38,44,32,115,116,100,58,58,118,101,99,116,111,114,60,86,101,114,116,73,110,102,32,42,62,32,38,41,0] /* void Avoid::ConnRef: */, "i8", ALLOC_NONE, 5257624);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,109,97,107,101,73,110,97,99,116,105,118,101,40,41,0] /* void Avoid::ConnRef: */, "i8", ALLOC_NONE, 5257716);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,103,101,110,101,114,97,116,101,80,97,116,104,40,41,0] /* bool Avoid::ConnRef: */, "i8", ALLOC_NONE, 5257752);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,58,58,109,97,107,101,65,99,116,105,118,101,40,41,0] /* void Avoid::ConnRef: */, "i8", ALLOC_NONE, 5257788);
allocate([65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,67,111,110,110,69,110,100,40,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,32,42,44,32,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* Avoid::ConnEnd::Conn */, "i8", ALLOC_NONE, 5257824);
allocate([65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,67,111,110,110,69,110,100,40,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,41,0] /* Avoid::ConnEnd::Conn */, "i8", ALLOC_NONE, 5257888);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,99,111,110,110,101,99,116,40,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,41,0] /* void Avoid::ConnEnd: */, "i8", ALLOC_NONE, 5257936);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,117,115,101,80,105,110,40,65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,32,42,41,0] /* void Avoid::ConnEnd: */, "i8", ALLOC_NONE, 5257984);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,97,115,115,105,103,110,80,105,110,86,105,115,105,98,105,108,105,116,121,84,111,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* void Avoid::ConnEnd: */, "i8", ALLOC_NONE, 5258044);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,69,110,100,58,58,117,115,101,80,105,110,86,101,114,116,101,120,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* void Avoid::ConnEnd: */, "i8", ALLOC_NONE, 5258124);
allocate([118,105,114,116,117,97,108,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,126,82,111,117,116,101,114,40,41,0] /* virtual Avoid::Route */, "i8", ALLOC_NONE, 5258176);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,109,111,118,101,83,104,97,112,101,40,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,108,121,103,111,110,32,38,44,32,99,111,110,115,116,32,98,111,111,108,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258212);
allocate([117,110,115,105,103,110,101,100,32,105,110,116,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,97,115,115,105,103,110,73,100,40,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* unsigned int Avoid:: */, "i8", ALLOC_NONE, 5258300);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,97,100,100,83,104,97,112,101,40,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,32,42,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258360);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,105,109,112,114,111,118,101,79,114,116,104,111,103,111,110,97,108,84,111,112,111,108,111,103,121,40,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258408);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,99,104,101,99,107,65,108,108,77,105,115,115,105,110,103,69,100,103,101,115,40,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258456);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,99,104,101,99,107,65,108,108,66,108,111,99,107,101,100,69,100,103,101,115,40,105,110,116,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258500);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,109,97,114,107,67,111,110,110,101,99,116,111,114,115,40,65,118,111,105,100,58,58,79,98,115,116,97,99,108,101,32,42,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258548);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,100,101,108,101,116,101,74,117,110,99,116,105,111,110,40,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258604);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,82,111,117,116,101,114,58,58,97,100,100,74,117,110,99,116,105,111,110,40,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,41,0] /* void Avoid::Router:: */, "i8", ALLOC_NONE, 5258664);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,84,105,109,101,114,58,58,82,101,103,105,115,116,101,114,40,99,111,110,115,116,32,65,118,111,105,100,58,58,84,105,109,101,114,73,110,100,101,120,44,32,99,111,110,115,116,32,98,111,111,108,41,0] /* void Avoid::Timer::R */, "i8", ALLOC_NONE, 5258720);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,84,105,109,101,114,58,58,83,116,97,114,116,40,41,0] /* void Avoid::Timer::S */, "i8", ALLOC_NONE, 5258788);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,84,105,109,101,114,58,58,83,116,111,112,40,41,0] /* void Avoid::Timer::S */, "i8", ALLOC_NONE, 5258816);
allocate([100,111,117,98,108,101,32,38,65,118,111,105,100,58,58,80,111,105,110,116,58,58,111,112,101,114,97,116,111,114,91,93,40,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,41,0] /* double &Avoid::Point */, "i8", ALLOC_NONE, 5258844);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,66,108,111,99,107,58,58,109,101,114,103,101,40,65,118,111,105,100,58,58,66,108,111,99,107,32,42,44,32,65,118,111,105,100,58,58,67,111,110,115,116,114,97,105,110,116,32,42,44,32,100,111,117,98,108,101,41,0] /* void Avoid::Block::m */, "i8", ALLOC_NONE, 5258900);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,66,108,111,99,107,58,58,117,112,100,97,116,101,87,101,105,103,104,116,101,100,80,111,115,105,116,105,111,110,40,41,0] /* void Avoid::Block::u */, "i8", ALLOC_NONE, 5258972);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,66,108,111,99,107,58,58,97,100,100,86,97,114,105,97,98,108,101,40,65,118,111,105,100,58,58,86,97,114,105,97,98,108,101,32,42,41,0] /* void Avoid::Block::a */, "i8", ALLOC_NONE, 5259016);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,103,101,110,101,114,97,116,101,83,116,97,116,105,99,79,114,116,104,111,103,111,110,97,108,86,105,115,71,114,97,112,104,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,41,0] /* void Avoid::generate */, "i8", ALLOC_NONE, 5259068);
allocate([76,97,121,101,114,101,100,79,114,116,104,111,103,111,110,97,108,69,100,103,101,76,105,115,116,32,65,118,111,105,100,58,58,77,105,110,105,109,117,109,84,101,114,109,105,110,97,108,83,112,97,110,110,105,110,103,84,114,101,101,58,58,103,101,116,79,114,116,104,111,103,111,110,97,108,69,100,103,101,115,70,114,111,109,86,101,114,116,101,120,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* LayeredOrthogonalEdg */, "i8", ALLOC_NONE, 5259132);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,77,105,110,105,109,117,109,84,101,114,109,105,110,97,108,83,112,97,110,110,105,110,103,84,114,101,101,58,58,98,117,105,108,100,72,121,112,101,114,69,100,103,101,84,114,101,101,84,111,82,111,111,116,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,98,111,111,108,41,0] /* void Avoid::MinimumT */, "i8", ALLOC_NONE, 5259260);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,77,105,110,105,109,117,109,84,101,114,109,105,110,97,108,83,112,97,110,110,105,110,103,84,114,101,101,58,58,99,111,110,115,116,114,117,99,116,73,110,116,101,114,108,101,97,118,101,100,40,41,0] /* void Avoid::MinimumT */, "i8", ALLOC_NONE, 5259396);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,77,105,110,105,109,117,109,84,101,114,109,105,110,97,108,83,112,97,110,110,105,110,103,84,114,101,101,58,58,99,111,109,109,105,116,84,111,66,114,105,100,103,105,110,103,69,100,103,101,40,65,118,111,105,100,58,58,69,100,103,101,73,110,102,32,42,44,32,117,110,115,105,103,110,101,100,32,105,110,116,32,38,41,0] /* void Avoid::MinimumT */, "i8", ALLOC_NONE, 5259460);
allocate([65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,42,65,118,111,105,100,58,58,77,105,110,105,109,117,109,84,101,114,109,105,110,97,108,83,112,97,110,110,105,110,103,84,114,101,101,58,58,114,101,115,101,116,68,105,115,116,115,70,111,114,80,97,116,104,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,42,41,0] /* Avoid::VertInf __Avo */, "i8", ALLOC_NONE, 5259556);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,77,105,110,105,109,117,109,84,101,114,109,105,110,97,108,83,112,97,110,110,105,110,103,84,114,101,101,58,58,100,114,97,119,70,111,114,101,115,116,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* void Avoid::MinimumT */, "i8", ALLOC_NONE, 5259664);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,83,104,105,102,116,83,101,103,109,101,110,116,58,58,97,100,106,117,115,116,80,111,115,105,116,105,111,110,40,41,0] /* void Avoid::HyperEdg */, "i8", ALLOC_NONE, 5259752);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,78,117,100,103,105,110,103,83,104,105,102,116,83,101,103,109,101,110,116,58,58,99,114,101,97,116,101,83,111,108,118,101,114,86,97,114,105,97,98,108,101,40,99,111,110,115,116,32,98,111,111,108,41,0] /* void Avoid::NudgingS */, "i8", ALLOC_NONE, 5259804);
allocate([65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,58,58,126,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,40,41,0] /* Avoid::ShapeConnecti */, "i8", ALLOC_NONE, 5259872);
allocate([65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,40,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,32,42,44,32,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,44,32,99,111,110,115,116,32,100,111,117,98,108,101,44,32,99,111,110,115,116,32,100,111,117,98,108,101,44,32,99,111,110,115,116,32,100,111,117,98,108,101,44,32,99,111,110,115,116,32,67,111,110,110,68,105,114,70,108,97,103,115,41,0] /* Avoid::ShapeConnecti */, "i8", ALLOC_NONE, 5259924);
allocate([65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,40,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,44,32,99,111,110,115,116,32,117,110,115,105,103,110,101,100,32,105,110,116,44,32,99,111,110,115,116,32,67,111,110,110,68,105,114,70,108,97,103,115,41,0] /* Avoid::ShapeConnecti */, "i8", ALLOC_NONE, 5260072);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,67,111,110,110,101,99,116,111,114,67,114,111,115,115,105,110,103,115,58,58,99,111,117,110,116,70,111,114,83,101,103,109,101,110,116,40,115,105,122,101,95,116,44,32,99,111,110,115,116,32,98,111,111,108,41,0] /* void Avoid::Connecto */, "i8", ALLOC_NONE, 5260180);
allocate([98,111,111,108,32,65,118,111,105,100,58,58,118,97,108,105,100,97,116,101,66,101,110,100,80,111,105,110,116,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* bool Avoid::validate */, "i8", ALLOC_NONE, 5260248);
allocate([67,111,110,110,82,101,102,83,101,116,32,65,118,111,105,100,58,58,72,121,112,101,114,101,100,103,101,82,101,114,111,117,116,101,114,58,58,99,97,108,99,72,121,112,101,114,101,100,103,101,67,111,110,110,101,99,116,111,114,115,40,41,0] /* ConnRefSet Avoid::Hy */, "i8", ALLOC_NONE, 5260332);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,101,100,103,101,82,101,114,111,117,116,101,114,58,58,102,105,110,100,65,116,116,97,99,104,101,100,79,98,106,101,99,116,115,40,115,105,122,101,95,116,44,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,44,32,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,44,32,67,111,110,110,82,101,102,83,101,116,32,38,41,0] /* void Avoid::Hyperedg */, "i8", ALLOC_NONE, 5260396);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,101,100,103,101,82,101,114,111,117,116,101,114,58,58,102,105,110,100,65,116,116,97,99,104,101,100,79,98,106,101,99,116,115,40,115,105,122,101,95,116,44,32,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,44,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,44,32,67,111,110,110,82,101,102,83,101,116,32,38,41,0] /* void Avoid::Hyperedg */, "i8", ALLOC_NONE, 5260512);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,101,100,103,101,82,101,114,111,117,116,101,114,58,58,112,101,114,102,111,114,109,82,101,114,111,117,116,105,110,103,40,41,0] /* void Avoid::Hyperedg */, "i8", ALLOC_NONE, 5260628);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,58,58,97,100,100,67,111,110,110,115,40,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,69,100,103,101,32,42,44,32,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,67,111,110,110,82,101,102,76,105,115,116,32,38,44,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,41,0] /* void Avoid::HyperEdg */, "i8", ALLOC_NONE, 5260680);
allocate([115,116,97,116,105,99,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,32,42,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,58,58,109,111,118,101,74,117,110,99,116,105,111,110,65,108,111,110,103,67,111,109,109,111,110,69,100,103,101,40,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,32,42,41,0] /* static Avoid::HyperE */, "i8", ALLOC_NONE, 5260800);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,69,100,103,101,58,58,97,100,100,67,111,110,110,115,40,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,32,42,44,32,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,67,111,110,110,82,101,102,76,105,115,116,32,38,41,0] /* void Avoid::HyperEdg */, "i8", ALLOC_NONE, 5260916);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,69,100,103,101,58,58,115,112,108,105,116,70,114,111,109,78,111,100,101,65,116,80,111,105,110,116,40,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,78,111,100,101,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,41,0] /* void Avoid::HyperEdg */, "i8", ALLOC_NONE, 5261016);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,72,121,112,101,114,69,100,103,101,84,114,101,101,69,100,103,101,58,58,100,105,115,99,111,110,110,101,99,116,69,100,103,101,40,41,0] /* void Avoid::HyperEdg */, "i8", ALLOC_NONE, 5261120);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,118,101,114,116,101,120,86,105,115,105,98,105,108,105,116,121,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,98,111,111,108,44,32,99,111,110,115,116,32,98,111,111,108,41,0] /* void Avoid::vertexVi */, "i8", ALLOC_NONE, 5261168);
allocate([100,111,117,98,108,101,32,65,118,111,105,100,58,58,114,111,116,97,116,105,111,110,97,108,65,110,103,108,101,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,41,0] /* double Avoid::rotati */, "i8", ALLOC_NONE, 5261252);
allocate([105,110,116,32,65,118,111,105,100,58,58,99,111,109,112,97,114,101,95,101,118,101,110,116,115,40,99,111,110,115,116,32,118,111,105,100,32,42,44,32,99,111,110,115,116,32,118,111,105,100,32,42,41,0] /* int Avoid::compare_e */, "i8", ALLOC_NONE, 5261304);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,76,105,115,116,58,58,97,100,100,86,101,114,116,101,120,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* void Avoid::VertInfL */, "i8", ALLOC_NONE, 5261360);
allocate([65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,65,118,111,105,100,58,58,86,101,114,116,73,110,102,76,105,115,116,58,58,114,101,109,111,118,101,86,101,114,116,101,120,40,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* Avoid::VertInf _Avoi */, "i8", ALLOC_NONE, 5261416);
allocate([65,118,111,105,100,58,58,76,105,110,101,83,101,103,109,101,110,116,58,58,76,105,110,101,83,101,103,109,101,110,116,40,99,111,110,115,116,32,100,111,117,98,108,101,32,38,44,32,99,111,110,115,116,32,100,111,117,98,108,101,32,38,44,32,99,111,110,115,116,32,100,111,117,98,108,101,32,38,44,32,98,111,111,108,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,44,32,65,118,111,105,100,58,58,86,101,114,116,73,110,102,32,42,41,0] /* Avoid::LineSegment:: */, "i8", ALLOC_NONE, 5261484);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,76,105,110,101,83,101,103,109,101,110,116,58,58,103,101,110,101,114,97,116,101,86,105,115,105,98,105,108,105,116,121,69,100,103,101,115,70,114,111,109,66,114,101,97,107,112,111,105,110,116,83,101,116,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,115,105,122,101,95,116,41,0] /* void Avoid::LineSegm */, "i8", ALLOC_NONE, 5261608);
allocate([118,111,105,100,32,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,58,58,109,111,118,101,65,116,116,97,99,104,101,100,67,111,110,110,115,40,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,41,0] /* void Avoid::Junction */, "i8", ALLOC_NONE, 5261700);
allocate([65,118,111,105,100,58,58,82,101,99,116,97,110,103,108,101,32,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,58,58,109,97,107,101,82,101,99,116,97,110,103,108,101,40,65,118,111,105,100,58,58,82,111,117,116,101,114,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,105,110,116,32,38,41,0] /* Avoid::Rectangle Avo */, "i8", ALLOC_NONE, 5261768);
allocate([65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,65,99,116,105,111,110,73,110,102,111,40,65,118,111,105,100,58,58,65,99,116,105,111,110,84,121,112,101,44,32,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,32,42,44,32,99,111,110,115,116,32,65,118,111,105,100,58,58,80,111,108,121,103,111,110,32,38,44,32,98,111,111,108,41,0] /* Avoid::ActionInfo::A */, "i8", ALLOC_NONE, 5261860);
allocate([65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,65,99,116,105,111,110,73,110,102,111,40,65,118,111,105,100,58,58,65,99,116,105,111,110,84,121,112,101,44,32,65,118,111,105,100,58,58,83,104,97,112,101,82,101,102,32,42,41,0] /* Avoid::ActionInfo::A */, "i8", ALLOC_NONE, 5261960);
allocate([65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,65,99,116,105,111,110,73,110,102,111,40,65,118,111,105,100,58,58,65,99,116,105,111,110,84,121,112,101,44,32,65,118,111,105,100,58,58,67,111,110,110,82,101,102,32,42,41,0] /* Avoid::ActionInfo::A */, "i8", ALLOC_NONE, 5262028);
allocate([65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,65,99,116,105,111,110,73,110,102,111,40,65,118,111,105,100,58,58,65,99,116,105,111,110,84,121,112,101,44,32,65,118,111,105,100,58,58,83,104,97,112,101,67,111,110,110,101,99,116,105,111,110,80,105,110,32,42,41,0] /* Avoid::ActionInfo::A */, "i8", ALLOC_NONE, 5262096);
allocate([65,118,111,105,100,58,58,65,99,116,105,111,110,73,110,102,111,58,58,65,99,116,105,111,110,73,110,102,111,40,65,118,111,105,100,58,58,65,99,116,105,111,110,84,121,112,101,44,32,65,118,111,105,100,58,58,74,117,110,99,116,105,111,110,82,101,102,32,42,41,0] /* Avoid::ActionInfo::A */, "i8", ALLOC_NONE, 5262176);
allocate(288, "i8", ALLOC_NONE, 5262248);
allocate(168, "i8", ALLOC_NONE, 5262536);
allocate(288, "i8", ALLOC_NONE, 5262704);
allocate(288, "i8", ALLOC_NONE, 5262992);
allocate(168, "i8", ALLOC_NONE, 5263280);
allocate(288, "i8", ALLOC_NONE, 5263448);
allocate(4, "i8", ALLOC_NONE, 5263736);
allocate(4, "i8", ALLOC_NONE, 5263740);
allocate(4, "i8", ALLOC_NONE, 5263744);
allocate(4, "i8", ALLOC_NONE, 5263748);
allocate(4, "i8", ALLOC_NONE, 5263752);
allocate(4, "i8", ALLOC_NONE, 5263756);
allocate(8, "i8", ALLOC_NONE, 5263760);
allocate(8, "i8", ALLOC_NONE, 5263768);
allocate(8, "i8", ALLOC_NONE, 5263776);
allocate(8, "i8", ALLOC_NONE, 5263784);
allocate(12, "i8", ALLOC_NONE, 5263792);
allocate(12, "i8", ALLOC_NONE, 5263804);
allocate(12, "i8", ALLOC_NONE, 5263816);
allocate(12, "i8", ALLOC_NONE, 5263828);
allocate(28, "i8", ALLOC_NONE, 5263840);
allocate(24, "i8", ALLOC_NONE, 5263868);
allocate(8, "i8", ALLOC_NONE, 5263892);
allocate(8, "i8", ALLOC_NONE, 5263900);
allocate(8, "i8", ALLOC_NONE, 5263908);
allocate(8, "i8", ALLOC_NONE, 5263916);
allocate(8, "i8", ALLOC_NONE, 5263924);
allocate(8, "i8", ALLOC_NONE, 5263932);
allocate(8, "i8", ALLOC_NONE, 5263940);
allocate(8, "i8", ALLOC_NONE, 5263948);
allocate(12, "i8", ALLOC_NONE, 5263956);
allocate(8, "i8", ALLOC_NONE, 5263968);
allocate(8, "i8", ALLOC_NONE, 5263976);
allocate(8, "i8", ALLOC_NONE, 5263984);
allocate(148, "i8", ALLOC_NONE, 5263992);
allocate(8, "i8", ALLOC_NONE, 5264140);
allocate(16, "i8", ALLOC_NONE, 5264148);
allocate(8, "i8", ALLOC_NONE, 5264164);
allocate(8, "i8", ALLOC_NONE, 5264172);
allocate(8, "i8", ALLOC_NONE, 5264180);
allocate(8, "i8", ALLOC_NONE, 5264188);
allocate([48,49,50,51,52,53,54,55,56,57,0] /* 0123456789\00 */, "i8", ALLOC_NONE, 5264196);
allocate([48,49,50,51,52,53,54,55,56,57,0] /* 0123456789\00 */, "i8", ALLOC_NONE, 5264208);
allocate([37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0], "i8", ALLOC_NONE, 5264220);
allocate([37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0], "i8", ALLOC_NONE, 5264252);
allocate([37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0], "i8", ALLOC_NONE, 5264272);
allocate([37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0], "i8", ALLOC_NONE, 5264316);
allocate([37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0], "i8", ALLOC_NONE, 5264348);
allocate([37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0], "i8", ALLOC_NONE, 5264380);
allocate([37,72,58,37,77,58,37,83] /* %H:%M:%S */, "i8", ALLOC_NONE, 5264412);
allocate([37,72,58,37,77] /* %H:%M */, "i8", ALLOC_NONE, 5264420);
allocate([37,73,58,37,77,58,37,83,32,37,112] /* %I:%M:%S %p */, "i8", ALLOC_NONE, 5264428);
allocate([37,89,45,37,109,45,37,100] /* %Y-%m-%d */, "i8", ALLOC_NONE, 5264440);
allocate([37,109,47,37,100,47,37,121] /* %m/%d/%y */, "i8", ALLOC_NONE, 5264448);
allocate([37,72,58,37,77,58,37,83] /* %H:%M:%S */, "i8", ALLOC_NONE, 5264456);
allocate([37,0,0,0,0,0] /* %\00\00\00\00\00 */, "i8", ALLOC_NONE, 5264464);
allocate([37,112,0,0,0,0] /* %p\00\00\00\00 */, "i8", ALLOC_NONE, 5264472);
allocate(4, "i8", ALLOC_NONE, 5264480);
allocate(4, "i8", ALLOC_NONE, 5264484);
allocate(4, "i8", ALLOC_NONE, 5264488);
allocate(12, "i8", ALLOC_NONE, 5264492);
allocate(12, "i8", ALLOC_NONE, 5264504);
allocate(12, "i8", ALLOC_NONE, 5264516);
allocate(12, "i8", ALLOC_NONE, 5264528);
allocate(4, "i8", ALLOC_NONE, 5264540);
allocate(4, "i8", ALLOC_NONE, 5264544);
allocate(4, "i8", ALLOC_NONE, 5264548);
allocate(12, "i8", ALLOC_NONE, 5264552);
allocate(12, "i8", ALLOC_NONE, 5264564);
allocate(12, "i8", ALLOC_NONE, 5264576);
allocate(12, "i8", ALLOC_NONE, 5264588);
allocate([0,0,0,0,156,110,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264600);
allocate(1, "i8", ALLOC_NONE, 5264620);
allocate([0,0,0,0,168,110,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264624);
allocate(1, "i8", ALLOC_NONE, 5264644);
allocate([0,0,0,0,180,110,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264648);
allocate(1, "i8", ALLOC_NONE, 5264668);
allocate([0,0,0,0,192,110,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264672);
allocate(1, "i8", ALLOC_NONE, 5264692);
allocate([0,0,0,0,204,110,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264696);
allocate(1, "i8", ALLOC_NONE, 5264716);
allocate([0,0,0,0,248,110,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264720);
allocate(1, "i8", ALLOC_NONE, 5264748);
allocate([0,0,0,0,24,111,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264752);
allocate(1, "i8", ALLOC_NONE, 5264780);
allocate([0,0,0,0,56,111,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264784);
allocate(1, "i8", ALLOC_NONE, 5264812);
allocate([0,0,0,0,88,111,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264816);
allocate(1, "i8", ALLOC_NONE, 5264844);
allocate([0,0,0,0,240,111,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264848);
allocate(1, "i8", ALLOC_NONE, 5264872);
allocate([0,0,0,0,16,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264876);
allocate(1, "i8", ALLOC_NONE, 5264900);
allocate([0,0,0,0,48,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,48,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264904);
allocate(1, "i8", ALLOC_NONE, 5264988);
allocate([0,0,0,0,88,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,88,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5264992);
allocate(1, "i8", ALLOC_NONE, 5265076);
allocate([0,0,0,0,128,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265080);
allocate(1, "i8", ALLOC_NONE, 5265120);
allocate([0,0,0,0,140,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265124);
allocate(1, "i8", ALLOC_NONE, 5265164);
allocate([0,0,0,0,152,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265168);
allocate(1, "i8", ALLOC_NONE, 5265200);
allocate([0,0,0,0,184,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265204);
allocate(1, "i8", ALLOC_NONE, 5265236);
allocate([0,0,0,0,216,112,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265240);
allocate(1, "i8", ALLOC_NONE, 5265256);
allocate([0,0,0,0,224,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265260);
allocate(1, "i8", ALLOC_NONE, 5265280);
allocate([0,0,0,0,236,112,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265284);
allocate(1, "i8", ALLOC_NONE, 5265336);
allocate([0,0,0,0,12,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265340);
allocate(1, "i8", ALLOC_NONE, 5265392);
allocate([0,0,0,0,44,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265396);
allocate(1, "i8", ALLOC_NONE, 5265460);
allocate([0,0,0,0,76,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265464);
allocate(1, "i8", ALLOC_NONE, 5265528);
allocate([0,0,0,0,108,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265532);
allocate(1, "i8", ALLOC_NONE, 5265564);
allocate([0,0,0,0,120,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265568);
allocate(1, "i8", ALLOC_NONE, 5265600);
allocate([0,0,0,0,132,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265604);
allocate(1, "i8", ALLOC_NONE, 5265652);
allocate([0,0,0,0,164,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265656);
allocate(1, "i8", ALLOC_NONE, 5265704);
allocate([0,0,0,0,196,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265708);
allocate(1, "i8", ALLOC_NONE, 5265756);
allocate([0,0,0,0,228,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265760);
allocate(1, "i8", ALLOC_NONE, 5265808);
allocate([0,0,0,0,4,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265812);
allocate(1, "i8", ALLOC_NONE, 5265832);
allocate([0,0,0,0,16,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265836);
allocate(1, "i8", ALLOC_NONE, 5265856);
allocate([0,0,0,0,28,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265860);
allocate(1, "i8", ALLOC_NONE, 5265928);
allocate([0,0,0,0,60,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265932);
allocate(1, "i8", ALLOC_NONE, 5265984);
allocate([0,0,0,0,92,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5265988);
allocate(1, "i8", ALLOC_NONE, 5266024);
allocate([0,0,0,0,100,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266028);
allocate(1, "i8", ALLOC_NONE, 5266064);
allocate([56,0,0,0,0,0,0,0,108,114,80,0,0,0,0,0,0,0,0,0,200,255,255,255,200,255,255,255,108,114,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266068);
allocate(1, "i8", ALLOC_NONE, 5266108);
allocate([0,0,0,0,120,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266112);
allocate(1, "i8", ALLOC_NONE, 5266148);
allocate([0,0,0,0,132,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266152);
allocate(1, "i8", ALLOC_NONE, 5266200);
allocate([0,0,0,0,144,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266204);
allocate(1, "i8", ALLOC_NONE, 5266252);
allocate([0,0,0,0,156,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266256);
allocate(1, "i8", ALLOC_NONE, 5266320);
allocate([0,0,0,0,168,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266324);
allocate(1, "i8", ALLOC_NONE, 5266388);
allocate([0,0,0,0,176,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266392);
allocate(1, "i8", ALLOC_NONE, 5266456);
allocate([0,0,0,0,184,114,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266460);
allocate(1, "i8", ALLOC_NONE, 5266496);
allocate([4,0,0,0,0,0,0,0,224,114,80,0,0,0,0,0,0,0,0,0,252,255,255,255,252,255,255,255,224,114,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266500);
allocate(1, "i8", ALLOC_NONE, 5266540);
allocate([4,0,0,0,0,0,0,0,248,114,80,0,0,0,0,0,0,0,0,0,252,255,255,255,252,255,255,255,248,114,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266544);
allocate(1, "i8", ALLOC_NONE, 5266584);
allocate([8,0,0,0,0,0,0,0,16,115,80,0,0,0,0,0,0,0,0,0,248,255,255,255,248,255,255,255,16,115,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266588);
allocate(1, "i8", ALLOC_NONE, 5266628);
allocate([8,0,0,0,0,0,0,0,40,115,80,0,0,0,0,0,0,0,0,0,248,255,255,255,248,255,255,255,40,115,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266632);
allocate(1, "i8", ALLOC_NONE, 5266672);
allocate([0,0,0,0,64,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266676);
allocate(1, "i8", ALLOC_NONE, 5266696);
allocate([0,0,0,0,84,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266700);
allocate(1, "i8", ALLOC_NONE, 5266736);
allocate([0,0,0,0,96,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266740);
allocate(1, "i8", ALLOC_NONE, 5266804);
allocate([0,0,0,0,108,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266808);
allocate(1, "i8", ALLOC_NONE, 5266872);
allocate([0,0,0,0,152,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266876);
allocate(1, "i8", ALLOC_NONE, 5266932);
allocate([0,0,0,0,184,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266936);
allocate(1, "i8", ALLOC_NONE, 5266992);
allocate([0,0,0,0,216,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5266996);
allocate(1, "i8", ALLOC_NONE, 5267052);
allocate([0,0,0,0,248,115,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267056);
allocate(1, "i8", ALLOC_NONE, 5267112);
allocate([0,0,0,0,48,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267116);
allocate(1, "i8", ALLOC_NONE, 5267180);
allocate([0,0,0,0,60,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267184);
allocate(1, "i8", ALLOC_NONE, 5267248);
allocate([0,0,0,0,72,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267252);
allocate(1, "i8", ALLOC_NONE, 5267288);
allocate([0,0,0,0,84,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267292);
allocate(1, "i8", ALLOC_NONE, 5267316);
allocate([0,0,0,0,96,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267320);
allocate(1, "i8", ALLOC_NONE, 5267344);
allocate([0,0,0,0,104,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267348);
allocate(1, "i8", ALLOC_NONE, 5267384);
allocate([0,0,0,0,116,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267388);
allocate(1, "i8", ALLOC_NONE, 5267408);
allocate([0,0,0,0,124,116,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267412);
allocate(1, "i8", ALLOC_NONE, 5267428);
allocate([0,0,0,0,140,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267432);
allocate(1, "i8", ALLOC_NONE, 5267464);
allocate([0,0,0,0,148,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267468);
allocate(1, "i8", ALLOC_NONE, 5267508);
allocate([0,0,0,0,160,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267512);
allocate(1, "i8", ALLOC_NONE, 5267552);
allocate([0,0,0,0,172,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267556);
allocate(1, "i8", ALLOC_NONE, 5267592);
allocate([0,0,0,0,180,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267596);
allocate(1, "i8", ALLOC_NONE, 5267636);
allocate([0,0,0,0,188,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267640);
allocate(1, "i8", ALLOC_NONE, 5267664);
allocate([0,0,0,0,200,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267668);
allocate(1, "i8", ALLOC_NONE, 5267696);
allocate([0,0,0,0,212,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5267700);
allocate(1, "i8", ALLOC_NONE, 5267740);
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,224,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
allocate(1, "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv119__pointer_type_infoE=allocate([0,0,0,0,236,116,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
allocate(1, "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,4,117,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
allocate(1, "i8", ALLOC_STATIC);
allocate([118,0] /* v\00 */, "i8", ALLOC_NONE, 5267744);
allocate([108,0] /* l\00 */, "i8", ALLOC_NONE, 5267748);
allocate([99,0] /* c\00 */, "i8", ALLOC_NONE, 5267752);
allocate([83,116,57,116,121,112,101,95,105,110,102,111,0] /* St9type_info\00 */, "i8", ALLOC_NONE, 5267756);
allocate([83,116,57,101,120,99,101,112,116,105,111,110,0] /* St9exception\00 */, "i8", ALLOC_NONE, 5267772);
allocate([83,116,57,98,97,100,95,97,108,108,111,99,0] /* St9bad_alloc\00 */, "i8", ALLOC_NONE, 5267788);
allocate([83,116,56,98,97,100,95,99,97,115,116,0] /* St8bad_cast\00 */, "i8", ALLOC_NONE, 5267804);
allocate([83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0] /* St13runtime_error\00 */, "i8", ALLOC_NONE, 5267816);
allocate([83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0] /* St12length_error\00 */, "i8", ALLOC_NONE, 5267836);
allocate([83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0] /* St11logic_error\00 */, "i8", ALLOC_NONE, 5267856);
allocate([80,75,99,0] /* PKc\00 */, "i8", ALLOC_NONE, 5267872);
allocate([78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0] /* NSt3__19time_baseE\0 */, "i8", ALLOC_NONE, 5267876);
allocate([78,83,116,51,95,95,49,57,110,117,108,108,112,116,114,95,116,69,0] /* NSt3__19nullptr_tE\0 */, "i8", ALLOC_NONE, 5267896);
allocate([78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0] /* NSt3__19money_putIwN */, "i8", ALLOC_NONE, 5267916);
allocate([78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0] /* NSt3__19money_putIcN */, "i8", ALLOC_NONE, 5267988);
allocate([78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0] /* NSt3__19money_getIwN */, "i8", ALLOC_NONE, 5268060);
allocate([78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0] /* NSt3__19money_getIcN */, "i8", ALLOC_NONE, 5268132);
allocate([78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0] /* NSt3__19basic_iosIwN */, "i8", ALLOC_NONE, 5268204);
allocate([78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0] /* NSt3__19basic_iosIcN */, "i8", ALLOC_NONE, 5268248);
allocate([78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0] /* NSt3__19__num_putIwE */, "i8", ALLOC_NONE, 5268292);
allocate([78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0] /* NSt3__19__num_putIcE */, "i8", ALLOC_NONE, 5268316);
allocate([78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0] /* NSt3__19__num_getIwE */, "i8", ALLOC_NONE, 5268340);
allocate([78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0] /* NSt3__19__num_getIcE */, "i8", ALLOC_NONE, 5268364);
allocate([78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0] /* NSt3__18time_putIwNS */, "i8", ALLOC_NONE, 5268388);
allocate([78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0] /* NSt3__18time_putIcNS */, "i8", ALLOC_NONE, 5268460);
allocate([78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0] /* NSt3__18time_getIwNS */, "i8", ALLOC_NONE, 5268532);
allocate([78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0] /* NSt3__18time_getIcNS */, "i8", ALLOC_NONE, 5268604);
allocate([78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0] /* NSt3__18numpunctIwEE */, "i8", ALLOC_NONE, 5268676);
allocate([78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0] /* NSt3__18numpunctIcEE */, "i8", ALLOC_NONE, 5268700);
allocate([78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0] /* NSt3__18messagesIwEE */, "i8", ALLOC_NONE, 5268724);
allocate([78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0] /* NSt3__18messagesIcEE */, "i8", ALLOC_NONE, 5268748);
allocate([78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0] /* NSt3__18ios_baseE\00 */, "i8", ALLOC_NONE, 5268772);
allocate([78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0] /* NSt3__18ios_base7fai */, "i8", ALLOC_NONE, 5268792);
allocate([78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0] /* NSt3__17num_putIwNS_ */, "i8", ALLOC_NONE, 5268820);
allocate([78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0] /* NSt3__17num_putIcNS_ */, "i8", ALLOC_NONE, 5268888);
allocate([78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0] /* NSt3__17num_getIwNS_ */, "i8", ALLOC_NONE, 5268956);
allocate([78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0] /* NSt3__17num_getIcNS_ */, "i8", ALLOC_NONE, 5269024);
allocate([78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0] /* NSt3__17collateIwEE\ */, "i8", ALLOC_NONE, 5269092);
allocate([78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0] /* NSt3__17collateIcEE\ */, "i8", ALLOC_NONE, 5269112);
allocate([78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0] /* NSt3__17codecvtIwc10 */, "i8", ALLOC_NONE, 5269132);
allocate([78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0] /* NSt3__17codecvtIcc10 */, "i8", ALLOC_NONE, 5269168);
allocate([78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0] /* NSt3__17codecvtIDsc1 */, "i8", ALLOC_NONE, 5269204);
allocate([78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0] /* NSt3__17codecvtIDic1 */, "i8", ALLOC_NONE, 5269240);
allocate([78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0] /* NSt3__16locale5facet */, "i8", ALLOC_NONE, 5269276);
allocate([78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0] /* NSt3__16locale5__imp */, "i8", ALLOC_NONE, 5269300);
allocate([78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0] /* NSt3__15ctypeIwEE\00 */, "i8", ALLOC_NONE, 5269324);
allocate([78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0] /* NSt3__15ctypeIcEE\00 */, "i8", ALLOC_NONE, 5269344);
allocate([78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0] /* NSt3__120__time_get_ */, "i8", ALLOC_NONE, 5269364);
allocate([78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0] /* NSt3__120__time_get_ */, "i8", ALLOC_NONE, 5269400);
allocate([78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0] /* NSt3__119basic_ostri */, "i8", ALLOC_NONE, 5269436);
allocate([78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0] /* NSt3__119__iostream_ */, "i8", ALLOC_NONE, 5269508);
allocate([78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0] /* NSt3__117__widen_fro */, "i8", ALLOC_NONE, 5269540);
allocate([78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0] /* NSt3__116__narrow_to */, "i8", ALLOC_NONE, 5269576);
allocate([78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0] /* NSt3__115basic_strin */, "i8", ALLOC_NONE, 5269612);
allocate([78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0] /* NSt3__115basic_strea */, "i8", ALLOC_NONE, 5269680);
allocate([78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0] /* NSt3__115basic_strea */, "i8", ALLOC_NONE, 5269732);
allocate([78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0] /* NSt3__114error_categ */, "i8", ALLOC_NONE, 5269784);
allocate([78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0] /* NSt3__114__shared_co */, "i8", ALLOC_NONE, 5269812);
allocate([78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0] /* NSt3__114__num_put_b */, "i8", ALLOC_NONE, 5269840);
allocate([78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0] /* NSt3__114__num_get_b */, "i8", ALLOC_NONE, 5269868);
allocate([78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0] /* NSt3__113messages_ba */, "i8", ALLOC_NONE, 5269896);
allocate([78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0] /* NSt3__113basic_ostre */, "i8", ALLOC_NONE, 5269920);
allocate([78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0] /* NSt3__113basic_ostre */, "i8", ALLOC_NONE, 5269968);
allocate([78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0] /* NSt3__113basic_istre */, "i8", ALLOC_NONE, 5270016);
allocate([78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0] /* NSt3__113basic_istre */, "i8", ALLOC_NONE, 5270064);
allocate([78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0] /* NSt3__112system_erro */, "i8", ALLOC_NONE, 5270112);
allocate([78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0] /* NSt3__112codecvt_bas */, "i8", ALLOC_NONE, 5270136);
allocate([78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0] /* NSt3__112__do_messag */, "i8", ALLOC_NONE, 5270160);
allocate([78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0] /* NSt3__111__stdoutbuf */, "i8", ALLOC_NONE, 5270184);
allocate([78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0] /* NSt3__111__stdoutbuf */, "i8", ALLOC_NONE, 5270212);
allocate([78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0] /* NSt3__111__money_put */, "i8", ALLOC_NONE, 5270240);
allocate([78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0] /* NSt3__111__money_put */, "i8", ALLOC_NONE, 5270268);
allocate([78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0] /* NSt3__111__money_get */, "i8", ALLOC_NONE, 5270296);
allocate([78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0] /* NSt3__111__money_get */, "i8", ALLOC_NONE, 5270324);
allocate([78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0] /* NSt3__110moneypunctI */, "i8", ALLOC_NONE, 5270352);
allocate([78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0] /* NSt3__110moneypunctI */, "i8", ALLOC_NONE, 5270380);
allocate([78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0] /* NSt3__110moneypunctI */, "i8", ALLOC_NONE, 5270408);
allocate([78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0] /* NSt3__110moneypunctI */, "i8", ALLOC_NONE, 5270436);
allocate([78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0] /* NSt3__110money_baseE */, "i8", ALLOC_NONE, 5270464);
allocate([78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0] /* NSt3__110ctype_baseE */, "i8", ALLOC_NONE, 5270488);
allocate([78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0] /* NSt3__110__time_putE */, "i8", ALLOC_NONE, 5270512);
allocate([78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0] /* NSt3__110__stdinbufI */, "i8", ALLOC_NONE, 5270536);
allocate([78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0] /* NSt3__110__stdinbufI */, "i8", ALLOC_NONE, 5270560);
allocate([78,53,65,118,111,105,100,57,82,101,99,116,97,110,103,108,101,69,0] /* N5Avoid9RectangleE\0 */, "i8", ALLOC_NONE, 5270584);
allocate([78,53,65,118,111,105,100,56,83,104,97,112,101,82,101,102,69,0] /* N5Avoid8ShapeRefE\00 */, "i8", ALLOC_NONE, 5270604);
allocate([78,53,65,118,111,105,100,56,79,98,115,116,97,99,108,101,69,0] /* N5Avoid8ObstacleE\00 */, "i8", ALLOC_NONE, 5270624);
allocate([78,53,65,118,111,105,100,55,80,111,108,121,103,111,110,69,0] /* N5Avoid7PolygonE\00 */, "i8", ALLOC_NONE, 5270644);
allocate([78,53,65,118,111,105,100,54,82,111,117,116,101,114,69,0] /* N5Avoid6RouterE\00 */, "i8", ALLOC_NONE, 5270664);
allocate([78,53,65,118,111,105,100,52,78,111,100,101,69,0] /* N5Avoid4NodeE\00 */, "i8", ALLOC_NONE, 5270680);
allocate([78,53,65,118,111,105,100,50,50,85,110,115,97,116,105,115,102,105,97,98,108,101,69,120,99,101,112,116,105,111,110,69,0] /* N5Avoid22Unsatisfiab */, "i8", ALLOC_NONE, 5270696);
allocate([78,53,65,118,111,105,100,50,50,84,111,112,111,108,111,103,121,65,100,100,111,110,73,110,116,101,114,102,97,99,101,69,0] /* N5Avoid22TopologyAdd */, "i8", ALLOC_NONE, 5270732);
allocate([78,53,65,118,111,105,100,50,49,72,121,112,101,114,69,100,103,101,83,104,105,102,116,83,101,103,109,101,110,116,69,0] /* N5Avoid21HyperEdgeSh */, "i8", ALLOC_NONE, 5270768);
allocate([78,53,65,118,111,105,100,49,57,78,117,100,103,105,110,103,83,104,105,102,116,83,101,103,109,101,110,116,69,0] /* N5Avoid19NudgingShif */, "i8", ALLOC_NONE, 5270800);
allocate([78,53,65,118,111,105,100,49,54,80,111,108,121,103,111,110,73,110,116,101,114,102,97,99,101,69,0] /* N5Avoid16PolygonInte */, "i8", ALLOC_NONE, 5270832);
allocate([78,53,65,118,111,105,100,49,50,83,104,105,102,116,83,101,103,109,101,110,116,69,0] /* N5Avoid12ShiftSegmen */, "i8", ALLOC_NONE, 5270860);
allocate([78,53,65,118,111,105,100,49,49,74,117,110,99,116,105,111,110,82,101,102,69,0] /* N5Avoid11JunctionRef */, "i8", ALLOC_NONE, 5270884);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv123__fun */, "i8", ALLOC_NONE, 5270908);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv121__vmi */, "i8", ALLOC_NONE, 5270948);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv120__si_ */, "i8", ALLOC_NONE, 5270988);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv119__poi */, "i8", ALLOC_NONE, 5271028);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv117__pba */, "i8", ALLOC_NONE, 5271064);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv117__cla */, "i8", ALLOC_NONE, 5271100);
allocate([78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0] /* N10__cxxabiv116__shi */, "i8", ALLOC_NONE, 5271136);
allocate(8, "i8", ALLOC_NONE, 5271172);
__ZTIc=allocate(8, "i8", ALLOC_STATIC);
allocate(8, "i8", ALLOC_NONE, 5271180);
allocate(8, "i8", ALLOC_NONE, 5271188);
allocate([0,0,0,0,0,0,0,0,148,110,80,0], "i8", ALLOC_NONE, 5271196);
allocate([0,0,0,0,0,0,0,0,148,110,80,0], "i8", ALLOC_NONE, 5271208);
allocate([0,0,0,0,0,0,0,0,148,110,80,0], "i8", ALLOC_NONE, 5271220);
allocate([0,0,0,0,0,0,0,0,204,110,80,0], "i8", ALLOC_NONE, 5271232);
allocate([0,0,0,0,0,0,0,0,148,110,80,0], "i8", ALLOC_NONE, 5271244);
allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5271256);
allocate(8, "i8", ALLOC_NONE, 5271272);
allocate(8, "i8", ALLOC_NONE, 5271280);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,120,115,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271288);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,128,115,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271320);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,136,115,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271352);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,144,115,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271384);
allocate([0,0,0,0,0,0,0,0,216,112,80,0], "i8", ALLOC_NONE, 5271416);
allocate([0,0,0,0,0,0,0,0,216,112,80,0], "i8", ALLOC_NONE, 5271428);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,200,114,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271440);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,200,114,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271464);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,208,114,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271488);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,208,114,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271512);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,40,116,80,0,0,8,0,0], "i8", ALLOC_NONE, 5271536);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,40,116,80,0,0,8,0,0], "i8", ALLOC_NONE, 5271568);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,114,80,0,2,0,0,0,232,110,80,0,2,0,0,0,92,114,80,0,0,8,0,0], "i8", ALLOC_NONE, 5271600);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,114,80,0,2,0,0,0,232,110,80,0,2,0,0,0,100,114,80,0,0,8,0,0], "i8", ALLOC_NONE, 5271640);
allocate([0,0,0,0,0,0,0,0,4,114,80,0], "i8", ALLOC_NONE, 5271680);
allocate([0,0,0,0,0,0,0,0,4,114,80,0], "i8", ALLOC_NONE, 5271692);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,216,114,80,0,2,0,0,0], "i8", ALLOC_NONE, 5271704);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,216,114,80,0,2,0,0,0], "i8", ALLOC_NONE, 5271736);
allocate(8, "i8", ALLOC_NONE, 5271768);
allocate([0,0,0,0,0,0,0,0,64,115,80,0], "i8", ALLOC_NONE, 5271776);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,144,111,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271788);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,168,111,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271820);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,192,111,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271852);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,216,111,80,0,0,0,0,0], "i8", ALLOC_NONE, 5271884);
allocate([0,0,0,0,0,0,0,0,4,114,80,0], "i8", ALLOC_NONE, 5271916);
allocate([0,0,0,0,0,0,0,0,4,114,80,0], "i8", ALLOC_NONE, 5271928);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,76,115,80,0,2,0,0,0], "i8", ALLOC_NONE, 5271940);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,76,115,80,0,2,0,0,0], "i8", ALLOC_NONE, 5271972);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,76,115,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272004);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,76,115,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272036);
allocate([0,0,0,0,0,0,0,0,192,114,80,0], "i8", ALLOC_NONE, 5272068);
allocate([0,0,0,0,0,0,0,0,4,114,80,0], "i8", ALLOC_NONE, 5272080);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,32,116,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272092);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,32,116,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272124);
allocate(8, "i8", ALLOC_NONE, 5272156);
allocate(8, "i8", ALLOC_NONE, 5272164);
allocate([0,0,0,0,0,0,0,0,248,114,80,0], "i8", ALLOC_NONE, 5272172);
allocate([0,0,0,0,0,0,0,0,84,115,80,0], "i8", ALLOC_NONE, 5272184);
allocate([0,0,0,0,0,0,0,0,228,113,80,0], "i8", ALLOC_NONE, 5272196);
allocate([0,0,0,0,0,0,0,0,228,113,80,0], "i8", ALLOC_NONE, 5272208);
allocate([0,0,0,0,0,0,0,0,176,114,80,0], "i8", ALLOC_NONE, 5272220);
allocate(8, "i8", ALLOC_NONE, 5272232);
allocate(8, "i8", ALLOC_NONE, 5272240);
allocate(8, "i8", ALLOC_NONE, 5272248);
allocate(8, "i8", ALLOC_NONE, 5272256);
allocate(8, "i8", ALLOC_NONE, 5272264);
allocate(8, "i8", ALLOC_NONE, 5272272);
allocate(8, "i8", ALLOC_NONE, 5272280);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,120,111,80,0,3,244,255,255], "i8", ALLOC_NONE, 5272288);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,132,111,80,0,3,244,255,255], "i8", ALLOC_NONE, 5272312);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,120,111,80,0,3,244,255,255], "i8", ALLOC_NONE, 5272336);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,132,111,80,0,3,244,255,255], "i8", ALLOC_NONE, 5272360);
allocate([0,0,0,0,0,0,0,0,180,110,80,0], "i8", ALLOC_NONE, 5272384);
allocate(8, "i8", ALLOC_NONE, 5272396);
allocate([0,0,0,0,0,0,0,0,184,114,80,0], "i8", ALLOC_NONE, 5272404);
allocate([0,0,0,0,0,0,0,0,168,114,80,0], "i8", ALLOC_NONE, 5272416);
allocate([0,0,0,0,0,0,0,0,176,114,80,0], "i8", ALLOC_NONE, 5272428);
allocate(8, "i8", ALLOC_NONE, 5272440);
allocate(8, "i8", ALLOC_NONE, 5272448);
allocate(8, "i8", ALLOC_NONE, 5272456);
allocate(8, "i8", ALLOC_NONE, 5272464);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,24,116,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272472);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,24,116,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272504);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,24,116,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272536);
allocate([0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,114,80,0,2,0,0,0,24,116,80,0,2,0,0,0], "i8", ALLOC_NONE, 5272568);
allocate(8, "i8", ALLOC_NONE, 5272600);
allocate(8, "i8", ALLOC_NONE, 5272608);
allocate(8, "i8", ALLOC_NONE, 5272616);
allocate([0,0,0,0,0,0,0,0,168,114,80,0], "i8", ALLOC_NONE, 5272624);
allocate([0,0,0,0,0,0,0,0,176,114,80,0], "i8", ALLOC_NONE, 5272636);
allocate([0,0,0,0,0,0,0,0,104,116,80,0], "i8", ALLOC_NONE, 5272648);
allocate([0,0,0,0,0,0,0,0,96,116,80,0], "i8", ALLOC_NONE, 5272660);
allocate(8, "i8", ALLOC_NONE, 5272672);
allocate([0,0,0,0,0,0,0,0,172,116,80,0], "i8", ALLOC_NONE, 5272680);
allocate(8, "i8", ALLOC_NONE, 5272692);
allocate(8, "i8", ALLOC_NONE, 5272700);
allocate(8, "i8", ALLOC_NONE, 5272708);
allocate(8, "i8", ALLOC_NONE, 5272716);
allocate([0,0,0,0,0,0,0,0,180,116,80,0], "i8", ALLOC_NONE, 5272724);
allocate([0,0,0,0,0,0,0,0,180,116,80,0], "i8", ALLOC_NONE, 5272736);
allocate(8, "i8", ALLOC_NONE, 5272748);
allocate(8, "i8", ALLOC_NONE, 5272756);
allocate([0,0,0,0,0,0,0,0,96,116,80,0], "i8", ALLOC_NONE, 5272764);
allocate([0,0,0,0,0,0,0,0,16,117,80,0], "i8", ALLOC_NONE, 5272776);
allocate([0,0,0,0,0,0,0,0,4,117,80,0], "i8", ALLOC_NONE, 5272788);
allocate([0,0,0,0,0,0,0,0,4,117,80,0], "i8", ALLOC_NONE, 5272800);
allocate([0,0,0,0,0,0,0,0,248,116,80,0], "i8", ALLOC_NONE, 5272812);
allocate([0,0,0,0,0,0,0,0,16,117,80,0], "i8", ALLOC_NONE, 5272824);
allocate([0,0,0,0,0,0,0,0,16,117,80,0], "i8", ALLOC_NONE, 5272836);
allocate([0,0,0,0,0,0,0,0,140,110,80,0], "i8", ALLOC_NONE, 5272848);
allocate([56,0,0,0,0,0,0,0,248,114,80,0,0,0,0,0,0,0,0,0,200,255,255,255,200,255,255,255,248,114,80,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, 5272860);
allocate(52, "i8", ALLOC_NONE, 5272900);
allocate(52, "i8", ALLOC_NONE, 5272952);
allocate(56, "i8", ALLOC_NONE, 5273004);
allocate(52, "i8", ALLOC_NONE, 5273060);
allocate(52, "i8", ALLOC_NONE, 5273112);
allocate(56, "i8", ALLOC_NONE, 5273164);
allocate([255,255,255,255], "i8", ALLOC_NONE, 5273220);
allocate([255,255,255,255], "i8", ALLOC_NONE, 5273224);
allocate(8, "i8", ALLOC_NONE, 5273228);
allocate(8, "i8", ALLOC_NONE, 5273236);
allocate(8, "i8", ALLOC_NONE, 5273244);
allocate(8, "i8", ALLOC_NONE, 5273252);
allocate(8, "i8", ALLOC_NONE, 5273260);
allocate(8, "i8", ALLOC_NONE, 5273268);
allocate(8, "i8", ALLOC_NONE, 5273276);
allocate(8, "i8", ALLOC_NONE, 5273284);
allocate(8, "i8", ALLOC_NONE, 5273292);
allocate(8, "i8", ALLOC_NONE, 5273300);
allocate(8, "i8", ALLOC_NONE, 5273308);
allocate(8, "i8", ALLOC_NONE, 5273316);
allocate(8, "i8", ALLOC_NONE, 5273324);
allocate(8, "i8", ALLOC_NONE, 5273332);
allocate(8, "i8", ALLOC_NONE, 5273340);
allocate(8, "i8", ALLOC_NONE, 5273348);
allocate(8, "i8", ALLOC_NONE, 5273356);
allocate(8, "i8", ALLOC_NONE, 5273364);
allocate(8, "i8", ALLOC_NONE, 5273372);
allocate(8, "i8", ALLOC_NONE, 5273380);
allocate(8, "i8", ALLOC_NONE, 5273388);
allocate(8, "i8", ALLOC_NONE, 5273396);
allocate(4, "i8", ALLOC_NONE, 5273404);
allocate(84, "i8", ALLOC_NONE, 5273408);
allocate(84, "i8", ALLOC_NONE, 5273492);
allocate(84, "i8", ALLOC_NONE, 5273576);
allocate(8, "i8", ALLOC_NONE, 5273660);
allocate(8, "i8", ALLOC_NONE, 5273668);
allocate(88, "i8", ALLOC_NONE, 5273676);
allocate(84, "i8", ALLOC_NONE, 5273764);
allocate(84, "i8", ALLOC_NONE, 5273848);
allocate(84, "i8", ALLOC_NONE, 5273932);
allocate(88, "i8", ALLOC_NONE, 5274016);
allocate(1, "i8", ALLOC_NONE, 5274104);
allocate([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0] /* 0123456789abcdefABCD */, "i8", ALLOC_NONE, 5274108);
allocate(8, "i8", ALLOC_NONE, 5274144);
allocate(8, "i8", ALLOC_NONE, 5274152);
allocate(8, "i8", ALLOC_NONE, 5274160);
allocate(8, "i8", ALLOC_NONE, 5274168);
allocate([0,0,0,0,0,0,2,0], "i8", ALLOC_NONE, 5274176);
allocate(8, "i8", ALLOC_NONE, 5274184);
allocate(8, "i8", ALLOC_NONE, 5274192);
allocate(8, "i8", ALLOC_NONE, 5274200);
allocate(8, "i8", ALLOC_NONE, 5274208);
allocate(4, "i8", ALLOC_NONE, 5274216);
allocate(4, "i8", ALLOC_NONE, 5274220);
allocate(8, "i8", ALLOC_NONE, 5274224);
allocate(8, "i8", ALLOC_NONE, 5274232);
allocate(8, "i8", ALLOC_NONE, 5274240);
allocate(8, "i8", ALLOC_NONE, 5274248);
allocate(8, "i8", ALLOC_NONE, 5274256);
allocate(8, "i8", ALLOC_NONE, 5274264);
allocate(8, "i8", ALLOC_NONE, 5274272);
allocate(8, "i8", ALLOC_NONE, 5274280);
allocate(8, "i8", ALLOC_NONE, 5274288);
allocate(8, "i8", ALLOC_NONE, 5274296);
allocate(8, "i8", ALLOC_NONE, 5274304);
allocate(8, "i8", ALLOC_NONE, 5274312);
allocate(8, "i8", ALLOC_NONE, 5274320);
allocate(8, "i8", ALLOC_NONE, 5274328);
allocate(8, "i8", ALLOC_NONE, 5274336);
allocate(8, "i8", ALLOC_NONE, 5274344);
allocate(8, "i8", ALLOC_NONE, 5274352);
allocate(8, "i8", ALLOC_NONE, 5274360);
allocate(8, "i8", ALLOC_NONE, 5274368);
allocate(8, "i8", ALLOC_NONE, 5274376);
allocate(8, "i8", ALLOC_NONE, 5274384);
allocate(8, "i8", ALLOC_NONE, 5274392);
allocate(8, "i8", ALLOC_NONE, 5274400);
allocate(8, "i8", ALLOC_NONE, 5274408);
allocate(8, "i8", ALLOC_NONE, 5274416);
allocate(8, "i8", ALLOC_NONE, 5274424);
allocate(8, "i8", ALLOC_NONE, 5274432);
allocate(8, "i8", ALLOC_NONE, 5274440);
allocate(8, "i8", ALLOC_NONE, 5274448);
allocate(8, "i8", ALLOC_NONE, 5274456);
allocate(8, "i8", ALLOC_NONE, 5274464);
allocate(8, "i8", ALLOC_NONE, 5274472);
allocate(8, "i8", ALLOC_NONE, 5274480);
allocate(8, "i8", ALLOC_NONE, 5274488);
allocate(8, "i8", ALLOC_NONE, 5274496);
allocate(8, "i8", ALLOC_NONE, 5274504);
allocate(8, "i8", ALLOC_NONE, 5274512);
allocate(8, "i8", ALLOC_NONE, 5274520);
allocate(8, "i8", ALLOC_NONE, 5274528);
allocate(8, "i8", ALLOC_NONE, 5274536);
allocate(8, "i8", ALLOC_NONE, 5274544);
allocate(8, "i8", ALLOC_NONE, 5274552);
allocate(8, "i8", ALLOC_NONE, 5274560);
allocate(8, "i8", ALLOC_NONE, 5274568);
HEAP32[((5264608)>>2)]=(420);
HEAP32[((5264612)>>2)]=(394);
HEAP32[((5264616)>>2)]=(688);
HEAP32[((5264632)>>2)]=(452);
HEAP32[((5264636)>>2)]=(528);
HEAP32[((5264640)>>2)]=(252);
HEAP32[((5264656)>>2)]=(52);
HEAP32[((5264660)>>2)]=(890);
HEAP32[((5264664)>>2)]=(268);
HEAP32[((5264680)>>2)]=(84);
HEAP32[((5264684)>>2)]=(24);
HEAP32[((5264688)>>2)]=(734);
HEAP32[((5264704)>>2)]=(8);
HEAP32[((5264708)>>2)]=(50);
HEAP32[((5264712)>>2)]=(734);
HEAP32[((5264728)>>2)]=(536);
HEAP32[((5264732)>>2)]=(274);
HEAP32[((5264736)>>2)]=(138);
HEAP32[((5264740)>>2)]=(584);
HEAP32[((5264744)>>2)]=(60);
HEAP32[((5264760)>>2)]=(812);
HEAP32[((5264764)>>2)]=(594);
HEAP32[((5264768)>>2)]=(138);
HEAP32[((5264772)>>2)]=(840);
HEAP32[((5264776)>>2)]=(120);
HEAP32[((5264792)>>2)]=(526);
HEAP32[((5264796)>>2)]=(600);
HEAP32[((5264800)>>2)]=(138);
HEAP32[((5264804)>>2)]=(586);
HEAP32[((5264808)>>2)]=(860);
HEAP32[((5264824)>>2)]=(884);
HEAP32[((5264828)>>2)]=(464);
HEAP32[((5264832)>>2)]=(138);
HEAP32[((5264836)>>2)]=(570);
HEAP32[((5264840)>>2)]=(668);
HEAP32[((5264856)>>2)]=(872);
HEAP32[((5264860)>>2)]=(46);
HEAP32[((5264864)>>2)]=(138);
HEAP32[((5264868)>>2)]=(146);
HEAP32[((5264884)>>2)]=(524);
HEAP32[((5264888)>>2)]=(372);
HEAP32[((5264892)>>2)]=(138);
HEAP32[((5264896)>>2)]=(216);
HEAP32[((5264912)>>2)]=(102);
HEAP32[((5264916)>>2)]=(374);
HEAP32[((5264920)>>2)]=(138);
HEAP32[((5264924)>>2)]=(774);
HEAP32[((5264928)>>2)]=(28);
HEAP32[((5264932)>>2)]=(602);
HEAP32[((5264936)>>2)]=(38);
HEAP32[((5264940)>>2)]=(248);
HEAP32[((5264944)>>2)]=(778);
HEAP32[((5264948)>>2)]=(284);
HEAP32[((5264960)>>2)]=(134);
HEAP32[((5264964)>>2)]=(56);
HEAP32[((5264968)>>2)]=(224);
HEAP32[((5264972)>>2)]=(90);
HEAP32[((5264976)>>2)]=(10);
HEAP32[((5264980)>>2)]=(208);
HEAP32[((5264984)>>2)]=(814);
HEAP32[((5265000)>>2)]=(852);
HEAP32[((5265004)>>2)]=(792);
HEAP32[((5265008)>>2)]=(138);
HEAP32[((5265012)>>2)]=(130);
HEAP32[((5265016)>>2)]=(156);
HEAP32[((5265020)>>2)]=(816);
HEAP32[((5265024)>>2)]=(264);
HEAP32[((5265028)>>2)]=(206);
HEAP32[((5265032)>>2)]=(20);
HEAP32[((5265036)>>2)]=(754);
HEAP32[((5265048)>>2)]=(448);
HEAP32[((5265052)>>2)]=(632);
HEAP32[((5265056)>>2)]=(756);
HEAP32[((5265060)>>2)]=(802);
HEAP32[((5265064)>>2)]=(400);
HEAP32[((5265068)>>2)]=(298);
HEAP32[((5265072)>>2)]=(346);
HEAP32[((5265088)>>2)]=(550);
HEAP32[((5265092)>>2)]=(610);
HEAP32[((5265096)>>2)]=(138);
HEAP32[((5265100)>>2)]=(322);
HEAP32[((5265104)>>2)]=(282);
HEAP32[((5265108)>>2)]=(136);
HEAP32[((5265112)>>2)]=(454);
HEAP32[((5265116)>>2)]=(554);
HEAP32[((5265132)>>2)]=(148);
HEAP32[((5265136)>>2)]=(218);
HEAP32[((5265140)>>2)]=(138);
HEAP32[((5265144)>>2)]=(292);
HEAP32[((5265148)>>2)]=(590);
HEAP32[((5265152)>>2)]=(198);
HEAP32[((5265156)>>2)]=(578);
HEAP32[((5265160)>>2)]=(6);
HEAP32[((5265176)>>2)]=(856);
HEAP32[((5265180)>>2)]=(2);
HEAP32[((5265184)>>2)]=(138);
HEAP32[((5265188)>>2)]=(494);
HEAP32[((5265192)>>2)]=(878);
HEAP32[((5265196)>>2)]=(686);
HEAP32[((5265212)>>2)]=(132);
HEAP32[((5265216)>>2)]=(12);
HEAP32[((5265220)>>2)]=(138);
HEAP32[((5265224)>>2)]=(788);
HEAP32[((5265228)>>2)]=(260);
HEAP32[((5265232)>>2)]=(498);
HEAP32[((5265248)>>2)]=(456);
HEAP32[((5265252)>>2)]=(388);
HEAP32[((5265268)>>2)]=(520);
HEAP32[((5265272)>>2)]=(462);
HEAP32[((5265276)>>2)]=(268);
HEAP32[((5265292)>>2)]=(16);
HEAP32[((5265296)>>2)]=(548);
HEAP32[((5265300)>>2)]=(138);
HEAP32[((5265304)>>2)]=(516);
HEAP32[((5265308)>>2)]=(100);
HEAP32[((5265312)>>2)]=(94);
HEAP32[((5265316)>>2)]=(98);
HEAP32[((5265320)>>2)]=(92);
HEAP32[((5265324)>>2)]=(110);
HEAP32[((5265328)>>2)]=(108);
HEAP32[((5265332)>>2)]=(192);
HEAP32[((5265348)>>2)]=(318);
HEAP32[((5265352)>>2)]=(308);
HEAP32[((5265356)>>2)]=(138);
HEAP32[((5265360)>>2)]=(650);
HEAP32[((5265364)>>2)]=(654);
HEAP32[((5265368)>>2)]=(644);
HEAP32[((5265372)>>2)]=(652);
HEAP32[((5265376)>>2)]=(316);
HEAP32[((5265380)>>2)]=(648);
HEAP32[((5265384)>>2)]=(646);
HEAP32[((5265388)>>2)]=(552);
HEAP32[((5265404)>>2)]=(104);
HEAP32[((5265408)>>2)]=(58);
HEAP32[((5265412)>>2)]=(138);
HEAP32[((5265416)>>2)]=(714);
HEAP32[((5265420)>>2)]=(712);
HEAP32[((5265424)>>2)]=(702);
HEAP32[((5265428)>>2)]=(706);
HEAP32[((5265432)>>2)]=(588);
HEAP32[((5265436)>>2)]=(710);
HEAP32[((5265440)>>2)]=(700);
HEAP32[((5265444)>>2)]=(722);
HEAP32[((5265448)>>2)]=(718);
HEAP32[((5265452)>>2)]=(716);
HEAP32[((5265456)>>2)]=(432);
HEAP32[((5265472)>>2)]=(162);
HEAP32[((5265476)>>2)]=(4);
HEAP32[((5265480)>>2)]=(138);
HEAP32[((5265484)>>2)]=(848);
HEAP32[((5265488)>>2)]=(838);
HEAP32[((5265492)>>2)]=(832);
HEAP32[((5265496)>>2)]=(834);
HEAP32[((5265500)>>2)]=(810);
HEAP32[((5265504)>>2)]=(836);
HEAP32[((5265508)>>2)]=(830);
HEAP32[((5265512)>>2)]=(846);
HEAP32[((5265516)>>2)]=(844);
HEAP32[((5265520)>>2)]=(842);
HEAP32[((5265524)>>2)]=(708);
HEAP32[((5265540)>>2)]=(246);
HEAP32[((5265544)>>2)]=(300);
HEAP32[((5265548)>>2)]=(138);
HEAP32[((5265552)>>2)]=(428);
HEAP32[((5265556)>>2)]=(640);
HEAP32[((5265560)>>2)]=(376);
HEAP32[((5265576)>>2)]=(76);
HEAP32[((5265580)>>2)]=(556);
HEAP32[((5265584)>>2)]=(138);
HEAP32[((5265588)>>2)]=(626);
HEAP32[((5265592)>>2)]=(744);
HEAP32[((5265596)>>2)]=(54);
HEAP32[((5265612)>>2)]=(176);
HEAP32[((5265616)>>2)]=(442);
HEAP32[((5265620)>>2)]=(138);
HEAP32[((5265624)>>2)]=(634);
HEAP32[((5265628)>>2)]=(168);
HEAP32[((5265632)>>2)]=(624);
HEAP32[((5265636)>>2)]=(114);
HEAP32[((5265640)>>2)]=(398);
HEAP32[((5265644)>>2)]=(128);
HEAP32[((5265648)>>2)]=(486);
HEAP32[((5265664)>>2)]=(818);
HEAP32[((5265668)>>2)]=(196);
HEAP32[((5265672)>>2)]=(138);
HEAP32[((5265676)>>2)]=(64);
HEAP32[((5265680)>>2)]=(364);
HEAP32[((5265684)>>2)]=(210);
HEAP32[((5265688)>>2)]=(726);
HEAP32[((5265692)>>2)]=(684);
HEAP32[((5265696)>>2)]=(320);
HEAP32[((5265700)>>2)]=(678);
HEAP32[((5265716)>>2)]=(160);
HEAP32[((5265720)>>2)]=(446);
HEAP32[((5265724)>>2)]=(138);
HEAP32[((5265728)>>2)]=(874);
HEAP32[((5265732)>>2)]=(170);
HEAP32[((5265736)>>2)]=(82);
HEAP32[((5265740)>>2)]=(880);
HEAP32[((5265744)>>2)]=(304);
HEAP32[((5265748)>>2)]=(306);
HEAP32[((5265752)>>2)]=(124);
HEAP32[((5265768)>>2)]=(226);
HEAP32[((5265772)>>2)]=(496);
HEAP32[((5265776)>>2)]=(138);
HEAP32[((5265780)>>2)]=(414);
HEAP32[((5265784)>>2)]=(418);
HEAP32[((5265788)>>2)]=(666);
HEAP32[((5265792)>>2)]=(238);
HEAP32[((5265796)>>2)]=(480);
HEAP32[((5265800)>>2)]=(178);
HEAP32[((5265804)>>2)]=(416);
HEAP32[((5265820)>>2)]=(14);
HEAP32[((5265824)>>2)]=(86);
HEAP32[((5265828)>>2)]=(138);
HEAP32[((5265844)>>2)]=(450);
HEAP32[((5265848)>>2)]=(508);
HEAP32[((5265852)>>2)]=(138);
HEAP32[((5265868)>>2)]=(876);
HEAP32[((5265872)>>2)]=(266);
HEAP32[((5265876)>>2)]=(138);
HEAP32[((5265880)>>2)]=(466);
HEAP32[((5265884)>>2)]=(232);
HEAP32[((5265888)>>2)]=(412);
HEAP32[((5265892)>>2)]=(864);
HEAP32[((5265896)>>2)]=(234);
HEAP32[((5265900)>>2)]=(670);
HEAP32[((5265904)>>2)]=(616);
HEAP32[((5265908)>>2)]=(70);
HEAP32[((5265912)>>2)]=(144);
HEAP32[((5265916)>>2)]=(760);
HEAP32[((5265920)>>2)]=(350);
HEAP32[((5265924)>>2)]=(236);
HEAP32[((5265940)>>2)]=(254);
HEAP32[((5265944)>>2)]=(96);
HEAP32[((5265948)>>2)]=(138);
HEAP32[((5265952)>>2)]=(32);
HEAP32[((5265956)>>2)]=(62);
HEAP32[((5265960)>>2)]=(436);
HEAP32[((5265964)>>2)]=(752);
HEAP32[((5265968)>>2)]=(172);
HEAP32[((5265972)>>2)]=(440);
HEAP32[((5265976)>>2)]=(530);
HEAP32[((5265980)>>2)]=(474);
HEAP32[((5265996)>>2)]=(134);
HEAP32[((5266000)>>2)]=(56);
HEAP32[((5266004)>>2)]=(224);
HEAP32[((5266008)>>2)]=(90);
HEAP32[((5266012)>>2)]=(10);
HEAP32[((5266016)>>2)]=(208);
HEAP32[((5266020)>>2)]=(814);
HEAP32[((5266036)>>2)]=(448);
HEAP32[((5266040)>>2)]=(632);
HEAP32[((5266044)>>2)]=(756);
HEAP32[((5266048)>>2)]=(802);
HEAP32[((5266052)>>2)]=(400);
HEAP32[((5266056)>>2)]=(298);
HEAP32[((5266060)>>2)]=(346);
HEAP32[((5266080)>>2)]=(720);
HEAP32[((5266084)>>2)]=(656);
HEAP32[((5266100)>>2)]=(80);
HEAP32[((5266104)>>2)]=(344);
HEAP32[((5266120)>>2)]=(222);
HEAP32[((5266124)>>2)]=(780);
HEAP32[((5266128)>>2)]=(512);
HEAP32[((5266132)>>2)]=(676);
HEAP32[((5266136)>>2)]=(404);
HEAP32[((5266140)>>2)]=(746);
HEAP32[((5266144)>>2)]=(736);
HEAP32[((5266160)>>2)]=(532);
HEAP32[((5266164)>>2)]=(278);
HEAP32[((5266168)>>2)]=(138);
HEAP32[((5266172)>>2)]=(414);
HEAP32[((5266176)>>2)]=(418);
HEAP32[((5266180)>>2)]=(666);
HEAP32[((5266184)>>2)]=(238);
HEAP32[((5266188)>>2)]=(480);
HEAP32[((5266192)>>2)]=(178);
HEAP32[((5266196)>>2)]=(416);
HEAP32[((5266212)>>2)]=(894);
HEAP32[((5266216)>>2)]=(482);
HEAP32[((5266220)>>2)]=(138);
HEAP32[((5266224)>>2)]=(414);
HEAP32[((5266228)>>2)]=(418);
HEAP32[((5266232)>>2)]=(666);
HEAP32[((5266236)>>2)]=(238);
HEAP32[((5266240)>>2)]=(480);
HEAP32[((5266244)>>2)]=(178);
HEAP32[((5266248)>>2)]=(416);
HEAP32[((5266264)>>2)]=(140);
HEAP32[((5266268)>>2)]=(766);
HEAP32[((5266272)>>2)]=(614);
HEAP32[((5266276)>>2)]=(806);
HEAP32[((5266280)>>2)]=(658);
HEAP32[((5266284)>>2)]=(48);
HEAP32[((5266288)>>2)]=(326);
HEAP32[((5266292)>>2)]=(598);
HEAP32[((5266296)>>2)]=(430);
HEAP32[((5266300)>>2)]=(258);
HEAP32[((5266304)>>2)]=(72);
HEAP32[((5266308)>>2)]=(724);
HEAP32[((5266312)>>2)]=(410);
HEAP32[((5266316)>>2)]=(286);
HEAP32[((5266332)>>2)]=(424);
HEAP32[((5266336)>>2)]=(822);
HEAP32[((5266340)>>2)]=(240);
HEAP32[((5266344)>>2)]=(490);
HEAP32[((5266348)>>2)]=(312);
HEAP32[((5266352)>>2)]=(582);
HEAP32[((5266356)>>2)]=(618);
HEAP32[((5266360)>>2)]=(694);
HEAP32[((5266364)>>2)]=(730);
HEAP32[((5266368)>>2)]=(184);
HEAP32[((5266372)>>2)]=(164);
HEAP32[((5266376)>>2)]=(152);
HEAP32[((5266380)>>2)]=(886);
HEAP32[((5266384)>>2)]=(604);
HEAP32[((5266400)>>2)]=(26);
HEAP32[((5266404)>>2)]=(396);
HEAP32[((5266408)>>2)]=(614);
HEAP32[((5266412)>>2)]=(806);
HEAP32[((5266416)>>2)]=(800);
HEAP32[((5266420)>>2)]=(380);
HEAP32[((5266424)>>2)]=(326);
HEAP32[((5266428)>>2)]=(598);
HEAP32[((5266432)>>2)]=(430);
HEAP32[((5266436)>>2)]=(42);
HEAP32[((5266440)>>2)]=(72);
HEAP32[((5266444)>>2)]=(824);
HEAP32[((5266448)>>2)]=(410);
HEAP32[((5266452)>>2)]=(798);
HEAP32[((5266468)>>2)]=(476);
HEAP32[((5266472)>>2)]=(642);
HEAP32[((5266476)>>2)]=(608);
HEAP32[((5266480)>>2)]=(676);
HEAP32[((5266484)>>2)]=(404);
HEAP32[((5266488)>>2)]=(746);
HEAP32[((5266492)>>2)]=(608);
HEAP32[((5266512)>>2)]=(122);
HEAP32[((5266516)>>2)]=(740);
HEAP32[((5266532)>>2)]=(472);
HEAP32[((5266536)>>2)]=(422);
HEAP32[((5266556)>>2)]=(768);
HEAP32[((5266560)>>2)]=(826);
HEAP32[((5266576)>>2)]=(366);
HEAP32[((5266580)>>2)]=(672);
HEAP32[((5266600)>>2)]=(288);
HEAP32[((5266604)>>2)]=(892);
HEAP32[((5266620)>>2)]=(566);
HEAP32[((5266624)>>2)]=(820);
HEAP32[((5266644)>>2)]=(362);
HEAP32[((5266648)>>2)]=(698);
HEAP32[((5266664)>>2)]=(458);
HEAP32[((5266668)>>2)]=(158);
HEAP32[((5266684)>>2)]=(862);
HEAP32[((5266688)>>2)]=(568);
HEAP32[((5266692)>>2)]=(268);
HEAP32[((5266708)>>2)]=(352);
HEAP32[((5266712)>>2)]=(628);
HEAP32[((5266716)>>2)]=(608);
HEAP32[((5266720)>>2)]=(676);
HEAP32[((5266724)>>2)]=(404);
HEAP32[((5266728)>>2)]=(746);
HEAP32[((5266732)>>2)]=(88);
HEAP32[((5266748)>>2)]=(858);
HEAP32[((5266752)>>2)]=(572);
HEAP32[((5266756)>>2)]=(228);
HEAP32[((5266760)>>2)]=(490);
HEAP32[((5266764)>>2)]=(312);
HEAP32[((5266768)>>2)]=(582);
HEAP32[((5266772)>>2)]=(354);
HEAP32[((5266776)>>2)]=(694);
HEAP32[((5266780)>>2)]=(730);
HEAP32[((5266784)>>2)]=(184);
HEAP32[((5266788)>>2)]=(164);
HEAP32[((5266792)>>2)]=(152);
HEAP32[((5266796)>>2)]=(886);
HEAP32[((5266800)>>2)]=(828);
HEAP32[((5266816)>>2)]=(502);
HEAP32[((5266820)>>2)]=(562);
HEAP32[((5266824)>>2)]=(382);
HEAP32[((5266828)>>2)]=(806);
HEAP32[((5266832)>>2)]=(800);
HEAP32[((5266836)>>2)]=(380);
HEAP32[((5266840)>>2)]=(620);
HEAP32[((5266844)>>2)]=(598);
HEAP32[((5266848)>>2)]=(430);
HEAP32[((5266852)>>2)]=(42);
HEAP32[((5266856)>>2)]=(72);
HEAP32[((5266860)>>2)]=(824);
HEAP32[((5266864)>>2)]=(410);
HEAP32[((5266868)>>2)]=(220);
HEAP32[((5266884)>>2)]=(784);
HEAP32[((5266888)>>2)]=(468);
HEAP32[((5266892)>>2)]=(138);
HEAP32[((5266896)>>2)]=(444);
HEAP32[((5266900)>>2)]=(762);
HEAP32[((5266904)>>2)]=(518);
HEAP32[((5266908)>>2)]=(870);
HEAP32[((5266912)>>2)]=(68);
HEAP32[((5266916)>>2)]=(340);
HEAP32[((5266920)>>2)]=(338);
HEAP32[((5266924)>>2)]=(262);
HEAP32[((5266928)>>2)]=(438);
HEAP32[((5266944)>>2)]=(358);
HEAP32[((5266948)>>2)]=(174);
HEAP32[((5266952)>>2)]=(138);
HEAP32[((5266956)>>2)]=(742);
HEAP32[((5266960)>>2)]=(750);
HEAP32[((5266964)>>2)]=(690);
HEAP32[((5266968)>>2)]=(786);
HEAP32[((5266972)>>2)]=(808);
HEAP32[((5266976)>>2)]=(294);
HEAP32[((5266980)>>2)]=(748);
HEAP32[((5266984)>>2)]=(558);
HEAP32[((5266988)>>2)]=(166);
HEAP32[((5267004)>>2)]=(794);
HEAP32[((5267008)>>2)]=(392);
HEAP32[((5267012)>>2)]=(138);
HEAP32[((5267016)>>2)]=(112);
HEAP32[((5267020)>>2)]=(386);
HEAP32[((5267024)>>2)]=(522);
HEAP32[((5267028)>>2)]=(506);
HEAP32[((5267032)>>2)]=(882);
HEAP32[((5267036)>>2)]=(560);
HEAP32[((5267040)>>2)]=(664);
HEAP32[((5267044)>>2)]=(580);
HEAP32[((5267048)>>2)]=(360);
HEAP32[((5267064)>>2)]=(256);
HEAP32[((5267068)>>2)]=(546);
HEAP32[((5267072)>>2)]=(138);
HEAP32[((5267076)>>2)]=(696);
HEAP32[((5267080)>>2)]=(728);
HEAP32[((5267084)>>2)]=(334);
HEAP32[((5267088)>>2)]=(758);
HEAP32[((5267092)>>2)]=(302);
HEAP32[((5267096)>>2)]=(242);
HEAP32[((5267100)>>2)]=(514);
HEAP32[((5267104)>>2)]=(738);
HEAP32[((5267108)>>2)]=(732);
HEAP32[((5267124)>>2)]=(290);
HEAP32[((5267128)>>2)]=(44);
HEAP32[((5267132)>>2)]=(116);
HEAP32[((5267136)>>2)]=(490);
HEAP32[((5267140)>>2)]=(312);
HEAP32[((5267144)>>2)]=(582);
HEAP32[((5267148)>>2)]=(618);
HEAP32[((5267152)>>2)]=(694);
HEAP32[((5267156)>>2)]=(730);
HEAP32[((5267160)>>2)]=(460);
HEAP32[((5267164)>>2)]=(576);
HEAP32[((5267168)>>2)]=(212);
HEAP32[((5267172)>>2)]=(886);
HEAP32[((5267176)>>2)]=(604);
HEAP32[((5267192)>>2)]=(36);
HEAP32[((5267196)>>2)]=(770);
HEAP32[((5267200)>>2)]=(636);
HEAP32[((5267204)>>2)]=(806);
HEAP32[((5267208)>>2)]=(800);
HEAP32[((5267212)>>2)]=(380);
HEAP32[((5267216)>>2)]=(326);
HEAP32[((5267220)>>2)]=(598);
HEAP32[((5267224)>>2)]=(430);
HEAP32[((5267228)>>2)]=(674);
HEAP32[((5267232)>>2)]=(150);
HEAP32[((5267236)>>2)]=(40);
HEAP32[((5267240)>>2)]=(410);
HEAP32[((5267244)>>2)]=(798);
HEAP32[((5267260)>>2)]=(190);
HEAP32[((5267264)>>2)]=(776);
HEAP32[((5267268)>>2)]=(180);
HEAP32[((5267272)>>2)]=(796);
HEAP32[((5267276)>>2)]=(154);
HEAP32[((5267280)>>2)]=(574);
HEAP32[((5267284)>>2)]=(126);
HEAP32[((5267300)>>2)]=(272);
HEAP32[((5267304)>>2)]=(324);
HEAP32[((5267308)>>2)]=(18);
HEAP32[((5267312)>>2)]=(868);
HEAP32[((5267328)>>2)]=(804);
HEAP32[((5267332)>>2)]=(188);
HEAP32[((5267336)>>2)]=(608);
HEAP32[((5267340)>>2)]=(608);
HEAP32[((5267356)>>2)]=(230);
HEAP32[((5267360)>>2)]=(504);
HEAP32[((5267364)>>2)]=(180);
HEAP32[((5267368)>>2)]=(796);
HEAP32[((5267372)>>2)]=(154);
HEAP32[((5267376)>>2)]=(574);
HEAP32[((5267380)>>2)]=(126);
HEAP32[((5267396)>>2)]=(790);
HEAP32[((5267400)>>2)]=(866);
HEAP32[((5267404)>>2)]=(478);
HEAP32[((5267420)>>2)]=(390);
HEAP32[((5267424)>>2)]=(682);
HEAP32[((5267440)>>2)]=(142);
HEAP32[((5267444)>>2)]=(434);
HEAP32[((5267448)>>2)]=(182);
HEAP32[((5267452)>>2)]=(402);
HEAP32[((5267456)>>2)]=(406);
HEAP32[((5267460)>>2)]=(66);
HEAP32[((5267476)>>2)]=(328);
HEAP32[((5267480)>>2)]=(606);
HEAP32[((5267484)>>2)]=(638);
HEAP32[((5267488)>>2)]=(332);
HEAP32[((5267492)>>2)]=(538);
HEAP32[((5267496)>>2)]=(704);
HEAP32[((5267500)>>2)]=(244);
HEAP32[((5267504)>>2)]=(30);
HEAP32[((5267520)>>2)]=(348);
HEAP32[((5267524)>>2)]=(592);
HEAP32[((5267528)>>2)]=(596);
HEAP32[((5267532)>>2)]=(22);
HEAP32[((5267536)>>2)]=(74);
HEAP32[((5267540)>>2)]=(662);
HEAP32[((5267544)>>2)]=(106);
HEAP32[((5267548)>>2)]=(186);
HEAP32[((5267564)>>2)]=(378);
HEAP32[((5267568)>>2)]=(408);
HEAP32[((5267572)>>2)]=(608);
HEAP32[((5267576)>>2)]=(608);
HEAP32[((5267580)>>2)]=(608);
HEAP32[((5267584)>>2)]=(608);
HEAP32[((5267588)>>2)]=(608);
HEAP32[((5267604)>>2)]=(500);
HEAP32[((5267608)>>2)]=(630);
HEAP32[((5267612)>>2)]=(608);
HEAP32[((5267616)>>2)]=(608);
HEAP32[((5267620)>>2)]=(608);
HEAP32[((5267624)>>2)]=(608);
HEAP32[((5267628)>>2)]=(608);
HEAP32[((5267632)>>2)]=(608);
HEAP32[((5267648)>>2)]=(782);
HEAP32[((5267652)>>2)]=(484);
HEAP32[((5267656)>>2)]=(384);
HEAP32[((5267660)>>2)]=(310);
HEAP32[((5267676)>>2)]=(214);
HEAP32[((5267680)>>2)]=(280);
HEAP32[((5267684)>>2)]=(200);
HEAP32[((5267688)>>2)]=(488);
HEAP32[((5267692)>>2)]=(692);
HEAP32[((5267708)>>2)]=(368);
HEAP32[((5267712)>>2)]=(660);
HEAP32[((5267716)>>2)]=(200);
HEAP32[((5267720)>>2)]=(488);
HEAP32[((5267724)>>2)]=(250);
HEAP32[((5267728)>>2)]=(78);
HEAP32[((5267732)>>2)]=(764);
HEAP32[((5267736)>>2)]=(342);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(8))>>2)]=(370);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(12))>>2)]=(426);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(16))>>2)]=(200);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(20))>>2)]=(488);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(24))>>2)]=(250);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(28))>>2)]=(118);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(32))>>2)]=(296);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(36))>>2)]=(336);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(8))>>2)]=(470);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(12))>>2)]=(202);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(16))>>2)]=(200);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(20))>>2)]=(488);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(24))>>2)]=(612);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(8))>>2)]=(564);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(12))>>2)]=(854);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(16))>>2)]=(200);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(20))>>2)]=(488);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(24))>>2)]=(250);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(28))>>2)]=(680);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(32))>>2)]=(330);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(36))>>2)]=(510);
HEAP32[((5271172)>>2)]=(((5267676)|0));
HEAP32[((5271176)>>2)]=((5267744)|0);
HEAP32[((__ZTIc)>>2)]=(((5267676)|0));
HEAP32[(((__ZTIc)+(4))>>2)]=((5267752)|0);
HEAP32[((5271180)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5271184)>>2)]=((5267756)|0);
HEAP32[((5271188)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5271192)>>2)]=((5267772)|0);
HEAP32[((5271196)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271200)>>2)]=((5267788)|0);
HEAP32[((5271208)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271212)>>2)]=((5267804)|0);
HEAP32[((5271220)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271224)>>2)]=((5267816)|0);
HEAP32[((5271232)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271236)>>2)]=((5267836)|0);
HEAP32[((5271244)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271248)>>2)]=((5267856)|0);
HEAP32[((5271256)>>2)]=(((__ZTVN10__cxxabiv119__pointer_type_infoE+8)|0));
HEAP32[((5271260)>>2)]=((5267872)|0);
HEAP32[((5271268)>>2)]=__ZTIc;
HEAP32[((5271272)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5271276)>>2)]=((5267876)|0);
HEAP32[((5271280)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5271284)>>2)]=((5267896)|0);
HEAP32[((5271288)>>2)]=(((5267708)|0));
HEAP32[((5271292)>>2)]=((5267916)|0);
HEAP32[((5271320)>>2)]=(((5267708)|0));
HEAP32[((5271324)>>2)]=((5267988)|0);
HEAP32[((5271352)>>2)]=(((5267708)|0));
HEAP32[((5271356)>>2)]=((5268060)|0);
HEAP32[((5271384)>>2)]=(((5267708)|0));
HEAP32[((5271388)>>2)]=((5268132)|0);
HEAP32[((5271416)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271420)>>2)]=((5268204)|0);
HEAP32[((5271428)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271432)>>2)]=((5268248)|0);
HEAP32[((5271440)>>2)]=(((5267708)|0));
HEAP32[((5271444)>>2)]=((5268292)|0);
HEAP32[((5271464)>>2)]=(((5267708)|0));
HEAP32[((5271468)>>2)]=((5268316)|0);
HEAP32[((5271488)>>2)]=(((5267708)|0));
HEAP32[((5271492)>>2)]=((5268340)|0);
HEAP32[((5271512)>>2)]=(((5267708)|0));
HEAP32[((5271516)>>2)]=((5268364)|0);
HEAP32[((5271536)>>2)]=(((5267708)|0));
HEAP32[((5271540)>>2)]=((5268388)|0);
HEAP32[((5271568)>>2)]=(((5267708)|0));
HEAP32[((5271572)>>2)]=((5268460)|0);
HEAP32[((5271600)>>2)]=(((5267708)|0));
HEAP32[((5271604)>>2)]=((5268532)|0);
HEAP32[((5271640)>>2)]=(((5267708)|0));
HEAP32[((5271644)>>2)]=((5268604)|0);
HEAP32[((5271680)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271684)>>2)]=((5268676)|0);
HEAP32[((5271692)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271696)>>2)]=((5268700)|0);
HEAP32[((5271704)>>2)]=(((5267708)|0));
HEAP32[((5271708)>>2)]=((5268724)|0);
HEAP32[((5271736)>>2)]=(((5267708)|0));
HEAP32[((5271740)>>2)]=((5268748)|0);
HEAP32[((5271768)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5271772)>>2)]=((5268772)|0);
HEAP32[((5271776)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271780)>>2)]=((5268792)|0);
HEAP32[((5271788)>>2)]=(((5267708)|0));
HEAP32[((5271792)>>2)]=((5268820)|0);
HEAP32[((5271820)>>2)]=(((5267708)|0));
HEAP32[((5271824)>>2)]=((5268888)|0);
HEAP32[((5271852)>>2)]=(((5267708)|0));
HEAP32[((5271856)>>2)]=((5268956)|0);
HEAP32[((5271884)>>2)]=(((5267708)|0));
HEAP32[((5271888)>>2)]=((5269024)|0);
HEAP32[((5271916)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271920)>>2)]=((5269092)|0);
HEAP32[((5271928)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5271932)>>2)]=((5269112)|0);
HEAP32[((5271940)>>2)]=(((5267708)|0));
HEAP32[((5271944)>>2)]=((5269132)|0);
HEAP32[((5271972)>>2)]=(((5267708)|0));
HEAP32[((5271976)>>2)]=((5269168)|0);
HEAP32[((5272004)>>2)]=(((5267708)|0));
HEAP32[((5272008)>>2)]=((5269204)|0);
HEAP32[((5272036)>>2)]=(((5267708)|0));
HEAP32[((5272040)>>2)]=((5269240)|0);
HEAP32[((5272068)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272072)>>2)]=((5269276)|0);
HEAP32[((5272080)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272084)>>2)]=((5269300)|0);
HEAP32[((5272092)>>2)]=(((5267708)|0));
HEAP32[((5272096)>>2)]=((5269324)|0);
HEAP32[((5272124)>>2)]=(((5267708)|0));
HEAP32[((5272128)>>2)]=((5269344)|0);
HEAP32[((5272156)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272160)>>2)]=((5269364)|0);
HEAP32[((5272164)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272168)>>2)]=((5269400)|0);
HEAP32[((5272172)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272176)>>2)]=((5269436)|0);
HEAP32[((5272184)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272188)>>2)]=((5269508)|0);
HEAP32[((5272196)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272200)>>2)]=((5269540)|0);
HEAP32[((5272208)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272212)>>2)]=((5269576)|0);
HEAP32[((5272220)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272224)>>2)]=((5269612)|0);
HEAP32[((5272232)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272236)>>2)]=((5269680)|0);
HEAP32[((5272240)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272244)>>2)]=((5269732)|0);
HEAP32[((5272248)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272252)>>2)]=((5269784)|0);
HEAP32[((5272256)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272260)>>2)]=((5269812)|0);
HEAP32[((5272264)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272268)>>2)]=((5269840)|0);
HEAP32[((5272272)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272276)>>2)]=((5269868)|0);
HEAP32[((5272280)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272284)>>2)]=((5269896)|0);
HEAP32[((5272288)>>2)]=(((5267708)|0));
HEAP32[((5272292)>>2)]=((5269920)|0);
HEAP32[((5272312)>>2)]=(((5267708)|0));
HEAP32[((5272316)>>2)]=((5269968)|0);
HEAP32[((5272336)>>2)]=(((5267708)|0));
HEAP32[((5272340)>>2)]=((5270016)|0);
HEAP32[((5272360)>>2)]=(((5267708)|0));
HEAP32[((5272364)>>2)]=((5270064)|0);
HEAP32[((5272384)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272388)>>2)]=((5270112)|0);
HEAP32[((5272396)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272400)>>2)]=((5270136)|0);
HEAP32[((5272404)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272408)>>2)]=((5270160)|0);
HEAP32[((5272416)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272420)>>2)]=((5270184)|0);
HEAP32[((5272428)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272432)>>2)]=((5270212)|0);
HEAP32[((5272440)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272444)>>2)]=((5270240)|0);
HEAP32[((5272448)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272452)>>2)]=((5270268)|0);
HEAP32[((5272456)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272460)>>2)]=((5270296)|0);
HEAP32[((5272464)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272468)>>2)]=((5270324)|0);
HEAP32[((5272472)>>2)]=(((5267708)|0));
HEAP32[((5272476)>>2)]=((5270352)|0);
HEAP32[((5272504)>>2)]=(((5267708)|0));
HEAP32[((5272508)>>2)]=((5270380)|0);
HEAP32[((5272536)>>2)]=(((5267708)|0));
HEAP32[((5272540)>>2)]=((5270408)|0);
HEAP32[((5272568)>>2)]=(((5267708)|0));
HEAP32[((5272572)>>2)]=((5270436)|0);
HEAP32[((5272600)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272604)>>2)]=((5270464)|0);
HEAP32[((5272608)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272612)>>2)]=((5270488)|0);
HEAP32[((5272616)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272620)>>2)]=((5270512)|0);
HEAP32[((5272624)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272628)>>2)]=((5270536)|0);
HEAP32[((5272636)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272640)>>2)]=((5270560)|0);
HEAP32[((5272648)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272652)>>2)]=((5270584)|0);
HEAP32[((5272660)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272664)>>2)]=((5270604)|0);
HEAP32[((5272672)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272676)>>2)]=((5270624)|0);
HEAP32[((5272680)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272684)>>2)]=((5270644)|0);
HEAP32[((5272692)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272696)>>2)]=((5270664)|0);
HEAP32[((5272700)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272704)>>2)]=((5270680)|0);
HEAP32[((5272708)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272712)>>2)]=((5270696)|0);
HEAP32[((5272716)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272720)>>2)]=((5270732)|0);
HEAP32[((5272724)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272728)>>2)]=((5270768)|0);
HEAP32[((5272736)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272740)>>2)]=((5270800)|0);
HEAP32[((5272748)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272752)>>2)]=((5270832)|0);
HEAP32[((5272756)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((5272760)>>2)]=((5270860)|0);
HEAP32[((5272764)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272768)>>2)]=((5270884)|0);
HEAP32[((5272776)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272780)>>2)]=((5270908)|0);
HEAP32[((5272788)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272792)>>2)]=((5270948)|0);
HEAP32[((5272800)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272804)>>2)]=((5270988)|0);
HEAP32[((5272812)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272816)>>2)]=((5271028)|0);
HEAP32[((5272824)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272828)>>2)]=((5271064)|0);
HEAP32[((5272836)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272840)>>2)]=((5271100)|0);
HEAP32[((5272848)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((5272852)>>2)]=((5271136)|0);
HEAP32[((5272872)>>2)]=(768);
HEAP32[((5272876)>>2)]=(826);
HEAP32[((5272892)>>2)]=(366);
HEAP32[((5272896)>>2)]=(672);

  function ___gxx_personality_v0() {
    }

  
  function _memcpy(dest, src, num) {
      dest = dest|0; src = src|0; num = num|0;
      var ret = 0;
      ret = dest|0;
      if ((dest&3) == (src&3)) {
        while (dest & 3) {
          if ((num|0) == 0) return ret|0;
          HEAP8[(dest)]=HEAP8[(src)];
          dest = (dest+1)|0;
          src = (src+1)|0;
          num = (num-1)|0;
        }
        while ((num|0) >= 4) {
          HEAP32[((dest)>>2)]=HEAP32[((src)>>2)];
          dest = (dest+4)|0;
          src = (src+4)|0;
          num = (num-4)|0;
        }
      }
      while ((num|0) > 0) {
        HEAP8[(dest)]=HEAP8[(src)];
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      return ret|0;
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function ___assert_func(filename, line, func, condition) {
      throw 'Assertion failed: ' + (condition ? Pointer_stringify(condition) : 'unknown condition') + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + new Error().stack;
    }

  
  
  
  var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
  
  function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      if (!___setErrNo.ret) ___setErrNo.ret = allocate([0], 'i32', ALLOC_STATIC);
      HEAP32[((___setErrNo.ret)>>2)]=value
      return value;
    }
  
  var _stdin=allocate(1, "i32*", ALLOC_STACK);
  
  var _stdout=allocate(1, "i32*", ALLOC_STACK);
  
  var _stderr=allocate(1, "i32*", ALLOC_STACK);
  
  var __impure_ptr=allocate(1, "i32*", ALLOC_STACK);var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,joinPath:function (parts, forceRelative) {
        var ret = parts[0];
        for (var i = 1; i < parts.length; i++) {
          if (ret[ret.length-1] != '/') ret += '/';
          ret += parts[i];
        }
        if (forceRelative && ret[0] == '/') ret = ret.substr(1);
        return ret;
      },absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              ret = FS.analyzePath([link].concat(path).join('/'),
                                   dontResolveLastLink, linksVisited + 1);
              return ret;
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
  
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
  
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
  
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = new Array(data.length);
          for (var i = 0, len = data.length; i < len; ++i) dataArray[i] = data.charCodeAt(i);
          data = dataArray;
        }
        var properties = {
          isDevice: false,
          contents: data.subarray ? data.subarray(0) : data // as an optimization, create a new array wrapper (not buffer) here, to help JS engines understand this object
        };
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
  
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function(chunkSize, length) {
            this.length = length;
            this.chunkSize = chunkSize;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % chunkSize;
            var chunkNum = Math.floor(idx / chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
    
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
          if (!hasByteServing) chunkSize = datalength;
    
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
    
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
    
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
    
          var lazyArray = new LazyUint8Array(chunkSize, datalength);
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * lazyArray.chunkSize;
            var end = (chunkNum+1) * lazyArray.chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile) {
        Browser.ensureObjects();
        var fullname = FS.joinPath([parent, name], true);
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureRoot();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input = input || Module['stdin'];
        output = output || Module['stdout'];
        error = error || Module['stderr'];
  
        // Default handlers.
        var stdinOverridden = true, stdoutOverridden = true, stderrOverridden = true;
        if (!input) {
          stdinOverridden = false;
          input = function() {
            if (!input.cache || !input.cache.length) {
              var result;
              if (typeof window != 'undefined' &&
                  typeof window.prompt == 'function') {
                // Browser.
                result = window.prompt('Input: ');
                if (result === null) result = String.fromCharCode(0); // cancel ==> EOF
              } else if (typeof readline == 'function') {
                // Command line.
                result = readline();
              }
              if (!result) result = '';
              input.cache = intArrayFromString(result + '\n', true);
            }
            return input.cache.shift();
          };
        }
        var utf8 = new Runtime.UTF8Processor();
        function simpleOutput(val) {
          if (val === null || val === '\n'.charCodeAt(0)) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(utf8.processCChar(val));
          }
        }
        if (!output) {
          stdoutOverridden = false;
          output = simpleOutput;
        }
        if (!output.printer) output.printer = Module['print'];
        if (!output.buffer) output.buffer = [];
        if (!error) {
          stderrOverridden = false;
          error = simpleOutput;
        }
        if (!error.printer) error.printer = Module['print'];
        if (!error.buffer) error.buffer = [];
  
        // Create the temporary folder, if not already created
        try {
          FS.createFolder('/', 'tmp', true, true);
        } catch(e) {}
  
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
  
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          isTerminal: !stdinOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stdoutOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stderrOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        assert(Math.max(_stdin, _stdout, _stderr) < 128); // make sure these are low, we flatten arrays with these
        HEAP32[((_stdin)>>2)]=1;
        HEAP32[((_stdout)>>2)]=2;
        HEAP32[((_stderr)>>2)]=3;
  
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
  
        // Newlib initialization
        for (var i = FS.streams.length; i < Math.max(_stdin, _stdout, _stderr) + 4; i++) {
          FS.streams[i] = null; // Make sure to keep FS.streams dense
        }
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_STATIC) ], 'void*', ALLOC_NONE, __impure_ptr);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr. Careful, they may have been closed
        if (FS.streams[2] && FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output('\n'.charCodeAt(0));
        if (FS.streams[3] && FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output('\n'.charCodeAt(0));
      },standardizePath:function (path) {
        if (path.substr(0, 2) == './') path = path.substr(2);
        return path;
      },deleteFile:function (path) {
        path = FS.analyzePath(path);
        if (!path.parentExists || !path.exists) {
          throw 'Invalid path ' + path;
        }
        delete path.parentObject.contents[path.name];
      }};
  
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[(((buf)+(i))|0)];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[(((buf)+(i))|0)]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
  function _strlen(ptr) {
      ptr = ptr|0;
      var curr = 0;
      curr = ptr;
      while (HEAP8[(curr)]|0 != 0) {
        curr = (curr + 1)|0;
      }
      return (curr - ptr)|0;
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],HEAPF64[(tempDoublePtr)>>3]);
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == '%'.charCodeAt(0)) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case '+'.charCodeAt(0):
                flagAlwaysSigned = true;
                break;
              case '-'.charCodeAt(0):
                flagLeftAlign = true;
                break;
              case '#'.charCodeAt(0):
                flagAlternative = true;
                break;
              case '0'.charCodeAt(0):
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == '*'.charCodeAt(0)) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0)) {
              width = width * 10 + (next - '0'.charCodeAt(0));
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false;
          if (next == '.'.charCodeAt(0)) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == '*'.charCodeAt(0)) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < '0'.charCodeAt(0) ||
                    precisionChr > '9'.charCodeAt(0)) break;
                precision = precision * 10 + (precisionChr - '0'.charCodeAt(0));
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 'h'.charCodeAt(0)) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 'l'.charCodeAt(0)) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          if (['d', 'i', 'u', 'o', 'x', 'X', 'p'].indexOf(String.fromCharCode(next)) != -1) {
            // Integer.
            var signed = next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0);
            argSize = argSize || 4;
            var currArg = getNextArg('i' + (argSize * 8));
            var origArg = currArg;
            var argText;
            // Flatten i64-1 [low, high] into a (slightly rounded) double
            if (argSize == 8) {
              currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 'u'.charCodeAt(0));
            }
            // Truncate to requested size.
            if (argSize <= 4) {
              var limit = Math.pow(256, argSize) - 1;
              currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
            }
            // Format the number.
            var currAbsArg = Math.abs(currArg);
            var prefix = '';
            if (next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0)) {
              if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
              argText = reSign(currArg, 8 * argSize, 1).toString(10);
            } else if (next == 'u'.charCodeAt(0)) {
              if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
              argText = unSign(currArg, 8 * argSize, 1).toString(10);
              currArg = Math.abs(currArg);
            } else if (next == 'o'.charCodeAt(0)) {
              argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
            } else if (next == 'x'.charCodeAt(0) || next == 'X'.charCodeAt(0)) {
              prefix = flagAlternative ? '0x' : '';
              if (argSize == 8 && i64Math) argText = (origArg[1]>>>0).toString(16) + (origArg[0]>>>0).toString(16); else
              if (currArg < 0) {
                // Represent negative numbers in hex as 2's complement.
                currArg = -currArg;
                argText = (currAbsArg - 1).toString(16);
                var buffer = [];
                for (var i = 0; i < argText.length; i++) {
                  buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                }
                argText = buffer.join('');
                while (argText.length < argSize * 2) argText = 'f' + argText;
              } else {
                argText = currAbsArg.toString(16);
              }
              if (next == 'X'.charCodeAt(0)) {
                prefix = prefix.toUpperCase();
                argText = argText.toUpperCase();
              }
            } else if (next == 'p'.charCodeAt(0)) {
              if (currAbsArg === 0) {
                argText = '(nil)';
              } else {
                prefix = '0x';
                argText = currAbsArg.toString(16);
              }
            }
            if (precisionSet) {
              while (argText.length < precision) {
                argText = '0' + argText;
              }
            }
  
            // Add sign if needed
            if (flagAlwaysSigned) {
              if (currArg < 0) {
                prefix = '-' + prefix;
              } else {
                prefix = '+' + prefix;
              }
            }
  
            // Add padding.
            while (prefix.length + argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad) {
                  argText = '0' + argText;
                } else {
                  prefix = ' ' + prefix;
                }
              }
            }
  
            // Insert the result into the buffer.
            argText = prefix + argText;
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (['f', 'F', 'e', 'E', 'g', 'G'].indexOf(String.fromCharCode(next)) != -1) {
            // Float.
            var currArg = getNextArg('double');
            var argText;
  
            if (isNaN(currArg)) {
              argText = 'nan';
              flagZeroPad = false;
            } else if (!isFinite(currArg)) {
              argText = (currArg < 0 ? '-' : '') + 'inf';
              flagZeroPad = false;
            } else {
              var isGeneral = false;
              var effectivePrecision = Math.min(precision, 20);
  
              // Convert g/G to f/F or e/E, as per:
              // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
              if (next == 'g'.charCodeAt(0) || next == 'G'.charCodeAt(0)) {
                isGeneral = true;
                precision = precision || 1;
                var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                if (precision > exponent && exponent >= -4) {
                  next = ((next == 'g'.charCodeAt(0)) ? 'f' : 'F').charCodeAt(0);
                  precision -= exponent + 1;
                } else {
                  next = ((next == 'g'.charCodeAt(0)) ? 'e' : 'E').charCodeAt(0);
                  precision--;
                }
                effectivePrecision = Math.min(precision, 20);
              }
  
              if (next == 'e'.charCodeAt(0) || next == 'E'.charCodeAt(0)) {
                argText = currArg.toExponential(effectivePrecision);
                // Make sure the exponent has at least 2 digits.
                if (/[eE][-+]\d$/.test(argText)) {
                  argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                }
              } else if (next == 'f'.charCodeAt(0) || next == 'F'.charCodeAt(0)) {
                argText = currArg.toFixed(effectivePrecision);
              }
  
              var parts = argText.split('e');
              if (isGeneral && !flagAlternative) {
                // Discard trailing zeros and periods.
                while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                       (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                  parts[0] = parts[0].slice(0, -1);
                }
              } else {
                // Make sure we have a period in alternative mode.
                if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                // Zero pad until required precision.
                while (precision > effectivePrecision++) parts[0] += '0';
              }
              argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
              // Capitalize 'E' if needed.
              if (next == 'E'.charCodeAt(0)) argText = argText.toUpperCase();
  
              // Add sign.
              if (flagAlwaysSigned && currArg >= 0) {
                argText = '+' + argText;
              }
            }
  
            // Add padding.
            while (argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                  argText = argText[0] + '0' + argText.slice(1);
                } else {
                  argText = (flagZeroPad ? '0' : ' ') + argText;
                }
              }
            }
  
            // Adjust case.
            if (next < 'a'.charCodeAt(0)) argText = argText.toUpperCase();
  
            // Insert the result into the buffer.
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (next == 's'.charCodeAt(0)) {
            // String.
            var arg = getNextArg('i8*') || nullString;
            var argLength = _strlen(arg);
            if (precisionSet) argLength = Math.min(argLength, precision);
            if (!flagLeftAlign) {
              while (argLength < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
            for (var i = 0; i < argLength; i++) {
              ret.push(HEAPU8[((arg++)|0)]);
            }
            if (flagLeftAlign) {
              while (argLength < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
          } else if (next == 'c'.charCodeAt(0)) {
            // Character.
            if (flagLeftAlign) ret.push(getNextArg('i8'));
            while (--width > 0) {
              ret.push(' '.charCodeAt(0));
            }
            if (!flagLeftAlign) ret.push(getNextArg('i8'));
          } else if (next == 'n'.charCodeAt(0)) {
            // Write the length written so far to the next parameter.
            var ptr = getNextArg('i32*');
            HEAP32[((ptr)>>2)]=ret.length
          } else if (next == '%'.charCodeAt(0)) {
            // Literal percent sign.
            ret.push(curr);
          } else {
            // Unknown specifiers remain untouched.
            for (var i = startTextIndex; i < textIndex + 2; i++) {
              ret.push(HEAP8[(i)]);
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }
var _llvm_va_start; // stub for _llvm_va_start

  var _vfprintf=_fprintf;

  function _llvm_va_end() {}

  var _llvm_memcpy_p0i8_p0i8_i64=_memcpy;

  function _abort() {
      ABORT = true;
      throw 'abort() at ' + (new Error().stack);
    }

  var _abs=Math.abs;

  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      var flush = function(filedes) {
        // Right now we write all data directly, except for output devices.
        if (FS.streams[filedes] && FS.streams[filedes].object.output) {
          if (!FS.streams[filedes].isTerminal) { // don't flush terminals, it would cause a \n to also appear
            FS.streams[filedes].object.output(null);
          }
        }
      };
      try {
        if (stream === 0) {
          for (var i = 0; i < FS.streams.length; i++) if (FS.streams[i]) flush(i);
        } else {
          flush(stream);
        }
        return 0;
      } catch (e) {
        ___setErrNo(ERRNO_CODES.EIO);
        return -1;
      }
    }

  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return (tempRet0 = x*y > 4294967295,(x*y)>>>0);
    }

  
  function _memmove(dest, src, num) {
      dest = dest|0; src = src|0; num = num|0;
      if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
        // Unlikely case: Copy backwards in a safe manner
        src = (src + num)|0;
        dest = (dest + num)|0;
        while ((num|0) > 0) {
          dest = (dest - 1)|0;
          src = (src - 1)|0;
          num = (num - 1)|0;
          HEAP8[(dest)]=HEAP8[(src)];
        }
      } else {
        _memcpy(dest, src, num);
      }
    }var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }

  
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  
  
  function ___cxa_free_exception(ptr) {
      return _free(ptr);
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      __THREW__ = 0;
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)] + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }


  
  function _memset(ptr, value, num) {
      ptr = ptr|0; value = value|0; num = num|0;
      var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
      stop = (ptr + num)|0;
      if (num|0 >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        unaligned = ptr & 3;
        value4 = value | (value << 8) | (value << 16) | (value << 24);
        stop4 = stop & ~3;
        if (unaligned) {
          unaligned = (ptr + 4 - unaligned)|0;
          while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
            HEAP8[(ptr)]=value;
            ptr = (ptr+1)|0;
          }
        }
        while ((ptr|0) < (stop4|0)) {
          HEAP32[((ptr)>>2)]=value4;
          ptr = (ptr+4)|0;
        }
      }
      while ((ptr|0) < (stop|0)) {
        HEAP8[(ptr)]=value;
        ptr = (ptr+1)|0;
      }
    }var _llvm_memset_p0i8_i32=_memset;

  var _fabs=Math.abs;

  var _sqrt=Math.sqrt;

  var _atan=Math.atan;

  function _log10(x) {
      return Math.log(x) / Math.LN10;
    }

  var _atan2=Math.atan2;

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return Math.floor((Date.now() - _clock.start) * (1000/1000));
    }

  var _cos=Math.cos;

  var _sin=Math.sin;

  function _strcpy(pdest, psrc) {
      var i = 0;
      do {
        HEAP8[((pdest+i)|0)]=HEAP8[((psrc+i)|0)];
        i ++;
      } while (HEAP8[(((psrc)+(i-1))|0)] != 0);
      return pdest;
    }

  function _qsort(base, num, size, cmp) {
      if (num == 0 || size == 0) return;
      // forward calls to the JavaScript sort method
      // first, sort the items logically
      var comparator = function(x, y) {
        return Runtime.dynCall('iii', cmp, [x, y]);
      }
      var keys = [];
      for (var i = 0; i < num; i++) keys.push(i);
      keys.sort(function(a, b) {
        return comparator(base+a*size, base+b*size);
      });
      // apply the sort
      var temp = _malloc(num*size);
      _memcpy(temp, base, num*size);
      for (var i = 0; i < num; i++) {
        if (keys[i] == i) continue; // already in place
        _memcpy(base+i*size, temp+keys[i]*size, size);
      }
      _free(temp);
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }

  function ___cxa_get_exception_ptr(ptr) {
      return ptr;
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }function ___cxa_find_matching_catch(thrown, throwntype, typeArray) {
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return (tempRet0 = typeArray[i],thrown);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return (tempRet0 = throwntype,thrown);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }



  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_abort() {}

  function ___cxa_guard_release() {}

  function _pthread_cond_broadcast() {}

  function _pthread_cond_wait() {}

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;


  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      if (FS.streams[stream]) {
        c = unSign(c & 0xFF);
        FS.streams[stream].ungotten.push(c);
        return c;
      } else {
        return -1;
      }
    }

  
  
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead = 0;
        while (stream.ungotten.length && nbyte > 0) {
          HEAP8[((buf++)|0)]=stream.ungotten.pop()
          nbyte--;
          bytesRead++;
        }
        var contents = stream.object.contents;
        var size = Math.min(contents.length - offset, nbyte);
        if (contents.subarray || contents.slice) { // typed array or normal array
          for (var i = 0; i < size; i++) {
            HEAP8[(((buf)+(i))|0)]=contents[offset + i]
          }
        } else {
          for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
            HEAP8[(((buf)+(i))|0)]=contents.get(offset + i)
          }
        }
        bytesRead += size;
        return bytesRead;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead;
        if (stream.object.isDevice) {
          if (stream.object.input) {
            bytesRead = 0;
            while (stream.ungotten.length && nbyte > 0) {
              HEAP8[((buf++)|0)]=stream.ungotten.pop()
              nbyte--;
              bytesRead++;
            }
            for (var i = 0; i < nbyte; i++) {
              try {
                var result = stream.object.input();
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              HEAP8[(((buf)+(i))|0)]=result
            }
            return bytesRead;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var ungotSize = stream.ungotten.length;
          bytesRead = _pread(fildes, buf, nbyte, stream.position);
          if (bytesRead != -1) {
            stream.position += (stream.ungotten.length - ungotSize) + bytesRead;
          }
          return bytesRead;
        }
      }
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      if (!FS.streams[stream]) return -1;
      var streamObj = FS.streams[stream];
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _read(stream, _fgetc.ret, 1);
      if (ret == 0) {
        streamObj.eof = true;
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  
  function ___errno_location() {
      return ___setErrNo.ret;
    }var ___errno=___errno_location;

  
  
  var ERRNO_MESSAGES={1:"Operation not permitted",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"Input/output error",6:"No such device or address",8:"Exec format error",9:"Bad file descriptor",10:"No child processes",11:"Resource temporarily unavailable",12:"Cannot allocate memory",13:"Permission denied",14:"Bad address",16:"Device or resource busy",17:"File exists",18:"Invalid cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Inappropriate ioctl for device",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read-only file system",31:"Too many links",32:"Broken pipe",33:"Numerical argument out of domain",34:"Numerical result out of range",35:"Resource deadlock avoided",36:"File name too long",37:"No locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many levels of symbolic links",42:"No message of desired type",43:"Identifier removed",60:"Device not a stream",61:"No data available",62:"Timer expired",63:"Out of streams resources",67:"Link has been severed",71:"Protocol error",72:"Multihop attempted",74:"Bad message",75:"Value too large for defined data type",84:"Invalid or incomplete multibyte or wide character",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Protocol not supported",95:"Operation not supported",97:"Address family not supported by protocol",98:"Address already in use",99:"Cannot assign requested address",100:"Network is down",101:"Network is unreachable",102:"Network dropped connection on reset",103:"Software caused connection abort",104:"Connection reset by peer",105:"No buffer space available",106:"Transport endpoint is already connected",107:"Transport endpoint is not connected",110:"Connection timed out",111:"Connection refused",113:"No route to host",114:"Operation already in progress",115:"Operation now in progress",116:"Stale NFS file handle",122:"Disk quota exceeded",125:"Operation canceled",130:"Owner died",131:"State not recoverable"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          for (var i = 0; i < msg.length; i++) {
            HEAP8[(((strerrbuf)+(i))|0)]=msg.charCodeAt(i)
          }
          HEAP8[(((strerrbuf)+(i))|0)]=0
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }

  function _wmemmove() { throw 'wmemmove not implemented' }

  function _wmemset() { throw 'wmemset not implemented' }

  function _wmemcpy() { throw 'wmemcpy not implemented' }

  function _wcslen() { throw 'wcslen not implemented' }


  
  function _isxdigit(chr) {
      return (chr >= '0'.charCodeAt(0) && chr <= '9'.charCodeAt(0)) ||
             (chr >= 'a'.charCodeAt(0) && chr <= 'f'.charCodeAt(0)) ||
             (chr >= 'A'.charCodeAt(0) && chr <= 'F'.charCodeAt(0));
    }var _isxdigit_l=_isxdigit;

  
  function _isdigit(chr) {
      return chr >= '0'.charCodeAt(0) && chr <= '9'.charCodeAt(0);
    }var _isdigit_l=_isdigit;

  
  
  function __isFloat(text) {
      return !!(/^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?$/.exec(text));
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[' '.charCodeAt(0)] = 1;
        __scanString.whiteSpace['\t'.charCodeAt(0)] = 1;
        __scanString.whiteSpace['\n'.charCodeAt(0)] = 1;
        __scanString.whiteSpace[' '] = 1;
        __scanString.whiteSpace['\t'] = 1;
        __scanString.whiteSpace['\n'] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getNativeFieldSize('void*');
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        // TODO: Support strings like "%5c" etc.
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'c') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getNativeFieldSize('void*');
          fields++;
          next = get();
          HEAP8[(argPtr)]=next
          formatIndex += 2;
          continue;
        }
  
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= '0'.charCodeAt(0) &&
                 format[formatIndex].charCodeAt(0) <= '9'.charCodeAt(0)) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if(format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' || type == 'E') {
            var last = 0;
            next = get();
            while (next > 0) {
              buffer.push(String.fromCharCode(next));
              if (__isFloat(buffer.join(''))) {
                last = buffer.length;
              }
              next = get();
            }
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0)) ||
                                                                     (first && next == '-'.charCodeAt(0)))) ||
                   (type === 'x' && (next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0) ||
                                     next >= 'a'.charCodeAt(0) && next <= 'f'.charCodeAt(0) ||
                                     next >= 'A'.charCodeAt(0) && next <= 'F'.charCodeAt(0)))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getNativeFieldSize('void*');
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if(longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,Math.min(Math.floor((parseInt(text, 10))/4294967296), 4294967295)>>>0],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'f':
            case 'e':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                (HEAPF64[(tempDoublePtr)>>3]=parseFloat(text),HEAP32[((argPtr)>>2)]=HEAP32[((tempDoublePtr)>>2)],HEAP32[(((argPtr)+(4))>>2)]=HEAP32[(((tempDoublePtr)+(4))>>2)])
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex] in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      var get = function() { return HEAP8[(((s)+(index++))|0)]; };
      var unget = function() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function __Z7catopenPKci() { throw 'catopen not implemented' }

  function __Z7catgetsP8_nl_catdiiPKc() { throw 'catgets not implemented' }

  function __Z8catcloseP8_nl_catd() { throw 'catclose not implemented' }

  function _newlocale(mask, locale, base) {
      return 0;
    }

  function _freelocale(locale) {}

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  function _strftime(s, maxsize, format, timeptr) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      // TODO: Implement.
      return 0;
    }var _strftime_l=_strftime;

  
  
  
  function _isspace(chr) {
      return chr in { 32: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0 };
    }function _strtod(str, endptr) {
      var origin = str;
  
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == '-'.charCodeAt(0)) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == '+'.charCodeAt(0)) {
        str++;
      }
  
      var chr;
      var ret = 0;
  
      // Get whole part.
      var whole = false;
      while(1) {
        chr = HEAP8[(str)];
        if (!_isdigit(chr)) break;
        whole = true;
        ret = ret*10 + chr - '0'.charCodeAt(0);
        str++;
      }
  
      // Get fractional part.
      var fraction = false;
      if (HEAP8[(str)] == '.'.charCodeAt(0)) {
        str++;
        var mul = 1/10;
        while(1) {
          chr = HEAP8[(str)];
          if (!_isdigit(chr)) break;
          fraction = true;
          ret += mul*(chr - '0'.charCodeAt(0));
          mul /= 10;
          str++;
        }
      }
  
      if (!whole && !fraction) {
        if (endptr) {
          HEAP32[((endptr)>>2)]=origin
        }
        return 0;
      }
  
      // Get exponent part.
      chr = HEAP8[(str)];
      if (chr == 'e'.charCodeAt(0) || chr == 'E'.charCodeAt(0)) {
        str++;
        var exponent = 0;
        var expNegative = false;
        chr = HEAP8[(str)];
        if (chr == '-'.charCodeAt(0)) {
          expNegative = true;
          str++;
        } else if (chr == '+'.charCodeAt(0)) {
          str++;
        }
        chr = HEAP8[(str)];
        while(1) {
          if (!_isdigit(chr)) break;
          exponent = exponent*10 + chr - '0'.charCodeAt(0);
          str++;
          chr = HEAP8[(str)];
        }
        if (expNegative) exponent = -exponent;
        ret *= Math.pow(10, exponent);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
  
      return ret * multiplier;
    }var _strtold=_strtod;var _strtold_l=_strtold;

  
  
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var start = str;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == '-'.charCodeAt(0)) {
        str++;
      } else if (HEAP8[(str)] == '+'.charCodeAt(0)) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == '0'.charCodeAt(0)) {
          if (HEAP8[((str+1)|0)] == 'x'.charCodeAt(0) ||
              HEAP8[((str+1)|0)] == 'X'.charCodeAt(0)) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      }
      if (!finalBase) finalBase = 10;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return (tempRet0 = 0,0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
  
      try {
        i64Math.fromString(Pointer_stringify(start, str - start), finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return (tempRet0 = HEAP32[(((tempDoublePtr)+(4))>>2)],HEAP32[((tempDoublePtr)>>2)]);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;

  function _uselocale(locale) {
      return 0;
    }

  function _mbsrtowcs() { throw 'mbsrtowcs not implemented' }

  function _mbrlen() { throw 'mbrlen not implemented' }

  function ___locale_mb_cur_max() { throw '__locale_mb_cur_max not implemented' }

  function _mbtowc(pwc, pmb, maxx) {
      // XXX doesn't really handle multibyte at all
      if (!pmb) return 0;
      maxx = Math.min(85, maxx);
      var i;
      for (i = 0; i < maxx; i++) {
        var curr = HEAP8[(pmb)];
        if (pwc) {
          HEAP8[(pwc)]=curr;
          HEAP8[(((pwc)+(1))|0)]=0;
          pwc += 2;
        }
        pmb++;
        if (!curr) break;
      }
      return i;
    }

  function _mbrtowc() { throw 'mbrtowc not implemented' }

  function _mbsnrtowcs() { throw 'mbsnrtowcs not implemented' }

  function _wcrtomb(s, wc, ps) {
      // XXX doesn't really handle multibyte at all
      if (s) {
        HEAP8[(s)]=wc;
      }
      return 1;
    }

  function _wcsnrtombs() { throw 'wcsnrtombs not implemented' }

  
  
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }var _vasprintf=_asprintf;

  var _vsnprintf=_snprintf;

  var _vsprintf=_sprintf;

  var _vsscanf=_sscanf;

  var _llvm_memset_p0i8_i64=_memset;

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
  
      // We need to make sure no one else allocates unfreeable memory!
      // We must control this entirely. So we don't even need to do
      // unfreeable allocations - the HEAP is ours, from STATICTOP up.
      // TODO: We could in theory slice off the top of the HEAP when
      //       sbrk gets a negative increment in |bytes|...
      var self = _sbrk;
      if (!self.called) {
        STATICTOP = alignMemoryPage(STATICTOP); // make sure we start out aligned
        self.called = true;
        _sbrk.DYNAMIC_START = STATICTOP;
      }
      var ret = STATICTOP;
      if (bytes != 0) Runtime.staticAlloc(bytes);
      return ret;  // Previous break location.
    }

  
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc('\n'.charCodeAt(0), stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }

  var _llvm_memmove_p0i8_p0i8_i64=_memmove;






  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],ensureObjects:function () {
        if (Browser.ensured) return;
        Browser.ensured = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : console.log("warning: cannot create object URLs");
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        function getMimetype(name) {
          return {
            'jpg': 'image/jpeg',
            'jpeg': 'image/jpeg',
            'png': 'image/png',
            'bmp': 'image/bmp',
            'ogg': 'audio/ogg',
            'wav': 'audio/wav',
            'mp3': 'audio/mpeg'
          }[name.substr(-3)];
          return ret;
        }
  
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = [];
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/.exec(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            setTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
      },createContext:function (canvas, useWebGL, setInModule) {
        var ctx;
        try {
          if (useWebGL) {
            ctx = canvas.getContext('experimental-webgl', {
              alpha: false,
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},requestFullScreen:function () {
        var canvas = Module['canvas'];
        function fullScreenChange() {
          var isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                        canvas['mozRequestPointerLock'] ||
                                        canvas['webkitRequestPointerLock'];
            canvas.requestPointerLock();
            isFullScreen = true;
          }
          if (Module['onFullScreen']) Module['onFullScreen'](isFullScreen);
        }
  
        document.addEventListener('fullscreenchange', fullScreenChange, false);
        document.addEventListener('mozfullscreenchange', fullScreenChange, false);
        document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen(); 
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200) {
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      }};
__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___setErrNo(0);
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function() { Browser.requestFullScreen() };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  


var FUNCTION_TABLE = [0,0,__ZNSt3__18messagesIwED0Ev,0,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNKSt3__18numpunctIcE12do_falsenameEv,0,__ZNSt11logic_errorD1Ev,0,__ZNKSt3__120__time_get_c_storageIwE3__rEv,0,__ZNSt3__18messagesIcED0Ev,0,__ZNSt3__16locale5facetD1Ev,0,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNK5Avoid8ShapeRef8positionEv,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,0,__ZN5Avoid19NudgingShiftSegment9highPointEv,0,__ZNSt12length_errorD0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,0,__ZNK5Avoid21HyperEdgeShiftSegment9immovableEv,0,__ZNKSt3__15ctypeIcE10do_toupperEc,0,__ZNSt3__16locale2id6__initEv,0,__ZNSt3__110__stdinbufIcED1Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__110__stdinbufIcE9pbackfailEi,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,0,__ZNSt3__110__stdinbufIwED0Ev,0,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI10_mbstate_tEEj,0,__ZNSt11logic_errorD0Ev,0,__ZNSt13runtime_errorD1Ev,0,__ZNKSt3__17collateIcE7do_hashEPKcS3_,0,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,0,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,0,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,0,__ZNKSt3__17codecvtIcc10_mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,0,__ZNK5Avoid22TopologyAddonInterface18outputDeletionCodeEP7__sFILE,0,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,0,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,0,__ZNK5Avoid19NudgingShiftSegment8lowPointEv,0,__ZNSt3__17collateIcED1Ev,0,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNSt12length_errorD1Ev,0,__ZNSt3__16locale5facetD0Ev,0,__ZNKSt3__112__do_message7messageEi,0,__ZNKSt3__120__time_get_c_storageIwE3__cEv,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,0,__ZNSt3__15ctypeIcED0Ev,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,0,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNK5Avoid19NudgingShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,0,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,0,__ZNKSt3__17codecvtIwc10_mbstate_tE11do_encodingEv,0,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,0,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,0,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE13do_max_lengthEv,0,__ZNK5Avoid7Polygon2atEj,0,__ZNKSt3__17codecvtIwc10_mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,0,__ZNSt3__18messagesIcED1Ev,0,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,0,__ZNKSt3__18numpunctIwE11do_groupingEv,0,__ZNSt3__16locale5facet16__on_zero_sharedEv,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,0,__ZN5Avoid22TopologyAddonInterfaceD1Ev,0,__ZNKSt3__15ctypeIwE8do_widenEc,0,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,0,__ZNSt3__18numpunctIcED1Ev,0,__ZNSt3__110__stdinbufIcE5uflowEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,0,__ZNK5Avoid7Polygon4sizeEv,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,0,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,0,__ZNSt3__17codecvtIDsc10_mbstate_tED1Ev,0,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,0,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,0,__ZNKSt3__17codecvtIwc10_mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,0,__ZNKSt3__15ctypeIcE8do_widenEc,0,__ZNSt3__110moneypunctIwLb0EED0Ev,0,__ZNSt3__17codecvtIwc10_mbstate_tED1Ev,0,__ZNKSt3__17codecvtIDic10_mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZN5Avoid7Polygon5clearEv,0,__ZNK5Avoid22TopologyAddonInterface5cloneEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,0,__ZNK5Avoid19NudgingShiftSegment9immovableEv,0,__ZN5Avoid8ObstacleD0Ev,0,__ZN5Avoid9RectangleD1Ev,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,0,__ZN5Avoid13manhattanDistERKNS_5PointES2_,0,__ZNSt3__17codecvtIcc10_mbstate_tED0Ev,0,__ZNKSt3__18numpunctIcE11do_groupingEv,0,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,0,__ZN10__cxxabiv119__pointer_type_infoD0Ev,0,__ZN5Avoid22UnsatisfiableExceptionD1Ev,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,0,__ZNKSt3__120__time_get_c_storageIwE3__xEv,0,__ZNKSt3__17codecvtIcc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNSt3__110__stdinbufIwE9pbackfailEj,0,__ZN10__cxxabiv123__fundamental_type_infoD1Ev,0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,0,__ZNSt3__18numpunctIcED0Ev,0,__ZNSt3__111__stdoutbufIcE8overflowEi,0,__ZNSt3__119__iostream_categoryD1Ev,0,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,0,__ZNSt3__17codecvtIDic10_mbstate_tED1Ev,0,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,0,__ZN5Avoid7PolygonD1Ev,0,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,0,__ZNKSt3__15ctypeIwE10do_toupperEw,0,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,0,__ZNKSt3__17codecvtIDic10_mbstate_tE11do_encodingEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,0,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,0,__ZNK5Avoid21HyperEdgeShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj,0,__ZNSt3__17collateIwED1Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,0,__ZNKSt8bad_cast4whatEv,0,__ZNSt3__15ctypeIcED1Ev,0,__ZNSt3__110moneypunctIcLb0EED1Ev,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,0,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,0,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__15ctypeIwED0Ev,0,__ZNKSt13runtime_error4whatEv,0,_free,0,__ZN5Avoid8ShapeRefD1Ev,0,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,___cxx_global_array_dtor132,0,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,0,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,0,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,0,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,0,__ZNSt3__110__stdinbufIwED1Ev,0,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,0,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,0,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZNKSt3__120__time_get_c_storageIcE3__xEv,0,__ZNSt3__17collateIwED0Ev,0,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE16do_always_noconvEv,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNK5Avoid11JunctionRef10outputCodeEP7__sFILE,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,0,__ZNSt3__18ios_base4InitD1Ev,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,0,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNKSt3__17codecvtIcc10_mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,0,__ZN5Avoid8ShapeRefD0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,0,__ZN5Avoid21HyperEdgeShiftSegmentD1Ev,0,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZN5Avoid21HyperEdgeShiftSegment9highPointEv,0,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,0,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,0,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,0,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,0,__ZNKSt3__120__time_get_c_storageIcE3__XEv,0,__ZN5Avoid19NudgingShiftSegmentD1Ev,0,__ZNKSt3__15ctypeIwE9do_narrowEwc,0,__ZNSt3__112__do_messageD1Ev,0,__ZNSt3__111__stdoutbufIwE4syncEv,0,__ZN5Avoid14compare_eventsEPKvS1_,0,__ZNSt3__110moneypunctIwLb0EED1Ev,0,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,0,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,0,__ZNKSt3__17codecvtIcc10_mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,0,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,0,__ZN10__cxxabiv121__vmi_class_type_infoD1Ev,0,__ZN10__cxxabiv120__si_class_type_infoD1Ev,0,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__17collateIwE7do_hashEPKwS3_,0,__ZN5Avoid16PolygonInterfaceD1Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI10_mbstate_tEEj,0,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,0,__ZNK5Avoid11JunctionRef8positionEv,0,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,0,__ZNSt3__18ios_baseD0Ev,0,__ZN5Avoid4NodeD1Ev,0,__ZNSt3__110moneypunctIcLb1EED0Ev,0,__ZNSt9bad_allocD0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,0,__ZNKSt3__17codecvtIwc10_mbstate_tE16do_always_noconvEv,0,__ZNKSt3__120__time_get_c_storageIcE3__rEv,0,__ZN5Avoid22TopologyAddonInterface25improveOrthogonalTopologyEPNS_6RouterE,0,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,0,__ZNK5Avoid22TopologyAddonInterface10outputCodeEP7__sFILE,0,__ZN5Avoid16PolygonInterfaceD0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,0,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,0,__ZNKSt3__17codecvtIDic10_mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,0,__ZNKSt3__17codecvtIDic10_mbstate_tE13do_max_lengthEv,0,__ZNKSt3__17codecvtIDic10_mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,0,__ZNSt9bad_allocD1Ev,0,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev,0,__ZN10__cxxabiv120__si_class_type_infoD0Ev,0,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,0,__ZN5Avoid22TopologyAddonInterfaceD0Ev,0,__ZNKSt3__15ctypeIcE10do_tolowerEc,0,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,0,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,0,__ZNSt3__17codecvtIwc10_mbstate_tED0Ev,0,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,0,__ZNSt3__17codecvtIDsc10_mbstate_tED0Ev,0,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,0,__ZNSt3__16locale5__impD1Ev,0,__ZNSt8bad_castD1Ev,0,__ZNKSt3__18numpunctIwE11do_truenameEv,0,__ZNSt3__18ios_baseD1Ev,0,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,0,__ZNSt3__110__stdinbufIwE9underflowEv,0,__ZNSt3__18ios_base7failureD0Ev,0,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNKSt3__15ctypeIwE5do_isEtw,0,__ZNSt3__110moneypunctIwLb1EED0Ev,0,__ZN10__cxxabiv119__pointer_type_infoD1Ev,0,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,0,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,0,__ZNSt3__114error_categoryD1Ev,0,__ZNK5Avoid6Router11newObjectIdEv,0,__ZNKSt3__17codecvtIDic10_mbstate_tE16do_always_noconvEv,0,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,0,__ZN5Avoid11JunctionRefD0Ev,0,__ZNKSt3__17codecvtIwc10_mbstate_tE13do_max_lengthEv,0,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,0,___cxx_global_array_dtor108,0,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,0,__ZNSt3__17codecvtIDic10_mbstate_tED0Ev,0,__ZNKSt3__18messagesIcE8do_closeEi,0,__ZN5Avoid12ShiftSegmentD1Ev,0,__ZNSt3__111__stdoutbufIcED1Ev,0,__ZN5Avoid7PolygonD0Ev,0,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,0,__ZNSt3__16locale5__impD0Ev,0,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZNKSt3__119__iostream_category4nameEv,0,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,0,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,0,__ZNSt3__18ios_base7failureD1Ev,0,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,0,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNSt8bad_castD0Ev,0,__ZNKSt3__15ctypeIcE9do_narrowEcc,0,__ZNSt3__117__widen_from_utf8ILj32EED1Ev,0,__ZNSt3__112__do_nothingEPv,0,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNK5Avoid21HyperEdgeShiftSegment8lowPointEv,0,___cxx_global_array_dtor83,0,___cxx_global_array_dtor80,0,___cxx_global_array_dtor147,0,__ZNSt3__110moneypunctIcLb0EED0Ev,0,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNSt3__18numpunctIwED1Ev,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,0,__ZNKSt3__18numpunctIwE12do_falsenameEv,0,__ZNSt3__17collateIcED0Ev,0,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,0,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,0,__ZNSt3__111__stdoutbufIcED0Ev,0,__ZN10__cxxabiv117__class_type_infoD1Ev,0,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,0,__ZNSt3__112system_errorD0Ev,0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,0,__ZNSt3__111__stdoutbufIwED0Ev,0,__ZNK5Avoid7Polygon2idEv,0,__ZNSt3__110__stdinbufIwE5uflowEv,0,__ZNKSt3__18numpunctIcE11do_truenameEv,0,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI10_mbstate_tEEj,0,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,0,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,0,__ZN5Avoid19NudgingShiftSegmentD0Ev,0,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZN5Avoid19NudgingShiftSegment8lowPointEv,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,0,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,0,__ZN5Avoid21HyperEdgeShiftSegmentD0Ev,0,___cxa_pure_virtual,0,__ZNSt3__18numpunctIwED0Ev,0,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,0,__ZNKSt3__15ctypeIwE10do_tolowerEw,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,0,__ZNSt3__111__stdoutbufIcE4syncEv,0,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev,0,__ZNKSt3__17codecvtIwc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,0,__ZNSt3__112__do_messageD0Ev,0,__ZN5Avoid12ShiftSegmentD0Ev,0,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,0,__ZNKSt3__17codecvtIwc10_mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,0,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,0,__ZN5Avoid21HyperEdgeShiftSegment8lowPointEv,0,__ZNKSt3__17collateIwE12do_transformEPKwS3_,0,__ZNSt3__114error_categoryD0Ev,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,0,__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,0,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,0,__ZNK5Avoid19NudgingShiftSegment9highPointEv,0,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,0,__ZNKSt3__17codecvtIDic10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,0,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,0,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,0,__ZNSt3__110__stdinbufIcE9underflowEv,0,__ZNKSt3__114error_category23default_error_conditionEi,0,__ZNKSt3__17codecvtIcc10_mbstate_tE13do_max_lengthEv,0,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZN5Avoid4NodeD0Ev,0,__ZNKSt3__17codecvtIcc10_mbstate_tE16do_always_noconvEv,0,__ZNKSt3__18messagesIwE8do_closeEi,0,__ZNKSt9bad_alloc4whatEv,0,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,0,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,0,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,0,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,0,__ZNK5Avoid21HyperEdgeShiftSegment9highPointEv,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,0,__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,0,__ZNKSt3__17codecvtIcc10_mbstate_tE11do_encodingEv,0,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,0,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,0,__ZNKSt11logic_error4whatEv,0,__ZNKSt3__119__iostream_category7messageEi,0,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,0,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,0,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,0,__ZNKSt3__17collateIcE12do_transformEPKcS3_,0,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,0,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,0,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,0,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,0,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,0,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,0,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,0,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,0,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,0,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,0,__ZNSt3__110__stdinbufIcED0Ev,0,__ZN5Avoid13euclideanDistERKNS_5PointES2_,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,0,__ZN5Avoid9RectangleD0Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__119__iostream_categoryD0Ev,0,__ZN5Avoid11JunctionRefD1Ev,0,__ZNSt3__110moneypunctIwLb1EED1Ev,0,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,0,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,0,__ZN5Avoid6RouterD1Ev,0,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt3__110moneypunctIcLb1EED1Ev,0,__ZNK5Avoid7Polygon5emptyEv,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,0,__ZNKSt3__120__time_get_c_storageIcE3__cEv,0,__ZN5Avoid8ObstacleD1Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,0,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,0,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNKSt3__120__time_get_c_storageIwE3__XEv,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__17codecvtIcc10_mbstate_tED1Ev,0,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,0,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,0,__ZNSt3__111__stdoutbufIwE8overflowEj,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,0,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,0,___cxx_global_array_dtor,0,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZN10__cxxabiv117__class_type_infoD0Ev,0,__ZNSt3__18messagesIwED1Ev,0,__ZNSt3__111__stdoutbufIwED1Ev,0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,0,__ZNSt3__112system_errorD1Ev,0,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,0,__ZN5Avoid6RouterD0Ev,0,__ZNK5Avoid8ShapeRef10outputCodeEP7__sFILE,0,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,0,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,0,__ZNSt3__15ctypeIwED1Ev,0,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,0,__ZNKSt3__17codecvtIDsc10_mbstate_tE11do_encodingEv,0,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,0,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,0,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,0,__ZNSt13runtime_errorD0Ev,0,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,0,__ZNSt3__116__narrow_to_utf8ILj32EED1Ev,0];

function __ZN5Avoid16PolygonInterfaceD1Ev(r1) {
  return;
}
function __ZN5Avoid16PolygonInterfaceC2ERKS0_(r1) {
  HEAP32[r1 >> 2] = 5267564;
  return;
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP8[r2] = HEAP8[r1];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 1 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 1 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function _createRouter() {
  var r1;
  r1 = __Znwj(892);
  __ZN5Avoid6RouterC1Ej(r1);
  return r1;
}
Module["_createRouter"] = _createRouter;
function _createShape(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 92 | 0;
  r7 = r6;
  r8 = r6 + 44;
  r9 = r6 + 68;
  __ZN5Avoid5PointC1Edd(r8, r2, r3);
  __ZN5Avoid5PointC1Edd(r9, r4, r5);
  __ZN5Avoid9RectangleC1ERKNS_5PointES3_(r7, r8, r9);
  r9 = __Znwj(96);
  __ZN5Avoid8ShapeRefC1EPNS_6RouterERNS_7PolygonEj(r9, r1, r7 | 0);
  __ZN5Avoid9RectangleD1Ev(r7);
  STACKTOP = r6;
  return r9;
}
Module["_createShape"] = _createShape;
function __ZN5Avoid9RectangleD1Ev(r1) {
  __ZN5Avoid9RectangleD2Ev(r1);
  return;
}
function _moveShape(r1, r2, r3, r4) {
  __ZN5Avoid6Router9moveShapeEPNS_8ShapeRefEdd(r1, r2, r3, r4);
  return;
}
Module["_moveShape"] = _moveShape;
function _moveShapeRect(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 92 | 0;
  r8 = r7;
  r9 = r7 + 44;
  r10 = r7 + 68;
  __ZN5Avoid5PointC1Edd(r9, r3, r4);
  __ZN5Avoid5PointC1Edd(r10, r5, r6);
  __ZN5Avoid9RectangleC1ERKNS_5PointES3_(r8, r9, r10);
  __ZN5Avoid6Router9moveShapeEPNS_8ShapeRefERKNS_7PolygonEb(r1, r2, r8 | 0);
  __ZN5Avoid9RectangleD1Ev(r8);
  STACKTOP = r7;
  return;
}
Module["_moveShapeRect"] = _moveShapeRect;
function _processTransaction(r1) {
  __ZN5Avoid6Router18processTransactionEv(r1);
  return;
}
Module["_processTransaction"] = _processTransaction;
function _disconnect(r1, r2) {
  __ZN5Avoid6Router15deleteConnectorEPNS_7ConnRefE(r1, r2);
  return;
}
Module["_disconnect"] = _disconnect;
function _displayRoute(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r5 = r4;
  __ZN5Avoid7PolygonC1ERKS0_(r5, __ZN5Avoid7ConnRef12displayRouteEv(r1));
  r1 = r2;
  r2 = __ZNK5Avoid7Polygon4sizeEv(r5) << 1;
  if ((r3 | 0) != 0 & (r2 | 0) != 0) {
    r6 = 0;
  } else {
    r7 = r2 >>> 0 > r3 >>> 0;
    r8 = r7 ? r3 : r2;
    __ZN5Avoid7PolygonD1Ev(r5);
    STACKTOP = r4;
    return r8;
  }
  while (1) {
    r9 = __ZNK5Avoid7Polygon2atEj(r5, r6 >>> 1);
    r10 = r9 | 0;
    r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r10 = r9 + 8 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r10 = (r6 << 3) + r1 | 0;
    HEAPF64[tempDoublePtr >> 3] = r11, HEAP32[r10 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    r10 = ((r6 | 1) << 3) + r1 | 0;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r10 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    r10 = r6 + 2 | 0;
    if (r10 >>> 0 < r3 >>> 0 & r10 >>> 0 < r2 >>> 0) {
      r6 = r10;
    } else {
      break;
    }
  }
  r7 = r2 >>> 0 > r3 >>> 0;
  r8 = r7 ? r3 : r2;
  __ZN5Avoid7PolygonD1Ev(r5);
  STACKTOP = r4;
  return r8;
}
Module["_displayRoute"] = _displayRoute;
function __ZN5Avoid7PolygonC1ERKS0_(r1, r2) {
  __ZN5Avoid7PolygonC2ERKS0_(r1, r2);
  return;
}
function __ZN5Avoid7PolygonD1Ev(r1) {
  __ZN5Avoid7PolygonD2Ev(r1);
  return;
}
function _createShapeConnectionPin(r1, r2, r3, r4) {
  var r5;
  r5 = __Znwj(72);
  __ZN5Avoid18ShapeConnectionPinC1EPNS_8ShapeRefEjdddj(r5, r1, r2, r3, r4);
  return r5;
}
Module["_createShapeConnectionPin"] = _createShapeConnectionPin;
function _shapeConnectionPinSetExclusive(r1, r2) {
  __ZN5Avoid18ShapeConnectionPin12setExclusiveEb(r1, (r2 | 0) != 0);
  return;
}
Module["_shapeConnectionPinSetExclusive"] = _shapeConnectionPinSetExclusive;
function __ZN5Avoid7PolygonD2Ev(r1) {
  HEAP32[r1 >> 2] = 5267356;
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED1Ev(r1 + 32 | 0);
  __ZNSt3__16vectorIcNS_9allocatorIcEEED1Ev(r1 + 20 | 0);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r1 + 8 | 0);
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEED1Ev(r1) {
  __ZNSt3__16vectorIcNS_9allocatorIcEEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIN5Avoid5PointENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIN5Avoid5PointENS_9allocatorIS2_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEED2Ev(r1) {
  __ZNSt3__113__vector_baseIcNS_9allocatorIcEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIcNS_9allocatorIcEEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZN5Avoid7PolygonC2ERKS0_(r1, r2) {
  __ZN5Avoid16PolygonInterfaceC2ERKS0_(r1 | 0);
  HEAP32[r1 >> 2] = 5267356;
  HEAP32[r1 + 4 >> 2] = HEAP32[r2 + 4 >> 2];
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r1 + 8 | 0, r2 + 8 | 0);
  __ZNSt3__16vectorIcNS_9allocatorIcEEEC1ERKS3_(r1 + 20 | 0, r2 + 20 | 0);
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEEC1ERKS7_(r1 + 32 | 0, r2 + 32 | 0);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r1, r2) {
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC2ERKS5_(r1, r2);
  return;
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEEC1ERKS3_(r1, r2) {
  __ZNSt3__16vectorIcNS_9allocatorIcEEEC2ERKS3_(r1, r2);
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEEC1ERKS7_(r1, r2) {
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEEC2ERKS7_(r1, r2);
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEEC2ERKS7_(r1, r2) {
  var r3, r4, r5;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2 + 4 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r2 | 0;
  r2 = HEAP32[r5 >> 2];
  if ((r4 | 0) == (r2 | 0)) {
    return;
  }
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE8allocateEj(r1, (r4 - r2 | 0) / 28 & -1);
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, HEAP32[r5 >> 2], HEAP32[r3 >> 2]);
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r6 = (r2 + 4 | 0) >> 2;
      r7 = (r1 + 4 | 0) >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 28 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 28 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEEC2ERKS3_(r1, r2) {
  var r3, r4, r5;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2 + 4 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r2 | 0;
  r2 = HEAP32[r5 >> 2];
  if ((r4 | 0) == (r2 | 0)) {
    return;
  }
  __ZNSt3__16vectorIcNS_9allocatorIcEEE8allocateEj(r1, r4 - r2 | 0);
  __ZNSt3__16vectorIcNS_9allocatorIcEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_(r1, HEAP32[r5 >> 2], HEAP32[r3 >> 2]);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC2ERKS5_(r1, r2) {
  var r3, r4, r5;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2 + 4 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r2 | 0;
  r2 = HEAP32[r5 >> 2];
  if ((r4 | 0) == (r2 | 0)) {
    return;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8allocateEj(r1, (r4 - r2 | 0) / 24 & -1);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, HEAP32[r5 >> 2], HEAP32[r3 >> 2]);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2 >> 2;
      r7 = r1 >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 24 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 24 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZN5Avoid16PolygonInterfaceD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid9RectangleD2Ev(r1) {
  __ZN5Avoid7PolygonD2Ev(r1 | 0);
  return;
}
function __ZN5Avoid18ShapeConnectionPinC1EPNS_8ShapeRefEjdddj(r1, r2, r3, r4, r5) {
  __ZN5Avoid18ShapeConnectionPinC2EPNS_8ShapeRefEjdddj(r1, r2, r3, r4, r5);
  return;
}
function __ZN5Avoid18ShapeConnectionPinC2EPNS_8ShapeRefEjdddj(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 76 | 0;
  r7 = r6;
  r8 = r6 + 8;
  r9 = r6 + 32;
  r10 = (r1 + 4 | 0) >> 2;
  HEAP32[r10] = r2;
  HEAP32[r1 + 8 >> 2] = 0;
  r2 = r1 + 12 | 0;
  HEAP32[r2 >> 2] = r3;
  r3 = r1 + 16 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r3 = r1 + 24 | 0;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r3 = r1 + 32 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 40 >> 2] = 0;
  r3 = r1 + 44 | 0;
  HEAP8[r3] = 1;
  r11 = r1 + 48 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r11 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1 + 56 | 0);
  r11 = (r1 + 68 | 0) >> 2;
  HEAP32[r11] = 0;
  if ((HEAP32[r10] | 0) == 0) {
    ___assert_func(5253024, 53, 5259924, 5250120);
  }
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    ___assert_func(5253024, 54, 5259924, 5248448);
  }
  if (r4 < 0 | r4 > 1) {
    __ZN5Avoid10err_printfEPKcz(5247076, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  }
  if (r5 < 0 | r5 > 1) {
    __ZN5Avoid10err_printfEPKcz(5246176, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  }
  r5 = HEAP32[r10];
  r4 = (r1 | 0) >> 2;
  HEAP32[r4] = __ZNK5Avoid8Obstacle6routerEv(HEAP32[r5 + 4 >> 2]);
  __ZN5Avoid8Obstacle16addConnectionPinEPNS_18ShapeConnectionPinE(r5, r1);
  __ZN5Avoid6VertIDC1Ejtt(r7, __ZNK5Avoid8Obstacle2idEv(HEAP32[HEAP32[r10] + 8 >> 2]), 9, 5);
  r10 = __Znwj(140);
  r5 = HEAP32[r4];
  __ZN5Avoid7PolygonC1Ev(r9);
  __ZNK5Avoid18ShapeConnectionPin8positionERKNS_7PolygonE(r8, r1, r9);
  __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r10, r5, r7, r8, 1);
  HEAP32[r11] = r10;
  __ZN5Avoid7PolygonD1Ev(r9);
  r9 = __ZNK5Avoid18ShapeConnectionPin10directionsEv(r1);
  HEAP32[HEAP32[r11] + 120 >> 2] = r9;
  r9 = HEAP32[r11];
  if ((HEAP32[r9 + 120 >> 2] | 0) == 15) {
    HEAP8[r3] = 0;
  }
  if ((HEAP8[HEAP32[r4] + 888 | 0] & 1) << 24 >> 24 == 0) {
    STACKTOP = r6;
    return;
  }
  __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(r9, 0);
  STACKTOP = r6;
  return;
}
__ZN5Avoid18ShapeConnectionPinC2EPNS_8ShapeRefEjdddj["X"] = 1;
function __ZN5Avoid10err_printfEPKcz(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  HEAP32[r4 >> 2] = r2;
  _fprintf(HEAP32[_stderr >> 2], r1, HEAP32[r4 >> 2]);
  STACKTOP = r3;
  return;
}
function _connect(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 144 | 0;
  r7 = r6;
  r8 = r6 + 48;
  r9 = r6 + 72;
  r10 = r6 + 120;
  __ZN5Avoid5PointC1Edd(r8, r2, r3);
  __ZN5Avoid7ConnEndC1ERKNS_5PointE(r7, r8);
  __ZN5Avoid5PointC1Edd(r10, r4, r5);
  __ZN5Avoid7ConnEndC1ERKNS_5PointE(r9, r10);
  r10 = __Znwj(172);
  __ZN5Avoid7ConnRefC1EPNS_6RouterERKNS_7ConnEndES5_j(r10, r1, r7, r9);
  __ZN5Avoid7ConnEndD1Ev(r9);
  __ZN5Avoid7ConnEndD1Ev(r7);
  STACKTOP = r6;
  return r10;
}
Module["_connect"] = _connect;
function _connectShapes(r1, r2, r3, r4, r5) {
  var r6, r7, r8;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 96 | 0;
  r7 = r6;
  r8 = r6 + 48;
  __ZN5Avoid7ConnEndC1EPNS_8ShapeRefEj(r7, r2, r4);
  __ZN5Avoid7ConnEndC1EPNS_8ShapeRefEj(r8, r3, r5);
  r5 = __Znwj(172);
  __ZN5Avoid7ConnRefC1EPNS_6RouterERKNS_7ConnEndES5_j(r5, r1, r7, r8);
  __ZN5Avoid7ConnEndD1Ev(r8);
  __ZN5Avoid7ConnEndD1Ev(r7);
  STACKTOP = r6;
  return r5;
}
Module["_connectShapes"] = _connectShapes;
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 153391689) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 * 28 & -1);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = r3 + (r2 * 28 & -1) | 0;
    return;
  }
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEE8allocateEj(r1, r2) {
  var r3;
  if ((r2 | 0) < 0) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = r3 + r2 | 0;
    return;
  }
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 178956970) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 * 24 & -1);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = r3 + (r2 * 24 & -1) | 0;
    return;
  }
}
function __ZNK5Avoid18ShapeConnectionPin10directionsEv(r1) {
  var r2, r3, r4, r5;
  r2 = HEAP32[r1 + 40 >> 2];
  if ((r2 | 0) != 0) {
    return r2;
  }
  r2 = r1 + 16 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r3 == 0) {
      r4 = 4;
    } else {
      if (r3 != 1) {
        r4 = 0;
        break;
      }
      r4 = 8;
    }
  } while (0);
  r3 = r1 + 24 | 0;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r1 == 0) {
      r5 = r4 | 1;
    } else {
      if (r1 != 1) {
        r5 = r4;
        break;
      }
      r5 = r4 | 2;
    }
  } while (0);
  return (r5 | 0) == 0 ? 15 : r5;
}
function __ZN5Avoid18ShapeConnectionPin12setExclusiveEb(r1, r2) {
  HEAP8[r1 + 44 | 0] = r2 & 1;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNK5Avoid18ShapeConnectionPin8positionERKNS_7PolygonE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  r6 = HEAP32[r2 + 8 >> 2];
  if ((r6 | 0) != 0) {
    FUNCTION_TABLE[HEAP32[HEAP32[r6 >> 2] + 8 >> 2]](r1, r6);
    STACKTOP = r4;
    return;
  }
  if (FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 12 >> 2]](r3)) {
    r7 = __ZNK5Avoid8ShapeRef7polygonEv(HEAP32[r2 + 4 >> 2]);
  } else {
    r7 = r3;
  }
  r3 = r7;
  L174 : do {
    if ((FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r7) | 0) == 0) {
      r8 = -1.7976931348623157e+308;
      r9 = 1.7976931348623157e+308;
      r10 = -1.7976931348623157e+308;
      r11 = 1.7976931348623157e+308;
    } else {
      r6 = r7 + 8 | 0;
      r12 = -1.7976931348623157e+308;
      r13 = 1.7976931348623157e+308;
      r14 = -1.7976931348623157e+308;
      r15 = 1.7976931348623157e+308;
      r16 = 0;
      while (1) {
        r17 = HEAP32[r6 >> 2];
        r18 = r17 + (r16 * 24 & -1) | 0;
        r19 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r18 = r19 < r15 ? r19 : r15;
        r20 = r14 < r19 ? r19 : r14;
        r19 = r17 + (r16 * 24 & -1) + 8 | 0;
        r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r19 = r17 < r13 ? r17 : r13;
        r21 = r12 < r17 ? r17 : r12;
        r17 = r16 + 1 | 0;
        if (r17 >>> 0 < FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r7) >>> 0) {
          r12 = r21;
          r13 = r19;
          r14 = r20;
          r15 = r18;
          r16 = r17;
        } else {
          r8 = r21;
          r9 = r19;
          r10 = r20;
          r11 = r18;
          break L174;
        }
      }
    }
  } while (0);
  __ZN5Avoid5PointC1Ev(r5);
  r7 = (r5 + 20 | 0) >> 1;
  HEAP16[r7] = 8;
  r3 = r2 + 16 | 0;
  r16 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r16 == 0) {
      r3 = r2 + 32 | 0;
      r15 = r11 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r3 = r5 | 0;
      HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      HEAP16[r7] = 6;
    } else {
      if (r16 == 1) {
        r3 = r2 + 32 | 0;
        r15 = r10 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r3 = r5 | 0;
        HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        HEAP16[r7] = 4;
        break;
      } else {
        r3 = r11 + (r10 - r11) * r16;
        r15 = r5 | 0;
        HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r15 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r15 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        break;
      }
    }
  } while (0);
  r16 = r2 + 24 | 0;
  r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r11 == 0) {
      r16 = r2 + 32 | 0;
      r10 = r9 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r16 = r5 + 8 | 0;
      HEAPF64[tempDoublePtr >> 3] = r10, HEAP32[r16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r16 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      HEAP16[r7] = 5;
    } else {
      if (r11 == 1) {
        r16 = r2 + 32 | 0;
        r10 = r8 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r16 = r5 + 8 | 0;
        HEAPF64[tempDoublePtr >> 3] = r10, HEAP32[r16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r16 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        HEAP16[r7] = 7;
        break;
      } else {
        r16 = r9 + (r8 - r9) * r11;
        r10 = r5 + 8 | 0;
        HEAPF64[tempDoublePtr >> 3] = r16, HEAP32[r10 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        break;
      }
    }
  } while (0);
  r11 = r1 >> 2;
  r1 = r5 >> 2;
  HEAP32[r11] = HEAP32[r1];
  HEAP32[r11 + 1] = HEAP32[r1 + 1];
  HEAP32[r11 + 2] = HEAP32[r1 + 2];
  HEAP32[r11 + 3] = HEAP32[r1 + 3];
  HEAP32[r11 + 4] = HEAP32[r1 + 4];
  HEAP32[r11 + 5] = HEAP32[r1 + 5];
  STACKTOP = r4;
  return;
}
__ZNK5Avoid18ShapeConnectionPin8positionERKNS_7PolygonE["X"] = 1;
function __ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid18ShapeConnectionPinC1EPNS_11JunctionRefEjj(r1, r2) {
  __ZN5Avoid18ShapeConnectionPinC2EPNS_11JunctionRefEjj(r1, r2);
  return;
}
function __ZN5Avoid18ShapeConnectionPinC2EPNS_11JunctionRefEjj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 32 | 0;
  r4 = r3;
  r5 = r3 + 8;
  HEAP32[r1 + 4 >> 2] = 0;
  r6 = (r1 + 8 | 0) >> 2;
  HEAP32[r6] = r2;
  HEAP32[r1 + 12 >> 2] = 2147483646;
  r2 = (r1 + 16 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  HEAP32[r1 + 40 >> 2] = 15;
  HEAP8[r1 + 44 | 0] = 1;
  r2 = r1 + 48 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1 + 56 | 0);
  r2 = r1 + 68 | 0;
  HEAP32[r2 >> 2] = 0;
  r7 = HEAP32[r6];
  if ((r7 | 0) == 0) {
    ___assert_func(5253024, 104, 5260072, 5245464);
    r8 = HEAP32[r6];
  } else {
    r8 = r7;
  }
  r7 = (r1 | 0) >> 2;
  HEAP32[r7] = __ZNK5Avoid8Obstacle6routerEv(HEAP32[r8 + 4 >> 2]);
  __ZN5Avoid8Obstacle16addConnectionPinEPNS_18ShapeConnectionPinE(r8, r1);
  __ZN5Avoid6VertIDC1Ejtt(r4, __ZNK5Avoid8Obstacle2idEv(HEAP32[HEAP32[r6] + 8 >> 2]), 9, 5);
  r1 = __Znwj(140);
  r8 = HEAP32[r7];
  r9 = HEAP32[r6];
  FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 8 >> 2]](r5, r9);
  __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r1, r8, r4, r5, 1);
  HEAP32[r2 >> 2] = r1;
  HEAP32[r1 + 120 >> 2] = 15;
  if ((HEAP8[HEAP32[r7] + 888 | 0] & 1) << 24 >> 24 == 0) {
    STACKTOP = r3;
    return;
  }
  __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(r1, 0);
  STACKTOP = r3;
  return;
}
__ZN5Avoid18ShapeConnectionPinC2EPNS_11JunctionRefEjj["X"] = 1;
function __ZN5Avoid18ShapeConnectionPinD1Ev(r1) {
  __ZN5Avoid18ShapeConnectionPinD2Ev(r1);
  return;
}
function __ZN5Avoid18ShapeConnectionPinD2Ev(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9;
  r2 = 0;
  r3 = r1 + 4 | 0;
  r4 = HEAP32[r3 >> 2];
  do {
    if ((r4 | 0) == 0) {
      r5 = r1 + 8 | 0;
      r6 = HEAP32[r5 >> 2];
      if ((r6 | 0) == 0) {
        ___assert_func(5253024, 123, 5259872, 5244676);
        r7 = HEAP32[r3 >> 2];
        if ((r7 | 0) != 0) {
          r8 = r7;
          r2 = 224;
          break;
        }
        r7 = HEAP32[r5 >> 2];
        if ((r7 | 0) == 0) {
          break;
        } else {
          r9 = r7;
        }
      } else {
        r9 = r6;
      }
      __ZN5Avoid8Obstacle19removeConnectionPinEPNS_18ShapeConnectionPinE(r9, r1);
      break;
    } else {
      r8 = r4;
      r2 = 224;
    }
  } while (0);
  if (r2 == 224) {
    __ZN5Avoid8Obstacle19removeConnectionPinEPNS_18ShapeConnectionPinE(r8, r1);
  }
  r8 = r1 + 56 | 0;
  r2 = r1 + 64 | 0;
  L221 : do {
    if ((HEAP32[r2 >> 2] | 0) != 0) {
      r4 = r8 | 0;
      while (1) {
        __ZN5Avoid7ConnEnd13freeActivePinEv(HEAP32[HEAP32[r4 >> 2] + 16 >> 2]);
        if ((HEAP32[r2 >> 2] | 0) == 0) {
          break L221;
        }
      }
    }
  } while (0);
  r2 = (r1 + 68 | 0) >> 2;
  r4 = HEAP32[r2];
  if ((r4 | 0) == 0) {
    __ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r8);
    return;
  }
  __ZN5Avoid7VertInf15removeFromGraphEb(r4, 1);
  __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(HEAP32[r1 >> 2] + 100 | 0, HEAP32[r2]);
  r1 = HEAP32[r2];
  if ((r1 | 0) != 0) {
    __ZN5Avoid7VertInfD1Ev(r1);
    __ZdlPv(r1);
  }
  HEAP32[r2] = 0;
  __ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r8);
  return;
}
__ZN5Avoid18ShapeConnectionPinD2Ev["X"] = 1;
function __ZN5Avoid18ShapeConnectionPin16updateVisibilityEv(r1) {
  var r2;
  r2 = r1 + 68 | 0;
  __ZN5Avoid7VertInf15removeFromGraphEb(HEAP32[r2 >> 2], 1);
  if ((HEAP8[HEAP32[r1 >> 2] + 888 | 0] & 1) << 24 >> 24 == 0) {
    return;
  }
  __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(HEAP32[r2 >> 2], 0);
  return;
}
function __ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_5PointE(r1, r2) {
  __ZN5Avoid7VertInf5ResetERKNS_5PointE(r1, r2);
  return;
}
function __ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_7PolygonE(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = HEAP32[r1 + 68 >> 2];
  __ZNK5Avoid18ShapeConnectionPin8positionERKNS_7PolygonE(r4, r1, r2);
  __ZN5Avoid7VertInf5ResetERKNS_5PointE(r5, r4);
  STACKTOP = r3;
  return;
}
function __ZNK5Avoid18ShapeConnectionPin10outputCodeEP7__sFILE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = STACKTOP;
  r4 = r1 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  L244 : do {
    if ((r5 | 0) == 0) {
      r6 = r1 + 8 | 0;
      r7 = HEAP32[r6 >> 2];
      do {
        if ((r7 | 0) == 0) {
          ___assert_func(5253024, 286, 5254508, 5244676);
          r8 = HEAP32[r4 >> 2];
          if ((r8 | 0) != 0) {
            r9 = r8;
            break L244;
          }
          r8 = HEAP32[r6 >> 2];
          if ((r8 | 0) != 0) {
            r10 = r8;
            break;
          }
          STACKTOP = r3;
          return;
        } else {
          r10 = r7;
        }
      } while (0);
      r7 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r10 + 8 >> 2]);
      r6 = HEAP32[r1 + 12 >> 2];
      r8 = HEAP32[r1 + 40 >> 2];
      _fprintf(r2, 5252944, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = r7, HEAP32[tempInt + 4 >> 2] = r6, HEAP32[tempInt + 8 >> 2] = r8, tempInt));
      STACKTOP = r3;
      return;
    } else {
      r9 = r5;
    }
  } while (0);
  r5 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r9 + 8 >> 2]);
  r9 = HEAP32[r1 + 12 >> 2];
  r10 = r1 + 16 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = r1 + 24 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = r1 + 32 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = HEAP32[r1 + 40 >> 2];
  _fprintf(r2, 5243500, (tempInt = STACKTOP, STACKTOP = STACKTOP + 36 | 0, HEAP32[tempInt >> 2] = r5, HEAP32[tempInt + 4 >> 2] = r9, HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 24 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 28 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAP32[tempInt + 32 >> 2] = r10, tempInt));
  STACKTOP = r3;
  return;
}
function __ZNK5Avoid18ShapeConnectionPin18containingObjectIdEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10;
  r2 = r1 + 4 | 0;
  r3 = HEAP32[r2 >> 2];
  do {
    if ((r3 | 0) == 0) {
      r4 = r1 + 8 | 0;
      r5 = HEAP32[r4 >> 2];
      if ((r5 | 0) == 0) {
        ___assert_func(5253024, 304, 5254440, 5244676);
        r6 = HEAP32[r2 >> 2];
        if ((r6 | 0) != 0) {
          r7 = r6;
          break;
        }
        r8 = HEAP32[r4 >> 2];
      } else {
        r8 = r5;
      }
      r9 = HEAP32[r8 + 8 >> 2];
      r10 = __ZNK5Avoid8Obstacle2idEv(r9);
      return r10;
    } else {
      r7 = r3;
    }
  } while (0);
  r9 = HEAP32[r7 + 8 >> 2];
  r10 = __ZNK5Avoid8Obstacle2idEv(r9);
  return r10;
}
function __ZNK5Avoid18ShapeConnectionPinltERKS0_(r1, r2) {
  var r3, r4, r5, r6;
  if ((HEAP32[r1 >> 2] | 0) != (HEAP32[r2 >> 2] | 0)) {
    ___assert_func(5253024, 343, 5254356, 5252372);
  }
  if ((__ZNK5Avoid18ShapeConnectionPin18containingObjectIdEv(r1) | 0) != (__ZNK5Avoid18ShapeConnectionPin18containingObjectIdEv(r2) | 0)) {
    r3 = __ZNK5Avoid18ShapeConnectionPin18containingObjectIdEv(r1) >>> 0 < __ZNK5Avoid18ShapeConnectionPin18containingObjectIdEv(r2) >>> 0;
    return r3;
  }
  r4 = HEAP32[r1 + 12 >> 2];
  r5 = HEAP32[r2 + 12 >> 2];
  if ((r4 | 0) != (r5 | 0)) {
    r3 = r4 >>> 0 < r5 >>> 0;
    return r3;
  }
  r5 = HEAP32[r1 + 40 >> 2];
  r4 = HEAP32[r2 + 40 >> 2];
  if ((r5 | 0) != (r4 | 0)) {
    r3 = r5 >>> 0 < r4 >>> 0;
    return r3;
  }
  r4 = r1 + 16 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r2 + 16 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r5 != r6) {
    r3 = r5 < r6;
    return r3;
  }
  r6 = r1 + 24 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r6 = r2 + 24 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r5 != r4) {
    r3 = r5 < r4;
    return r3;
  } else {
    r4 = r1 + 32 | 0;
    r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r4 = r2 + 32 | 0;
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r3 = r1 != r2 & r1 < r2;
    return r3;
  }
}
__ZNK5Avoid18ShapeConnectionPinltERKS0_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZN5Avoid7ConnRefC1EPNS_6RouterEj(r1, r2) {
  __ZN5Avoid7ConnRefC2EPNS_6RouterEj(r1, r2);
  return;
}
function __ZN5Avoid7ConnRefC2EPNS_6RouterEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = (r1 | 0) >> 2;
  HEAP32[r3] = r2;
  HEAP32[r1 + 8 >> 2] = __ZNK5Avoid6Router13validConnTypeENS_8ConnTypeE(r2);
  r2 = r1 + 12 | 0;
  HEAP32[r2 >> 2] = 0;
  r4 = r1 + 16 | 0;
  HEAP8[r4] = HEAP8[r4] & -48 | 1;
  r4 = r1 + 20 | 0;
  __ZN5Avoid7PolygonC1Ev(r4);
  __ZN5Avoid7PolygonC1Ev(r1 + 64 | 0);
  r5 = r1 + 108 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = r1 + 120 | 0;
  for (r6 = r5 >> 2, r7 = r6 + 13; r6 < r7; r6++) {
    HEAP32[r6] = 0;
  }
  r5 = HEAP32[r3];
  if ((r5 | 0) == 0) {
    ___assert_func(5251764, 65, 5257272, 5251428);
    r8 = HEAP32[r3];
  } else {
    r8 = r5;
  }
  HEAP32[r1 + 4 >> 2] = __ZN5Avoid6Router8assignIdEj(r8);
  __ZN5Avoid7Polygon5clearEv(r4);
  HEAP32[r2 >> 2] = __ZN5Avoid23ConnRerouteFlagDelegate7addConnEPNS_7ConnRefE(HEAP32[r3] + 760 | 0, r1);
  return;
}
__ZN5Avoid7ConnRefC2EPNS_6RouterEj["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZN5Avoid7ConnRefC1EPNS_6RouterERKNS_7ConnEndES5_j(r1, r2, r3, r4) {
  __ZN5Avoid7ConnRefC2EPNS_6RouterERKNS_7ConnEndES5_j(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid7ConnRefC2EPNS_6RouterERKNS_7ConnEndES5_j(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = (r1 | 0) >> 2;
  HEAP32[r5] = r2;
  HEAP32[r1 + 8 >> 2] = __ZNK5Avoid6Router13validConnTypeENS_8ConnTypeE(r2);
  r2 = r1 + 12 | 0;
  HEAP32[r2 >> 2] = 0;
  r6 = r1 + 16 | 0;
  HEAP8[r6] = HEAP8[r6] & -48 | 1;
  r6 = r1 + 20 | 0;
  __ZN5Avoid7PolygonC1Ev(r6);
  __ZN5Avoid7PolygonC1Ev(r1 + 64 | 0);
  r7 = r1 + 108 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 120 >> 2] = 0;
  HEAP32[r1 + 124 >> 2] = 0;
  r7 = r1 + 132 | 0;
  for (r8 = r7 >> 2, r9 = r8 + 10; r8 < r9; r8++) {
    HEAP32[r8] = 0;
  }
  r7 = HEAP32[r5];
  if ((r7 | 0) == 0) {
    ___assert_func(5251764, 93, 5257336, 5251428);
    r10 = HEAP32[r5];
  } else {
    r10 = r7;
  }
  HEAP32[r1 + 4 >> 2] = __ZN5Avoid6Router8assignIdEj(r10);
  __ZN5Avoid7Polygon5clearEv(r6);
  __ZN5Avoid7ConnRef12setEndpointsERKNS_7ConnEndES3_(r1, r3, r4);
  HEAP32[r2 >> 2] = __ZN5Avoid23ConnRerouteFlagDelegate7addConnEPNS_7ConnRefE(HEAP32[r5] + 760 | 0, r1);
  return;
}
__ZN5Avoid7ConnRefC2EPNS_6RouterERKNS_7ConnEndES5_j["X"] = 1;
function __ZN5Avoid7ConnRef12setEndpointsERKNS_7ConnEndES3_(r1, r2, r3) {
  var r4, r5;
  r4 = r1 | 0;
  r5 = r1;
  __ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb(HEAP32[r4 >> 2], r5, 1, r2, 0);
  __ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb(HEAP32[r4 >> 2], r5, 2, r3, 0);
  return;
}
function __ZN5Avoid7ConnRefD1Ev(r1) {
  __ZN5Avoid7ConnRefD2Ev(r1);
  return;
}
function __ZNK5Avoid7ConnRef11routingTypeEv(r1) {
  return r1;
}
function __ZNK5Avoid7ConnRef2idEv(r1) {
  return r1;
}
function __ZNK5Avoid7ConnRef3srcEv(r1) {
  return r1;
}
function __ZNK5Avoid7ConnRef3dstEv(r1) {
  return r1;
}
function __ZN5Avoid7ConnRef15makePathInvalidEv(r1) {
  var r2;
  r2 = r1 + 16 | 0;
  HEAP8[r2] = HEAP8[r2] | 1;
  return;
}
function __ZNK5Avoid7ConnRef15endpointAnchorsEv(r1, r2) {
  var r3;
  r3 = r1;
  HEAP32[r3 >> 2] = 0;
  HEAP32[r3 + 4 >> 2] = 0;
  r3 = HEAP32[r2 + 140 >> 2];
  if ((r3 | 0) != 0) {
    HEAP32[r1 >> 2] = HEAP32[r3 + 36 >> 2];
  }
  r3 = HEAP32[r2 + 144 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = HEAP32[r3 + 36 >> 2];
  return;
}
function __ZNK5Avoid7ConnRef5routeEv(r1) {
  return r1 + 20 | 0;
}
function __ZN5Avoid7ConnRef8routeRefEv(r1) {
  return r1 + 20 | 0;
}
function __ZN5Avoid7ConnRefD2Ev(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r2 = STACKTOP;
  r3 = (r1 | 0) >> 2;
  r4 = HEAP32[r3];
  if ((HEAP8[r4 + 689 | 0] & 1) << 24 >> 24 == 0) {
    __ZN5Avoid10err_printfEPKcz(5248264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 3 >> 2 << 2, HEAP32[tempInt >> 2] = 0, tempInt));
    __ZN5Avoid10err_printfEPKcz(5246948, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 3 >> 2 << 2, HEAP32[tempInt >> 2] = 0, tempInt));
    _abort();
    r5 = HEAP32[r3];
  } else {
    r5 = r4;
  }
  __ZN5Avoid23ConnRerouteFlagDelegate10removeConnEPNS_7ConnRefE(r5 + 760 | 0, r1);
  __ZN5Avoid6Router29removeObjectFromQueuedActionsEPKv(HEAP32[r3], r1);
  __ZN5Avoid7ConnRef10freeRoutesEv(r1);
  r5 = (r1 + 120 | 0) >> 2;
  r4 = HEAP32[r5];
  if ((r4 | 0) != 0) {
    __ZN5Avoid7VertInf15removeFromGraphEb(r4, 1);
    __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(HEAP32[r3] + 100 | 0, HEAP32[r5]);
    r4 = HEAP32[r5];
    if ((r4 | 0) != 0) {
      __ZN5Avoid7VertInfD1Ev(r4);
      __ZdlPv(r4);
    }
    HEAP32[r5] = 0;
  }
  r5 = r1 + 140 | 0;
  r4 = HEAP32[r5 >> 2];
  if ((r4 | 0) != 0) {
    __ZN5Avoid7ConnEndD1Ev(r4);
    __ZdlPv(r4);
    HEAP32[r5 >> 2] = 0;
  }
  r5 = (r1 + 124 | 0) >> 2;
  r4 = HEAP32[r5];
  if ((r4 | 0) != 0) {
    __ZN5Avoid7VertInf15removeFromGraphEb(r4, 1);
    __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(HEAP32[r3] + 100 | 0, HEAP32[r5]);
    r4 = HEAP32[r5];
    if ((r4 | 0) != 0) {
      __ZN5Avoid7VertInfD1Ev(r4);
      __ZdlPv(r4);
    }
    HEAP32[r5] = 0;
  }
  r5 = r1 + 144 | 0;
  r4 = HEAP32[r5 >> 2];
  if ((r4 | 0) != 0) {
    __ZN5Avoid7ConnEndD1Ev(r4);
    __ZdlPv(r4);
    HEAP32[r5 >> 2] = 0;
  }
  r5 = r1 + 160 | 0;
  r4 = (r1 + 164 | 0) >> 2;
  r6 = HEAP32[r4];
  r7 = (r5 | 0) >> 2;
  r8 = HEAP32[r7];
  L364 : do {
    if ((r6 | 0) == (r8 | 0)) {
      r9 = r6;
    } else {
      r10 = 0;
      r11 = r8;
      while (1) {
        __ZN5Avoid7VertInf15removeFromGraphEb(HEAP32[r11 + (r10 << 2) >> 2], 1);
        __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(HEAP32[r3] + 100 | 0, HEAP32[HEAP32[r7] + (r10 << 2) >> 2]);
        r12 = HEAP32[r7];
        r13 = HEAP32[r12 + (r10 << 2) >> 2];
        if ((r13 | 0) == 0) {
          r14 = r12;
        } else {
          __ZN5Avoid7VertInfD1Ev(r13);
          __ZdlPv(r13);
          r14 = HEAP32[r7];
        }
        r13 = r10 + 1 | 0;
        if (r13 >>> 0 < HEAP32[r4] - r14 >> 2 >>> 0) {
          r10 = r13;
          r11 = r14;
        } else {
          r9 = r14;
          break L364;
        }
      }
    }
  } while (0);
  HEAP32[r4] = r9;
  if ((HEAP8[r1 + 16 | 0] & 8) << 24 >> 24 == 0) {
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r5);
    r15 = r1 + 148 | 0;
    __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED1Ev(r15);
    r16 = r1 + 64 | 0;
    __ZN5Avoid7PolygonD1Ev(r16);
    r17 = r1 + 20 | 0;
    __ZN5Avoid7PolygonD1Ev(r17);
    STACKTOP = r2;
    return;
  }
  __ZN5Avoid7ConnRef12makeInactiveEv(r1);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r5);
  r15 = r1 + 148 | 0;
  __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED1Ev(r15);
  r16 = r1 + 64 | 0;
  __ZN5Avoid7PolygonD1Ev(r16);
  r17 = r1 + 20 | 0;
  __ZN5Avoid7PolygonD1Ev(r17);
  STACKTOP = r2;
  return;
}
__ZN5Avoid7ConnRefD2Ev["X"] = 1;
function __ZN5Avoid7ConnRef10freeRoutesEv(r1) {
  __ZN5Avoid7Polygon5clearEv(r1 + 20 | 0);
  __ZN5Avoid7Polygon5clearEv(r1 + 64 | 0);
  return;
}
function __ZN5Avoid7ConnRef12makeInactiveEv(r1) {
  var r2, r3;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r1 + 16 | 0;
  if ((HEAP8[r3] & 8) << 24 >> 24 == 0) {
    ___assert_func(5251764, 544, 5257716, 5244836);
  }
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r2, HEAP32[r1 >> 2] + 16 | 0, HEAP32[r1 + 116 >> 2]);
  HEAP8[r3] = HEAP8[r3] & -9;
  STACKTOP = r2;
  return;
}
function __ZNK5Avoid7ConnRef18routingCheckpointsEv(r1, r2) {
  __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEEC1ERKS5_(r1, r2 + 148 | 0);
  return;
}
function __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEEC1ERKS5_(r1, r2) {
  __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEEC2ERKS5_(r1, r2);
  return;
}
function __ZN5Avoid7ConnRef21common_updateEndPointEjNS_7ConnEndE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 32 | 0;
  r5 = r4;
  r6 = r4 + 24;
  __ZNK5Avoid7ConnEnd8positionEv(r5, r3);
  if ((r2 - 1 | 0) >>> 0 >= 2) {
    ___assert_func(5251764, 225, 5257544, 5246032);
  }
  HEAP32[r3 + 40 >> 2] = 0;
  if ((HEAP8[r1 + 16 | 0] & 8) << 24 >> 24 == 0) {
    __ZN5Avoid7ConnRef10makeActiveEv(r1);
  }
  r7 = (r3 | 0) >> 2;
  r8 = __ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r7]) ? 17 : 1;
  __ZN5Avoid6VertIDC1Ejtt(r6, HEAP32[r1 + 4 >> 2], r2 & 65535, r8);
  do {
    if ((r2 | 0) == 1) {
      r8 = r1 + 120 | 0, r9 = r8 >> 2;
      r10 = HEAP32[r9];
      if ((r10 | 0) == 0) {
        r11 = __Znwj(140);
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r11, HEAP32[r1 >> 2], r6, r5, 1);
        r12 = r11;
        HEAP32[r9] = r12;
        r13 = r12;
      } else {
        __ZN5Avoid7VertInf5ResetERKNS_6VertIDERKNS_5PointE(r10, r6, r5);
        r13 = HEAP32[r9];
      }
      HEAP32[r13 + 120 >> 2] = __ZNK5Avoid7ConnEnd10directionsEv(r3);
      r10 = (r1 + 140 | 0) >> 2;
      r12 = HEAP32[r10];
      if ((r12 | 0) != 0) {
        __ZN5Avoid7ConnEndD1Ev(r12);
        __ZdlPv(r12);
        HEAP32[r10] = 0;
      }
      if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r7])) {
        r14 = r8;
        break;
      }
      r12 = __Znwj(48);
      r11 = r12;
      r15 = r3;
      for (r16 = r15 >> 2, r17 = r12 >> 2, r18 = r16 + 12; r16 < r18; r16++, r17++) {
        HEAP32[r17] = HEAP32[r16];
      }
      HEAP32[r10] = r11;
      __ZN5Avoid7ConnEnd7connectEPNS_7ConnRefE(r11, r1);
      HEAP32[HEAP32[r9] + 120 >> 2] = 0;
      r14 = r8;
    } else {
      r12 = r1 + 124 | 0, r15 = r12 >> 2;
      r19 = HEAP32[r15];
      if ((r19 | 0) == 0) {
        r20 = __Znwj(140);
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r20, HEAP32[r1 >> 2], r6, r5, 1);
        r21 = r20;
        HEAP32[r15] = r21;
        r22 = r21;
      } else {
        __ZN5Avoid7VertInf5ResetERKNS_6VertIDERKNS_5PointE(r19, r6, r5);
        r22 = HEAP32[r15];
      }
      HEAP32[r22 + 120 >> 2] = __ZNK5Avoid7ConnEnd10directionsEv(r3);
      r19 = (r1 + 144 | 0) >> 2;
      r21 = HEAP32[r19];
      if ((r21 | 0) != 0) {
        __ZN5Avoid7ConnEndD1Ev(r21);
        __ZdlPv(r21);
        HEAP32[r19] = 0;
      }
      if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r7])) {
        r14 = r12;
        break;
      }
      r21 = __Znwj(48);
      r20 = r21;
      r23 = r3;
      for (r16 = r23 >> 2, r17 = r21 >> 2, r18 = r16 + 12; r16 < r18; r16++, r17++) {
        HEAP32[r17] = HEAP32[r16];
      }
      HEAP32[r19] = r20;
      __ZN5Avoid7ConnEnd7connectEPNS_7ConnRefE(r20, r1);
      HEAP32[HEAP32[r15] + 120 >> 2] = 0;
      r14 = r12;
    }
  } while (0);
  __ZN5Avoid7VertInf15removeFromGraphEb(HEAP32[r14 >> 2], 1);
  __ZN5Avoid7ConnRef15makePathInvalidEv(r1);
  __ZN5Avoid6Router25setStaticGraphInvalidatedEb(HEAP32[r1 >> 2]);
  STACKTOP = r4;
  return;
}
__ZN5Avoid7ConnRef21common_updateEndPointEjNS_7ConnEndE["X"] = 1;
function __ZN5Avoid7ConnRef10makeActiveEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r3 = r2;
  r4 = r2 + 4;
  r5 = r1 + 16 | 0;
  if ((HEAP8[r5] & 8) << 24 >> 24 != 0) {
    ___assert_func(5251764, 521, 5257788, 5245748);
  }
  r6 = HEAP32[r1 >> 2];
  r7 = HEAP32[r6 + 20 >> 2];
  HEAP32[r4 >> 2] = r1;
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r3, r6 + 16 | 0, r7, r4);
  HEAP32[r1 + 116 >> 2] = HEAP32[r3 >> 2];
  HEAP8[r5] = HEAP8[r5] | 8;
  STACKTOP = r2;
  return;
}
function __ZNK5Avoid7ConnRef27getConnEndForEndpointVertexEPNS_7VertInfERNS_7ConnEndE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 144 | 0;
  r5 = r4;
  r6 = r4 + 48;
  r7 = r4 + 72;
  r8 = r4 + 120;
  if ((r2 | 0) == 0) {
    r9 = __ZNK5Avoid7ConnRef2idEv(HEAP32[r1 + 4 >> 2]);
    __ZN5Avoid10err_printfEPKcz(5245204, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r9, tempInt));
    r10 = 0;
    STACKTOP = r4;
    return r10;
  }
  r9 = r1 + 120 | 0;
  if ((HEAP32[r9 >> 2] | 0) == (r2 | 0)) {
    r11 = HEAP32[r1 + 140 >> 2];
    if ((r11 | 0) == 0) {
      r12 = r2 + 12 | 0;
      r13 = r2 + 20 | 0;
      __ZN5Avoid5PointC1Edd(r6, (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
      __ZN5Avoid7ConnEndC1ERKNS_5PointEj(r5, r6, HEAP32[HEAP32[r9 >> 2] + 120 >> 2]);
      r9 = r3;
      r6 = r5;
      for (r14 = r6 >> 2, r15 = r9 >> 2, r16 = r14 + 12; r14 < r16; r14++, r15++) {
        HEAP32[r15] = HEAP32[r14];
      }
      __ZN5Avoid7ConnEndD1Ev(r5);
      r10 = 1;
      STACKTOP = r4;
      return r10;
    } else {
      r5 = r3;
      r9 = r11;
      for (r14 = r9 >> 2, r15 = r5 >> 2, r16 = r14 + 12; r14 < r16; r14++, r15++) {
        HEAP32[r15] = HEAP32[r14];
      }
      r10 = 1;
      STACKTOP = r4;
      return r10;
    }
  }
  r5 = r1 + 124 | 0;
  if ((HEAP32[r5 >> 2] | 0) != (r2 | 0)) {
    r10 = 0;
    STACKTOP = r4;
    return r10;
  }
  r9 = HEAP32[r1 + 144 >> 2];
  if ((r9 | 0) == 0) {
    r1 = r2 + 12 | 0;
    r11 = r2 + 20 | 0;
    __ZN5Avoid5PointC1Edd(r8, (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
    __ZN5Avoid7ConnEndC1ERKNS_5PointEj(r7, r8, HEAP32[HEAP32[r5 >> 2] + 120 >> 2]);
    r5 = r3;
    r8 = r7;
    for (r14 = r8 >> 2, r15 = r5 >> 2, r16 = r14 + 12; r14 < r16; r14++, r15++) {
      HEAP32[r15] = HEAP32[r14];
    }
    __ZN5Avoid7ConnEndD1Ev(r7);
    r10 = 1;
    STACKTOP = r4;
    return r10;
  } else {
    r7 = r3;
    r3 = r9;
    for (r14 = r3 >> 2, r15 = r7 >> 2, r16 = r14 + 12; r14 < r16; r14++, r15++) {
      HEAP32[r15] = HEAP32[r14];
    }
    r10 = 1;
    STACKTOP = r4;
    return r10;
  }
}
__ZNK5Avoid7ConnRef27getConnEndForEndpointVertexEPNS_7VertInfERNS_7ConnEndE["X"] = 1;
function __ZNSt3__14pairIN5Avoid7ConnEndES2_ED1Ev(r1) {
  __ZNSt3__14pairIN5Avoid7ConnEndES2_ED2Ev(r1);
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8;
  r5 = __Znwj(12);
  r6 = r5;
  r7 = r5;
  HEAP32[r7 >> 2] = 0;
  r8 = r5 + 8 | 0;
  if ((r8 | 0) != 0) {
    HEAP32[r8 >> 2] = HEAP32[r4 >> 2];
  }
  r4 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r4] + 4 >> 2] = r6;
  HEAP32[r7 >> 2] = HEAP32[r4];
  HEAP32[r4] = r6;
  HEAP32[r5 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  HEAP32[r1 >> 2] = r6;
  return;
}
function __ZN5Avoid7ConnRef14freeActivePinsEv(r1) {
  var r2;
  r2 = HEAP32[r1 + 140 >> 2];
  if ((r2 | 0) != 0) {
    __ZN5Avoid7ConnEnd13freeActivePinEv(r2);
  }
  r2 = HEAP32[r1 + 144 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZN5Avoid7ConnEnd13freeActivePinEv(r2);
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZN5Avoid7ConnRef9set_routeERKNS_7PolygonE(r1, r2) {
  var r3;
  if ((r1 + 64 | 0) == (r2 | 0)) {
    return;
  }
  r3 = r1 + 72 | 0;
  r1 = r2 + 8 | 0;
  if ((r3 | 0) == (r1 | 0)) {
    return;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r3, HEAP32[r1 >> 2], HEAP32[r2 + 12 >> 2]);
  return;
}
function __ZN5Avoid7ConnRef12displayRouteEv(r1) {
  var r2, r3, r4;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r3 = r2;
  r4 = r1 + 64 | 0;
  if (!__ZNK5Avoid7Polygon5emptyEv(r4)) {
    STACKTOP = r2;
    return r4;
  }
  __ZNK5Avoid7Polygon8simplifyEv(r3, r1 + 20 | 0);
  __ZN5Avoid7PolygonaSERKS0_(r4, r3);
  __ZN5Avoid7PolygonD1Ev(r3);
  STACKTOP = r2;
  return r4;
}
function __ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = r1 >> 2;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r6 = r5;
  r7 = r6;
  r8 = r3;
  for (r3 = r8 >> 2, r9 = r7 >> 2, r10 = r3 + 12; r3 < r10; r3++, r9++) {
    HEAP32[r9] = HEAP32[r3];
  }
  __ZN5Avoid7ConnRef21common_updateEndPointEjNS_7ConnEndE(r1, r2, r6);
  __ZN5Avoid7ConnEndD1Ev(r6);
  if ((HEAP8[HEAP32[r4] + 888 | 0] & 1) << 24 >> 24 == 0) {
    STACKTOP = r5;
    return;
  }
  if ((r2 | 0) == 1) {
    r2 = HEAP32[r4 + 35];
    do {
      if ((r2 | 0) != 0) {
        if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r2 >> 2])) {
          break;
        }
        STACKTOP = r5;
        return;
      }
    } while (0);
    __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(HEAP32[r4 + 30], HEAP32[r4 + 31]);
    STACKTOP = r5;
    return;
  } else {
    r2 = HEAP32[r4 + 36];
    do {
      if ((r2 | 0) != 0) {
        if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r2 >> 2])) {
          break;
        }
        STACKTOP = r5;
        return;
      }
    } while (0);
    __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(HEAP32[r4 + 31], HEAP32[r4 + 30]);
    STACKTOP = r5;
    return;
  }
}
__ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE["X"] = 1;
function __ZNK5Avoid7ConnRef16endpointConnEndsEv(r1, r2) {
  var r3, r4;
  r3 = r1 | 0;
  __ZN5Avoid7ConnEndC1Ev(r3);
  r4 = r1 + 48 | 0;
  __ZN5Avoid7ConnEndC1Ev(r4);
  __ZNK5Avoid7ConnRef27getConnEndForEndpointVertexEPNS_7VertInfERNS_7ConnEndE(r2, HEAP32[r2 + 120 >> 2], r3);
  __ZNK5Avoid7ConnRef27getConnEndForEndpointVertexEPNS_7VertInfERNS_7ConnEndE(r2, HEAP32[r2 + 124 >> 2], r4);
  return;
}
function __ZNK5Avoid7ConnRef6routerEv(r1) {
  return r1;
}
function __ZN5Avoid7ConnRef5startEv(r1) {
  return r1;
}
function __ZNK5Avoid6VertID15isConnectionPinEv(r1) {
  return (r1 & 4) << 16 >> 16 != 0;
}
function __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r1, r2, r3, r4, r5, r6) {
  var r7, r8;
  r7 = (r3 - r1) * (r6 - r2) - (r4 - r2) * (r5 - r1);
  if (r7 < 0) {
    r8 = -1;
    return r8;
  }
  r8 = r7 > 0 & 1;
  return r8;
}
function __ZN5Avoid7PolygonaSERKS0_(r1, r2) {
  var r3;
  r3 = r2 >> 2;
  HEAP32[r1 + 4 >> 2] = HEAP32[r3 + 1];
  if ((r1 | 0) == (r2 | 0)) {
    return;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1 + 8 | 0, HEAP32[r3 + 2], HEAP32[r3 + 3]);
  __ZNSt3__16vectorIcNS_9allocatorIcEEE6assignIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_(r1 + 20 | 0, HEAP32[r3 + 5], HEAP32[r3 + 6]);
  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1 + 32 | 0, HEAP32[r3 + 8], HEAP32[r3 + 9]);
  return;
}
function __ZN5Avoid7ConnRef15performCallbackEv(r1) {
  var r2;
  r2 = HEAP32[r1 + 132 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  FUNCTION_TABLE[r2](HEAP32[r1 + 136 >> 2]);
  return;
}
function __ZN5Avoid17validateBendPointEPNS_7VertInfES1_S1_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32;
  if (__ZNK5Avoid6VertID15isConnectionPinEv(HEAP16[r2 + 10 >> 1])) {
    r4 = 1;
    return r4;
  }
  if ((r1 | 0) == 0 | (r3 | 0) == 0) {
    r4 = 1;
    return r4;
  }
  if ((r2 | 0) == 0) {
    ___assert_func(5251764, 759, 5260248, 5249764);
  }
  r5 = HEAP32[r2 + 44 >> 2];
  r6 = HEAP32[r2 + 48 >> 2];
  if ((r5 | 0) == 0) {
    ___assert_func(5251764, 762, 5260248, 5249520);
  }
  if ((r6 | 0) == 0) {
    ___assert_func(5251764, 763, 5260248, 5249296);
  }
  r7 = r1 + 12 | 0;
  r8 = r2 + 12 | 0;
  r9 = r3 + 12 | 0;
  if (__ZNK5Avoid5PointeqERKS0_(r7, r8)) {
    r4 = 1;
    return r4;
  }
  if (__ZNK5Avoid5PointeqERKS0_(r8, r9)) {
    r4 = 1;
    return r4;
  }
  r10 = (r7 | 0) >> 2;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]);
  r11 = (r1 + 20 | 0) >> 2;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 1], HEAPF64[tempDoublePtr >> 3]);
  r12 = (r8 | 0) >> 2;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]);
  r13 = (r2 + 20 | 0) >> 2;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
  r14 = (r9 | 0) >> 2;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 1], HEAPF64[tempDoublePtr >> 3]);
  r15 = (r3 + 20 | 0) >> 2;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 1], HEAPF64[tempDoublePtr >> 3]);
  r16 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r7, r1, r8, r2, r9, r3);
  if ((r16 | 0) == 0) {
    r4 = 0;
    return r4;
  }
  r17 = (r5 + 12 | 0) >> 2;
  r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]);
  r19 = (r5 + 20 | 0) >> 2;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
  r20 = (r6 + 12 | 0) >> 2;
  r21 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 1], HEAPF64[tempDoublePtr >> 3]);
  r22 = (r6 + 20 | 0) >> 2;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 1], HEAPF64[tempDoublePtr >> 3]);
  if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r18, r5, r8, r2, r21, r6) | 0) > 0) {
    r23 = r7;
    r24 = r1;
    r25 = r8;
    r26 = r2;
    r27 = r21;
    r28 = r6;
    r29 = r18;
    r30 = r5;
    r31 = r9;
    r32 = r3;
  } else {
    ___assert_func(5251764, 798, 5260248, 5249008);
    r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]);
    r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 1], HEAPF64[tempDoublePtr >> 3]);
    r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]);
    r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
    r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 1], HEAPF64[tempDoublePtr >> 3]);
    r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 1], HEAPF64[tempDoublePtr >> 3]);
    r22 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]);
    r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
    r23 = r3;
    r24 = r10;
    r25 = r11;
    r26 = r12;
    r27 = r13;
    r28 = r20;
    r29 = r22;
    r30 = r17;
    r31 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 1], HEAPF64[tempDoublePtr >> 3]);
    r32 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 1], HEAPF64[tempDoublePtr >> 3]);
  }
  r15 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r23, r24, r25, r26, r27, r28);
  r14 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r23, r24, r25, r26, r29, r30);
  if ((r15 | 0) > 0) {
    return (r16 | 0) > 0 & (r14 | 0) > -1 & (__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r25, r26, r31, r32, r27, r28) | 0) > -1;
  }
  r4 = (r14 & r16 | 0) < 0 & (__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r25, r26, r31, r32, r29, r30) | 0) < 1;
  return r4;
}
__ZN5Avoid17validateBendPointEPNS_7VertInfES1_S1_["X"] = 1;
function __ZN5Avoid7ConnRef29assignConnectionPinVisibilityEb(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = r2 + 140 | 0;
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 | 0) == 0) {
      r6 = 0;
    } else {
      if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r5 >> 2])) {
        r6 = 0;
        break;
      }
      r7 = r2 + 120 | 0;
      __ZN5Avoid7VertInf15removeFromGraphEb(HEAP32[r7 >> 2], 1);
      if (!r3) {
        r6 = 1;
        break;
      }
      __ZN5Avoid7ConnEnd21assignPinVisibilityToEPNS_7VertInfES2_(HEAP32[r4 >> 2], HEAP32[r7 >> 2], HEAP32[r2 + 124 >> 2]);
      r6 = 1;
    }
  } while (0);
  r4 = r2 + 144 | 0;
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 | 0) == 0) {
      r8 = 0;
    } else {
      if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r5 >> 2])) {
        r8 = 0;
        break;
      }
      r7 = r2 + 124 | 0;
      __ZN5Avoid7VertInf15removeFromGraphEb(HEAP32[r7 >> 2], 1);
      if (!r3) {
        r8 = 1;
        break;
      }
      __ZN5Avoid7ConnEnd21assignPinVisibilityToEPNS_7VertInfES2_(HEAP32[r4 >> 2], HEAP32[r7 >> 2], HEAP32[r2 + 120 >> 2]);
      r8 = 1;
    }
  } while (0);
  HEAP8[r1 | 0] = r6;
  HEAP8[r1 + 1 | 0] = r8;
  return;
}
function __ZN5Avoid7ConnRef12generatePathEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30;
  r2 = r1 >> 2;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = r4 + 16;
  r8 = r4 + 28;
  r9 = r4 + 40;
  r10 = r4 + 44;
  r11 = r1 + 16 | 0;
  r12 = HEAP8[r11];
  if ((r12 & 3) << 24 >> 24 == 0) {
    r13 = 0;
    STACKTOP = r4;
    return r13;
  }
  r14 = r1 + 124 | 0;
  if ((HEAP32[r14 >> 2] | 0) == 0) {
    r13 = 0;
    STACKTOP = r4;
    return r13;
  }
  r15 = r1 + 120 | 0;
  r16 = HEAP32[r15 >> 2];
  if ((r16 | 0) == 0) {
    r13 = 0;
    STACKTOP = r4;
    return r13;
  }
  HEAP8[r11] = r12 & -4;
  HEAP32[r2 + 32] = r16;
  __ZN5Avoid7ConnRef29assignConnectionPinVisibilityEb(r5, r1, 1);
  r16 = (r6 | 0) >> 2;
  HEAP32[r16] = 0;
  r12 = (r6 + 4 | 0) >> 2;
  HEAP32[r12] = 0;
  HEAP32[r6 + 8 >> 2] = 0;
  r17 = (r7 | 0) >> 2;
  HEAP32[r17] = 0;
  r18 = (r7 + 4 | 0) >> 2;
  HEAP32[r18] = 0;
  HEAP32[r7 + 8 >> 2] = 0;
  if ((HEAP32[r2 + 37] | 0) == (HEAP32[r2 + 38] | 0)) {
    __ZN5Avoid7ConnRef20generateStandardPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE(r1, r6, r7);
  } else {
    __ZN5Avoid7ConnRef23generateCheckpointsPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE(r1, r6, r7);
  }
  r19 = HEAP32[r17];
  if (HEAP32[r18] - r19 >> 2 >>> 0 > 1) {
    r20 = r19;
  } else {
    ___assert_func(5251764, 894, 5257752, 5248784);
    r20 = HEAP32[r17];
  }
  if ((HEAP32[r20 >> 2] | 0) == (__ZNK5Avoid7ConnRef3srcEv(HEAP32[r15 >> 2]) | 0)) {
    r21 = r20;
  } else {
    ___assert_func(5251764, 895, 5257752, 5248644);
    r21 = HEAP32[r17];
  }
  if ((HEAP32[r21 + ((HEAP32[r18] - r21 >> 2) - 1 << 2) >> 2] | 0) != (__ZNK5Avoid7ConnRef3dstEv(HEAP32[r14 >> 2]) | 0)) {
    ___assert_func(5251764, 896, 5257752, 5248532);
  }
  r14 = r1 + 12 | 0;
  if ((HEAP32[r14 >> 2] | 0) == 0) {
    ___assert_func(5251764, 897, 5257752, 5248472);
  }
  r21 = HEAP32[r17];
  L579 : do {
    if (HEAP32[r18] - r21 >> 2 >>> 0 > 1) {
      r20 = r1 | 0;
      r15 = r1 + 8 | 0;
      r19 = 1;
      r22 = r21;
      while (1) {
        do {
          if ((HEAP8[HEAP32[r20 >> 2] + 141 | 0] & 1) << 24 >> 24 == 0) {
            r3 = 556;
          } else {
            if ((HEAP32[r15 >> 2] | 0) != 1) {
              r3 = 556;
              break;
            }
            r23 = __ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_(HEAP32[r22 + (r19 - 1 << 2) >> 2], HEAP32[r22 + (r19 << 2) >> 2]);
            if ((r23 | 0) == 0) {
              r24 = r22;
              break;
            }
            __ZN5Avoid7EdgeInf7addConnEPb(r23, HEAP32[r14 >> 2]);
            r24 = HEAP32[r17];
            break;
          }
        } while (0);
        if (r3 == 556) {
          r3 = 0;
          HEAP8[r11] = HEAP8[r11] | 2;
          r24 = r22;
        }
        r23 = HEAP32[r24 + (r19 << 2) >> 2];
        r25 = HEAP32[r23 + 100 >> 2];
        do {
          if ((r25 | 0) != 0) {
            if (!__ZNK5Avoid5PointeqERKS0_(r25 + 12 | 0, r23 + 12 | 0)) {
              break;
            }
            if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r25 + 10 >> 1])) {
              break;
            }
            if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r23 + 10 >> 1])) {
              break;
            }
            if ((Math.abs(HEAPU16[r25 + 8 >> 1] - HEAPU16[r23 + 8 >> 1] | 0) | 0) != 2) {
              break;
            }
            ___assert_func(5251764, 922, 5257752, 5248396);
          }
        } while (0);
        r23 = r19 + 1 | 0;
        r25 = HEAP32[r17];
        if (r23 >>> 0 < HEAP32[r18] - r25 >> 2 >>> 0) {
          r19 = r23;
          r22 = r25;
        } else {
          r26 = r25;
          break L579;
        }
      }
    } else {
      r26 = r21;
    }
  } while (0);
  r21 = r8 | 0;
  HEAP32[r21 >> 2] = 0;
  r24 = (r8 + 4 | 0) >> 2;
  HEAP32[r24] = 0;
  HEAP32[r8 + 8 >> 2] = 0;
  r11 = HEAP32[r16];
  r3 = HEAP32[r12];
  do {
    if (((r3 - r11 | 0) / 24 & -1) >>> 0 > 2) {
      if ((HEAP8[r5 | 0] & 1) << 24 >> 24 == 0) {
        r27 = r11;
        r28 = r3;
        r29 = r11;
        break;
      }
      __ZN5Avoid7ConnEnd12usePinVertexEPNS_7VertInfE(HEAP32[r2 + 35], HEAP32[r26 + 4 >> 2]);
      r27 = r11 + 24 | 0;
      r28 = HEAP32[r12];
      r29 = HEAP32[r16];
    } else {
      r27 = r11;
      r28 = r3;
      r29 = r11;
    }
  } while (0);
  do {
    if (((r28 - r29 | 0) / 24 & -1) >>> 0 > 2) {
      if ((HEAP8[r5 + 1 | 0] & 1) << 24 >> 24 == 0) {
        r30 = r3;
        break;
      }
      r11 = HEAP32[r17];
      __ZN5Avoid7ConnEnd12usePinVertexEPNS_7VertInfE(HEAP32[r2 + 36], HEAP32[r11 + ((HEAP32[r18] - r11 >> 2) - 2 << 2) >> 2]);
      r30 = r3 - 24 | 0;
    } else {
      r30 = r3;
    }
  } while (0);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueES9_E4typeENS7_IPKS2_EESB_SB_(r9, r8, HEAP32[r24], r27, r30);
  __ZN5Avoid7ConnRef29assignConnectionPinVisibilityEb(r10, r1, 0);
  __ZN5Avoid7ConnRef10freeRoutesEv(r1);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1 + 28 | 0, HEAP32[r21 >> 2], HEAP32[r24]);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r8);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r7);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r6);
  r13 = 1;
  STACKTOP = r4;
  return r13;
}
__ZN5Avoid7ConnRef12generatePathEv["X"] = 1;
function __ZN5Avoid7ConnRef20generateStandardPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 16;
  r8 = r1 + 124 | 0;
  r9 = HEAP32[r8 >> 2];
  r10 = __ZNK5Avoid7ConnRef5routeEv(r1);
  r11 = (r1 | 0) >> 2;
  r12 = HEAP32[r11];
  do {
    if ((HEAP8[r12 + 144 | 0] & 1) << 24 >> 24 == 0) {
      r13 = 0;
    } else {
      if ((HEAP8[r12 + 139 | 0] & 1) << 24 >> 24 == 0) {
        ___assert_func(5251764, 1077, 5257624, 5247856);
      }
      r14 = r10;
      if (FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 16 >> 2]](r10) >>> 0 <= 2) {
        r13 = 0;
        break;
      }
      if (!__ZNK5Avoid5PointeqERKS0_(HEAP32[r1 + 120 >> 2] + 12 | 0, HEAP32[r10 + 8 >> 2])) {
        r13 = 0;
        break;
      }
      r15 = FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 16 >> 2]](r10) - 2 | 0;
      if ((r15 | 0) == 0) {
        ___assert_func(5251764, 1096, 5257624, 5247696);
      }
      r14 = FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 24 >> 2]](r10, r15);
      __ZN5Avoid6VertIDC1Ejtt(r5, HEAP32[r14 + 16 >> 2], HEAP16[r14 + 20 >> 1], 0);
      HEAP32[r1 + 128 >> 2] = __ZN5Avoid11VertInfList13getVertexByIDERKNS_6VertIDE(HEAP32[r11] + 100 | 0, r5);
      r13 = r15;
    }
  } while (0);
  r5 = r1;
  r12 = (r1 + 120 | 0) >> 2;
  r15 = r9;
  r14 = (r1 + 128 | 0) >> 2;
  r16 = r10;
  r17 = r13;
  L626 : while (1) {
    r13 = __ZNK5Avoid7ConnRef3srcEv(HEAP32[r12]);
    __ZN5Avoid9aStarPathEPNS_7ConnRefEPNS_7VertInfES3_S3_(r5, r13, __ZNK5Avoid7ConnRef3dstEv(HEAP32[r8 >> 2]), __ZN5Avoid7ConnRef5startEv(HEAP32[r14]));
    if ((__ZNK5Avoid7VertInf15pathLeadsBackToEPKS0_(r15, HEAP32[r12]) | 0) == 0) {
      if ((r17 | 0) == 0) {
        break;
      }
      r13 = r17 - 1 | 0;
      r18 = FUNCTION_TABLE[HEAP32[HEAP32[r16 >> 2] + 24 >> 2]](r10, r13);
      __ZN5Avoid6VertIDC1Ejtt(r6, HEAP32[r18 + 16 >> 2], HEAP16[r18 + 20 >> 1], (r13 | 0) == 0 & 1);
      r18 = __ZN5Avoid11VertInfList13getVertexByIDERKNS_6VertIDE(HEAP32[r11] + 100 | 0, r6);
      HEAP32[r14] = r18;
      if ((r18 | 0) != 0) {
        r17 = r13;
        continue;
      }
      ___assert_func(5251764, 1127, 5257624, 5247664);
      r17 = r13;
      continue;
    }
    if ((HEAP8[HEAP32[r11] + 144 | 0] & 1) << 24 >> 24 == 0) {
      break;
    }
    if ((r9 | 0) == (HEAP32[HEAP32[r14] + 100 >> 2] | 0)) {
      break;
    } else {
      r19 = 0;
      r20 = r9;
    }
    while (1) {
      r13 = r20 + 100 | 0;
      if (!__ZN5Avoid17validateBendPointEPNS_7VertInfES1_S1_(HEAP32[r13 >> 2], r20, r19)) {
        break;
      }
      r18 = HEAP32[r13 >> 2];
      if ((r18 | 0) == (HEAP32[HEAP32[r14] + 100 >> 2] | 0)) {
        break L626;
      } else {
        r19 = r20;
        r20 = r18;
      }
    }
    if ((r17 | 0) == 0) {
      break;
    }
    r18 = r17 - 1 | 0;
    r13 = FUNCTION_TABLE[HEAP32[HEAP32[r16 >> 2] + 24 >> 2]](r10, r18);
    __ZN5Avoid6VertIDC1Ejtt(r7, HEAP32[r13 + 16 >> 2], HEAP16[r13 + 20 >> 1], (r18 | 0) == 0 & 1);
    r13 = __ZN5Avoid11VertInfList13getVertexByIDERKNS_6VertIDE(HEAP32[r11] + 100 | 0, r7);
    HEAP32[r14] = r13;
    if ((r13 | 0) != 0) {
      r17 = r18;
      continue;
    }
    ___assert_func(5251764, 1164, 5257624, 5247664);
    r17 = r18;
  }
  r17 = __ZNK5Avoid7VertInf15pathLeadsBackToEPKS0_(r15, HEAP32[r12]);
  if (r17 >>> 0 < 2) {
    r15 = r1 + 16 | 0;
    HEAP8[r15] = HEAP8[r15] | 1;
    HEAP32[r9 + 100 >> 2] = HEAP32[r12];
    r21 = 2;
  } else {
    r21 = r17;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6resizeEj(r2, r21);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6resizeEj(r3, r21);
  if ((r9 | 0) == (HEAP32[r12] | 0)) {
    r22 = r9;
    r23 = r3 | 0;
    r24 = r2 | 0, r25 = r24 >> 2;
    r26 = r1 + 4 | 0;
    r27 = HEAP32[r23 >> 2];
    HEAP32[r27 >> 2] = r22;
    r28 = HEAP32[r25];
    r29 = HEAP32[r12];
    r30 = r29 + 12 | 0;
    r31 = r28;
    r32 = r30;
    HEAP32[r31 >> 2] = HEAP32[r32 >> 2];
    HEAP32[r31 + 4 >> 2] = HEAP32[r32 + 4 >> 2];
    HEAP32[r31 + 8 >> 2] = HEAP32[r32 + 8 >> 2];
    HEAP32[r31 + 12 >> 2] = HEAP32[r32 + 12 >> 2];
    HEAP32[r31 + 16 >> 2] = HEAP32[r32 + 16 >> 2];
    HEAP16[r31 + 20 >> 1] = HEAP16[r32 + 20 >> 1];
    r33 = HEAP32[r26 >> 2];
    r34 = r33 | -2147483648;
    r35 = HEAP32[r25];
    r36 = r35 + 16 | 0;
    HEAP32[r36 >> 2] = r34;
    r37 = HEAP32[r25];
    r38 = r37 + 20 | 0;
    HEAP16[r38 >> 1] = 8;
    STACKTOP = r4;
    return;
  }
  r17 = r2 | 0, r2 = r17 >> 2;
  r15 = r3 | 0;
  r3 = r1 + 4 | 0;
  r1 = r9;
  r9 = r21;
  while (1) {
    r21 = r9 - 1 | 0;
    r14 = HEAP32[r2] + (r21 * 24 & -1) | 0;
    r7 = r1 + 12 | 0;
    HEAP32[r14 >> 2] = HEAP32[r7 >> 2];
    HEAP32[r14 + 4 >> 2] = HEAP32[r7 + 4 >> 2];
    HEAP32[r14 + 8 >> 2] = HEAP32[r7 + 8 >> 2];
    HEAP32[r14 + 12 >> 2] = HEAP32[r7 + 12 >> 2];
    HEAP32[r14 + 16 >> 2] = HEAP32[r7 + 16 >> 2];
    HEAP16[r14 + 20 >> 1] = HEAP16[r7 + 20 >> 1];
    HEAP32[HEAP32[r15 >> 2] + (r21 << 2) >> 2] = r1;
    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r1 + 10 >> 1])) {
      HEAP32[HEAP32[r2] + (r21 * 24 & -1) + 16 >> 2] = HEAP32[r3 >> 2];
      HEAP16[HEAP32[r2] + (r21 * 24 & -1) + 20 >> 1] = 8;
    } else {
      HEAP32[HEAP32[r2] + (r21 * 24 & -1) + 16 >> 2] = HEAP32[r1 + 4 >> 2];
      HEAP16[HEAP32[r2] + (r21 * 24 & -1) + 20 >> 1] = HEAP16[r1 + 8 >> 1];
    }
    r7 = HEAP32[r1 + 100 >> 2];
    if ((r7 | 0) == (HEAP32[r12] | 0)) {
      r22 = r7;
      r23 = r15;
      r24 = r17, r25 = r24 >> 2;
      r26 = r3;
      break;
    } else {
      r1 = r7;
      r9 = r21;
    }
  }
  r27 = HEAP32[r23 >> 2];
  HEAP32[r27 >> 2] = r22;
  r28 = HEAP32[r25];
  r29 = HEAP32[r12];
  r30 = r29 + 12 | 0;
  r31 = r28;
  r32 = r30;
  HEAP32[r31 >> 2] = HEAP32[r32 >> 2];
  HEAP32[r31 + 4 >> 2] = HEAP32[r32 + 4 >> 2];
  HEAP32[r31 + 8 >> 2] = HEAP32[r32 + 8 >> 2];
  HEAP32[r31 + 12 >> 2] = HEAP32[r32 + 12 >> 2];
  HEAP32[r31 + 16 >> 2] = HEAP32[r32 + 16 >> 2];
  HEAP16[r31 + 20 >> 1] = HEAP16[r32 + 20 >> 1];
  r33 = HEAP32[r26 >> 2];
  r34 = r33 | -2147483648;
  r35 = HEAP32[r25];
  r36 = r35 + 16 | 0;
  HEAP32[r36 >> 2] = r34;
  r37 = HEAP32[r25];
  r38 = r37 + 20 | 0;
  HEAP16[r38 >> 1] = 8;
  STACKTOP = r4;
  return;
}
__ZN5Avoid7ConnRef20generateStandardPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE["X"] = 1;
function __ZN5Avoid7ConnRef23generateCheckpointsPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 220 | 0;
  r6 = r5;
  r7 = r5 + 20;
  r8 = r5 + 40;
  r9 = r5 + 60;
  r10 = r5 + 80;
  r11 = r5 + 100;
  r12 = r5 + 120;
  r13 = r5 + 140;
  r14 = r5 + 160;
  r15 = r5 + 180;
  r16 = r5 + 200;
  r17 = r5 + 212;
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEEC1ERKS6_(r16, r1 + 160 | 0);
  r18 = (r16 | 0) >> 2;
  r19 = HEAP32[r18];
  r20 = (r1 + 120 | 0) >> 2;
  HEAP32[r17 >> 2] = __ZNK5Avoid7ConnRef3srcEv(HEAP32[r20]);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(r5 + 216, r16, r19, r17);
  r17 = (r1 + 124 | 0) >> 2;
  r19 = __ZNK5Avoid7ConnRef3dstEv(HEAP32[r17]);
  r21 = (r16 + 4 | 0) >> 2;
  r22 = HEAP32[r21];
  r23 = r16 + 8 | 0;
  r24 = r23 | 0;
  r25 = HEAP32[r24 >> 2];
  if (r22 >>> 0 < r25 >>> 0) {
    if ((r22 | 0) == 0) {
      r26 = 0;
    } else {
      HEAP32[r22 >> 2] = r19;
      r26 = HEAP32[r21];
    }
    HEAP32[r21] = r26 + 4 | 0;
  } else {
    r26 = HEAP32[r18];
    r27 = r22 - r26 + 4 >> 2 | 0;
    if (r27 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      r28 = HEAP32[r24 >> 2];
      r29 = HEAP32[r18];
    } else {
      r28 = r25;
      r29 = r26;
    }
    r26 = r29;
    r29 = r28 - r26 | 0;
    if (r29 >> 2 >>> 0 > 536870910) {
      r30 = 1073741823;
    } else {
      r28 = r29 >> 1;
      r30 = r28 >>> 0 < r27 >>> 0 ? r27 : r28;
    }
    __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r15, r30, HEAP32[r21] - r26 >> 2, r23);
    r23 = (r15 + 8 | 0) >> 2;
    r26 = HEAP32[r23];
    r30 = r15 + 12 | 0;
    do {
      if ((r26 | 0) == (HEAP32[r30 >> 2] | 0)) {
        r28 = (r15 + 4 | 0) >> 2;
        r27 = HEAP32[r28];
        r29 = r15 | 0;
        r25 = HEAP32[r29 >> 2];
        if (r27 >>> 0 > r25 >>> 0) {
          r24 = r27;
          r22 = (r24 - r25 + 4 >> 2 | 0) / -2 & -1;
          r31 = (r22 << 2) + r27 | 0;
          r32 = r26 - r24 | 0;
          _memmove(r31, r27, r32, 4, 0);
          r24 = ((r32 >> 2) + r22 << 2) + r27 | 0;
          HEAP32[r23] = r24;
          HEAP32[r28] = r31;
          r33 = r24;
          break;
        }
        r24 = r26 - r25 >> 1;
        r31 = (r24 | 0) == 0 ? 1 : r24;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r14, r31, r31 >>> 2, HEAP32[r15 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r14, r27, r26);
        r31 = r14 | 0;
        HEAP32[r29 >> 2] = HEAP32[r31 >> 2];
        HEAP32[r31 >> 2] = r25;
        r25 = r14 + 4 | 0;
        HEAP32[r28] = HEAP32[r25 >> 2];
        HEAP32[r25 >> 2] = r27;
        r27 = r14 + 8 | 0;
        r25 = HEAP32[r27 >> 2];
        HEAP32[r23] = r25;
        HEAP32[r27 >> 2] = r26;
        r27 = r14 + 12 | 0;
        HEAP32[r30 >> 2] = HEAP32[r27 >> 2];
        HEAP32[r27 >> 2] = r26;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r14);
        r33 = r25;
      } else {
        r33 = r26;
      }
    } while (0);
    if ((r33 | 0) == 0) {
      r34 = 0;
    } else {
      HEAP32[r33 >> 2] = r19;
      r34 = r33;
    }
    HEAP32[r23] = r34 + 4 | 0;
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r16, r15);
    __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r15);
  }
  r15 = (r2 | 0) >> 2;
  r34 = (r2 + 4 | 0) >> 2;
  HEAP32[r34] = HEAP32[r15];
  r23 = (r3 | 0) >> 2;
  r33 = (r3 + 4 | 0) >> 2;
  HEAP32[r33] = HEAP32[r23];
  r19 = __ZNK5Avoid7ConnRef3srcEv(HEAP32[r20]) + 12 | 0;
  r26 = HEAP32[r34];
  r14 = r2 + 8 | 0;
  r30 = (r14 | 0) >> 2;
  r25 = HEAP32[r30];
  if (r26 >>> 0 < r25 >>> 0) {
    if ((r26 | 0) == 0) {
      r35 = 0;
    } else {
      r27 = r26 >> 2;
      r28 = r19 >> 2;
      HEAP32[r27] = HEAP32[r28];
      HEAP32[r27 + 1] = HEAP32[r28 + 1];
      HEAP32[r27 + 2] = HEAP32[r28 + 2];
      HEAP32[r27 + 3] = HEAP32[r28 + 3];
      HEAP32[r27 + 4] = HEAP32[r28 + 4];
      HEAP32[r27 + 5] = HEAP32[r28 + 5];
      r35 = HEAP32[r34];
    }
    HEAP32[r34] = r35 + 24 | 0;
  } else {
    r35 = HEAP32[r15];
    r28 = ((r26 - r35 | 0) / 24 & -1) + 1 | 0;
    if (r28 >>> 0 > 178956970) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      r36 = HEAP32[r30];
      r37 = HEAP32[r15];
    } else {
      r36 = r25;
      r37 = r35;
    }
    r35 = r37;
    r37 = (r36 - r35 | 0) / 24 & -1;
    if (r37 >>> 0 > 89478484) {
      r38 = 178956970;
    } else {
      r36 = r37 << 1;
      r38 = r36 >>> 0 < r28 >>> 0 ? r28 : r36;
    }
    __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r13, r38, (HEAP32[r34] - r35 | 0) / 24 & -1, r14);
    r35 = (r13 + 8 | 0) >> 2;
    r38 = HEAP32[r35];
    r36 = r13 + 12 | 0;
    do {
      if ((r38 | 0) == (HEAP32[r36 >> 2] | 0)) {
        r28 = (r13 + 4 | 0) >> 2;
        r37 = HEAP32[r28];
        r25 = r13 | 0;
        r26 = HEAP32[r25 >> 2];
        if (r37 >>> 0 > r26 >>> 0) {
          r27 = r37;
          r31 = (((r27 - r26 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
          r29 = r37 + (r31 * 24 & -1) | 0;
          r24 = r38 - r27 | 0;
          _memmove(r29, r37, r24, 4, 0);
          r27 = r37 + ((((r24 | 0) / 24 & -1) + r31) * 24 & -1) | 0;
          HEAP32[r35] = r27;
          HEAP32[r28] = r29;
          r39 = r27;
          break;
        }
        r27 = ((r38 - r26 | 0) / 24 & -1) << 1;
        r29 = (r27 | 0) == 0 ? 1 : r27;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r12, r29, r29 >>> 2, HEAP32[r13 + 16 >> 2]);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r12, r37, r38);
        r29 = r12 | 0;
        HEAP32[r25 >> 2] = HEAP32[r29 >> 2];
        HEAP32[r29 >> 2] = r26;
        r26 = r12 + 4 | 0;
        HEAP32[r28] = HEAP32[r26 >> 2];
        HEAP32[r26 >> 2] = r37;
        r37 = r12 + 8 | 0;
        r26 = HEAP32[r37 >> 2];
        HEAP32[r35] = r26;
        HEAP32[r37 >> 2] = r38;
        r37 = r12 + 12 | 0;
        HEAP32[r36 >> 2] = HEAP32[r37 >> 2];
        HEAP32[r37 >> 2] = r38;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r12);
        r39 = r26;
      } else {
        r39 = r38;
      }
    } while (0);
    if ((r39 | 0) != 0) {
      r38 = r39 >> 2;
      r12 = r19 >> 2;
      HEAP32[r38] = HEAP32[r12];
      HEAP32[r38 + 1] = HEAP32[r12 + 1];
      HEAP32[r38 + 2] = HEAP32[r12 + 2];
      HEAP32[r38 + 3] = HEAP32[r12 + 3];
      HEAP32[r38 + 4] = HEAP32[r12 + 4];
      HEAP32[r38 + 5] = HEAP32[r12 + 5];
    }
    HEAP32[r35] = r39 + 24 | 0;
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r2, r13);
    __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r13);
  }
  r13 = __ZNK5Avoid7ConnRef3srcEv(HEAP32[r20]);
  r20 = HEAP32[r33];
  r39 = r3 + 8 | 0;
  r35 = (r39 | 0) >> 2;
  r12 = HEAP32[r35];
  if (r20 >>> 0 < r12 >>> 0) {
    if ((r20 | 0) == 0) {
      r40 = 0;
    } else {
      HEAP32[r20 >> 2] = r13;
      r40 = HEAP32[r33];
    }
    HEAP32[r33] = r40 + 4 | 0;
  } else {
    r40 = HEAP32[r23];
    r38 = r20 - r40 + 4 >> 2 | 0;
    if (r38 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      r41 = HEAP32[r35];
      r42 = HEAP32[r23];
    } else {
      r41 = r12;
      r42 = r40;
    }
    r40 = r42;
    r42 = r41 - r40 | 0;
    if (r42 >> 2 >>> 0 > 536870910) {
      r43 = 1073741823;
    } else {
      r41 = r42 >> 1;
      r43 = r41 >>> 0 < r38 >>> 0 ? r38 : r41;
    }
    __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r11, r43, HEAP32[r33] - r40 >> 2, r39);
    r40 = (r11 + 8 | 0) >> 2;
    r43 = HEAP32[r40];
    r41 = r11 + 12 | 0;
    do {
      if ((r43 | 0) == (HEAP32[r41 >> 2] | 0)) {
        r38 = (r11 + 4 | 0) >> 2;
        r42 = HEAP32[r38];
        r12 = r11 | 0;
        r20 = HEAP32[r12 >> 2];
        if (r42 >>> 0 > r20 >>> 0) {
          r19 = r42;
          r36 = (r19 - r20 + 4 >> 2 | 0) / -2 & -1;
          r26 = (r36 << 2) + r42 | 0;
          r37 = r43 - r19 | 0;
          _memmove(r26, r42, r37, 4, 0);
          r19 = ((r37 >> 2) + r36 << 2) + r42 | 0;
          HEAP32[r40] = r19;
          HEAP32[r38] = r26;
          r44 = r19;
          break;
        }
        r19 = r43 - r20 >> 1;
        r26 = (r19 | 0) == 0 ? 1 : r19;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r10, r26, r26 >>> 2, HEAP32[r11 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r10, r42, r43);
        r26 = r10 | 0;
        HEAP32[r12 >> 2] = HEAP32[r26 >> 2];
        HEAP32[r26 >> 2] = r20;
        r20 = r10 + 4 | 0;
        HEAP32[r38] = HEAP32[r20 >> 2];
        HEAP32[r20 >> 2] = r42;
        r42 = r10 + 8 | 0;
        r20 = HEAP32[r42 >> 2];
        HEAP32[r40] = r20;
        HEAP32[r42 >> 2] = r43;
        r42 = r10 + 12 | 0;
        HEAP32[r41 >> 2] = HEAP32[r42 >> 2];
        HEAP32[r42 >> 2] = r43;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r10);
        r44 = r20;
      } else {
        r44 = r43;
      }
    } while (0);
    if ((r44 | 0) == 0) {
      r45 = 0;
    } else {
      HEAP32[r44 >> 2] = r13;
      r45 = r44;
    }
    HEAP32[r40] = r45 + 4 | 0;
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r3, r11);
    __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r11);
  }
  r11 = HEAP32[r21];
  r45 = HEAP32[r18];
  if (r11 - r45 >> 2 >>> 0 <= 1) {
    r46 = r1 + 4 | 0, r47 = r46 >> 2;
    r48 = HEAP32[r47];
    r49 = r48 | -2147483648;
    r50 = HEAP32[r34];
    r51 = HEAP32[r15];
    r52 = r50;
    r53 = r51;
    r54 = r52 - r53 | 0;
    r55 = (r54 | 0) / 24 & -1;
    r56 = r55 - 1 | 0;
    r57 = r51 + (r56 * 24 & -1) + 16 | 0, r58 = r57 >> 2;
    HEAP32[r58] = r49;
    r59 = HEAP32[r34];
    r60 = HEAP32[r15];
    r61 = r59;
    r62 = r60;
    r63 = r61 - r62 | 0;
    r64 = (r63 | 0) / 24 & -1;
    r65 = r64 - 1 | 0;
    r66 = r60 + (r65 * 24 & -1) + 20 | 0, r67 = r66 >> 1;
    HEAP16[r67] = 8;
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r16);
    STACKTOP = r5;
    return;
  }
  r40 = r1 + 148 | 0;
  r44 = r1;
  r13 = r1 + 16 | 0;
  r43 = r39;
  r39 = (r7 + 8 | 0) >> 2;
  r10 = r7 + 12 | 0;
  r41 = (r7 + 4 | 0) >> 2;
  r20 = r7 | 0;
  r42 = r7 + 16 | 0;
  r38 = r6 | 0;
  r26 = r6 + 4 | 0;
  r12 = r6 + 8 | 0;
  r19 = r6 + 12 | 0;
  r36 = r14;
  r14 = (r9 + 8 | 0) >> 2;
  r37 = r9 + 12 | 0;
  r28 = (r9 + 4 | 0) >> 2;
  r29 = r9 | 0;
  r25 = r9 + 16 | 0;
  r27 = r8 | 0;
  r31 = r8 + 4 | 0;
  r24 = r8 + 8 | 0;
  r22 = r8 + 12 | 0;
  r32 = r1 + 4 | 0;
  r1 = 1;
  r68 = 0;
  r69 = r45;
  r45 = r11;
  L739 : while (1) {
    r11 = (r68 | 0) != 0;
    r70 = r68 - 1 | 0;
    r71 = r1;
    r72 = r69;
    r73 = r45;
    while (1) {
      r74 = HEAP32[r72 + (r68 << 2) >> 2];
      r75 = HEAP32[r72 + (r71 << 2) >> 2];
      do {
        if (r11) {
          r76 = HEAP32[HEAP32[r40 >> 2] + (r70 << 5) + 28 >> 2];
          if ((r76 | 0) == 15) {
            r77 = r73;
            r78 = r72;
            break;
          }
          __ZN5Avoid7VertInf20setVisibleDirectionsEj(r74, r76);
          r77 = HEAP32[r21];
          r78 = HEAP32[r18];
        } else {
          r77 = r73;
          r78 = r72;
        }
      } while (0);
      r79 = r71 + 1 | 0;
      do {
        if (r79 >>> 0 < r77 - r78 >> 2 >>> 0) {
          r76 = HEAP32[HEAP32[r40 >> 2] + (r71 - 1 << 5) + 24 >> 2];
          if ((r76 | 0) == 15) {
            break;
          }
          __ZN5Avoid7VertInf20setVisibleDirectionsEj(r75, r76);
        }
      } while (0);
      __ZN5Avoid9aStarPathEPNS_7ConnRefEPNS_7VertInfES3_S3_(r44, r74, r75, 0);
      if (r11) {
        __ZN5Avoid7VertInf20setVisibleDirectionsEj(r74, 15);
      }
      r76 = r75;
      if (r79 >>> 0 < HEAP32[r21] - HEAP32[r18] >> 2 >>> 0) {
        __ZN5Avoid7VertInf20setVisibleDirectionsEj(r76, 15);
      }
      r80 = __ZNK5Avoid7VertInf15pathLeadsBackToEPKS0_(r76, r74);
      if ((r80 | 0) > 1) {
        break;
      }
      do {
        if ((r79 | 0) == (HEAP32[r33] - HEAP32[r23] >> 2 | 0)) {
          HEAP8[r13] = HEAP8[r13] | 1;
          r76 = __ZNK5Avoid7ConnRef3dstEv(HEAP32[r17]) + 12 | 0;
          r81 = HEAP32[r34];
          r82 = HEAP32[r30];
          if (r81 >>> 0 < r82 >>> 0) {
            if ((r81 | 0) == 0) {
              r83 = 0;
            } else {
              r84 = r81 >> 2;
              r85 = r76 >> 2;
              HEAP32[r84] = HEAP32[r85];
              HEAP32[r84 + 1] = HEAP32[r85 + 1];
              HEAP32[r84 + 2] = HEAP32[r85 + 2];
              HEAP32[r84 + 3] = HEAP32[r85 + 3];
              HEAP32[r84 + 4] = HEAP32[r85 + 4];
              HEAP32[r84 + 5] = HEAP32[r85 + 5];
              r83 = HEAP32[r34];
            }
            HEAP32[r34] = r83 + 24 | 0;
          } else {
            r85 = HEAP32[r15];
            r84 = ((r81 - r85 | 0) / 24 & -1) + 1 | 0;
            if (r84 >>> 0 > 178956970) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
              r86 = HEAP32[r30];
              r87 = HEAP32[r15];
            } else {
              r86 = r82;
              r87 = r85;
            }
            r85 = r87;
            r82 = (r86 - r85 | 0) / 24 & -1;
            if (r82 >>> 0 > 89478484) {
              r88 = 178956970;
            } else {
              r81 = r82 << 1;
              r88 = r81 >>> 0 < r84 >>> 0 ? r84 : r81;
            }
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r9, r88, (HEAP32[r34] - r85 | 0) / 24 & -1, r36);
            r85 = HEAP32[r14];
            do {
              if ((r85 | 0) == (HEAP32[r37 >> 2] | 0)) {
                r81 = HEAP32[r28];
                r84 = HEAP32[r29 >> 2];
                if (r81 >>> 0 > r84 >>> 0) {
                  r82 = r81;
                  r89 = (((r82 - r84 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                  r90 = r81 + (r89 * 24 & -1) | 0;
                  r91 = r85 - r82 | 0;
                  _memmove(r90, r81, r91, 4, 0);
                  r82 = r81 + ((((r91 | 0) / 24 & -1) + r89) * 24 & -1) | 0;
                  HEAP32[r14] = r82;
                  HEAP32[r28] = r90;
                  r92 = r82;
                  break;
                }
                r82 = ((r85 - r84 | 0) / 24 & -1) << 1;
                r90 = (r82 | 0) == 0 ? 1 : r82;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r8, r90, r90 >>> 2, HEAP32[r25 >> 2]);
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r8, r81, r85);
                HEAP32[r29 >> 2] = HEAP32[r27 >> 2];
                HEAP32[r27 >> 2] = r84;
                HEAP32[r28] = HEAP32[r31 >> 2];
                HEAP32[r31 >> 2] = r81;
                r81 = HEAP32[r24 >> 2];
                HEAP32[r14] = r81;
                HEAP32[r24 >> 2] = r85;
                HEAP32[r37 >> 2] = HEAP32[r22 >> 2];
                HEAP32[r22 >> 2] = r85;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r8);
                r92 = r81;
              } else {
                r92 = r85;
              }
            } while (0);
            if ((r92 | 0) != 0) {
              r85 = r92 >> 2;
              r81 = r76 >> 2;
              HEAP32[r85] = HEAP32[r81];
              HEAP32[r85 + 1] = HEAP32[r81 + 1];
              HEAP32[r85 + 2] = HEAP32[r81 + 2];
              HEAP32[r85 + 3] = HEAP32[r81 + 3];
              HEAP32[r85 + 4] = HEAP32[r81 + 4];
              HEAP32[r85 + 5] = HEAP32[r81 + 5];
            }
            HEAP32[r14] = r92 + 24 | 0;
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r2, r9);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r9);
          }
          r81 = __ZNK5Avoid7ConnRef3dstEv(HEAP32[r17]);
          r85 = HEAP32[r33];
          r84 = HEAP32[r35];
          if (r85 >>> 0 < r84 >>> 0) {
            if ((r85 | 0) == 0) {
              r93 = 0;
            } else {
              HEAP32[r85 >> 2] = r81;
              r93 = HEAP32[r33];
            }
            HEAP32[r33] = r93 + 4 | 0;
          } else {
            r90 = HEAP32[r23];
            r82 = r85 - r90 + 4 >> 2 | 0;
            if (r82 >>> 0 > 1073741823) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
              r94 = HEAP32[r35];
              r95 = HEAP32[r23];
            } else {
              r94 = r84;
              r95 = r90;
            }
            r90 = r95;
            r84 = r94 - r90 | 0;
            if (r84 >> 2 >>> 0 > 536870910) {
              r96 = 1073741823;
            } else {
              r85 = r84 >> 1;
              r96 = r85 >>> 0 < r82 >>> 0 ? r82 : r85;
            }
            __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r7, r96, HEAP32[r33] - r90 >> 2, r43);
            r90 = HEAP32[r39];
            do {
              if ((r90 | 0) == (HEAP32[r10 >> 2] | 0)) {
                r85 = HEAP32[r41];
                r82 = HEAP32[r20 >> 2];
                if (r85 >>> 0 > r82 >>> 0) {
                  r84 = r85;
                  r89 = (r84 - r82 + 4 >> 2 | 0) / -2 & -1;
                  r91 = (r89 << 2) + r85 | 0;
                  r97 = r90 - r84 | 0;
                  _memmove(r91, r85, r97, 4, 0);
                  r84 = ((r97 >> 2) + r89 << 2) + r85 | 0;
                  HEAP32[r39] = r84;
                  HEAP32[r41] = r91;
                  r98 = r84;
                  break;
                }
                r84 = r90 - r82 >> 1;
                r91 = (r84 | 0) == 0 ? 1 : r84;
                __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r6, r91, r91 >>> 2, HEAP32[r42 >> 2]);
                __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r6, r85, r90);
                HEAP32[r20 >> 2] = HEAP32[r38 >> 2];
                HEAP32[r38 >> 2] = r82;
                HEAP32[r41] = HEAP32[r26 >> 2];
                HEAP32[r26 >> 2] = r85;
                r85 = HEAP32[r12 >> 2];
                HEAP32[r39] = r85;
                HEAP32[r12 >> 2] = r90;
                HEAP32[r10 >> 2] = HEAP32[r19 >> 2];
                HEAP32[r19 >> 2] = r90;
                __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r6);
                r98 = r85;
              } else {
                r98 = r90;
              }
            } while (0);
            if ((r98 | 0) == 0) {
              r99 = 0;
            } else {
              HEAP32[r98 >> 2] = r81;
              r99 = r98;
            }
            HEAP32[r39] = r99 + 4 | 0;
            __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r3, r7);
            __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r7);
          }
          if ((HEAP32[r34] - HEAP32[r15] | 0) == 48) {
            break;
          }
          ___assert_func(5251764, 1051, 5257448, 5248164);
        } else {
          r90 = __ZNK5Avoid7ConnRef2idEv(HEAP32[r32 >> 2]);
          r76 = HEAP32[HEAP32[r18] + (r71 << 2) >> 2];
          r85 = r76 + 12 | 0;
          r82 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r85 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r85 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r85 = r76 + 20 | 0;
          r76 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r85 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r85 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          __ZN5Avoid10err_printfEPKcz(5247896, (tempInt = STACKTOP, STACKTOP = STACKTOP + 20 | 0, HEAP32[tempInt >> 2] = r90, HEAPF64[tempDoublePtr >> 3] = r82, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r76, HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
          _fflush(HEAP32[_stderr >> 2]);
        }
      } while (0);
      r74 = HEAP32[r21];
      r76 = HEAP32[r18];
      if (r79 >>> 0 < r74 - r76 >> 2 >>> 0) {
        r71 = r79;
        r72 = r76;
        r73 = r74;
      } else {
        r46 = r32, r47 = r46 >> 2;
        r4 = 756;
        break L739;
      }
    }
    r73 = (HEAP32[r34] - HEAP32[r15] | 0) / 24 & -1;
    r72 = r80 - 1 + r73 | 0;
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6resizeEj(r2, r72);
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6resizeEj(r3, r72);
    r72 = HEAP32[r15];
    r11 = ((HEAP32[r34] - r72 | 0) / 24 & -1) - 1 | 0;
    L821 : do {
      if (r11 >>> 0 >= r73 >>> 0) {
        r70 = r75;
        r74 = r11;
        r76 = r72;
        while (1) {
          r82 = r76 + (r74 * 24 & -1) | 0;
          r90 = r70 + 12 | 0;
          HEAP32[r82 >> 2] = HEAP32[r90 >> 2];
          HEAP32[r82 + 4 >> 2] = HEAP32[r90 + 4 >> 2];
          HEAP32[r82 + 8 >> 2] = HEAP32[r90 + 8 >> 2];
          HEAP32[r82 + 12 >> 2] = HEAP32[r90 + 12 >> 2];
          HEAP32[r82 + 16 >> 2] = HEAP32[r90 + 16 >> 2];
          HEAP16[r82 + 20 >> 1] = HEAP16[r90 + 20 >> 1];
          if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r70 + 10 >> 1])) {
            HEAP32[HEAP32[r15] + (r74 * 24 & -1) + 16 >> 2] = HEAP32[r32 >> 2];
            HEAP16[HEAP32[r15] + (r74 * 24 & -1) + 20 >> 1] = 8;
          } else {
            HEAP32[HEAP32[r15] + (r74 * 24 & -1) + 16 >> 2] = HEAP32[r70 + 4 >> 2];
            HEAP16[HEAP32[r15] + (r74 * 24 & -1) + 20 >> 1] = HEAP16[r70 + 8 >> 1];
          }
          HEAP32[HEAP32[r23] + (r74 << 2) >> 2] = r70;
          r90 = r74 - 1 | 0;
          if (r90 >>> 0 < r73 >>> 0) {
            break L821;
          }
          r70 = HEAP32[r70 + 100 >> 2];
          r74 = r90;
          r76 = HEAP32[r15];
        }
      }
    } while (0);
    r73 = HEAP32[r21];
    r72 = HEAP32[r18];
    if (r79 >>> 0 < r73 - r72 >> 2 >>> 0) {
      r1 = r79;
      r68 = r71;
      r69 = r72;
      r45 = r73;
    } else {
      r46 = r32, r47 = r46 >> 2;
      r4 = 755;
      break;
    }
  }
  if (r4 == 755) {
    r48 = HEAP32[r47];
    r49 = r48 | -2147483648;
    r50 = HEAP32[r34];
    r51 = HEAP32[r15];
    r52 = r50;
    r53 = r51;
    r54 = r52 - r53 | 0;
    r55 = (r54 | 0) / 24 & -1;
    r56 = r55 - 1 | 0;
    r57 = r51 + (r56 * 24 & -1) + 16 | 0, r58 = r57 >> 2;
    HEAP32[r58] = r49;
    r59 = HEAP32[r34];
    r60 = HEAP32[r15];
    r61 = r59;
    r62 = r60;
    r63 = r61 - r62 | 0;
    r64 = (r63 | 0) / 24 & -1;
    r65 = r64 - 1 | 0;
    r66 = r60 + (r65 * 24 & -1) + 20 | 0, r67 = r66 >> 1;
    HEAP16[r67] = 8;
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r16);
    STACKTOP = r5;
    return;
  } else if (r4 == 756) {
    r48 = HEAP32[r47];
    r49 = r48 | -2147483648;
    r50 = HEAP32[r34];
    r51 = HEAP32[r15];
    r52 = r50;
    r53 = r51;
    r54 = r52 - r53 | 0;
    r55 = (r54 | 0) / 24 & -1;
    r56 = r55 - 1 | 0;
    r57 = r51 + (r56 * 24 & -1) + 16 | 0, r58 = r57 >> 2;
    HEAP32[r58] = r49;
    r59 = HEAP32[r34];
    r60 = HEAP32[r15];
    r61 = r59;
    r62 = r60;
    r63 = r61 - r62 | 0;
    r64 = (r63 | 0) / 24 & -1;
    r65 = r64 - 1 | 0;
    r66 = r60 + (r65 * 24 & -1) + 20 | 0, r67 = r66 >> 1;
    HEAP16[r67] = 8;
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r16);
    STACKTOP = r5;
    return;
  }
}
__ZN5Avoid7ConnRef23generateCheckpointsPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE["X"] = 1;
function __ZNK5Avoid6VertID8isConnPtEv(r1) {
  return (r1 & 1) << 16 >> 16 != 0;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEEC1ERKS6_(r1, r2) {
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEEC2ERKS6_(r1, r2);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6resizeEj(r1, r2) {
  var r3, r4, r5;
  r3 = r1 + 4 | 0;
  r4 = HEAP32[r1 >> 2];
  r5 = (HEAP32[r3 >> 2] - r4 | 0) / 24 & -1;
  if (r5 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8__appendEj(r1, r2 - r5 | 0);
    return;
  }
  if (r5 >>> 0 <= r2 >>> 0) {
    return;
  }
  HEAP32[r3 >> 2] = r4 + (r2 * 24 & -1) | 0;
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6resizeEj(r1, r2) {
  var r3, r4, r5;
  r3 = r1 + 4 | 0;
  r4 = HEAP32[r1 >> 2];
  r5 = HEAP32[r3 >> 2] - r4 >> 2;
  if (r5 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE8__appendEj(r1, r2 - r5 | 0);
    return;
  }
  if (r5 >>> 0 <= r2 >>> 0) {
    return;
  }
  HEAP32[r3 >> 2] = (r2 << 2) + r4 | 0;
  return;
}
function __ZNK5Avoid7ConnRef20possibleDstPinPointsEv(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    STACKTOP = r3;
    return;
  }
  __ZNK5Avoid7ConnEnd17possiblePinPointsEv(r4, r2);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, HEAP32[r4 >> 2], HEAP32[r4 + 4 >> 2]);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZN5Avoid7PtOrderC1Ev(r1) {
  __ZN5Avoid7PtOrderC2Ev(r1);
  return;
}
function __ZN5Avoid7PtOrderC2Ev(r1) {
  var r2, r3, r4;
  r2 = r1 + 28 | 0;
  r3 = r2;
  r4 = (r1 + 4 | 0) >> 2;
  HEAP32[r4] = 0;
  HEAP32[r4 + 1] = 0;
  HEAP32[r4 + 2] = 0;
  HEAP32[r4 + 3] = 0;
  HEAP32[r4 + 4] = 0;
  HEAP32[r4 + 5] = 0;
  HEAP32[r2 >> 2] = r3;
  HEAP32[r1 + 32 >> 2] = r3;
  HEAP32[r1 + 36 >> 2] = 0;
  r3 = r1 + 40 | 0;
  r2 = r3;
  HEAP32[r3 >> 2] = r2;
  HEAP32[r1 + 44 >> 2] = r2;
  r2 = r1;
  tempBigInt = 0;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  r2 = (r1 + 48 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  HEAP32[r2 + 6] = 0;
  return;
}
function __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZN5Avoid7PtOrderD1Ev(r1) {
  __ZN5Avoid7PtOrderD2Ev(r1);
  return;
}
function __ZN5Avoid7PtOrderD2Ev(r1) {
  __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED1Ev(r1 + 64 | 0);
  __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED1Ev(r1 + 52 | 0);
  __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED1Ev(r1 + 40 | 0);
  __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED1Ev(r1 + 28 | 0);
  __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED1Ev(r1 + 16 | 0);
  __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED1Ev(r1 + 4 | 0);
  return;
}
function __ZN5Avoid7PtOrder4sortEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r4 = r3;
  r5 = r3 + 20;
  r6 = r3 + 40, r7 = r6 >> 2;
  r8 = r3 + 52;
  r9 = r3 + 56;
  r10 = r3 + 68;
  r11 = r3 + 92, r12 = r11 >> 2;
  r13 = r3 + 96, r14 = r13 >> 2;
  HEAP8[r1 + r2 | 0] = 1;
  r15 = r1 + (r2 * 12 & -1) + 8 | 0;
  r16 = (r1 + (r2 * 12 & -1) + 4 | 0) >> 2;
  r17 = HEAP32[r15 >> 2] - HEAP32[r16] >> 3;
  __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEEC1Ej(r6, r17);
  r18 = (r17 | 0) == 0;
  L867 : do {
    if (!r18) {
      r19 = HEAP32[r7];
      r20 = 0;
      while (1) {
        HEAP8[r8] = 0;
        __ZNSt3__16vectorIbNS_9allocatorIbEEE6assignEjRKb(r19 + (r20 * 12 & -1) | 0, r17, r8);
        r21 = r20 + 1 | 0;
        if (r21 >>> 0 < r17 >>> 0) {
          r20 = r21;
        } else {
          break L867;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorIiNS_9allocatorIiEEEC1Ej(r9, r17);
  r8 = r10 | 0;
  r20 = r10 + 4 | 0;
  r19 = r10 + 16 | 0;
  r21 = r10 + 20 | 0;
  r22 = r10 >> 2;
  HEAP32[r22] = 0;
  HEAP32[r22 + 1] = 0;
  HEAP32[r22 + 2] = 0;
  HEAP32[r22 + 3] = 0;
  HEAP32[r22 + 4] = 0;
  HEAP32[r22 + 5] = 0;
  r22 = HEAP32[r1 + (r2 * 12 & -1) + 32 >> 2];
  r23 = r1 + (r2 * 12 & -1) + 28 | 0;
  L874 : do {
    if ((r22 | 0) != (r23 | 0)) {
      r24 = HEAP32[r7];
      r25 = r22, r26 = r25 >> 2;
      while (1) {
        r27 = HEAP32[r26 + 3];
        r28 = (r27 >>> 5 << 2) + HEAP32[r24 + (HEAP32[r26 + 2] * 12 & -1) >> 2] | 0;
        HEAP32[r28 >> 2] = HEAP32[r28 >> 2] | 1 << (r27 & 31);
        r27 = HEAP32[r26 + 1];
        if ((r27 | 0) == (r23 | 0)) {
          break L874;
        } else {
          r25 = r27, r26 = r25 >> 2;
        }
      }
    }
  } while (0);
  HEAP32[r12] = 0;
  L879 : do {
    if (!r18) {
      r23 = HEAP32[r9 >> 2];
      r22 = HEAP32[r7];
      r25 = 0;
      while (1) {
        r26 = r25 >>> 5;
        r24 = 1 << (r25 & 31);
        r27 = 0;
        r28 = 0;
        while (1) {
          r29 = ((HEAP32[HEAP32[r22 + (r28 * 12 & -1) >> 2] + (r26 << 2) >> 2] & r24 | 0) != 0 & 1) + r27 | 0;
          r30 = r28 + 1 | 0;
          if ((r30 | 0) == (r17 | 0)) {
            break;
          } else {
            r27 = r29;
            r28 = r30;
          }
        }
        HEAP32[r23 + (r25 << 2) >> 2] = r29;
        if ((r29 | 0) == 0) {
          __ZNSt3__15dequeIjNS_9allocatorIjEEE9push_backERKj(r8, r11);
          r31 = HEAP32[r12];
        } else {
          r31 = r25;
        }
        r28 = r31 + 1 | 0;
        HEAP32[r12] = r28;
        if (r28 >>> 0 < r17 >>> 0) {
          r25 = r28;
        } else {
          break L879;
        }
      }
    }
  } while (0);
  if ((HEAP32[r21 >> 2] | 0) == 0) {
    __ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED1Ev(r10);
    __ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev(r9);
    __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED1Ev(r6);
    STACKTOP = r3;
    return;
  }
  r12 = r1 + (r2 * 12 & -1) + 52 | 0;
  r31 = (r1 + (r2 * 12 & -1) + 56 | 0) >> 2;
  r11 = r1 + (r2 * 12 & -1) + 60 | 0;
  r2 = r11 | 0;
  r1 = r11;
  r11 = r12 | 0;
  r29 = (r5 + 8 | 0) >> 2;
  r7 = r5 + 12 | 0;
  r25 = (r5 + 4 | 0) >> 2;
  r23 = r5 | 0;
  r22 = r5 + 16 | 0;
  r28 = r4 | 0;
  r27 = r4 + 4 | 0;
  r24 = r4 + 8 | 0;
  r26 = r4 + 12 | 0;
  r30 = r6 | 0;
  r32 = r9 | 0;
  while (1) {
    r33 = HEAP32[r19 >> 2];
    r34 = HEAP32[HEAP32[HEAP32[r20 >> 2] + (r33 >>> 10 << 2) >> 2] + ((r33 & 1023) << 2) >> 2];
    if (r34 >>> 0 >= HEAP32[r15 >> 2] - HEAP32[r16] >> 3 >>> 0) {
      ___assert_func(5251764, 1378, 5256800, 5247300);
    }
    __ZNSt3__15dequeIjNS_9allocatorIjEEE9pop_frontEv(r8);
    r33 = HEAP32[r16];
    r35 = (r34 << 3) + r33 | 0;
    r36 = HEAP32[r31];
    r37 = HEAP32[r2 >> 2];
    if (r36 >>> 0 < r37 >>> 0) {
      if ((r36 | 0) == 0) {
        r38 = 0;
      } else {
        HEAP32[r36 >> 2] = HEAP32[r35 >> 2];
        HEAP32[r36 + 4 >> 2] = HEAP32[r33 + (r34 << 3) + 4 >> 2];
        r38 = HEAP32[r31];
      }
      HEAP32[r31] = r38 + 8 | 0;
    } else {
      r39 = HEAP32[r11 >> 2];
      r40 = r36 - r39 + 8 >> 3 | 0;
      if (r40 >>> 0 > 536870911) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        r41 = HEAP32[r2 >> 2];
        r42 = HEAP32[r11 >> 2];
      } else {
        r41 = r37;
        r42 = r39;
      }
      r39 = r42;
      r37 = r41 - r39 | 0;
      if (r37 >> 3 >>> 0 > 268435454) {
        r43 = 536870911;
      } else {
        r36 = r37 >> 2;
        r43 = r36 >>> 0 < r40 >>> 0 ? r40 : r36;
      }
      __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_(r5, r43, HEAP32[r31] - r39 >> 3, r1);
      r39 = HEAP32[r29];
      do {
        if ((r39 | 0) == (HEAP32[r7 >> 2] | 0)) {
          r36 = HEAP32[r25];
          r40 = r36;
          r37 = HEAP32[r23 >> 2];
          if (r36 >>> 0 <= r37 >>> 0) {
            r44 = r39 - r37 >> 2;
            r45 = (r44 | 0) == 0 ? 1 : r44;
            __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_(r4, r45, r45 >>> 2, HEAP32[r22 >> 2]);
            __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESH_SH_(r4, r36, r39);
            HEAP32[r23 >> 2] = HEAP32[r28 >> 2];
            HEAP32[r28 >> 2] = r37;
            HEAP32[r25] = HEAP32[r27 >> 2];
            HEAP32[r27 >> 2] = r36;
            r45 = HEAP32[r24 >> 2];
            HEAP32[r29] = r45;
            HEAP32[r24 >> 2] = r39;
            HEAP32[r7 >> 2] = HEAP32[r26 >> 2];
            HEAP32[r26 >> 2] = r39;
            __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev(r4);
            r46 = r45;
            break;
          }
          r45 = (r40 - r37 + 8 >> 3 | 0) / -2 & -1;
          r37 = (r45 << 3) + r36 | 0;
          if ((r36 | 0) == (r39 | 0)) {
            r47 = r37;
            r48 = r39;
          } else {
            r44 = r45 + ((r39 - 8 + -r40 | 0) >>> 3) | 0;
            r40 = r37;
            r37 = r36;
            while (1) {
              HEAP32[r40 >> 2] = HEAP32[r37 >> 2];
              HEAP32[r40 + 4 >> 2] = HEAP32[r37 + 4 >> 2];
              r49 = r37 + 8 | 0;
              if ((r49 | 0) == (r39 | 0)) {
                break;
              } else {
                r40 = r40 + 8 | 0;
                r37 = r49;
              }
            }
            r47 = (r44 + 1 << 3) + r36 | 0;
            r48 = HEAP32[r25];
          }
          HEAP32[r29] = r47;
          HEAP32[r25] = (r45 << 3) + r48 | 0;
          r46 = r47;
        } else {
          r46 = r39;
        }
      } while (0);
      if ((r46 | 0) == 0) {
        r50 = 0;
      } else {
        HEAP32[r46 >> 2] = HEAP32[r35 >> 2];
        HEAP32[r46 + 4 >> 2] = HEAP32[r33 + (r34 << 3) + 4 >> 2];
        r50 = HEAP32[r29];
      }
      HEAP32[r29] = r50 + 8 | 0;
      __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS9_EE(r12, r5);
      __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev(r5);
    }
    HEAP32[r14] = 0;
    L931 : do {
      if (!r18) {
        r39 = HEAP32[r30 >> 2] + (r34 * 12 & -1) | 0;
        r37 = HEAP32[r32 >> 2];
        r40 = 0;
        while (1) {
          r49 = (r40 >>> 5 << 2) + HEAP32[r39 >> 2] | 0;
          r51 = 1 << (r40 & 31);
          r52 = HEAP32[r49 >> 2];
          do {
            if ((r52 & r51 | 0) == 0) {
              r53 = r40;
            } else {
              HEAP32[r49 >> 2] = r52 & (r51 ^ -1);
              r54 = (r40 << 2) + r37 | 0;
              r55 = HEAP32[r54 >> 2] - 1 | 0;
              HEAP32[r54 >> 2] = r55;
              if ((r55 | 0) != 0) {
                r53 = r40;
                break;
              }
              __ZNSt3__15dequeIjNS_9allocatorIjEEE9push_backERKj(r8, r13);
              r53 = HEAP32[r14];
            }
          } while (0);
          r51 = r53 + 1 | 0;
          HEAP32[r14] = r51;
          if (r51 >>> 0 < r17 >>> 0) {
            r40 = r51;
          } else {
            break L931;
          }
        }
      }
    } while (0);
    if ((HEAP32[r21 >> 2] | 0) == 0) {
      break;
    }
  }
  __ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED1Ev(r10);
  __ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev(r9);
  __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED1Ev(r6);
  STACKTOP = r3;
  return;
}
__ZN5Avoid7PtOrder4sortEj["X"] = 1;
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueES9_E4typeENS7_IPKS2_EESB_SB_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r7 = r6;
  r8 = HEAP32[r2 >> 2];
  r9 = r8;
  r10 = (r3 - r9 | 0) / 24 & -1;
  r3 = r8 + (r10 * 24 & -1) | 0;
  r11 = r4;
  r12 = r5 - r11 | 0;
  r13 = (r12 | 0) / 24 & -1;
  if ((r12 | 0) <= 0) {
    r14 = r3;
    r15 = r1 | 0, r16 = r15 >> 2;
    HEAP32[r16] = r14;
    STACKTOP = r6;
    return;
  }
  r12 = r2 + 8 | 0;
  r17 = HEAP32[r2 + 4 >> 2];
  r18 = HEAP32[r12 >> 2];
  r19 = r17;
  if ((r13 | 0) <= ((r18 - r19 | 0) / 24 & -1 | 0)) {
    r20 = (r19 - r3 | 0) / 24 & -1;
    if ((r13 | 0) > (r20 | 0)) {
      r21 = r4 + (r20 * 24 & -1) | 0;
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r2, r21, r5);
      r22 = r20;
      r23 = r21;
    } else {
      r22 = r13;
      r23 = r5;
    }
    if ((r22 | 0) <= 0) {
      r14 = r3;
      r15 = r1 | 0, r16 = r15 >> 2;
      HEAP32[r16] = r14;
      STACKTOP = r6;
      return;
    }
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE12__move_rangeEPS2_S6_S6_(r2, r3, r17, r8 + ((r13 + r10) * 24 & -1) | 0);
    _memmove(r3, r4, r23 - r11 | 0, 4, 0);
    r14 = r3;
    r15 = r1 | 0, r16 = r15 >> 2;
    HEAP32[r16] = r14;
    STACKTOP = r6;
    return;
  }
  r11 = ((r19 - r9 | 0) / 24 & -1) + r13 | 0;
  if (r11 >>> 0 > 178956970) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r13 = (r18 - r9 | 0) / 24 & -1;
  if (r13 >>> 0 > 89478484) {
    r24 = 178956970;
  } else {
    r9 = r13 << 1;
    r24 = r9 >>> 0 < r11 >>> 0 ? r11 : r9;
  }
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r7, r24, r10, r12);
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r7, r4, r5);
  r5 = __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EEPS2_(r2, r7, r3);
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r7);
  r14 = r5;
  r15 = r1 | 0, r16 = r15 >> 2;
  HEAP32[r16] = r14;
  STACKTOP = r6;
  return;
}
__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueES9_E4typeENS7_IPKS2_EESB_SB_["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r6 = r5;
  r7 = r5 + 20;
  r8 = HEAP32[r2 >> 2];
  r9 = r8;
  r10 = r3 - r9 >> 2;
  r3 = (r10 << 2) + r8 | 0;
  r11 = (r2 + 4 | 0) >> 2;
  r12 = HEAP32[r11];
  r13 = r2 + 8 | 0;
  r14 = HEAP32[r13 >> 2];
  if (r12 >>> 0 < r14 >>> 0) {
    if ((r3 | 0) == (r12 | 0)) {
      if ((r3 | 0) == 0) {
        r15 = 0;
      } else {
        HEAP32[r3 >> 2] = HEAP32[r4 >> 2];
        r15 = HEAP32[r11];
      }
      HEAP32[r11] = r15 + 4 | 0;
      r16 = r3;
      r17 = r1 | 0, r18 = r17 >> 2;
      HEAP32[r18] = r16;
      STACKTOP = r5;
      return;
    } else {
      __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE12__move_rangeEPS3_S7_S7_(r2, r3, r12, (r10 + 1 << 2) + r8 | 0);
      if (r3 >>> 0 > r4 >>> 0) {
        r19 = r4;
      } else {
        r19 = HEAP32[r11] >>> 0 > r4 >>> 0 ? r4 + 4 | 0 : r4;
      }
      HEAP32[r3 >> 2] = HEAP32[r19 >> 2];
      r16 = r3;
      r17 = r1 | 0, r18 = r17 >> 2;
      HEAP32[r18] = r16;
      STACKTOP = r5;
      return;
    }
  }
  r19 = r12 - r9 + 4 >> 2 | 0;
  if (r19 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r12 = r14 - r9 | 0;
  if (r12 >> 2 >>> 0 > 536870910) {
    r20 = 1073741823;
  } else {
    r9 = r12 >> 1;
    r20 = r9 >>> 0 < r19 >>> 0 ? r19 : r9;
  }
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r7, r20, r10, r13);
  r13 = (r7 + 8 | 0) >> 2;
  r10 = HEAP32[r13];
  r20 = r7 + 12 | 0;
  do {
    if ((r10 | 0) == (HEAP32[r20 >> 2] | 0)) {
      r9 = (r7 + 4 | 0) >> 2;
      r19 = HEAP32[r9];
      r12 = r7 | 0;
      r14 = HEAP32[r12 >> 2];
      if (r19 >>> 0 > r14 >>> 0) {
        r11 = r19;
        r8 = (r11 - r14 + 4 >> 2 | 0) / -2 & -1;
        r15 = (r8 << 2) + r19 | 0;
        r21 = r10 - r11 | 0;
        _memmove(r15, r19, r21, 4, 0);
        r11 = ((r21 >> 2) + r8 << 2) + r19 | 0;
        HEAP32[r13] = r11;
        HEAP32[r9] = r15;
        r22 = r11;
        break;
      }
      r11 = r10 - r14 >> 1;
      r15 = (r11 | 0) == 0 ? 1 : r11;
      __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r6, r15, r15 >>> 2, HEAP32[r7 + 16 >> 2]);
      __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r6, r19, r10);
      r15 = r6 | 0;
      HEAP32[r12 >> 2] = HEAP32[r15 >> 2];
      HEAP32[r15 >> 2] = r14;
      r14 = r6 + 4 | 0;
      HEAP32[r9] = HEAP32[r14 >> 2];
      HEAP32[r14 >> 2] = r19;
      r19 = r6 + 8 | 0;
      r14 = HEAP32[r19 >> 2];
      HEAP32[r13] = r14;
      HEAP32[r19 >> 2] = r10;
      r19 = r6 + 12 | 0;
      HEAP32[r20 >> 2] = HEAP32[r19 >> 2];
      HEAP32[r19 >> 2] = r10;
      __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r6);
      r22 = r14;
    } else {
      r22 = r10;
    }
  } while (0);
  if ((r22 | 0) == 0) {
    r23 = 0;
  } else {
    HEAP32[r22 >> 2] = HEAP32[r4 >> 2];
    r23 = r22;
  }
  HEAP32[r13] = r23 + 4 | 0;
  r23 = __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EEPS3_(r2, r7, r3);
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r7);
  r16 = r23;
  r17 = r1 | 0, r18 = r17 >> 2;
  HEAP32[r18] = r16;
  STACKTOP = r5;
  return;
}
__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_["X"] = 1;
function __ZN5Avoid18ConnectorCrossingsC2ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r1, r2, r3, r4, r5, r6) {
  var r7;
  r7 = r1 >> 2;
  HEAP32[r7] = r2;
  HEAP8[r1 + 4 | 0] = r3 & 1;
  HEAP32[r7 + 2] = r4;
  HEAP8[r1 + 12 | 0] = 0;
  HEAP32[r7 + 4] = r5;
  HEAP32[r7 + 5] = r6;
  HEAP32[r7 + 8] = 0;
  HEAP32[r7 + 9] = 0;
  HEAP32[r7 + 10] = 0;
  return;
}
function __ZN5Avoid18ConnectorCrossings5clearEv(r1) {
  var r2;
  HEAP32[r1 + 24 >> 2] = 0;
  HEAP32[r1 + 28 >> 2] = 0;
  r2 = r1 + 44 | 0;
  HEAPF64[tempDoublePtr >> 3] = 1.7976931348623157e+308, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r1 + 52 | 0;
  HEAPF64[tempDoublePtr >> 3] = 1.7976931348623157e+308, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
function __ZN5Avoid7PtOrder11positionForEjPKNS_7ConnRefE(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = 0;
  if ((HEAP8[r1 + r2 | 0] & 1) << 24 >> 24 == 0) {
    __ZN5Avoid7PtOrder4sortEj(r1, r2);
  }
  r5 = HEAP32[r1 + (r2 * 12 & -1) + 52 >> 2];
  r6 = HEAP32[r1 + (r2 * 12 & -1) + 56 >> 2] - r5 >> 3;
  r2 = 0;
  while (1) {
    if (r2 >>> 0 >= r6 >>> 0) {
      r7 = -1;
      r4 = 907;
      break;
    }
    if ((HEAP32[r5 + (r2 << 3) + 4 >> 2] | 0) == (r3 | 0)) {
      r7 = r2;
      r4 = 906;
      break;
    } else {
      r2 = r2 + 1 | 0;
    }
  }
  if (r4 == 907) {
    return r7;
  } else if (r4 == 906) {
    return r7;
  }
}
function __ZN5Avoid7PtOrder16addOrderedPointsEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEES9_b(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r7 = r6;
  r8 = r6 + 8;
  r9 = r6 + 16;
  r10 = r5 ? r4 : r3;
  r11 = HEAP32[r10 >> 2];
  HEAP32[r7 >> 2] = r11;
  r12 = HEAP32[r10 + 4 >> 2];
  HEAP32[r7 + 4 >> 2] = r12;
  r10 = r5 ? r3 : r4;
  r4 = HEAP32[r10 >> 2];
  HEAP32[r8 >> 2] = r4;
  r3 = HEAP32[r10 + 4 >> 2];
  HEAP32[r8 + 4 >> 2] = r3;
  if ((r11 | 0) == (r4 | 0) & (r12 | 0) == (r3 | 0)) {
    ___assert_func(5251764, 1319, 5256840, 5247440);
  }
  r3 = __ZN5Avoid7PtOrder11insertPointEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEE(r1, r2, r7);
  HEAP32[r9 >> 2] = __ZN5Avoid7PtOrder11insertPointEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEE(r1, r2, r8);
  HEAP32[r9 + 4 >> 2] = r3;
  __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9push_backERKS2_(r1 + (r2 * 12 & -1) + 28 | 0, r9);
  STACKTOP = r6;
  return;
}
function __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9push_backERKS2_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = __Znwj(16), r4 = r3 >> 2;
  r5 = r3;
  r6 = r3 + 8 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
    HEAP32[r4 + 3] = HEAP32[r2 + 4 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r5;
  HEAP32[r4] = HEAP32[r2];
  HEAP32[r2] = r5;
  HEAP32[r4 + 1] = r1;
  r4 = r1 + 8 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEEC1Ej(r1, r2) {
  __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEEC2Ej(r1, r2);
  return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEE6assignEjRKb(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 28 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 16;
  r8 = r1 + 4 | 0;
  HEAP32[r8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    STACKTOP = r4;
    return;
  }
  r9 = r1 + 8 | 0;
  r10 = HEAP32[r9 >> 2];
  if (r10 << 5 >>> 0 < r2 >>> 0) {
    r11 = r7 | 0;
    HEAP32[r11 >> 2] = 0;
    r12 = r7 + 4 | 0;
    HEAP32[r12 >> 2] = 0;
    HEAP32[r7 + 8 >> 2] = 0;
    if ((r2 | 0) < 0) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      r13 = HEAP32[r9 >> 2];
    } else {
      r13 = r10;
    }
    if (r13 << 5 >>> 0 > 1073741822) {
      r14 = 2147483647;
    } else {
      r10 = r13 << 6;
      r13 = r2 + 31 & -32;
      r14 = r10 >>> 0 < r13 >>> 0 ? r13 : r10;
    }
    __ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEj(r7, r14);
    HEAP32[r12 >> 2] = r2;
    __ZNSt3__16vectorIbNS_9allocatorIbEEE4swapERS3_(r1, r7);
    __ZNSt3__16vectorIbNS_9allocatorIbEEED1Ev(HEAP32[r11 >> 2]);
  } else {
    HEAP32[r8 >> 2] = r2;
  }
  r8 = HEAP32[r1 >> 2];
  if ((HEAP8[r3] & 1) << 24 >> 24 == 0) {
    HEAP32[r6 >> 2] = r8;
    HEAP32[r6 + 4 >> 2] = 0;
    __ZNSt3__114__fill_n_falseINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0EEENS6_9size_typeE(r6, r2);
    STACKTOP = r4;
    return;
  } else {
    HEAP32[r5 >> 2] = r8;
    HEAP32[r5 + 4 >> 2] = 0;
    __ZNSt3__113__fill_n_trueINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0EEENS6_9size_typeE(r5, r2);
    STACKTOP = r4;
    return;
  }
}
__ZNSt3__16vectorIbNS_9allocatorIbEEE6assignEjRKb["X"] = 1;
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC1Ej(r1, r2) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej(r1, r2);
  return;
}
function __ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED1Ev(r1) {
  __ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev(r1) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED1Ev(r1) {
  __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid22splitBranchingSegmentsERNS_7PolygonEbS1_d(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r7 = r6;
  r8 = r6 + 4;
  r9 = r6 + 8;
  r10 = r6 + 12;
  r11 = r3 + 8 | 0;
  r12 = (r11 | 0) >> 2;
  r13 = HEAP32[r12];
  r14 = r3 + 12 | 0;
  r3 = HEAP32[r14 >> 2];
  if ((r13 | 0) == (r3 | 0)) {
    STACKTOP = r6;
    return;
  }
  r15 = r1 + 8 | 0;
  r16 = (r15 | 0) >> 2;
  r17 = (r1 + 12 | 0) >> 2;
  r1 = r9 | 0;
  r18 = r7 | 0;
  r19 = r8 | 0;
  r20 = r10 | 0;
  r21 = r13;
  r22 = r13;
  r13 = r3;
  while (1) {
    if ((r21 | 0) == (r22 | 0)) {
      r23 = r22;
      r24 = r13;
    } else {
      r3 = HEAP32[r16];
      r25 = HEAP32[r17];
      L1051 : do {
        if ((r3 | 0) == (r25 | 0)) {
          r26 = r21;
        } else {
          r27 = r3;
          r28 = r21;
          r29 = r25;
          while (1) {
            r30 = r27 - 24 | 0;
            r31 = r28;
            r32 = r29;
            while (1) {
              r33 = (r27 | 0) == (HEAP32[r16] | 0);
              if (r33 & r2) {
                r5 = 943;
                break;
              }
              r34 = r31 - 24 | 0;
              r35 = r33 ? r32 : r27;
              r36 = r35 - 24 | 0;
              if ((r34 | 0) == (HEAP32[r12] | 0)) {
                if (__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r36, r27, r34, r4)) {
                  r5 = 947;
                  break;
                }
              }
              if (__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r36, r27, r31, r4)) {
                r5 = 950;
                break;
              }
              if (!r2) {
                r5 = 956;
                break;
              }
              if ((r30 | 0) != (HEAP32[r16] | 0)) {
                r5 = 956;
                break;
              }
              if (!__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r34, r31, r36, r4)) {
                r5 = 956;
                break;
              }
              r33 = r35 - 24 + 20 | 0;
              HEAP16[r33 >> 1] = __ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_(r34, r31, HEAP16[r33 >> 1]) & 65535;
              __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(r9, r11, r31, r36);
              r33 = HEAP32[r1 >> 2];
              r35 = HEAP32[r17];
              if ((r27 | 0) == (r35 | 0)) {
                r26 = r33;
                break L1051;
              } else {
                r31 = r33;
                r32 = r35;
              }
            }
            do {
              if (r5 == 943) {
                r5 = 0;
                r37 = r31;
                r38 = r27 + 24 | 0;
              } else if (r5 == 956) {
                r5 = 0;
                if (__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r34, r31, r27, r4)) {
                  r32 = r27 + 20 | 0;
                  HEAP16[r32 >> 1] = __ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_(r34, r31, HEAP16[r32 >> 1]) & 65535;
                  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(r10, r11, r31, r27);
                  r39 = HEAP32[r20 >> 2];
                } else {
                  r39 = r31;
                }
                r37 = r39;
                r38 = r27 + 24 | 0;
              } else if (r5 == 947) {
                r5 = 0;
                r32 = r31 - 24 + 20 | 0;
                HEAP16[r32 >> 1] = __ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_(r36, r27, HEAP16[r32 >> 1]) & 65535;
                __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(r7, r15, r27, r34);
                r32 = HEAP32[r18 >> 2];
                if ((r32 | 0) == (HEAP32[r16] | 0)) {
                  r37 = r31;
                  r38 = r32;
                  break;
                }
                r37 = r31;
                r38 = r32 - 24 | 0;
              } else if (r5 == 950) {
                r5 = 0;
                r32 = r31 + 20 | 0;
                HEAP16[r32 >> 1] = __ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_(r36, r27, HEAP16[r32 >> 1]) & 65535;
                __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(r8, r15, r27, r31);
                r32 = HEAP32[r19 >> 2];
                if ((r32 | 0) == (HEAP32[r16] | 0)) {
                  r37 = r31;
                  r38 = r32;
                  break;
                }
                r37 = r31;
                r38 = r32 - 24 | 0;
              }
            } while (0);
            r31 = HEAP32[r17];
            if ((r38 | 0) == (r31 | 0)) {
              r26 = r37;
              break L1051;
            } else {
              r27 = r38;
              r28 = r37;
              r29 = r31;
            }
          }
        }
      } while (0);
      r23 = r26;
      r24 = HEAP32[r14 >> 2];
    }
    r25 = r23 + 24 | 0;
    if ((r25 | 0) == (r24 | 0)) {
      break;
    }
    r21 = r25;
    r22 = HEAP32[r12];
    r13 = r24;
  }
  STACKTOP = r6;
  return;
}
__ZN5Avoid22splitBranchingSegmentsERNS_7PolygonEbS1_d["X"] = 1;
function __ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  if (r3 << 16 >> 16 != 8) {
    r4 = r3 & 65535;
    return r4;
  }
  r3 = r1 + 20 | 0;
  r5 = HEAP16[r3 >> 1];
  r6 = r5 & 65535;
  if ((r5 - 4 & 65535) < 4) {
    r4 = r6;
    return r4;
  }
  r7 = r2 + 20 | 0;
  r8 = HEAP16[r7 >> 1];
  if ((r8 - 4 & 65535) < 4) {
    r4 = r8 & 65535;
    return r4;
  }
  if (((r8 | r5) & 65535) < 4) {
    return r5 << 16 >> 16 == r8 << 16 >> 16 ? r6 + 4 | 0 : r6;
  }
  r6 = (r1 | 0) >> 2;
  r8 = (r2 | 0) >> 2;
  do {
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3])) {
      r9 = r5;
    } else {
      r10 = r1 + 8 | 0;
      r11 = r2 + 8 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r9 = r5;
        break;
      }
      ___assert_func(5251764, 1439, 5255820, 5245832);
      r9 = HEAP16[r3 >> 1];
    }
  } while (0);
  if (r9 << 16 >> 16 != 8) {
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3])) {
      return (r9 - 2 & 65535) < 2 ? 6 : 4;
    }
    if (r9 << 16 >> 16 == 0 | r9 << 16 >> 16 == 3) {
      r4 = 7;
      return r4;
    }
    r4 = 5;
    return r4;
  }
  r9 = HEAP16[r7 >> 1];
  if (r9 << 16 >> 16 == 8) {
    r4 = 8;
    return r4;
  }
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3])) {
    r4 = (r9 - 2 & 65535) < 2 ? 6 : 4;
    return r4;
  }
  if (r9 << 16 >> 16 == 0 | r9 << 16 >> 16 == 3) {
    r4 = 7;
    return r4;
  }
  r4 = 5;
  return r4;
}
__ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_["X"] = 1;
function __ZN5Avoid18ConnectorCrossingsC1ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r1, r2, r3, r4, r5, r6) {
  __ZN5Avoid18ConnectorCrossingsC2ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r1, r2, r3, r4, r5, r6);
  return;
}
function __ZN5Avoid7PtOrder11insertPointEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r6 = r5;
  r7 = r5 + 20;
  r8 = r1 + (r2 * 12 & -1) + 4 | 0;
  r9 = (r1 + (r2 * 12 & -1) + 8 | 0) >> 2;
  r10 = HEAP32[r9];
  r11 = r8 | 0;
  r12 = HEAP32[r11 >> 2];
  r13 = r12;
  r14 = r10 - r13 >> 3;
  r15 = (r3 + 4 | 0) >> 2;
  r16 = 0;
  while (1) {
    if (r16 >>> 0 >= r14 >>> 0) {
      break;
    }
    if ((HEAP32[r12 + (r16 << 3) + 4 >> 2] | 0) == (HEAP32[r15] | 0)) {
      r17 = r16;
      r4 = 1022;
      break;
    } else {
      r16 = r16 + 1 | 0;
    }
  }
  if (r4 == 1022) {
    STACKTOP = r5;
    return r17;
  }
  r4 = r1 + (r2 * 12 & -1) + 12 | 0;
  r2 = HEAP32[r4 >> 2];
  if (r10 >>> 0 < r2 >>> 0) {
    if ((r10 | 0) == 0) {
      r18 = 0;
    } else {
      HEAP32[r10 >> 2] = HEAP32[r3 >> 2];
      HEAP32[r10 + 4 >> 2] = HEAP32[r15];
      r18 = HEAP32[r9];
    }
    r10 = r18 + 8 | 0;
    HEAP32[r9] = r10;
    r19 = r10;
  } else {
    r10 = r14 + 1 | 0;
    if (r10 >>> 0 > 536870911) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
    r18 = r2 - r13 | 0;
    if (r18 >> 3 >>> 0 > 268435454) {
      r20 = 536870911;
    } else {
      r13 = r18 >> 2;
      r20 = r13 >>> 0 < r10 >>> 0 ? r10 : r13;
    }
    __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_(r7, r20, r14, r4);
    r4 = (r7 + 8 | 0) >> 2;
    r14 = HEAP32[r4];
    r20 = r7 + 12 | 0;
    do {
      if ((r14 | 0) == (HEAP32[r20 >> 2] | 0)) {
        r13 = (r7 + 4 | 0) >> 2;
        r10 = HEAP32[r13];
        r18 = r10;
        r2 = r7 | 0;
        r1 = HEAP32[r2 >> 2];
        if (r10 >>> 0 <= r1 >>> 0) {
          r16 = r14 - r1 >> 2;
          r12 = (r16 | 0) == 0 ? 1 : r16;
          __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_(r6, r12, r12 >>> 2, HEAP32[r7 + 16 >> 2]);
          __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESH_SH_(r6, r10, r14);
          r12 = r6 | 0;
          HEAP32[r2 >> 2] = HEAP32[r12 >> 2];
          HEAP32[r12 >> 2] = r1;
          r12 = r6 + 4 | 0;
          HEAP32[r13] = HEAP32[r12 >> 2];
          HEAP32[r12 >> 2] = r10;
          r12 = r6 + 8 | 0;
          r2 = HEAP32[r12 >> 2];
          HEAP32[r4] = r2;
          HEAP32[r12 >> 2] = r14;
          r12 = r6 + 12 | 0;
          HEAP32[r20 >> 2] = HEAP32[r12 >> 2];
          HEAP32[r12 >> 2] = r14;
          __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev(r6);
          r21 = r2;
          break;
        }
        r2 = (r18 - r1 + 8 >> 3 | 0) / -2 & -1;
        r1 = (r2 << 3) + r10 | 0;
        if ((r10 | 0) == (r14 | 0)) {
          r22 = r1;
          r23 = r14;
        } else {
          r12 = r2 + ((r14 - 8 + -r18 | 0) >>> 3) + 1 | 0;
          r18 = r1;
          r1 = r10;
          while (1) {
            HEAP32[r18 >> 2] = HEAP32[r1 >> 2];
            HEAP32[r18 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
            r16 = r1 + 8 | 0;
            if ((r16 | 0) == (r14 | 0)) {
              break;
            } else {
              r18 = r18 + 8 | 0;
              r1 = r16;
            }
          }
          r22 = (r12 << 3) + r10 | 0;
          r23 = HEAP32[r13];
        }
        HEAP32[r4] = r22;
        HEAP32[r13] = (r2 << 3) + r23 | 0;
        r21 = r22;
      } else {
        r21 = r14;
      }
    } while (0);
    if ((r21 | 0) == 0) {
      r24 = 0;
    } else {
      HEAP32[r21 >> 2] = HEAP32[r3 >> 2];
      HEAP32[r21 + 4 >> 2] = HEAP32[r15];
      r24 = HEAP32[r4];
    }
    HEAP32[r4] = r24 + 8 | 0;
    __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS9_EE(r8, r7);
    __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev(r7);
    r19 = HEAP32[r9];
  }
  r17 = (r19 - HEAP32[r11 >> 2] >> 3) - 1 | 0;
  STACKTOP = r5;
  return r17;
}
__ZN5Avoid7PtOrder11insertPointEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEE["X"] = 1;
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r6 = r5;
  r7 = r5 + 20;
  r8 = HEAP32[r2 >> 2];
  r9 = r8;
  r10 = (r3 - r9 | 0) / 24 & -1;
  r3 = r8 + (r10 * 24 & -1) | 0;
  r11 = (r2 + 4 | 0) >> 2;
  r12 = HEAP32[r11];
  r13 = r2 + 8 | 0;
  r14 = HEAP32[r13 >> 2];
  if (r12 >>> 0 < r14 >>> 0) {
    if ((r3 | 0) == (r12 | 0)) {
      if ((r3 | 0) == 0) {
        r15 = 0;
      } else {
        r16 = r3 >> 2;
        r17 = r4 >> 2;
        HEAP32[r16] = HEAP32[r17];
        HEAP32[r16 + 1] = HEAP32[r17 + 1];
        HEAP32[r16 + 2] = HEAP32[r17 + 2];
        HEAP32[r16 + 3] = HEAP32[r17 + 3];
        HEAP32[r16 + 4] = HEAP32[r17 + 4];
        HEAP32[r16 + 5] = HEAP32[r17 + 5];
        r15 = HEAP32[r11];
      }
      HEAP32[r11] = r15 + 24 | 0;
      r18 = r3;
      r19 = r1 | 0, r20 = r19 >> 2;
      HEAP32[r20] = r18;
      STACKTOP = r5;
      return;
    } else {
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE12__move_rangeEPS2_S6_S6_(r2, r3, r12, r8 + ((r10 + 1) * 24 & -1) | 0);
      if (r3 >>> 0 > r4 >>> 0) {
        r21 = r4;
      } else {
        r21 = HEAP32[r11] >>> 0 > r4 >>> 0 ? r4 + 24 | 0 : r4;
      }
      r11 = r3;
      r8 = r21;
      HEAP32[r11 >> 2] = HEAP32[r8 >> 2];
      HEAP32[r11 + 4 >> 2] = HEAP32[r8 + 4 >> 2];
      HEAP32[r11 + 8 >> 2] = HEAP32[r8 + 8 >> 2];
      HEAP32[r11 + 12 >> 2] = HEAP32[r8 + 12 >> 2];
      HEAP32[r11 + 16 >> 2] = HEAP32[r8 + 16 >> 2];
      HEAP16[r11 + 20 >> 1] = HEAP16[r8 + 20 >> 1];
      r18 = r3;
      r19 = r1 | 0, r20 = r19 >> 2;
      HEAP32[r20] = r18;
      STACKTOP = r5;
      return;
    }
  }
  r8 = ((r12 - r9 | 0) / 24 & -1) + 1 | 0;
  if (r8 >>> 0 > 178956970) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r12 = (r14 - r9 | 0) / 24 & -1;
  if (r12 >>> 0 > 89478484) {
    r22 = 178956970;
  } else {
    r9 = r12 << 1;
    r22 = r9 >>> 0 < r8 >>> 0 ? r8 : r9;
  }
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r7, r22, r10, r13);
  r13 = (r7 + 8 | 0) >> 2;
  r10 = HEAP32[r13];
  r22 = r7 + 12 | 0;
  do {
    if ((r10 | 0) == (HEAP32[r22 >> 2] | 0)) {
      r9 = (r7 + 4 | 0) >> 2;
      r8 = HEAP32[r9];
      r12 = r7 | 0;
      r14 = HEAP32[r12 >> 2];
      if (r8 >>> 0 > r14 >>> 0) {
        r11 = r8;
        r21 = (((r11 - r14 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
        r15 = r8 + (r21 * 24 & -1) | 0;
        r17 = r10 - r11 | 0;
        _memmove(r15, r8, r17, 4, 0);
        r11 = r8 + ((((r17 | 0) / 24 & -1) + r21) * 24 & -1) | 0;
        HEAP32[r13] = r11;
        HEAP32[r9] = r15;
        r23 = r11;
        break;
      }
      r11 = ((r10 - r14 | 0) / 24 & -1) << 1;
      r15 = (r11 | 0) == 0 ? 1 : r11;
      __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r6, r15, r15 >>> 2, HEAP32[r7 + 16 >> 2]);
      __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r6, r8, r10);
      r15 = r6 | 0;
      HEAP32[r12 >> 2] = HEAP32[r15 >> 2];
      HEAP32[r15 >> 2] = r14;
      r14 = r6 + 4 | 0;
      HEAP32[r9] = HEAP32[r14 >> 2];
      HEAP32[r14 >> 2] = r8;
      r8 = r6 + 8 | 0;
      r14 = HEAP32[r8 >> 2];
      HEAP32[r13] = r14;
      HEAP32[r8 >> 2] = r10;
      r8 = r6 + 12 | 0;
      HEAP32[r22 >> 2] = HEAP32[r8 >> 2];
      HEAP32[r8 >> 2] = r10;
      __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r6);
      r23 = r14;
    } else {
      r23 = r10;
    }
  } while (0);
  if ((r23 | 0) != 0) {
    r10 = r23 >> 2;
    r6 = r4 >> 2;
    HEAP32[r10] = HEAP32[r6];
    HEAP32[r10 + 1] = HEAP32[r6 + 1];
    HEAP32[r10 + 2] = HEAP32[r6 + 2];
    HEAP32[r10 + 3] = HEAP32[r6 + 3];
    HEAP32[r10 + 4] = HEAP32[r6 + 4];
    HEAP32[r10 + 5] = HEAP32[r6 + 5];
  }
  HEAP32[r13] = r23 + 24 | 0;
  r23 = __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EEPS2_(r2, r7, r3);
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r7);
  r18 = r23;
  r19 = r1 | 0, r20 = r19 >> 2;
  HEAP32[r20] = r18;
  STACKTOP = r5;
  return;
}
__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_["X"] = 1;
function __ZN5Avoid18ConnectorCrossings15countForSegmentEjb(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130, r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 356 | 0;
  r6 = r5;
  r7 = r5 + 8;
  r8 = r5 + 28;
  r9 = r5 + 48;
  r10 = r5 + 56;
  r11 = r5 + 64;
  r12 = r5 + 160;
  r13 = r5 + 256;
  r14 = r5 + 268;
  r15 = r5 + 276;
  r16 = r5 + 284;
  r17 = r5 + 292;
  r18 = r5 + 300;
  r19 = r5 + 308;
  r20 = r5 + 316;
  r21 = r5 + 324;
  r22 = r5 + 332;
  __ZN5Avoid18ConnectorCrossings5clearEv(r1);
  if ((HEAP8[r1 + 12 | 0] & 1) << 24 >> 24 == 0) {
    r23 = r2;
  } else {
    r24 = (r1 + 8 | 0) >> 2;
    r25 = HEAP32[r24];
    r26 = FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 16 >> 2]](r25);
    r25 = (HEAP8[r1 + 4 | 0] & 1) << 24 >> 24 != 0;
    __ZN5Avoid22splitBranchingSegmentsERNS_7PolygonEbS1_d(HEAP32[r1 >> 2], r25, HEAP32[r24], r25 ? 0 : 2.220446049250313e-16);
    r25 = HEAP32[r24];
    r23 = r2 - r26 + FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 16 >> 2]](r25) | 0;
  }
  if ((r23 | 0) == 0) {
    ___assert_func(5251764, 1684, 5260180, 5247168);
  }
  r25 = (r1 + 8 | 0) >> 2;
  r26 = HEAP32[r25];
  if (r23 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r26 >> 2] + 16 >> 2]](r26) >>> 0) {
    ___assert_func(5251764, 1685, 5260180, 5247052);
  }
  r26 = (r1 + 16 | 0) >> 2;
  r2 = HEAP32[r26];
  if ((r2 | 0) == 0) {
    r27 = 1;
  } else {
    r27 = (__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r2 + 8 >> 2]) | 0) != 2;
  }
  r2 = (r1 + 20 | 0) >> 2;
  r24 = HEAP32[r2];
  if ((r24 | 0) == 0) {
    r28 = 1;
  } else {
    r28 = (__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r24 + 8 >> 2]) | 0) != 2;
  }
  r24 = (r1 | 0) >> 2;
  r29 = HEAP32[r24];
  r30 = FUNCTION_TABLE[HEAP32[HEAP32[r29 >> 2] + 16 >> 2]](r29);
  r29 = HEAP32[r25];
  r31 = r23 - 1 | 0;
  r32 = HEAP32[r29 + 8 >> 2];
  r33 = r32 + (r31 * 24 & -1) | 0;
  r34 = r32 + (r23 * 24 & -1) | 0;
  r35 = FUNCTION_TABLE[HEAP32[HEAP32[r29 >> 2] + 16 >> 2]](r29);
  r29 = _llvm_umul_with_overflow_i32(r35 >>> 0 < r30 >>> 0 ? r35 : r30, 4);
  r35 = tempRet0 ? -1 : r29;
  r29 = __Znaj(r35);
  r36 = r29, r37 = r36 >> 2;
  r38 = __Znaj(r35);
  r35 = r38, r39 = r35 >> 2;
  r40 = r1 + 4 | 0;
  r41 = HEAP8[r40] & 1;
  L1206 : do {
    if (r41 >>> 0 < r30 >>> 0) {
      r42 = r30 - 1 | 0;
      r43 = (r1 + 28 | 0) >> 2;
      r44 = r1 + 40 | 0;
      r45 = r27 | r28;
      r46 = (r1 + 52 | 0) >> 2;
      r47 = (r1 + 44 | 0) >> 2;
      r48 = r38 + 4 | 0;
      r49 = r38 + 8 | 0;
      r50 = (r29 + 4 | 0) >> 2;
      r51 = (r29 + 8 | 0) >> 2;
      r52 = (r1 + 36 | 0) >> 2;
      r53 = r14 | 0;
      r54 = r14 + 4 | 0;
      r55 = r15 | 0;
      r56 = r15 + 4 | 0;
      r57 = r16 | 0;
      r58 = r16 + 4 | 0;
      r59 = r17 | 0;
      r60 = r17 + 4 | 0;
      r61 = (r1 + 24 | 0) >> 2;
      r62 = (r1 + 32 | 0) >> 2;
      r63 = (r8 + 8 | 0) >> 2;
      r64 = r8 + 12 | 0;
      r65 = (r8 + 4 | 0) >> 2;
      r66 = r8 | 0;
      r67 = r8 + 16 | 0;
      r68 = r7 | 0;
      r69 = r7 + 4 | 0;
      r70 = r7 + 8 | 0;
      r71 = r7 + 12 | 0;
      r72 = r13 | 0;
      r73 = r30 << 1;
      r74 = r23 - 2 | 0;
      r75 = r30 - 2 | 0;
      r76 = r33 | 0;
      r77 = r32 + (r31 * 24 & -1) + 8 | 0;
      r78 = r18 | 0;
      r79 = r18 + 4 | 0;
      r80 = r19 | 0;
      r81 = r19 + 4 | 0;
      r82 = r20 | 0;
      r83 = r20 + 4 | 0;
      r84 = r21 | 0;
      r85 = r21 + 4 | 0;
      r86 = r32 + (r23 * 24 & -1) + 8 | 0;
      r87 = r34 | 0;
      r88 = r22 | 0;
      r89 = r22 + 8 | 0;
      r90 = (r23 | 0) > -1;
      r91 = r11 + 84 | 0;
      r92 = r12 + 84 | 0;
      r93 = r12 + 36 | 0;
      r94 = r11 + 36 | 0;
      r95 = r23 >>> 0 < 2;
      r96 = r41;
      while (1) {
        r97 = (HEAP32[r24] + 8 | 0) >> 2;
        r98 = HEAP32[r97];
        r99 = r98 + (((r42 + r96 | 0) >>> 0) % (r30 >>> 0) * 24 & -1) | 0;
        r100 = r98 + (r96 * 24 & -1) | 0;
        r101 = __ZNK5Avoid5PointeqERKS0_(r33, r99);
        r102 = __ZNK5Avoid5PointeqERKS0_(r34, r99);
        r103 = __ZNK5Avoid5PointeqERKS0_(r34, r100);
        r104 = __ZNK5Avoid5PointeqERKS0_(r33, r100);
        L1210 : do {
          if (r101 & r103 | r102 & r104) {
            if (!r3) {
              break;
            }
            r105 = r103 & 1;
            r106 = r103 ? -1 : 1;
            r107 = ((r103 ^ 1) << 31 >> 31) + r96 | 0;
            r4 = 1072;
            break;
          } else {
            if (r102 | r103 | r104) {
              break;
            }
            if (r101) {
              r108 = HEAP8[r40] & 1;
              if (r108 << 24 >> 24 != 0 & (r96 | 0) == 1) {
                break;
              }
              r109 = r96 - 2 | 0;
              r110 = r98 + (((r109 + r30 | 0) >>> 0) % (r30 >>> 0) * 24 & -1) | 0;
              if (__ZNK5Avoid5PointeqERKS0_(r34, r110) | r95) {
                break;
              }
              r111 = HEAP32[HEAP32[r25] + 8 >> 2];
              r112 = r111 + (r74 * 24 & -1) | 0;
              do {
                if (!__ZNK5Avoid5PointeqERKS0_(r112, r100)) {
                  if (__ZNK5Avoid5PointeqERKS0_(r112, r110)) {
                    break;
                  }
                  if (r108 << 24 >> 24 == 0 | r96 >>> 0 > 1) {
                    r113 = r98;
                    r114 = r111;
                  } else {
                    ___assert_func(5251764, 2267, 5260180, 5246300);
                    r113 = HEAP32[HEAP32[r24] + 8 >> 2];
                    r114 = HEAP32[HEAP32[r25] + 8 >> 2];
                  }
                  r115 = r114 + (r74 * 24 & -1) | 0;
                  do {
                    if ((__ZN5Avoid10cornerSideERKNS_5PointES2_S2_S2_(r115, r33, r34, r113 + (((r75 + r96 | 0) >>> 0) % (r30 >>> 0) * 24 & -1) | 0) | 0) != (__ZN5Avoid10cornerSideERKNS_5PointES2_S2_S2_(r115, r33, r34, r100) | 0)) {
                      HEAP32[r61] = HEAP32[r61] + 1 | 0;
                      r116 = HEAP32[r62];
                      if ((r116 | 0) == 0) {
                        break;
                      }
                      __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r9, r116 | 0, r33);
                    }
                  } while (0);
                  HEAP32[r43] = HEAP32[r43] | 1;
                  r116 = HEAP32[r52];
                  if ((r116 | 0) == 0 | r27 | r28) {
                    break L1210;
                  }
                  r117 = r115 | 0;
                  r118 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r117 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r76 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r76 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  if (r118 < r117) {
                    r119 = 0;
                  } else {
                    r119 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r87 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r87 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) >= r117;
                  }
                  r117 = r114 + (r74 * 24 & -1) + 8 | 0;
                  r118 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r117 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r77 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r77 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  if (r118 < r117) {
                    r120 = 0;
                  } else {
                    r120 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r86 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r86 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) >= r117;
                  }
                  r117 = __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(r116, r99);
                  r116 = HEAP32[r26];
                  HEAP32[r78 >> 2] = r99;
                  HEAP32[r79 >> 2] = r116;
                  r116 = HEAP32[r2];
                  HEAP32[r80 >> 2] = r33;
                  HEAP32[r81 >> 2] = r116;
                  __ZN5Avoid7PtOrder16addOrderedPointsEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEES9_b(r117, 0, r18, r19, r119);
                  r117 = __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(HEAP32[r52], r99);
                  r116 = HEAP32[r26];
                  HEAP32[r82 >> 2] = r99;
                  HEAP32[r83 >> 2] = r116;
                  r116 = HEAP32[r2];
                  HEAP32[r84 >> 2] = r33;
                  HEAP32[r85 >> 2] = r116;
                  __ZN5Avoid7PtOrder16addOrderedPointsEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEES9_b(r117, 1, r20, r21, r120);
                  break L1210;
                }
              } while (0);
              r111 = __ZNK5Avoid5PointeqERKS0_(r112, r110);
              r105 = r111 & 1;
              r106 = r111 ? -1 : 1;
              r107 = r111 ? r96 : r109;
              r4 = 1072;
              break;
            }
            if (!r45) {
              break;
            }
            __ZN5Avoid5PointC1Ev(r22);
            if ((__ZN5Avoid21segmentIntersectPointERKNS_5PointES2_S2_S2_PdS3_(r33, r34, r99, r100, r88, r89) | 0) != 1) {
              break;
            }
            L1240 : do {
              if ((HEAP8[r40] & 1) << 24 >> 24 == 0) {
                do {
                  if (!__ZNK5Avoid5PointeqERKS0_(r33, r22)) {
                    if (__ZNK5Avoid5PointeqERKS0_(r34, r22)) {
                      break;
                    }
                    if (__ZNK5Avoid5PointeqERKS0_(r99, r22)) {
                      break;
                    }
                    if (!__ZNK5Avoid5PointeqERKS0_(r100, r22)) {
                      break L1240;
                    }
                  }
                } while (0);
                if (!__ZNK5Avoid5PointneERKS0_(r33, r22)) {
                  ___assert_func(5251764, 2366, 5260180, 5246260);
                }
                if (!__ZNK5Avoid5PointneERKS0_(r34, r22)) {
                  ___assert_func(5251764, 2367, 5260180, 5246164);
                }
                if (!__ZNK5Avoid5PointneERKS0_(r99, r22)) {
                  ___assert_func(5251764, 2368, 5260180, 5246152);
                }
                if (__ZNK5Avoid5PointneERKS0_(r100, r22)) {
                  break L1210;
                }
                ___assert_func(5251764, 2369, 5260180, 5246008);
                break L1210;
              }
            } while (0);
            HEAP32[r61] = HEAP32[r61] + 1 | 0;
            r109 = HEAP32[r62];
            if ((r109 | 0) == 0) {
              break;
            }
            __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r10, r109 | 0, r22);
            break;
          }
        } while (0);
        if (r4 == 1072) {
          r4 = 0;
          HEAP32[r43] = HEAP32[r43] | 2;
          L1261 : do {
            if (r90) {
              r100 = (HEAP8[r40] & 1) << 24 >> 24 == 0;
              r99 = r107;
              r98 = r23;
              r101 = 0;
              while (1) {
                if (!r100) {
                  if (!((r99 | 0) > -1 & (r99 | 0) < (r30 | 0))) {
                    r121 = r101;
                    break L1261;
                  }
                }
                r104 = ((r99 + r73 | 0) >>> 0) % (r30 >>> 0);
                r103 = HEAP32[r25] + 8 | 0;
                HEAP32[(r101 << 2 >> 2) + r37] = HEAP32[r103 >> 2] + (r98 * 24 & -1) | 0;
                HEAP32[(r101 << 2 >> 2) + r39] = HEAP32[r97] + (r104 * 24 & -1) | 0;
                r102 = r101 + 1 | 0;
                if (r102 >>> 0 > 1) {
                  if (__ZNK5Avoid5PointneERKS0_(HEAP32[r103 >> 2] + (r98 * 24 & -1) | 0, HEAP32[r97] + (r104 * 24 & -1) | 0)) {
                    r121 = r102;
                    break L1261;
                  }
                }
                if ((r98 | 0) > 0) {
                  r99 = r99 + r106 | 0;
                  r98 = r98 - 1 | 0;
                  r101 = r102;
                } else {
                  r121 = r102;
                  break L1261;
                }
              }
            } else {
              r121 = 0;
            }
          } while (0);
          r97 = __ZNK5Avoid5PointeqERKS0_(HEAP32[r37], HEAP32[r39]);
          r101 = r121 - 1 | 0;
          r98 = ((r101 << 2) + r36 | 0) >> 2;
          r99 = ((r101 << 2) + r35 | 0) >> 2;
          r101 = __ZNK5Avoid5PointeqERKS0_(HEAP32[r98], HEAP32[r99]);
          do {
            if ((HEAP32[r26] | 0) == 0) {
              r122 = 0;
            } else {
              r100 = HEAP32[r2];
              if (!((r100 | 0) != 0 & (r97 | r101))) {
                r122 = 0;
                break;
              }
              __ZNK5Avoid7ConnRef16endpointConnEndsEv(r11, r100);
              __ZNK5Avoid7ConnRef16endpointConnEndsEv(r12, HEAP32[r26]);
              if (r97) {
                r123 = __ZNK5Avoid7ConnEnd8junctionEv(HEAP32[r91 >> 2]);
              } else {
                r123 = __ZNK5Avoid7ConnEnd8junctionEv(HEAP32[r94 >> 2]);
              }
              if (r101 ^ r105 << 24 >> 24 != 0) {
                r124 = __ZNK5Avoid7ConnEnd8junctionEv(HEAP32[r92 >> 2]);
              } else {
                r124 = __ZNK5Avoid7ConnEnd8junctionEv(HEAP32[r93 >> 2]);
              }
              __ZNSt3__14pairIN5Avoid7ConnEndES2_ED1Ev(r12);
              __ZNSt3__14pairIN5Avoid7ConnEndES2_ED1Ev(r11);
              r122 = (r123 | 0) == (r124 | 0) & (r123 | 0) != 0;
            }
          } while (0);
          if ((HEAP32[r44 >> 2] | 0) != 0) {
            r100 = r97 & 1 ^ 1;
            r102 = r121 - (r101 & 1 ^ 1) | 0;
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1Ej(r13, r102 - r100 | 0);
            L1288 : do {
              if (r100 >>> 0 < r102 >>> 0) {
                r104 = HEAP32[r72 >> 2];
                r103 = r100;
                while (1) {
                  r109 = r104 + ((r103 - r100) * 24 & -1) | 0;
                  r110 = HEAP32[(r103 << 2 >> 2) + r37];
                  HEAP32[r109 >> 2] = HEAP32[r110 >> 2];
                  HEAP32[r109 + 4 >> 2] = HEAP32[r110 + 4 >> 2];
                  HEAP32[r109 + 8 >> 2] = HEAP32[r110 + 8 >> 2];
                  HEAP32[r109 + 12 >> 2] = HEAP32[r110 + 12 >> 2];
                  HEAP32[r109 + 16 >> 2] = HEAP32[r110 + 16 >> 2];
                  HEAP16[r109 + 20 >> 1] = HEAP16[r110 + 20 >> 1];
                  r110 = r103 + 1 | 0;
                  if ((r110 | 0) == (r102 | 0)) {
                    break L1288;
                  } else {
                    r103 = r110;
                  }
                }
              }
            } while (0);
            r102 = HEAP32[r44 >> 2];
            r100 = (r102 + 4 | 0) >> 2;
            r103 = HEAP32[r100];
            r104 = r102 + 8 | 0;
            r110 = r104 | 0;
            r109 = HEAP32[r110 >> 2];
            if (r103 >>> 0 < r109 >>> 0) {
              if ((r103 | 0) == 0) {
                r125 = 0;
              } else {
                __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r103, r13);
                r125 = HEAP32[r100];
              }
              HEAP32[r100] = r125 + 12 | 0;
            } else {
              r112 = r102 | 0;
              r115 = HEAP32[r112 >> 2];
              r111 = ((r103 - r115 | 0) / 12 & -1) + 1 | 0;
              if (r111 >>> 0 > 357913941) {
                __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                r126 = HEAP32[r110 >> 2];
                r127 = HEAP32[r112 >> 2];
              } else {
                r126 = r109;
                r127 = r115;
              }
              r115 = r127;
              r109 = (r126 - r115 | 0) / 12 & -1;
              if (r109 >>> 0 > 178956969) {
                r128 = 357913941;
              } else {
                r112 = r109 << 1;
                r128 = r112 >>> 0 < r111 >>> 0 ? r111 : r112;
              }
              __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC1EjjS8_(r8, r128, (HEAP32[r100] - r115 | 0) / 12 & -1, r104);
              r104 = HEAP32[r63];
              do {
                if ((r104 | 0) == (HEAP32[r64 >> 2] | 0)) {
                  r115 = HEAP32[r65];
                  r100 = HEAP32[r66 >> 2];
                  if (r115 >>> 0 <= r100 >>> 0) {
                    r112 = ((r104 - r100 | 0) / 12 & -1) << 1;
                    r111 = (r112 | 0) == 0 ? 1 : r112;
                    __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC1EjjS8_(r7, r111, r111 >>> 2, HEAP32[r67 >> 2]);
                    __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endINS_13move_iteratorIPS6_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESF_SF_(r7, r115, r104);
                    HEAP32[r66 >> 2] = HEAP32[r68 >> 2];
                    HEAP32[r68 >> 2] = r100;
                    HEAP32[r65] = HEAP32[r69 >> 2];
                    HEAP32[r69 >> 2] = r115;
                    r111 = HEAP32[r70 >> 2];
                    HEAP32[r63] = r111;
                    HEAP32[r70 >> 2] = r104;
                    HEAP32[r64 >> 2] = HEAP32[r71 >> 2];
                    HEAP32[r71 >> 2] = r104;
                    __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED1Ev(r7);
                    r129 = r111;
                    break;
                  }
                  r111 = (((r115 - r100 | 0) / 12 & -1) + 1 | 0) / -2 & -1;
                  r100 = r115 + (r111 * 12 & -1) | 0;
                  if ((r115 | 0) == (r104 | 0)) {
                    r130 = r100;
                    r131 = r104;
                  } else {
                    r112 = r100;
                    r100 = r115;
                    while (1) {
                      if ((r112 | 0) != (r100 | 0)) {
                        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r112, HEAP32[r100 >> 2], HEAP32[r100 + 4 >> 2]);
                      }
                      r115 = r100 + 12 | 0;
                      r132 = r112 + 12 | 0;
                      if ((r115 | 0) == (r104 | 0)) {
                        break;
                      } else {
                        r112 = r132;
                        r100 = r115;
                      }
                    }
                    r130 = r132;
                    r131 = HEAP32[r65];
                  }
                  HEAP32[r63] = r130;
                  HEAP32[r65] = r131 + (r111 * 12 & -1) | 0;
                  r129 = r130;
                } else {
                  r129 = r104;
                }
              } while (0);
              if ((r129 | 0) == 0) {
                r133 = 0;
              } else {
                __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r129, r13);
                r133 = HEAP32[r63];
              }
              HEAP32[r63] = r133 + 12 | 0;
              __ZNSt3__16vectorINS0_IN5Avoid5PointENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE(r102, r8);
              __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED1Ev(r8);
            }
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r13);
          }
          do {
            if (!r45) {
              r104 = (((r97 & 1 ^ 1) << 2) + r36 | 0) >> 2;
              r100 = (r121 - (r101 ? 1 : 2) << 2) + r36 | 0;
              r112 = __ZN5Avoid5PointixEj(HEAP32[r104], 0);
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r100 >> 2], 0);
              do {
                if (r115 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                  r109 = __ZN5Avoid5PointixEj(HEAP32[r104], 0);
                  r110 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r109 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r109 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r24] + 8 >> 2], 0);
                  if (r110 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r109 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    r109 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r24] + 8 >> 2] + (r42 * 24 & -1) | 0, 0);
                    if (r110 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r109 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                      break;
                    }
                  }
                  r109 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r25] + 8 >> 2], 0);
                  if (r110 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r109 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    if (r122) {
                      break;
                    }
                  } else {
                    r109 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r25] + 8 >> 2] + (r23 * 24 & -1) | 0, 0);
                    if (r110 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r109 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) | r122) {
                      break;
                    }
                  }
                  HEAP32[r43] = HEAP32[r43] | 8;
                }
              } while (0);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r104], 1);
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r100 >> 2], 1);
              do {
                if (r115 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                  r111 = __ZN5Avoid5PointixEj(HEAP32[r104], 1);
                  r109 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r111 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r24] + 8 >> 2], 1);
                  if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    r111 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r24] + 8 >> 2] + (r42 * 24 & -1) | 0, 1);
                    if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                      break;
                    }
                  }
                  r111 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r25] + 8 >> 2], 1);
                  if (r109 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    if (r122) {
                      break;
                    }
                  } else {
                    r111 = __ZN5Avoid5PointixEj(HEAP32[HEAP32[r25] + 8 >> 2] + (r23 * 24 & -1) | 0, 1);
                    if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) | r122) {
                      break;
                    }
                  }
                  HEAP32[r43] = HEAP32[r43] | 8;
                }
              } while (0);
              if (r97 | r101) {
                break;
              }
              r104 = ((r121 - 2 << 2) + r36 | 0) >> 2;
              r112 = __ZN5Avoid5PointixEj(HEAP32[r50], 1);
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r104], 1);
              do {
                if (r115 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                  r100 = __ZN5Avoid5PointixEj(HEAP32[r50], 0);
                  r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r100 = __ZN5Avoid5PointixEj(HEAP32[r104], 0);
                  r109 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r100 = __ZN5Avoid5PointixEj(HEAP32[r37], 0);
                  if (r111 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    break;
                  }
                  r100 = __ZN5Avoid5PointixEj(HEAP32[r39], 0);
                  if (r111 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    break;
                  }
                  r100 = __ZN5Avoid5PointixEj(HEAP32[r98], 0);
                  if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    break;
                  }
                  r100 = __ZN5Avoid5PointixEj(HEAP32[r99], 0);
                  if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    break;
                  }
                  if (!__ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_(r111, 0, HEAP32[r25], HEAP32[r24])) {
                    break;
                  }
                  if (!__ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_(r109, 0, HEAP32[r25], HEAP32[r24])) {
                    break;
                  }
                  HEAP32[r43] = HEAP32[r43] | 8;
                }
              } while (0);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r50], 0);
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r104], 0);
              if (r115 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                break;
              }
              r112 = __ZN5Avoid5PointixEj(HEAP32[r50], 1);
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r104], 1);
              r109 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r112 = __ZN5Avoid5PointixEj(HEAP32[r37], 1);
              if (r115 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                break;
              }
              r112 = __ZN5Avoid5PointixEj(HEAP32[r39], 1);
              if (r115 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                break;
              }
              r112 = __ZN5Avoid5PointixEj(HEAP32[r98], 1);
              if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                break;
              }
              r112 = __ZN5Avoid5PointixEj(HEAP32[r99], 1);
              if (r109 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                break;
              }
              if (!__ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_(r115, 1, HEAP32[r25], HEAP32[r24])) {
                break;
              }
              if (!__ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_(r109, 1, HEAP32[r25], HEAP32[r24])) {
                break;
              }
              HEAP32[r43] = HEAP32[r43] | 8;
            }
          } while (0);
          if (r97) {
            r134 = 1;
          } else {
            r134 = __ZN5Avoid10cornerSideERKNS_5PointES2_S2_S2_(HEAP32[r37], HEAP32[r50], HEAP32[r51], HEAP32[r39]);
          }
          if (r101) {
            r135 = r134;
          } else {
            r135 = __ZN5Avoid10cornerSideERKNS_5PointES2_S2_S2_(HEAP32[(r121 - 3 << 2 >> 2) + r37], HEAP32[(r121 - 2 << 2 >> 2) + r37], HEAP32[r98], HEAP32[r99]);
          }
          r102 = r97 ? r135 : r134;
          do {
            if ((r135 | 0) != (r102 | 0)) {
              HEAP32[r61] = HEAP32[r61] + 1 | 0;
              r109 = HEAP32[r62];
              if ((r109 | 0) == 0) {
                break;
              }
              __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r6, r109 | 0, HEAP32[r50]);
            }
          } while (0);
          L1381 : do {
            if (r97 | r101) {
              HEAP32[r43] = HEAP32[r43] | 4;
              r109 = __ZN5AvoidL10pathLengthEPPNS_5PointES2_j(r36, r35, r121);
              HEAPF64[tempDoublePtr >> 3] = r109, HEAP32[r46] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              HEAPF64[tempDoublePtr >> 3] = r109, HEAP32[r47] = HEAP32[tempDoublePtr >> 2], HEAP32[r47 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              r115 = r121 >>> 0 > 2;
              if (r101 & r115) {
                r112 = HEAP32[r39];
                r111 = HEAP32[r48 >> 2];
                r100 = HEAP32[r49 >> 2];
                r110 = r112 | 0;
                r103 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r110 = r112 + 8 | 0;
                r112 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r110 = r111 | 0;
                r108 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r110 = r111 + 8 | 0;
                r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r110 = r100 | 0;
                r117 = r100 + 8 | 0;
                if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r103, r112, r108, r111, (HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) == 0) {
                  r117 = r109 - 200;
                  HEAPF64[tempDoublePtr >> 3] = r117, HEAP32[r47] = HEAP32[tempDoublePtr >> 2], HEAP32[r47 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                }
                r117 = HEAP32[r37];
                r110 = HEAP32[r50];
                r111 = HEAP32[r51];
                r108 = r117 | 0;
                r112 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r108 = r117 + 8 | 0;
                r117 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r108 = r110 | 0;
                r103 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r108 = r110 + 8 | 0;
                r110 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r108 = r111 | 0;
                r100 = r111 + 8 | 0;
                if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r112, r117, r103, r110, (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) != 0) {
                  r136 = r102;
                  break;
                }
                r100 = r109 - 200;
                HEAPF64[tempDoublePtr >> 3] = r100, HEAP32[r46] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r136 = r102;
                break;
              }
              if (!(r97 & r115)) {
                r136 = r102;
                break;
              }
              r115 = r121 - 3 | 0;
              r100 = HEAP32[(r115 << 2 >> 2) + r39];
              r108 = r121 - 2 | 0;
              r110 = HEAP32[(r108 << 2 >> 2) + r39];
              r103 = HEAP32[r99];
              r117 = r100 | 0;
              r112 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r100 + 8 | 0;
              r100 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r110 | 0;
              r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r110 + 8 | 0;
              r110 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r103 | 0;
              r116 = r103 + 8 | 0;
              if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r112, r100, r111, r110, (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r116 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r116 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) == 0) {
                r116 = r109 - 200;
                HEAPF64[tempDoublePtr >> 3] = r116, HEAP32[r47] = HEAP32[tempDoublePtr >> 2], HEAP32[r47 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              }
              r116 = HEAP32[(r115 << 2 >> 2) + r37];
              r115 = HEAP32[(r108 << 2 >> 2) + r37];
              r108 = HEAP32[r98];
              r117 = r116 | 0;
              r110 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r116 + 8 | 0;
              r116 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r115 | 0;
              r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r115 + 8 | 0;
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r117 = r108 | 0;
              r100 = r108 + 8 | 0;
              if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r110, r116, r111, r115, (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) != 0) {
                r136 = r102;
                break;
              }
              r100 = r109 - 200;
              HEAPF64[tempDoublePtr >> 3] = r100, HEAP32[r46] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              r136 = r102;
            } else {
              if (r45) {
                r136 = r102;
                break;
              }
              r100 = HEAP32[r37];
              r109 = HEAP32[r50];
              r117 = HEAP32[r51];
              r115 = r100 | 0;
              r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r115 = r100 + 8 | 0;
              r100 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r115 = r109 | 0;
              r116 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r115 = r109 + 8 | 0;
              r109 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r115 = r117 | 0;
              r110 = r117 + 8 | 0;
              r117 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r111, r100, r116, r109, (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
              r110 = HEAP32[r39];
              r115 = HEAP32[r48 >> 2];
              r109 = HEAP32[r49 >> 2];
              do {
                if ((r117 | 0) != 0) {
                  r116 = r109 + 8 | 0;
                  r100 = r109 | 0;
                  r111 = r115 + 8 | 0;
                  r108 = r115 | 0;
                  r112 = r110 + 8 | 0;
                  r103 = r110 | 0;
                  r118 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r116 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r116 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r116 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r100 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r108 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r112 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r112 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  if ((r117 | 0) != (-__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d((HEAP32[tempDoublePtr >> 2] = HEAP32[r103 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r103 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), r108, r111, r100, r116, r118) | 0)) {
                    break;
                  }
                  r136 = -r117 | 0;
                  break L1381;
                }
              } while (0);
              r117 = r121 - 3 | 0;
              r110 = HEAP32[(r117 << 2 >> 2) + r37];
              r115 = r121 - 2 | 0;
              r109 = HEAP32[(r115 << 2 >> 2) + r37];
              r104 = HEAP32[r98];
              r118 = r110 | 0;
              r116 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r118 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r118 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r118 = r110 + 8 | 0;
              r110 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r118 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r118 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r118 = r109 | 0;
              r100 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r118 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r118 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r118 = r109 + 8 | 0;
              r109 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r118 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r118 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r118 = r104 | 0;
              r111 = r104 + 8 | 0;
              r104 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d(r116, r110, r100, r109, (HEAP32[tempDoublePtr >> 2] = HEAP32[r118 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r118 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r111 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r111 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
              r111 = HEAP32[(r117 << 2 >> 2) + r39];
              r117 = HEAP32[(r115 << 2 >> 2) + r39];
              r115 = HEAP32[r99];
              if ((r104 | 0) == 0) {
                r136 = r102;
                break;
              }
              r118 = r115 + 8 | 0;
              r109 = r115 | 0;
              r115 = r117 + 8 | 0;
              r100 = r117 | 0;
              r117 = r111 + 8 | 0;
              r110 = r111 | 0;
              r111 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r118 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r118 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r118 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r109 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r109 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r115 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r100 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r117 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r117 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r136 = (r104 | 0) == (-__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d((HEAP32[tempDoublePtr >> 2] = HEAP32[r110 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r110 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), r100, r115, r109, r118, r111) | 0) ? -r104 | 0 : r102;
            }
          } while (0);
          L1403 : do {
            if ((HEAP32[r52] | 0) != 0) {
              r102 = r97 & 1 ^ 1;
              if (r121 >>> 0 <= (r102 + 1 | 0) >>> 0) {
                ___assert_func(5251764, 2164, 5260180, 5246676);
              }
              if (!((r121 | 0) != 0 | r101)) {
                ___assert_func(5251764, 2173, 5260180, 5246628);
              }
              r99 = r121 - (r101 & 1 ^ 1) | 0;
              if (r102 >>> 0 < r99 >>> 0) {
                r137 = (r136 | 0) > 0 & 1;
                r138 = 0;
                r139 = r102;
              } else {
                break;
              }
              while (1) {
                r98 = HEAP32[(r139 << 2 >> 2) + r37];
                r104 = HEAP32[(r139 << 2 >> 2) + r39];
                if (!__ZNK5Avoid5PointeqERKS0_(r98, r104)) {
                  ___assert_func(5251764, 2179, 5260180, 5246540);
                }
                if (r139 >>> 0 > r102 >>> 0) {
                  r111 = r139 - 1 | 0;
                  r118 = HEAP32[(r111 << 2 >> 2) + r37];
                  r109 = HEAP32[(r111 << 2 >> 2) + r39];
                  r111 = __ZN5AvoidL6segDirERKNS_5PointES2_(r118, r98);
                  do {
                    if ((r138 | 0) == 0) {
                      if ((r111 | 0) <= 0) {
                        r140 = r137;
                        break;
                      }
                      r140 = r137 & 1 ^ 1;
                    } else {
                      if ((r111 | 0) == (r138 | 0)) {
                        r140 = r137;
                        break;
                      }
                      r140 = r137 & 1 ^ 1;
                    }
                  } while (0);
                  r115 = r118 | 0;
                  r100 = r98 | 0;
                  r110 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r115 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r115 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r100 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r100 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) & 1;
                  r100 = __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(HEAP32[r52], r98);
                  r115 = HEAP32[r26];
                  HEAP32[r53 >> 2] = r104;
                  HEAP32[r54 >> 2] = r115;
                  r115 = HEAP32[r2];
                  HEAP32[r55 >> 2] = r98;
                  HEAP32[r56 >> 2] = r115;
                  r115 = (r140 & 1) << 24 >> 24 != 0;
                  __ZN5Avoid7PtOrder16addOrderedPointsEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEES9_b(r100, r110, r14, r15, r115);
                  if (!__ZNK5Avoid5PointeqERKS0_(r118, r109)) {
                    ___assert_func(5251764, 2207, 5260180, 5246512);
                  }
                  r100 = __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(HEAP32[r52], r118);
                  r117 = HEAP32[r26];
                  HEAP32[r57 >> 2] = r109;
                  HEAP32[r58 >> 2] = r117;
                  r117 = HEAP32[r2];
                  HEAP32[r59 >> 2] = r118;
                  HEAP32[r60 >> 2] = r117;
                  __ZN5Avoid7PtOrder16addOrderedPointsEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEES9_b(r100, r110, r16, r17, r115);
                  r141 = r111;
                  r142 = r140;
                } else {
                  r141 = r138;
                  r142 = r137;
                }
                r115 = r139 + 1 | 0;
                if ((r115 | 0) == (r99 | 0)) {
                  break L1403;
                } else {
                  r137 = r142;
                  r138 = r141;
                  r139 = r115;
                }
              }
            }
          } while (0);
          HEAP32[r43] = HEAP32[r43] | 1;
        }
        r101 = r96 + 1 | 0;
        if (r101 >>> 0 < r30 >>> 0) {
          r96 = r101;
        } else {
          break L1206;
        }
      }
    }
  } while (0);
  if ((r29 | 0) != 0) {
    __ZdaPv(r29);
  }
  if ((r38 | 0) == 0) {
    STACKTOP = r5;
    return;
  }
  __ZdaPv(r38);
  STACKTOP = r5;
  return;
}
__ZN5Avoid18ConnectorCrossings15countForSegmentEjb["X"] = 1;
function __ZN5AvoidL6segDirERKNS_5PointES2_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r1 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 == r5) {
    r3 = r2 + 8 | 0;
    r6 = r1 + 8 | 0;
    return (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) ? -1 : 1;
  } else {
    r6 = r1 + 8 | 0;
    r1 = r2 + 8 | 0;
    return (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) & r5 < r4 ? -1 : 1;
  }
}
function __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 4 | 0;
  r3 = HEAP32[r2 >> 2];
  r4 = (r3 | 0) >> 2;
  r5 = HEAP32[r4];
  HEAP32[r2 >> 2] = r5;
  if ((r5 | 0) != 0) {
    HEAP32[r5 + 8 >> 2] = r1;
  }
  r5 = (r1 + 8 | 0) >> 2;
  HEAP32[r3 + 8 >> 2] = HEAP32[r5];
  r2 = HEAP32[r5];
  r6 = r2 | 0;
  if ((HEAP32[r6 >> 2] | 0) == (r1 | 0)) {
    HEAP32[r6 >> 2] = r3;
    HEAP32[r4] = r1;
    HEAP32[r5] = r3;
    return;
  } else {
    HEAP32[r2 + 4 >> 2] = r3;
    HEAP32[r4] = r1;
    HEAP32[r5] = r3;
    return;
  }
}
function __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  r4 = (r3 + 4 | 0) >> 2;
  r5 = HEAP32[r4];
  HEAP32[r2 >> 2] = r5;
  if ((r5 | 0) != 0) {
    HEAP32[r5 + 8 >> 2] = r1;
  }
  r5 = (r1 + 8 | 0) >> 2;
  HEAP32[r3 + 8 >> 2] = HEAP32[r5];
  r2 = HEAP32[r5];
  r6 = r2 | 0;
  if ((HEAP32[r6 >> 2] | 0) == (r1 | 0)) {
    HEAP32[r6 >> 2] = r3;
    HEAP32[r4] = r1;
    HEAP32[r5] = r3;
    return;
  } else {
    HEAP32[r2 + 4 >> 2] = r3;
    HEAP32[r4] = r1;
    HEAP32[r5] = r3;
    return;
  }
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1Ej(r1, r2) {
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC2Ej(r1, r2);
  return;
}
function __ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = 0;
  r6 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r3);
  r7 = r6 - 1 | 0;
  r8 = FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 16 >> 2]](r4);
  r9 = r8 - 1 | 0;
  r10 = (r3 + 8 | 0) >> 2;
  r3 = __ZNK5Avoid5PointixEj(HEAP32[r10], r2);
  do {
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r1) {
      r11 = __ZNK5Avoid5PointixEj(HEAP32[r10] + 24 | 0, r2);
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r1) {
        r5 = 1268;
        break;
      } else {
        r5 = 1266;
        break;
      }
    } else {
      r5 = 1266;
    }
  } while (0);
  do {
    if (r5 == 1266) {
      r3 = __ZNK5Avoid5PointixEj(HEAP32[r10] + (r7 * 24 & -1) | 0, r2);
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r1) {
        break;
      }
      r3 = __ZNK5Avoid5PointixEj(HEAP32[r10] + ((r6 - 2) * 24 & -1) | 0, r2);
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r1) {
        r5 = 1268;
        break;
      } else {
        break;
      }
    }
  } while (0);
  do {
    if (r5 == 1268) {
      r6 = (r4 + 8 | 0) >> 2;
      r10 = __ZNK5Avoid5PointixEj(HEAP32[r6], r2);
      do {
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r1) {
          r7 = __ZNK5Avoid5PointixEj(HEAP32[r6] + 24 | 0, r2);
          if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r1) {
            r12 = 1;
          } else {
            break;
          }
          return r12;
        }
      } while (0);
      r10 = __ZNK5Avoid5PointixEj(HEAP32[r6] + (r9 * 24 & -1) | 0, r2);
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r1) {
        break;
      }
      r10 = __ZNK5Avoid5PointixEj(HEAP32[r6] + ((r8 - 2) * 24 & -1) | 0, r2);
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r1) {
        r12 = 1;
      } else {
        break;
      }
      return r12;
    }
  } while (0);
  r12 = 0;
  return r12;
}
__ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_["X"] = 1;
function __ZN5AvoidL10pathLengthEPPNS_5PointES2_j(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  if (r3 >>> 0 > 1) {
    r4 = 0;
    r5 = 1;
  } else {
    r6 = 0;
    return r6;
  }
  while (1) {
    r7 = r5 - 1 | 0;
    r8 = HEAP32[r1 + (r7 << 2) >> 2];
    do {
      if (__ZNK5Avoid5PointeqERKS0_(r8, HEAP32[r2 + (r7 << 2) >> 2])) {
        r9 = HEAP32[r1 + (r5 << 2) >> 2];
        if (!__ZNK5Avoid5PointeqERKS0_(r9, HEAP32[r2 + (r5 << 2) >> 2])) {
          r10 = r4;
          break;
        }
        r10 = r4 + __ZN5Avoid13manhattanDistERKNS_5PointES2_(r8, r9);
      } else {
        r10 = r4;
      }
    } while (0);
    r8 = r5 + 1 | 0;
    if ((r8 | 0) == (r3 | 0)) {
      r6 = r10;
      break;
    } else {
      r4 = r10;
      r5 = r8;
    }
  }
  return r6;
}
function __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS8_(r1, r4, r2);
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) != 0) {
    r8 = r7;
    r9 = r8 + 40 | 0;
    STACKTOP = r3;
    return r9;
  }
  __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__construct_nodeERS8_(r5, r1, r2);
  r2 = r5 | 0;
  r5 = HEAP32[r2 >> 2];
  HEAP32[r2 >> 2] = 0;
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSG_SG_(r1 | 0, HEAP32[r4 >> 2], r6, r5 | 0);
  r8 = r5;
  r9 = r8 + 40 | 0;
  STACKTOP = r3;
  return r9;
}
function __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS8_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid5PointltERKS0_(r3, r6)) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 1293;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid5PointltERKS0_(r6, r3)) {
      r4 = 1297;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1296;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 1293) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  } else if (r4 == 1297) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 1296) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  }
}
function __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__construct_nodeERS8_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = __Znwj(116);
  r5 = r4 + 16 | 0, r6 = r5 >> 2;
  if ((r5 | 0) != 0) {
    r5 = r3 >> 2;
    HEAP32[r6] = HEAP32[r5];
    HEAP32[r6 + 1] = HEAP32[r5 + 1];
    HEAP32[r6 + 2] = HEAP32[r5 + 2];
    HEAP32[r6 + 3] = HEAP32[r5 + 3];
    HEAP32[r6 + 4] = HEAP32[r5 + 4];
    HEAP32[r6 + 5] = HEAP32[r5 + 5];
  }
  r5 = r4 + 40 | 0;
  if ((r5 | 0) != 0) {
    __ZN5Avoid7PtOrderC1Ev(r5);
  }
  HEAP32[r1 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  HEAP8[r1 + 9 | 0] = 1;
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSG_SG_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r3 = 0;
  r4 = (r2 | 0) == (r1 | 0);
  HEAP8[r2 + 12 | 0] = r4 & 1;
  if (r4) {
    return;
  } else {
    r5 = r2;
  }
  while (1) {
    r6 = HEAP32[r5 + 8 >> 2];
    r2 = r6 + 12 | 0;
    if ((HEAP8[r2] & 1) << 24 >> 24 != 0) {
      r3 = 1332;
      break;
    }
    r7 = (r6 + 8 | 0) >> 2;
    r8 = HEAP32[r7];
    r4 = HEAP32[r8 >> 2];
    if ((r6 | 0) == (r4 | 0)) {
      r9 = HEAP32[r8 + 4 >> 2];
      if ((r9 | 0) == 0) {
        r3 = 1318;
        break;
      }
      r10 = r9 + 12 | 0;
      if ((HEAP8[r10] & 1) << 24 >> 24 != 0) {
        r3 = 1318;
        break;
      }
      HEAP8[r2] = 1;
      HEAP8[r8 + 12 | 0] = (r8 | 0) == (r1 | 0) & 1;
      HEAP8[r10] = 1;
    } else {
      if ((r4 | 0) == 0) {
        r3 = 1325;
        break;
      }
      r10 = r4 + 12 | 0;
      if ((HEAP8[r10] & 1) << 24 >> 24 != 0) {
        r3 = 1325;
        break;
      }
      HEAP8[r2] = 1;
      HEAP8[r8 + 12 | 0] = (r8 | 0) == (r1 | 0) & 1;
      HEAP8[r10] = 1;
    }
    if ((r8 | 0) == (r1 | 0)) {
      r3 = 1333;
      break;
    } else {
      r5 = r8;
    }
  }
  if (r3 == 1318) {
    if ((r5 | 0) == (HEAP32[r6 >> 2] | 0)) {
      r11 = r6;
      r12 = r8;
    } else {
      __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r6);
      r1 = HEAP32[r7];
      r11 = r1;
      r12 = HEAP32[r1 + 8 >> 2];
    }
    HEAP8[r11 + 12 | 0] = 1;
    HEAP8[r12 + 12 | 0] = 0;
    __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r12);
    return;
  } else if (r3 == 1325) {
    if ((r5 | 0) == (HEAP32[r6 >> 2] | 0)) {
      __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r6);
      r5 = HEAP32[r7];
      r13 = r5;
      r14 = HEAP32[r5 + 8 >> 2];
    } else {
      r13 = r6;
      r14 = r8;
    }
    HEAP8[r13 + 12 | 0] = 1;
    HEAP8[r14 + 12 | 0] = 0;
    __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r14);
    return;
  } else if (r3 == 1332) {
    return;
  } else if (r3 == 1333) {
    return;
  }
}
__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_["X"] = 1;
function __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid5PointltERKS0_(r3, r6)) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 1340;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid5PointltERKS0_(r6, r3)) {
      r4 = 1344;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1343;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 1344) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 1343) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  } else if (r4 == 1340) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  }
}
function __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(40);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0, r8 = r6 >> 2;
  if ((r6 | 0) != 0) {
    r6 = r3 >> 2;
    HEAP32[r8] = HEAP32[r6];
    HEAP32[r8 + 1] = HEAP32[r6 + 1];
    HEAP32[r8 + 2] = HEAP32[r6 + 2];
    HEAP32[r8 + 3] = HEAP32[r6 + 3];
    HEAP32[r8 + 4] = HEAP32[r6 + 4];
    HEAP32[r8 + 5] = HEAP32[r6 + 5];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC1EjjS8_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EjjS8_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorINS0_IN5Avoid5PointENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1578 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 12 | 0;
        __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE10push_frontERKS6_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1578;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = (r1 + 8 | 0) >> 2;
  r4 = HEAP32[r3];
  L1584 : do {
    if (r2 >>> 0 < r4 >>> 0) {
      r5 = r4;
      while (1) {
        r6 = r5 - 12 | 0;
        HEAP32[r3] = r6;
        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r6);
        r6 = HEAP32[r3];
        if (r2 >>> 0 < r6 >>> 0) {
          r5 = r6;
        } else {
          break L1584;
        }
      }
    }
  } while (0);
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE10push_frontERKS6_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = r6;
  r8 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r8] | 0)) {
      r9 = (r1 + 8 | 0) >> 2;
      r10 = HEAP32[r9];
      r11 = (r1 + 12 | 0) >> 2;
      r12 = HEAP32[r11];
      r13 = r12;
      if (r10 >>> 0 >= r12 >>> 0) {
        r12 = ((r13 - r7 | 0) / 12 & -1) << 1;
        r14 = (r12 | 0) == 0 ? 1 : r12;
        __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC1EjjS8_(r4, r14, (r14 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endINS_13move_iteratorIPS6_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESF_SF_(r4, HEAP32[r5], HEAP32[r9]);
        r14 = r4 | 0;
        r12 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 4 | 0;
        r14 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        r14 = r4 + 8 | 0;
        r12 = HEAP32[r9];
        HEAP32[r9] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 12 | 0;
        r14 = HEAP32[r11];
        HEAP32[r11] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
      r14 = (((r13 - r10 | 0) / 12 & -1) + 1 | 0) / 2 & -1;
      r13 = r10 + (r14 * 12 & -1) | 0;
      if ((r6 | 0) == (r10 | 0)) {
        r16 = r13;
        r17 = r6;
      } else {
        r12 = r14 - 1 - Math.floor(((r10 - 12 + -r7 | 0) >>> 0) / 12) | 0;
        r11 = r13;
        r13 = r10;
        while (1) {
          r18 = r11 - 12 | 0;
          r19 = r13 - 12 | 0;
          if ((r11 | 0) != (r13 | 0)) {
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r18, HEAP32[r19 >> 2], HEAP32[r13 - 12 + 4 >> 2]);
          }
          if ((r6 | 0) == (r19 | 0)) {
            break;
          } else {
            r11 = r18;
            r13 = r19;
          }
        }
        r16 = r10 + (r12 * 12 & -1) | 0;
        r17 = HEAP32[r9];
      }
      HEAP32[r5] = r16;
      HEAP32[r9] = r17 + (r14 * 12 & -1) | 0;
      r15 = r16;
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 12 | 0;
  if ((r6 | 0) == 0) {
    r20 = r15;
    r21 = r20 - 12 | 0;
    HEAP32[r5] = r21;
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r6, r2);
  r20 = HEAP32[r5];
  r21 = r20 - 12 | 0;
  HEAP32[r5] = r21;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE10push_frontERKS6_["X"] = 1;
function __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endINS_13move_iteratorIPS6_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESF_SF_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = HEAP32[r4];
  r5 = r2;
  while (1) {
    if ((r1 | 0) == 0) {
      r6 = 0;
    } else {
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r1, r5);
      r6 = HEAP32[r4];
    }
    r2 = r6 + 12 | 0;
    HEAP32[r4] = r2;
    r7 = r5 + 12 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r2;
      r5 = r7;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EjjS8_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 12 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 12 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 12 & -1) | 0;
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endEj(r1, r2);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      __ZN5Avoid5PointC1Ev(r2);
      r4 = HEAP32[r3];
    }
    r5 = r4 + 24 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE3endEv(r1, r2) {
  var r3, r4, r5, r6;
  r3 = HEAP32[r2 + 16 >> 2] + HEAP32[r2 + 20 >> 2] | 0;
  r4 = HEAP32[r2 + 4 >> 2];
  r5 = (r3 >>> 10 << 2) + r4 | 0;
  if ((HEAP32[r2 + 8 >> 2] | 0) == (r4 | 0)) {
    r6 = 0;
  } else {
    r6 = ((r3 & 1023) << 2) + HEAP32[r5 >> 2] | 0;
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r6;
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE12__move_rangeEPS2_S6_S6_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r5 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r5];
  r6 = r1 - r4 | 0;
  r4 = r2 + (((r6 | 0) / 24 & -1) * 24 & -1) | 0;
  if (r4 >>> 0 < r3 >>> 0) {
    r7 = r4;
    r8 = r1;
  } else {
    r9 = (r6 | 0) / -24 & -1;
    r10 = r1 + (r9 * 24 & -1) | 0;
    r11 = r10;
    r12 = r2;
    _memmove(r11, r12, r6, 4, 0);
    return;
  }
  while (1) {
    if ((r8 | 0) == 0) {
      r13 = 0;
    } else {
      r4 = r8 >> 2;
      r14 = r7 >> 2;
      HEAP32[r4] = HEAP32[r14];
      HEAP32[r4 + 1] = HEAP32[r14 + 1];
      HEAP32[r4 + 2] = HEAP32[r14 + 2];
      HEAP32[r4 + 3] = HEAP32[r14 + 3];
      HEAP32[r4 + 4] = HEAP32[r14 + 4];
      HEAP32[r4 + 5] = HEAP32[r14 + 5];
      r13 = HEAP32[r5];
    }
    r14 = r7 + 24 | 0;
    r4 = r13 + 24 | 0;
    HEAP32[r5] = r4;
    if (r14 >>> 0 < r3 >>> 0) {
      r7 = r14;
      r8 = r4;
    } else {
      break;
    }
  }
  r9 = (r6 | 0) / -24 & -1;
  r10 = r1 + (r9 * 24 & -1) | 0;
  r11 = r10;
  r12 = r2;
  _memmove(r11, r12, r6, 4, 0);
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC2EjjS5_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EEPS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = (r2 + 4 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = (r1 | 0) >> 2;
  r9 = HEAP32[r8];
  L1655 : do {
    if (r9 >>> 0 < r3 >>> 0) {
      r10 = r3;
      while (1) {
        r11 = r10 - 24 | 0;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE10push_frontERKS2_(r2, r11);
        r12 = HEAP32[r8];
        if (r12 >>> 0 < r11 >>> 0) {
          r10 = r11;
        } else {
          r13 = r12;
          break L1655;
        }
      }
    } else {
      r13 = r9;
    }
  } while (0);
  r9 = (r1 + 4 | 0) >> 2;
  r10 = (r2 + 8 | 0) >> 2;
  r12 = (r2 + 12 | 0) >> 2;
  r11 = (r2 | 0) >> 2;
  if (HEAP32[r9] >>> 0 <= r3 >>> 0) {
    r14 = r13;
    r15 = HEAP32[r6];
    HEAP32[r8] = r15;
    HEAP32[r6] = r14;
    r16 = HEAP32[r9];
    r17 = HEAP32[r10];
    HEAP32[r9] = r17;
    HEAP32[r10] = r16;
    r18 = r1 + 8 | 0, r19 = r18 >> 2;
    r20 = HEAP32[r19];
    r21 = HEAP32[r12];
    HEAP32[r19] = r21;
    HEAP32[r12] = r20;
    r22 = HEAP32[r6];
    HEAP32[r11] = r22;
    STACKTOP = r4;
    return r7;
  }
  r13 = r2 + 16 | 0;
  r2 = r5 | 0;
  r23 = r5 + 4 | 0;
  r24 = r5 + 8 | 0;
  r25 = r5 + 12 | 0;
  r26 = r3;
  r3 = HEAP32[r10];
  while (1) {
    do {
      if ((r3 | 0) == (HEAP32[r12] | 0)) {
        r27 = HEAP32[r6];
        r28 = HEAP32[r11];
        if (r27 >>> 0 > r28 >>> 0) {
          r29 = r27;
          r30 = (((r29 - r28 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
          r31 = r3 - r29 | 0;
          _memmove(r27 + (r30 * 24 & -1) | 0, r27, r31, 4, 0);
          r29 = r27 + ((((r31 | 0) / 24 & -1) + r30) * 24 & -1) | 0;
          HEAP32[r10] = r29;
          HEAP32[r6] = HEAP32[r6] + (r30 * 24 & -1) | 0;
          r32 = r29;
          break;
        } else {
          r29 = ((r3 - r28 | 0) / 24 & -1) << 1;
          r28 = (r29 | 0) == 0 ? 1 : r29;
          __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r5, r28, r28 >>> 2, HEAP32[r13 >> 2]);
          __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r5, HEAP32[r6], HEAP32[r10]);
          r28 = HEAP32[r11];
          HEAP32[r11] = HEAP32[r2 >> 2];
          HEAP32[r2 >> 2] = r28;
          r28 = HEAP32[r6];
          HEAP32[r6] = HEAP32[r23 >> 2];
          HEAP32[r23 >> 2] = r28;
          r28 = HEAP32[r10];
          HEAP32[r10] = HEAP32[r24 >> 2];
          HEAP32[r24 >> 2] = r28;
          r28 = HEAP32[r12];
          HEAP32[r12] = HEAP32[r25 >> 2];
          HEAP32[r25 >> 2] = r28;
          __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r5);
          r32 = HEAP32[r10];
          break;
        }
      } else {
        r32 = r3;
      }
    } while (0);
    if ((r32 | 0) == 0) {
      r33 = 0;
    } else {
      r28 = r32 >> 2;
      r29 = r26 >> 2;
      HEAP32[r28] = HEAP32[r29];
      HEAP32[r28 + 1] = HEAP32[r29 + 1];
      HEAP32[r28 + 2] = HEAP32[r29 + 2];
      HEAP32[r28 + 3] = HEAP32[r29 + 3];
      HEAP32[r28 + 4] = HEAP32[r29 + 4];
      HEAP32[r28 + 5] = HEAP32[r29 + 5];
      r33 = HEAP32[r10];
    }
    r29 = r33 + 24 | 0;
    HEAP32[r10] = r29;
    r28 = r26 + 24 | 0;
    if (r28 >>> 0 < HEAP32[r9] >>> 0) {
      r26 = r28;
      r3 = r29;
    } else {
      break;
    }
  }
  r14 = HEAP32[r8];
  r15 = HEAP32[r6];
  HEAP32[r8] = r15;
  HEAP32[r6] = r14;
  r16 = HEAP32[r9];
  r17 = HEAP32[r10];
  HEAP32[r9] = r17;
  HEAP32[r10] = r16;
  r18 = r1 + 8 | 0, r19 = r18 >> 2;
  r20 = HEAP32[r19];
  r21 = HEAP32[r12];
  HEAP32[r19] = r21;
  HEAP32[r12] = r20;
  r22 = HEAP32[r6];
  HEAP32[r11] = r22;
  STACKTOP = r4;
  return r7;
}
__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EEPS2_["X"] = 1;
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE10push_frontERKS2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (((r12 - r11 | 0) / 24 & -1) + 1 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = r9 + ((((r14 | 0) / -24 & -1) + r13) * 24 & -1) | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = HEAP32[r8] + (r13 * 24 & -1) | 0;
        r15 = r11;
        break;
      } else {
        r11 = ((r12 - r6 | 0) / 24 & -1) << 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 24 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 24 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  r15 = r6 >> 2;
  r6 = r2 >> 2;
  HEAP32[r15] = HEAP32[r6];
  HEAP32[r15 + 1] = HEAP32[r6 + 1];
  HEAP32[r15 + 2] = HEAP32[r6 + 2];
  HEAP32[r15 + 3] = HEAP32[r6 + 3];
  HEAP32[r15 + 4] = HEAP32[r6 + 4];
  HEAP32[r15 + 5] = HEAP32[r6 + 5];
  r16 = HEAP32[r5];
  r17 = r16 - 24 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE10push_frontERKS2_["X"] = 1;
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2 >> 2;
      r7 = r1 >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 24 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 24 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC2EjjS5_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 24 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 24 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 24 & -1) | 0;
  return;
}
function __ZNSt3__15dequeIjNS_9allocatorIjEEE9pop_frontEv(r1) {
  var r2, r3, r4;
  r2 = (r1 + 4 | 0) >> 2;
  r3 = (r1 + 16 | 0) >> 2;
  r4 = r1 + 20 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] - 1 | 0;
  r4 = HEAP32[r3] + 1 | 0;
  HEAP32[r3] = r4;
  if (r4 >>> 0 <= 2047) {
    return;
  }
  __ZdlPv(HEAP32[HEAP32[r2] >> 2]);
  HEAP32[r2] = HEAP32[r2] + 4 | 0;
  HEAP32[r3] = HEAP32[r3] - 1024 | 0;
  return;
}
function __ZNSt3__15dequeIjNS_9allocatorIjEEE9push_backERKj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  r5 = HEAP32[r1 + 8 >> 2];
  r6 = HEAP32[r1 + 4 >> 2];
  if ((r5 | 0) == (r6 | 0)) {
    r7 = 0;
  } else {
    r7 = (r5 - r6 << 8) - 1 | 0;
  }
  r6 = (r1 + 20 | 0) >> 2;
  if ((r7 | 0) == (HEAP32[r6] + HEAP32[r1 + 16 >> 2] | 0)) {
    __ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(r1);
  }
  __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE3endEv(r4, r1 | 0);
  r1 = HEAP32[r4 + 4 >> 2];
  if ((r1 | 0) == 0) {
    r8 = HEAP32[r6];
    r9 = r8 + 1 | 0;
    HEAP32[r6] = r9;
    STACKTOP = r3;
    return;
  }
  HEAP32[r1 >> 2] = HEAP32[r2 >> 2];
  r8 = HEAP32[r6];
  r9 = r8 + 1 | 0;
  HEAP32[r6] = r9;
  STACKTOP = r3;
  return;
}
function __ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 104 | 0;
  r3 = r2;
  r4 = r2 + 20;
  r5 = r2 + 40;
  r6 = r2 + 60;
  r7 = r2 + 80;
  r8 = r2 + 84;
  r9 = r1 + 16 | 0;
  r10 = HEAP32[r9 >> 2];
  if (r10 >>> 0 > 1023) {
    HEAP32[r9 >> 2] = r10 - 1024 | 0;
    r10 = (r1 + 4 | 0) >> 2;
    r9 = HEAP32[r10];
    r11 = HEAP32[r9 >> 2];
    r12 = r9 + 4 | 0;
    HEAP32[r10] = r12;
    r13 = (r1 + 8 | 0) >> 2;
    r14 = HEAP32[r13];
    r15 = r1 + 12 | 0;
    r16 = (r15 | 0) >> 2;
    do {
      if ((r14 | 0) == (HEAP32[r16] | 0)) {
        r17 = (r1 | 0) >> 2;
        r18 = HEAP32[r17];
        if (r12 >>> 0 > r18 >>> 0) {
          r19 = r12;
          r20 = (r19 - r18 + 4 >> 2 | 0) / -2 & -1;
          r21 = r20 + 1 | 0;
          r22 = r14 - r19 | 0;
          _memmove((r21 << 2) + r9 | 0, r12, r22, 4, 0);
          r19 = ((r22 >> 2) + r21 << 2) + r9 | 0;
          HEAP32[r13] = r19;
          HEAP32[r10] = (r20 << 2) + HEAP32[r10] | 0;
          r23 = r19;
          break;
        } else {
          r19 = r14 - r18 >> 1;
          r18 = (r19 | 0) == 0 ? 1 : r19;
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r6, r18, r18 >>> 2, r15);
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r6, HEAP32[r10], HEAP32[r13]);
          r18 = r6 | 0;
          r19 = HEAP32[r17];
          HEAP32[r17] = HEAP32[r18 >> 2];
          HEAP32[r18 >> 2] = r19;
          r19 = r6 + 4 | 0;
          r18 = HEAP32[r10];
          HEAP32[r10] = HEAP32[r19 >> 2];
          HEAP32[r19 >> 2] = r18;
          r18 = r6 + 8 | 0;
          r19 = HEAP32[r13];
          HEAP32[r13] = HEAP32[r18 >> 2];
          HEAP32[r18 >> 2] = r19;
          r19 = r6 + 12 | 0;
          r18 = HEAP32[r16];
          HEAP32[r16] = HEAP32[r19 >> 2];
          HEAP32[r19 >> 2] = r18;
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r6);
          r23 = HEAP32[r13];
          break;
        }
      } else {
        r23 = r14;
      }
    } while (0);
    if ((r23 | 0) == 0) {
      r24 = 0;
    } else {
      HEAP32[r23 >> 2] = r11;
      r24 = HEAP32[r13];
    }
    HEAP32[r13] = r24 + 4 | 0;
    STACKTOP = r2;
    return;
  }
  r24 = r1 | 0;
  r13 = (r1 + 8 | 0) >> 2;
  r11 = HEAP32[r13];
  r23 = (r1 + 4 | 0) >> 2;
  r14 = r11 - HEAP32[r23] >> 2;
  r6 = r1 + 12 | 0;
  r16 = (r6 | 0) >> 2;
  r10 = HEAP32[r16];
  r15 = (r1 | 0) >> 2;
  r1 = r10 - HEAP32[r15] | 0;
  if (r14 >>> 0 >= r1 >> 2 >>> 0) {
    r9 = r1 >> 1;
    __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r8, (r9 | 0) == 0 ? 1 : r9, r14, r6);
    r14 = __Znwj(4096);
    r9 = (r8 + 8 | 0) >> 2;
    r1 = HEAP32[r9];
    r12 = (r8 + 12 | 0) >> 2;
    do {
      if ((r1 | 0) == (HEAP32[r12] | 0)) {
        r18 = (r8 + 4 | 0) >> 2;
        r19 = HEAP32[r18];
        r17 = r8 | 0;
        r20 = HEAP32[r17 >> 2];
        if (r19 >>> 0 > r20 >>> 0) {
          r21 = r19;
          r22 = (r21 - r20 + 4 >> 2 | 0) / -2 & -1;
          r25 = (r22 << 2) + r19 | 0;
          r26 = r1 - r21 | 0;
          _memmove(r25, r19, r26, 4, 0);
          r21 = ((r26 >> 2) + r22 << 2) + r19 | 0;
          HEAP32[r9] = r21;
          HEAP32[r18] = r25;
          r27 = r21;
          break;
        }
        r21 = r1 - r20 >> 1;
        r25 = (r21 | 0) == 0 ? 1 : r21;
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r3, r25, r25 >>> 2, HEAP32[r8 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r3, r19, r1);
        r25 = r3 | 0;
        HEAP32[r17 >> 2] = HEAP32[r25 >> 2];
        HEAP32[r25 >> 2] = r20;
        r20 = r3 + 4 | 0;
        HEAP32[r18] = HEAP32[r20 >> 2];
        HEAP32[r20 >> 2] = r19;
        r19 = r3 + 8 | 0;
        r20 = HEAP32[r19 >> 2];
        HEAP32[r9] = r20;
        HEAP32[r19 >> 2] = r1;
        r19 = r3 + 12 | 0;
        HEAP32[r12] = HEAP32[r19 >> 2];
        HEAP32[r19 >> 2] = r1;
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r3);
        r27 = r20;
      } else {
        r27 = r1;
      }
    } while (0);
    if ((r27 | 0) == 0) {
      r28 = 0;
    } else {
      HEAP32[r27 >> 2] = r14;
      r28 = r27;
    }
    HEAP32[r9] = r28 + 4 | 0;
    r28 = HEAP32[r13];
    while (1) {
      if ((r28 | 0) == (HEAP32[r23] | 0)) {
        break;
      }
      r27 = r28 - 4 | 0;
      __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(r8, r27);
      r28 = r27;
    }
    r27 = r8 | 0;
    r14 = HEAP32[r15];
    HEAP32[r15] = HEAP32[r27 >> 2];
    HEAP32[r27 >> 2] = r14;
    r14 = r8 + 4 | 0;
    HEAP32[r23] = HEAP32[r14 >> 2];
    HEAP32[r14 >> 2] = r28;
    r28 = HEAP32[r13];
    HEAP32[r13] = HEAP32[r9];
    HEAP32[r9] = r28;
    r28 = HEAP32[r16];
    HEAP32[r16] = HEAP32[r12];
    HEAP32[r12] = r28;
    __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r8);
    STACKTOP = r2;
    return;
  }
  r8 = __Znwj(4096);
  if ((r10 | 0) == (r11 | 0)) {
    HEAP32[r7 >> 2] = r8;
    __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_(r24, r7);
    r7 = HEAP32[r23];
    r24 = HEAP32[r7 >> 2];
    r11 = r7 + 4 | 0;
    HEAP32[r23] = r11;
    r10 = HEAP32[r13];
    do {
      if ((r10 | 0) == (HEAP32[r16] | 0)) {
        r28 = HEAP32[r15];
        if (r11 >>> 0 > r28 >>> 0) {
          r12 = r11;
          r9 = (r12 - r28 + 4 >> 2 | 0) / -2 & -1;
          r14 = r9 + 1 | 0;
          r27 = r10 - r12 | 0;
          _memmove((r14 << 2) + r7 | 0, r11, r27, 4, 0);
          r12 = ((r27 >> 2) + r14 << 2) + r7 | 0;
          HEAP32[r13] = r12;
          HEAP32[r23] = (r9 << 2) + HEAP32[r23] | 0;
          r29 = r12;
          break;
        } else {
          r12 = r10 - r28 >> 1;
          r28 = (r12 | 0) == 0 ? 1 : r12;
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r4, r28, r28 >>> 2, r6);
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r4, HEAP32[r23], HEAP32[r13]);
          r28 = r4 | 0;
          r12 = HEAP32[r15];
          HEAP32[r15] = HEAP32[r28 >> 2];
          HEAP32[r28 >> 2] = r12;
          r12 = r4 + 4 | 0;
          r28 = HEAP32[r23];
          HEAP32[r23] = HEAP32[r12 >> 2];
          HEAP32[r12 >> 2] = r28;
          r28 = r4 + 8 | 0;
          r12 = HEAP32[r13];
          HEAP32[r13] = HEAP32[r28 >> 2];
          HEAP32[r28 >> 2] = r12;
          r12 = r4 + 12 | 0;
          r28 = HEAP32[r16];
          HEAP32[r16] = HEAP32[r12 >> 2];
          HEAP32[r12 >> 2] = r28;
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r4);
          r29 = HEAP32[r13];
          break;
        }
      } else {
        r29 = r10;
      }
    } while (0);
    if ((r29 | 0) == 0) {
      r30 = 0;
    } else {
      HEAP32[r29 >> 2] = r24;
      r30 = HEAP32[r13];
    }
    HEAP32[r13] = r30 + 4 | 0;
    STACKTOP = r2;
    return;
  } else {
    r30 = HEAP32[r13];
    do {
      if ((r30 | 0) == (HEAP32[r16] | 0)) {
        r24 = HEAP32[r23];
        r29 = HEAP32[r15];
        if (r24 >>> 0 > r29 >>> 0) {
          r10 = r24;
          r4 = (r10 - r29 + 4 >> 2 | 0) / -2 & -1;
          r7 = r30 - r10 | 0;
          _memmove((r4 << 2) + r24 | 0, r24, r7, 4, 0);
          r10 = ((r7 >> 2) + r4 << 2) + r24 | 0;
          HEAP32[r13] = r10;
          HEAP32[r23] = (r4 << 2) + HEAP32[r23] | 0;
          r31 = r10;
          break;
        } else {
          r10 = r30 - r29 >> 1;
          r29 = (r10 | 0) == 0 ? 1 : r10;
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r5, r29, r29 >>> 2, r6);
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r5, HEAP32[r23], HEAP32[r13]);
          r29 = r5 | 0;
          r10 = HEAP32[r15];
          HEAP32[r15] = HEAP32[r29 >> 2];
          HEAP32[r29 >> 2] = r10;
          r10 = r5 + 4 | 0;
          r29 = HEAP32[r23];
          HEAP32[r23] = HEAP32[r10 >> 2];
          HEAP32[r10 >> 2] = r29;
          r29 = r5 + 8 | 0;
          r10 = HEAP32[r13];
          HEAP32[r13] = HEAP32[r29 >> 2];
          HEAP32[r29 >> 2] = r10;
          r10 = r5 + 12 | 0;
          r29 = HEAP32[r16];
          HEAP32[r16] = HEAP32[r10 >> 2];
          HEAP32[r10 >> 2] = r29;
          __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r5);
          r31 = HEAP32[r13];
          break;
        }
      } else {
        r31 = r30;
      }
    } while (0);
    if ((r31 | 0) == 0) {
      r32 = 0;
    } else {
      HEAP32[r31 >> 2] = r8;
      r32 = HEAP32[r13];
    }
    HEAP32[r13] = r32 + 4 | 0;
    STACKTOP = r2;
    return;
  }
}
__ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv["X"] = 1;
function __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEE4swapERS3_(r1, r2) {
  var r3, r4, r5;
  r3 = r1 | 0;
  r4 = r2 | 0;
  r5 = HEAP32[r3 >> 2];
  HEAP32[r3 >> 2] = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = r5;
  r5 = r1 + 4 | 0;
  r4 = r2 + 4 | 0;
  r3 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = r3;
  r3 = r1 + 8 | 0;
  r1 = r2 + 8 | 0;
  r2 = HEAP32[r3 >> 2];
  HEAP32[r3 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = r1 + 12 | 0;
      r11 = (r10 | 0) >> 2;
      r12 = HEAP32[r11];
      r13 = r12;
      if (r9 >>> 0 < r12 >>> 0) {
        r12 = r9;
        r14 = (r13 - r12 + 4 >> 2 | 0) / 2 & -1;
        r15 = r12 - r6 | 0;
        r12 = (r14 - (r15 >> 2) << 2) + r9 | 0;
        _memmove(r12, r6, r15, 4, 0);
        HEAP32[r5] = r12;
        HEAP32[r8] = (r14 << 2) + HEAP32[r8] | 0;
        r16 = r12;
        break;
      } else {
        r12 = r13 - r6 >> 1;
        r13 = (r12 | 0) == 0 ? 1 : r12;
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r4, r13, (r13 + 3 | 0) >>> 2, r10);
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r4, HEAP32[r5], HEAP32[r8]);
        r10 = r4 | 0;
        r13 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r10 >> 2];
        HEAP32[r10 >> 2] = r13;
        r13 = r4 + 4 | 0;
        r10 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r13 >> 2];
        HEAP32[r13 >> 2] = r10;
        r10 = r4 + 8 | 0;
        r13 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r10 >> 2];
        HEAP32[r10 >> 2] = r13;
        r13 = r4 + 12 | 0;
        r10 = HEAP32[r11];
        HEAP32[r11] = HEAP32[r13 >> 2];
        HEAP32[r13 >> 2] = r10;
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r4);
        r16 = HEAP32[r5];
        break;
      }
    } else {
      r16 = r6;
    }
  } while (0);
  r6 = r16 - 4 | 0;
  if ((r6 | 0) == 0) {
    r17 = r16;
    r18 = r17 - 4 | 0;
    HEAP32[r5] = r18;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r17 = HEAP32[r5];
  r18 = r17 - 4 | 0;
  HEAP32[r5] = r18;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_["X"] = 1;
function __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC2EjjS4_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_["X"] = 1;
function __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC2EjjS4_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj(r1, r2);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj(r1, r2);
  return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 28 | 0;
  r4 = r3;
  r5 = r3 + 12;
  r6 = r3 + 20;
  if (HEAP32[r1 + 8 >> 2] << 5 >>> 0 >= r2 >>> 0) {
    STACKTOP = r3;
    return;
  }
  r7 = r4 | 0;
  HEAP32[r7 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = 0;
  __ZNSt3__16vectorIbNS_9allocatorIbEEE8allocateEj(r4, r2);
  r2 = HEAP32[r1 >> 2];
  HEAP32[r5 >> 2] = r2;
  HEAP32[r5 + 4 >> 2] = 0;
  r8 = HEAP32[r1 + 4 >> 2];
  HEAP32[r6 >> 2] = (r8 >>> 5 << 2) + r2 | 0;
  HEAP32[r6 + 4 >> 2] = r8 & 31;
  __ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_(r4, r5, r6);
  __ZNSt3__16vectorIbNS_9allocatorIbEEE4swapERS3_(r1, r4);
  __ZNSt3__16vectorIbNS_9allocatorIbEEED1Ev(HEAP32[r7 >> 2]);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEED1Ev(r1) {
  __ZNSt3__16vectorIbNS_9allocatorIbEEED2Ev(r1);
  return;
}
function __ZNSt3__113__fill_n_trueINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0EEENS6_9size_typeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = HEAP32[r1 + 4 >> 2];
  if ((r3 | 0) == 0) {
    r4 = r2;
    r5 = HEAP32[r1 >> 2];
  } else {
    r6 = 32 - r3 | 0;
    r7 = r6 >>> 0 > r2 >>> 0 ? r2 : r6;
    r8 = (r1 | 0) >> 2;
    r9 = HEAP32[r8];
    HEAP32[r9 >> 2] = HEAP32[r9 >> 2] | -1 >>> ((r6 - r7 | 0) >>> 0) & -1 << r3;
    r3 = HEAP32[r8] + 4 | 0;
    HEAP32[r8] = r3;
    r4 = r2 - r7 | 0;
    r5 = r3;
  }
  r3 = r4 >>> 5;
  r7 = r1 | 0;
  _memset(r5, -1, r3 << 2);
  r5 = r3 << 5;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r1 = (r3 << 2) + HEAP32[r7 >> 2] | 0;
  HEAP32[r7 >> 2] = r1;
  HEAP32[r1 >> 2] = HEAP32[r1 >> 2] | -1 >>> ((32 - r4 + r5 | 0) >>> 0);
  return;
}
function __ZNSt3__114__fill_n_falseINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0EEENS6_9size_typeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = HEAP32[r1 + 4 >> 2];
  if ((r3 | 0) == 0) {
    r4 = r2;
    r5 = HEAP32[r1 >> 2];
  } else {
    r6 = 32 - r3 | 0;
    r7 = r6 >>> 0 > r2 >>> 0 ? r2 : r6;
    r8 = (r1 | 0) >> 2;
    r9 = HEAP32[r8];
    HEAP32[r9 >> 2] = HEAP32[r9 >> 2] & (-1 >>> ((r6 - r7 | 0) >>> 0) & -1 << r3 ^ -1);
    r3 = HEAP32[r8] + 4 | 0;
    HEAP32[r8] = r3;
    r4 = r2 - r7 | 0;
    r5 = r3;
  }
  r3 = r4 >>> 5;
  r7 = r1 | 0;
  _memset(r5, 0, r3 << 2);
  r5 = r3 << 5;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r1 = (r3 << 2) + HEAP32[r7 >> 2] | 0;
  HEAP32[r7 >> 2] = r1;
  HEAP32[r1 >> 2] = HEAP32[r1 >> 2] & (-1 >>> ((32 - r4 + r5 | 0) >>> 0) ^ -1);
  return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEED2Ev(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  __ZdlPv(r1);
  return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 16;
  r8 = r4 + 24;
  r9 = r4 + 32;
  r10 = r1 + 4 | 0;
  r11 = HEAP32[r10 >> 2];
  r12 = r2 | 0;
  r13 = r2 + 4 | 0;
  r2 = r3 | 0;
  r14 = r3 + 4 | 0;
  HEAP32[r10 >> 2] = (HEAP32[r2 >> 2] - HEAP32[r12 >> 2] << 3) + (r11 - HEAP32[r13 >> 2]) + HEAP32[r14 >> 2] | 0;
  r10 = HEAP32[r12 >> 2];
  r12 = HEAP32[r13 >> 2];
  r13 = HEAP32[r2 >> 2];
  r2 = HEAP32[r14 >> 2];
  r14 = (r11 >>> 5 << 2) + HEAP32[r1 >> 2] | 0;
  r1 = r11 & 31;
  if ((r12 | 0) == (r1 | 0)) {
    HEAP32[r5 >> 2] = r10;
    HEAP32[r5 + 4 >> 2] = r12;
    HEAP32[r6 >> 2] = r14;
    HEAP32[r6 + 4 >> 2] = r12;
    __ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_(r9, r5, r13, r2, r6);
    STACKTOP = r4;
    return;
  } else {
    HEAP32[r7 >> 2] = r10;
    HEAP32[r7 + 4 >> 2] = r12;
    HEAP32[r8 >> 2] = r14;
    HEAP32[r8 + 4 >> 2] = r1;
    __ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_(r9, r7, r13, r2, r8);
    STACKTOP = r4;
    return;
  }
}
__ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_["X"] = 1;
function __ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r6 = (r2 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = HEAP32[r2 + 4 >> 2];
  r2 = (r3 - r7 << 3) + (r4 - r8) | 0;
  do {
    if ((r2 | 0) > 0) {
      if ((r8 | 0) == 0) {
        r9 = r2;
        r10 = r7;
        r11 = r5 | 0, r12 = r11 >> 2;
      } else {
        r4 = 32 - r8 | 0;
        r3 = (r2 | 0) < (r4 | 0) ? r2 : r4;
        r13 = -1 >>> ((r4 - r3 | 0) >>> 0) & -1 << r8;
        r4 = HEAP32[r7 >> 2] & r13;
        r14 = r5 | 0, r15 = r14 >> 2;
        r16 = HEAP32[r15];
        HEAP32[r16 >> 2] = HEAP32[r16 >> 2] & (r13 ^ -1);
        r13 = HEAP32[r15];
        HEAP32[r13 >> 2] = HEAP32[r13 >> 2] | r4;
        r4 = r5 + 4 | 0;
        r13 = HEAP32[r4 >> 2] + r3 | 0;
        HEAP32[r15] = (r13 >>> 5 << 2) + HEAP32[r15] | 0;
        HEAP32[r4 >> 2] = r13 & 31;
        r13 = HEAP32[r6] + 4 | 0;
        HEAP32[r6] = r13;
        r9 = r2 - r3 | 0;
        r10 = r13;
        r11 = r14, r12 = r11 >> 2;
      }
      r14 = r9 >>> 5;
      _memmove(HEAP32[r12], r10, r14 << 2, 4, 0);
      r13 = r9 - (r14 << 5) | 0;
      HEAP32[r12] = (r14 << 2) + HEAP32[r12] | 0;
      if ((r13 | 0) <= 0) {
        r17 = r11;
        break;
      }
      r3 = (r14 << 2) + HEAP32[r6] | 0;
      HEAP32[r6] = r3;
      r14 = -1 >>> ((32 - r13 | 0) >>> 0);
      r4 = HEAP32[r3 >> 2] & r14;
      r3 = HEAP32[r12];
      HEAP32[r3 >> 2] = HEAP32[r3 >> 2] & (r14 ^ -1);
      r14 = HEAP32[r12];
      HEAP32[r14 >> 2] = HEAP32[r14 >> 2] | r4;
      HEAP32[r5 + 4 >> 2] = r13;
      r17 = r11;
    } else {
      r17 = r5 | 0;
    }
  } while (0);
  HEAP32[r1 >> 2] = HEAP32[r17 >> 2];
  HEAP32[r1 + 4 >> 2] = HEAP32[r5 + 4 >> 2];
  return;
}
__ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_["X"] = 1;
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 << 2);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = (r2 << 2) + r3 | 0;
    return;
  }
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEE8allocateEj(r1, r2) {
  var r3;
  if ((r2 | 0) < 0) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = ((r2 - 1 | 0) >>> 5) + 1 | 0;
    HEAP32[r1 >> 2] = __Znwj(r3 << 2);
    HEAP32[r1 + 4 >> 2] = 0;
    HEAP32[r1 + 8 >> 2] = r3;
    return;
  }
}
function __ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30;
  r6 = (r2 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = (r2 + 4 | 0) >> 2;
  r2 = HEAP32[r8];
  r9 = (r3 - r7 << 3) + (r4 - r2) | 0;
  if ((r9 | 0) <= 0) {
    r10 = r5 + 4 | 0, r11 = r10 >> 2;
    r12 = r1 | 0, r13 = r12 >> 2;
    r14 = r5 | 0, r15 = r14 >> 2;
    r16 = HEAP32[r15];
    HEAP32[r13] = r16;
    r17 = r1 + 4 | 0, r18 = r17 >> 2;
    r19 = HEAP32[r11];
    HEAP32[r18] = r19;
    return;
  }
  if ((r2 | 0) == 0) {
    r20 = r9;
    r21 = r7;
    r22 = r5 + 4 | 0, r23 = r22 >> 2;
  } else {
    r4 = 32 - r2 | 0;
    r3 = (r9 | 0) < (r4 | 0) ? r9 : r4;
    r24 = -1 >>> ((r4 - r3 | 0) >>> 0) & -1 << r2 & HEAP32[r7 >> 2];
    r7 = r5 + 4 | 0, r2 = r7 >> 2;
    r4 = HEAP32[r2];
    r25 = 32 - r4 | 0;
    r26 = r25 >>> 0 < r3 >>> 0 ? r25 : r3;
    r27 = (r5 | 0) >> 2;
    r28 = HEAP32[r27];
    HEAP32[r28 >> 2] = HEAP32[r28 >> 2] & (-1 >>> ((r25 - r26 | 0) >>> 0) & -1 << r4 ^ -1);
    r4 = HEAP32[r2];
    r25 = HEAP32[r8];
    if (r4 >>> 0 > r25 >>> 0) {
      r28 = HEAP32[r27];
      HEAP32[r28 >> 2] = HEAP32[r28 >> 2] | r24 << r4 - r25;
    } else {
      r28 = HEAP32[r27];
      HEAP32[r28 >> 2] = HEAP32[r28 >> 2] | r24 >>> ((r25 - r4 | 0) >>> 0);
    }
    r4 = HEAP32[r2] + r26 | 0;
    r25 = (r4 >>> 5 << 2) + HEAP32[r27] | 0;
    HEAP32[r27] = r25;
    HEAP32[r2] = r4 & 31;
    r4 = r3 - r26 | 0;
    if ((r4 | 0) > 0) {
      HEAP32[r25 >> 2] = HEAP32[r25 >> 2] & (-1 >>> ((32 - r4 | 0) >>> 0) ^ -1);
      r25 = HEAP32[r27];
      HEAP32[r25 >> 2] = HEAP32[r25 >> 2] | r24 >>> ((HEAP32[r8] + r26 | 0) >>> 0);
      HEAP32[r2] = r4;
    }
    r4 = HEAP32[r6] + 4 | 0;
    HEAP32[r6] = r4;
    r20 = r9 - r3 | 0;
    r21 = r4;
    r22 = r7, r23 = r22 >> 2;
  }
  r7 = HEAP32[r23];
  r4 = 32 - r7 | 0;
  r3 = -1 << r7;
  L1916 : do {
    if (r20 >>> 0 > 31) {
      r7 = r3 ^ -1;
      r9 = (r5 | 0) >> 2;
      r2 = r20;
      r26 = r21;
      while (1) {
        r8 = HEAP32[r26 >> 2];
        r24 = HEAP32[r9];
        HEAP32[r24 >> 2] = HEAP32[r24 >> 2] & r7;
        r24 = HEAP32[r9];
        HEAP32[r24 >> 2] = HEAP32[r24 >> 2] | r8 << HEAP32[r23];
        r24 = HEAP32[r9] + 4 | 0;
        HEAP32[r9] = r24;
        HEAP32[r24 >> 2] = HEAP32[r24 >> 2] & r3;
        r24 = HEAP32[r9];
        HEAP32[r24 >> 2] = HEAP32[r24 >> 2] | r8 >>> (r4 >>> 0);
        r8 = r2 - 32 | 0;
        r24 = HEAP32[r6] + 4 | 0;
        HEAP32[r6] = r24;
        if (r8 >>> 0 > 31) {
          r2 = r8;
          r26 = r24;
        } else {
          r29 = r8;
          r30 = r24;
          break L1916;
        }
      }
    } else {
      r29 = r20;
      r30 = r21;
    }
  } while (0);
  if ((r29 | 0) <= 0) {
    r10 = r22, r11 = r10 >> 2;
    r12 = r1 | 0, r13 = r12 >> 2;
    r14 = r5 | 0, r15 = r14 >> 2;
    r16 = HEAP32[r15];
    HEAP32[r13] = r16;
    r17 = r1 + 4 | 0, r18 = r17 >> 2;
    r19 = HEAP32[r11];
    HEAP32[r18] = r19;
    return;
  }
  r21 = HEAP32[r30 >> 2] & -1 >>> ((32 - r29 | 0) >>> 0);
  r30 = (r4 | 0) < (r29 | 0) ? r4 : r29;
  r20 = (r5 | 0) >> 2;
  r6 = HEAP32[r20];
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] & (-1 << HEAP32[r23] & -1 >>> ((r4 - r30 | 0) >>> 0) ^ -1);
  r4 = HEAP32[r20];
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] | r21 << HEAP32[r23];
  r4 = HEAP32[r23] + r30 | 0;
  r6 = (r4 >>> 5 << 2) + HEAP32[r20] | 0;
  HEAP32[r20] = r6;
  HEAP32[r23] = r4 & 31;
  r4 = r29 - r30 | 0;
  if ((r4 | 0) <= 0) {
    r10 = r22, r11 = r10 >> 2;
    r12 = r1 | 0, r13 = r12 >> 2;
    r14 = r5 | 0, r15 = r14 >> 2;
    r16 = HEAP32[r15];
    HEAP32[r13] = r16;
    r17 = r1 + 4 | 0, r18 = r17 >> 2;
    r19 = HEAP32[r11];
    HEAP32[r18] = r19;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] & (-1 >>> ((32 - r4 | 0) >>> 0) ^ -1);
  r6 = HEAP32[r20];
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | r21 >>> (r30 >>> 0);
  HEAP32[r23] = r4;
  r10 = r22, r11 = r10 >> 2;
  r12 = r1 | 0, r13 = r12 >> 2;
  r14 = r5 | 0, r15 = r14 >> 2;
  r16 = HEAP32[r15];
  HEAP32[r13] = r16;
  r17 = r1 + 4 | 0, r18 = r17 >> 2;
  r19 = HEAP32[r11];
  HEAP32[r18] = r19;
  return;
}
__ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_["X"] = 1;
function __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3], r4 = r2 >> 2;
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r4] = 0;
      HEAP32[r4 + 1] = 0;
      HEAP32[r4 + 2] = 0;
      r5 = HEAP32[r3];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r3] = r6;
    r7 = r1 - 1 | 0;
    if ((r7 | 0) == 0) {
      break;
    } else {
      r1 = r7;
      r2 = r6, r4 = r2 >> 2;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESH_SH_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      HEAP32[r2 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 8 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 8 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEEC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE18__construct_at_endEj(r1, r2);
  return;
}
function __ZNSt3__113__vector_baseINS_6vectorIbNS_9allocatorIbEEEENS2_IS4_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r4];
  if (r3 >>> 0 < r1 >>> 0) {
    r5 = r1;
    while (1) {
      r1 = r5 - 12 | 0;
      HEAP32[r4] = r1;
      __ZNSt3__16vectorIbNS_9allocatorIbEEED1Ev(HEAP32[r1 >> 2]);
      r1 = HEAP32[r4];
      if (r3 >>> 0 < r1 >>> 0) {
        r5 = r1;
      } else {
        break;
      }
    }
    r6 = HEAP32[r2 >> 2];
  } else {
    r6 = r3;
  }
  __ZdlPv(r6);
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC2EjjSA_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS9_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1987 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 8 | 0;
        __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE10push_frontERKS7_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1987;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE10push_frontERKS7_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = r6;
  r8 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r8] | 0)) {
      r9 = (r1 + 8 | 0) >> 2;
      r10 = HEAP32[r9];
      r11 = (r1 + 12 | 0) >> 2;
      r12 = HEAP32[r11];
      r13 = r12;
      if (r10 >>> 0 >= r12 >>> 0) {
        r12 = r13 - r7 >> 2;
        r14 = (r12 | 0) == 0 ? 1 : r12;
        __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_(r4, r14, (r14 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESH_SH_(r4, HEAP32[r5], HEAP32[r9]);
        r14 = r4 | 0;
        r12 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 4 | 0;
        r14 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        r14 = r4 + 8 | 0;
        r12 = HEAP32[r9];
        HEAP32[r9] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 12 | 0;
        r14 = HEAP32[r11];
        HEAP32[r11] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
      r14 = (r13 - r10 + 8 >> 3 | 0) / 2 & -1;
      r13 = (r14 << 3) + r10 | 0;
      if ((r6 | 0) == (r10 | 0)) {
        r16 = r13;
        r17 = r6;
      } else {
        r12 = r14 - 1 - ((r10 - 8 + -r7 | 0) >>> 3) | 0;
        r11 = r13;
        r13 = r10;
        while (1) {
          r18 = r11 - 8 | 0;
          r19 = r13 - 8 | 0;
          HEAP32[r18 >> 2] = HEAP32[r19 >> 2];
          HEAP32[r11 - 8 + 4 >> 2] = HEAP32[r13 - 8 + 4 >> 2];
          if ((r6 | 0) == (r19 | 0)) {
            break;
          } else {
            r11 = r18;
            r13 = r19;
          }
        }
        r16 = (r12 << 3) + r10 | 0;
        r17 = HEAP32[r9];
      }
      HEAP32[r5] = r16;
      HEAP32[r9] = (r14 << 3) + r17 | 0;
      r15 = r16;
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 8 | 0;
  if ((r6 | 0) == 0) {
    r20 = r15;
    r21 = r20 - 8 | 0;
    HEAP32[r5] = r21;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  HEAP32[r15 - 8 + 4 >> 2] = HEAP32[r2 + 4 >> 2];
  r20 = HEAP32[r5];
  r21 = r20 - 8 | 0;
  HEAP32[r5] = r21;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE10push_frontERKS7_["X"] = 1;
function __ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC2EjjSA_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 3);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 3) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 3) + r6 | 0;
  return;
}
function __ZNSt3__113__vector_baseINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L2025 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L2025;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 357913941) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 * 12 & -1);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = r3 + (r2 * 12 & -1) | 0;
    return;
  }
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (r6 - r7 >> 2 >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = r7 - r8 >> 2;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = r6 - r8 | 0;
  if (r10 >> 2 >>> 0 > 536870910) {
    r11 = 1073741823;
  } else {
    r8 = r10 >> 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r4);
  __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5beginEv(r1, r2, r3, r4) {
  var r5, r6;
  r5 = (r4 >>> 10 << 2) + r2 | 0;
  if ((r3 | 0) == (r2 | 0)) {
    r6 = 0;
  } else {
    r6 = ((r4 & 1023) << 2) + HEAP32[r5 >> 2] | 0;
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r6;
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      __ZN5Avoid5PointC1Ev(r2);
      r4 = HEAP32[r3];
    }
    r5 = r4 + 24 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L2089 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 24 | 0;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE10push_frontERKS2_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L2089;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE12__move_rangeEPS3_S7_S7_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r5];
  r6 = r1 - r4 | 0;
  r4 = r6 >> 2;
  r7 = (r4 << 2) + r2 | 0;
  L2094 : do {
    if (r7 >>> 0 < r3 >>> 0) {
      r8 = r7;
      r9 = r1;
      while (1) {
        if ((r9 | 0) == 0) {
          r10 = 0;
        } else {
          HEAP32[r9 >> 2] = HEAP32[r8 >> 2];
          r10 = HEAP32[r5];
        }
        r11 = r8 + 4 | 0;
        r12 = r10 + 4 | 0;
        HEAP32[r5] = r12;
        if (r11 >>> 0 < r3 >>> 0) {
          r8 = r11;
          r9 = r12;
        } else {
          break L2094;
        }
      }
    }
  } while (0);
  _memmove((-r4 << 2) + r1 | 0, r2, r6, 4, 0);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EEPS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = (r2 + 4 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = (r1 | 0) >> 2;
  r9 = HEAP32[r8];
  L2102 : do {
    if (r9 >>> 0 < r3 >>> 0) {
      r10 = r3;
      while (1) {
        r11 = r10 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r11);
        r12 = HEAP32[r8];
        if (r12 >>> 0 < r11 >>> 0) {
          r10 = r11;
        } else {
          r13 = r12;
          break L2102;
        }
      }
    } else {
      r13 = r9;
    }
  } while (0);
  r9 = (r1 + 4 | 0) >> 2;
  r10 = (r2 + 8 | 0) >> 2;
  r12 = (r2 + 12 | 0) >> 2;
  r11 = (r2 | 0) >> 2;
  if (HEAP32[r9] >>> 0 <= r3 >>> 0) {
    r14 = r13;
    r15 = HEAP32[r6];
    HEAP32[r8] = r15;
    HEAP32[r6] = r14;
    r16 = HEAP32[r9];
    r17 = HEAP32[r10];
    HEAP32[r9] = r17;
    HEAP32[r10] = r16;
    r18 = r1 + 8 | 0, r19 = r18 >> 2;
    r20 = HEAP32[r19];
    r21 = HEAP32[r12];
    HEAP32[r19] = r21;
    HEAP32[r12] = r20;
    r22 = HEAP32[r6];
    HEAP32[r11] = r22;
    STACKTOP = r4;
    return r7;
  }
  r13 = r2 + 16 | 0;
  r2 = r5 | 0;
  r23 = r5 + 4 | 0;
  r24 = r5 + 8 | 0;
  r25 = r5 + 12 | 0;
  r26 = r3;
  r3 = HEAP32[r10];
  while (1) {
    do {
      if ((r3 | 0) == (HEAP32[r12] | 0)) {
        r27 = HEAP32[r6];
        r28 = HEAP32[r11];
        if (r27 >>> 0 > r28 >>> 0) {
          r29 = r27;
          r30 = (r29 - r28 + 4 >> 2 | 0) / -2 & -1;
          r31 = r3 - r29 | 0;
          _memmove((r30 << 2) + r27 | 0, r27, r31, 4, 0);
          r29 = ((r31 >> 2) + r30 << 2) + r27 | 0;
          HEAP32[r10] = r29;
          HEAP32[r6] = (r30 << 2) + HEAP32[r6] | 0;
          r32 = r29;
          break;
        } else {
          r29 = r3 - r28 >> 1;
          r28 = (r29 | 0) == 0 ? 1 : r29;
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r5, r28, r28 >>> 2, HEAP32[r13 >> 2]);
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r5, HEAP32[r6], HEAP32[r10]);
          r28 = HEAP32[r11];
          HEAP32[r11] = HEAP32[r2 >> 2];
          HEAP32[r2 >> 2] = r28;
          r28 = HEAP32[r6];
          HEAP32[r6] = HEAP32[r23 >> 2];
          HEAP32[r23 >> 2] = r28;
          r28 = HEAP32[r10];
          HEAP32[r10] = HEAP32[r24 >> 2];
          HEAP32[r24 >> 2] = r28;
          r28 = HEAP32[r12];
          HEAP32[r12] = HEAP32[r25 >> 2];
          HEAP32[r25 >> 2] = r28;
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r5);
          r32 = HEAP32[r10];
          break;
        }
      } else {
        r32 = r3;
      }
    } while (0);
    if ((r32 | 0) == 0) {
      r33 = 0;
    } else {
      HEAP32[r32 >> 2] = HEAP32[r26 >> 2];
      r33 = HEAP32[r10];
    }
    r28 = r33 + 4 | 0;
    HEAP32[r10] = r28;
    r29 = r26 + 4 | 0;
    if (r29 >>> 0 < HEAP32[r9] >>> 0) {
      r26 = r29;
      r3 = r28;
    } else {
      break;
    }
  }
  r14 = HEAP32[r8];
  r15 = HEAP32[r6];
  HEAP32[r8] = r15;
  HEAP32[r6] = r14;
  r16 = HEAP32[r9];
  r17 = HEAP32[r10];
  HEAP32[r9] = r17;
  HEAP32[r10] = r16;
  r18 = r1 + 8 | 0, r19 = r18 >> 2;
  r20 = HEAP32[r19];
  r21 = HEAP32[r12];
  HEAP32[r19] = r21;
  HEAP32[r12] = r20;
  r22 = HEAP32[r6];
  HEAP32[r11] = r22;
  STACKTOP = r4;
  return r7;
}
__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EEPS3_["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEEC2ERKS6_(r1, r2) {
  var r3, r4;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2 + 4 | 0;
  r4 = r2 | 0;
  r2 = HEAP32[r3 >> 2] - HEAP32[r4 >> 2] >> 2;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, HEAP32[r4 >> 2], HEAP32[r3 >> 2]);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2 >> 2;
      r7 = r1 >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 24 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 24 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2 >> 2;
      r7 = r1 >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 24 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 24 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE10deallocateEv(r1) {
  var r2, r3, r4;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = r1 + 4 | 0;
  HEAP32[r4 >> 2] = r3;
  __ZdlPv(r3);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r2 >> 2] = 0;
  return;
}
function __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2 >> 2;
      r7 = r1 >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      HEAP32[r6 + 6] = HEAP32[r7 + 6];
      HEAP32[r6 + 7] = HEAP32[r7 + 7];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 32 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 32 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEEC2ERKS5_(r1, r2) {
  var r3, r4;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2 + 4 | 0;
  r4 = r2 | 0;
  r2 = HEAP32[r3 >> 2] - HEAP32[r4 >> 2] >> 5;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, HEAP32[r4 >> 2], HEAP32[r3 >> 2]);
  return;
}
function __ZNSt3__113__vector_baseIN5Avoid10CheckpointENS_9allocatorIS2_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_6vectorIbNS_9allocatorIbEEEENS2_IS4_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev(r1) {
  __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(r1) {
  __ZNSt3__15dequeIjNS_9allocatorIjEEED1Ev(r1 | 0);
  return;
}
function __ZNSt3__15dequeIjNS_9allocatorIjEEED1Ev(r1) {
  __ZNSt3__15dequeIjNS_9allocatorIjEEED2Ev(r1);
  return;
}
function __ZNSt3__15dequeIjNS_9allocatorIjEEED2Ev(r1) {
  __ZNSt3__112__deque_baseIjNS_9allocatorIjEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__112__deque_baseIjNS_9allocatorIjEEED2Ev(r1) {
  var r2, r3, r4, r5;
  __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5clearEv(r1);
  r2 = r1 | 0;
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = HEAP32[r1 + 8 >> 2];
  if ((r3 | 0) == (r4 | 0)) {
    __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED1Ev(r2);
    return;
  } else {
    r5 = r3;
  }
  while (1) {
    __ZdlPv(HEAP32[r5 >> 2]);
    r3 = r5 + 4 | 0;
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r5 = r3;
    }
  }
  __ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED1Ev(r2);
  return;
}
function __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5clearEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r3 = r2;
  r4 = r2 + 8;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = (r1 + 8 | 0) >> 2;
  r7 = (r1 + 16 | 0) >> 2;
  __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5beginEv(r3, HEAP32[r5], HEAP32[r6], HEAP32[r7]);
  __ZNSt3__112__deque_baseIjNS_9allocatorIjEEE3endEv(r4, r1);
  r8 = r3 + 4 | 0;
  r9 = HEAP32[r8 >> 2];
  r10 = HEAP32[r4 + 4 >> 2];
  if ((r9 | 0) != (r10 | 0)) {
    r4 = r3 | 0;
    r3 = HEAP32[r4 >> 2];
    r11 = r9;
    r9 = r3;
    r12 = HEAP32[r3 >> 2];
    while (1) {
      r3 = r11 + 4 | 0;
      if ((r3 - r12 | 0) == 4096) {
        r13 = r9 + 4 | 0;
        HEAP32[r4 >> 2] = r13;
        r14 = HEAP32[r13 >> 2];
        r15 = r14;
        r16 = r13;
        r17 = r14;
      } else {
        r15 = r3;
        r16 = r9;
        r17 = r12;
      }
      if ((r15 | 0) == (r10 | 0)) {
        break;
      } else {
        r11 = r15;
        r9 = r16;
        r12 = r17;
      }
    }
    HEAP32[r8 >> 2] = r10;
  }
  HEAP32[r1 + 20 >> 2] = 0;
  r1 = HEAP32[r5];
  r10 = HEAP32[r6] - r1 >> 2;
  L2200 : do {
    if (r10 >>> 0 > 2) {
      r8 = r1;
      while (1) {
        __ZdlPv(HEAP32[r8 >> 2]);
        r17 = HEAP32[r5] + 4 | 0;
        HEAP32[r5] = r17;
        r12 = HEAP32[r6] - r17 >> 2;
        if (r12 >>> 0 > 2) {
          r8 = r17;
        } else {
          r18 = r12;
          break L2200;
        }
      }
    } else {
      r18 = r10;
    }
  } while (0);
  if ((r18 | 0) == 1) {
    HEAP32[r7] = 512;
    STACKTOP = r2;
    return;
  } else if ((r18 | 0) == 2) {
    HEAP32[r7] = 1024;
    STACKTOP = r2;
    return;
  } else {
    STACKTOP = r2;
    return;
  }
}
__ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5clearEv["X"] = 1;
function __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIjjEENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impINS_4pairIjjEENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIjjEENS_9allocatorIS2_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impINS_4pairIjjEENS_9allocatorIS2_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (((r6 - r7 | 0) / 24 & -1) >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = (r7 - r8 | 0) / 24 & -1;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 178956970) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = (r6 - r8 | 0) / 24 & -1;
  if (r10 >>> 0 > 89478484) {
    r11 = 178956970;
  } else {
    r8 = r10 << 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r1, r4);
  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 << 2);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = (r2 << 2) + r3 | 0;
    return;
  }
}
function __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = r3 - r2 | 0;
  r5 = (r4 | 0) / 24 & -1;
  r6 = r1 + 8 | 0;
  r7 = r1 | 0;
  r8 = HEAP32[r7 >> 2];
  r9 = r8;
  if (r5 >>> 0 <= ((HEAP32[r6 >> 2] - r9 | 0) / 24 & -1) >>> 0) {
    r10 = r1 + 4 | 0;
    r11 = HEAP32[r10 >> 2] - r9 | 0;
    r9 = (r11 | 0) / 24 & -1;
    if (r5 >>> 0 > r9 >>> 0) {
      _memmove(r8, r2, r11, 4, 0);
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, r2 + (r9 * 24 & -1) | 0, r3);
      return;
    } else {
      _memmove(r8, r2, r4, 4, 0);
      HEAP32[r10 >> 2] = r8 + (r5 * 24 & -1) | 0;
      return;
    }
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE10deallocateEv(r1);
  if (r5 >>> 0 > 178956970) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r8 = (HEAP32[r6 >> 2] - HEAP32[r7 >> 2] | 0) / 24 & -1;
  if (r8 >>> 0 > 89478484) {
    r12 = 178956970;
  } else {
    r7 = r8 << 1;
    r12 = r7 >>> 0 < r5 >>> 0 ? r5 : r7;
  }
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8allocateEj(r1, r12);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, r2, r3);
  return;
}
__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_["X"] = 1;
function __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 134217727) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 << 5);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = (r2 << 5) + r3 | 0;
    return;
  }
}
function __ZNK5Avoid7ConnEnd15isPinConnectionEv(r1) {
  return (r1 - 1 | 0) >>> 0 < 2;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE10deallocateEv(r1) {
  var r2, r3, r4;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = r1 + 4 | 0;
  HEAP32[r4 >> 2] = r3;
  __ZdlPv(r3);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r2 >> 2] = 0;
  return;
}
function __ZNSt3__16vectorIcNS_9allocatorIcEEE10deallocateEv(r1) {
  var r2, r3, r4;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = r1 + 4 | 0;
  HEAP32[r4 >> 2] = r3;
  __ZdlPv(r3);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r2 >> 2] = 0;
  return;
}
function __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIN5Avoid10CheckpointENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZN5Avoid7ConnEndC1Ev(r1) {
  __ZN5Avoid7ConnEndC2Ev(r1);
  return;
}
function __ZN5Avoid7ConnEndC2Ev(r1) {
  var r2;
  r2 = r1 >> 2;
  HEAP32[r2] = 3;
  __ZN5Avoid5PointC1Edd(r1 + 4 | 0, 0, 0);
  HEAP32[r2 + 7] = 15;
  HEAP32[r2 + 8] = 2147483647;
  HEAP32[r2 + 9] = 0;
  HEAP32[r2 + 10] = 0;
  HEAP32[r2 + 11] = 0;
  return;
}
function __ZN5Avoid7ConnEndC1ERKNS_5PointE(r1, r2) {
  __ZN5Avoid7ConnEndC2ERKNS_5PointE(r1, r2);
  return;
}
function __ZN5Avoid7ConnEndC2ERKNS_5PointE(r1, r2) {
  var r3, r4;
  r3 = r1 >> 2;
  HEAP32[r3] = 0;
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2 >> 2;
  HEAP32[r4] = HEAP32[r1];
  HEAP32[r4 + 1] = HEAP32[r1 + 1];
  HEAP32[r4 + 2] = HEAP32[r1 + 2];
  HEAP32[r4 + 3] = HEAP32[r1 + 3];
  HEAP32[r4 + 4] = HEAP32[r1 + 4];
  HEAP32[r4 + 5] = HEAP32[r1 + 5];
  HEAP32[r3 + 7] = 15;
  HEAP32[r3 + 8] = 2147483647;
  HEAP32[r3 + 9] = 0;
  HEAP32[r3 + 10] = 0;
  HEAP32[r3 + 11] = 0;
  return;
}
function __ZN5Avoid7ConnEndC1ERKNS_5PointEj(r1, r2, r3) {
  __ZN5Avoid7ConnEndC2ERKNS_5PointEj(r1, r2, r3);
  return;
}
function __ZN5Avoid7ConnEndC2ERKNS_5PointEj(r1, r2, r3) {
  var r4, r5;
  r4 = r1 >> 2;
  HEAP32[r4] = 0;
  r5 = (r1 + 4 | 0) >> 2;
  r1 = r2 >> 2;
  HEAP32[r5] = HEAP32[r1];
  HEAP32[r5 + 1] = HEAP32[r1 + 1];
  HEAP32[r5 + 2] = HEAP32[r1 + 2];
  HEAP32[r5 + 3] = HEAP32[r1 + 3];
  HEAP32[r5 + 4] = HEAP32[r1 + 4];
  HEAP32[r5 + 5] = HEAP32[r1 + 5];
  HEAP32[r4 + 7] = r3;
  HEAP32[r4 + 8] = 2147483647;
  HEAP32[r4 + 9] = 0;
  HEAP32[r4 + 10] = 0;
  HEAP32[r4 + 11] = 0;
  return;
}
function __ZN5Avoid7ConnEndC1EPNS_8ShapeRefEj(r1, r2, r3) {
  __ZN5Avoid7ConnEndC2EPNS_8ShapeRefEj(r1, r2, r3);
  return;
}
function __ZN5Avoid7ConnEndC2EPNS_8ShapeRefEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  HEAP32[r1 >> 2] = 1;
  r6 = r1 + 4 | 0;
  __ZN5Avoid5PointC1Edd(r6, 0, 0);
  HEAP32[r1 + 28 >> 2] = 15;
  r7 = (r1 + 32 | 0) >> 2;
  HEAP32[r7] = r3;
  r8 = r1 + 36 | 0;
  HEAP32[r8 >> 2] = r2 | 0;
  HEAP32[r1 + 40 >> 2] = 0;
  HEAP32[r1 + 44 >> 2] = 0;
  if ((r2 | 0) == 0) {
    ___assert_func(5245552, 87, 5257824, 5248808);
    r9 = HEAP32[r7];
  } else {
    r9 = r3;
  }
  if ((r9 | 0) == 0) {
    ___assert_func(5245552, 88, 5257824, 5247632);
  }
  r9 = HEAP32[r8 >> 2];
  FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 8 >> 2]](r5, r9);
  r9 = r6;
  r6 = r5;
  HEAP32[r9 >> 2] = HEAP32[r6 >> 2];
  HEAP32[r9 + 4 >> 2] = HEAP32[r6 + 4 >> 2];
  HEAP32[r9 + 8 >> 2] = HEAP32[r6 + 8 >> 2];
  HEAP32[r9 + 12 >> 2] = HEAP32[r6 + 12 >> 2];
  HEAP32[r9 + 16 >> 2] = HEAP32[r6 + 16 >> 2];
  HEAP16[r9 + 20 >> 1] = HEAP16[r6 + 20 >> 1];
  if ((HEAP32[r7] | 0) != 2147483647) {
    STACKTOP = r4;
    return;
  }
  ___assert_func(5245552, 91, 5257824, 5246460);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid7ConnEndC1EPNS_11JunctionRefE(r1, r2) {
  __ZN5Avoid7ConnEndC2EPNS_11JunctionRefE(r1, r2);
  return;
}
function __ZN5Avoid7ConnEndC2EPNS_11JunctionRefE(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 >> 2;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  HEAP32[r3] = 2;
  r6 = r1 + 4 | 0;
  __ZN5Avoid5PointC1Ev(r6);
  HEAP32[r3 + 7] = 15;
  HEAP32[r3 + 8] = 2147483646;
  r7 = r1 + 36 | 0;
  r1 = r2 | 0;
  HEAP32[r7 >> 2] = r1;
  HEAP32[r3 + 10] = 0;
  HEAP32[r3 + 11] = 0;
  if ((r2 | 0) == 0) {
    ___assert_func(5245552, 103, 5257888, 5248808);
    r8 = HEAP32[r7 >> 2];
  } else {
    r8 = r1;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 8 >> 2]](r5, r8);
  r8 = r6;
  r6 = r5;
  HEAP32[r8 >> 2] = HEAP32[r6 >> 2];
  HEAP32[r8 + 4 >> 2] = HEAP32[r6 + 4 >> 2];
  HEAP32[r8 + 8 >> 2] = HEAP32[r6 + 8 >> 2];
  HEAP32[r8 + 12 >> 2] = HEAP32[r6 + 12 >> 2];
  HEAP32[r8 + 16 >> 2] = HEAP32[r6 + 16 >> 2];
  HEAP16[r8 + 20 >> 1] = HEAP16[r6 + 20 >> 1];
  STACKTOP = r4;
  return;
}
function __ZN5Avoid7ConnEndD1Ev(r1) {
  __ZN5Avoid7ConnEndD2Ev(r1);
  return;
}
function __ZN5Avoid7ConnEndD2Ev(r1) {
  __ZN5Avoid7ConnEnd10disconnectEb(r1, 0);
  __ZN5Avoid7ConnEnd13freeActivePinEv(r1);
  return;
}
function __ZN5Avoid7ConnEnd10disconnectEb(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r4 = r3;
  r5 = r3 + 24;
  r6 = r1 + 40 | 0;
  if ((HEAP32[r6 >> 2] | 0) == 0) {
    STACKTOP = r3;
    return;
  }
  __ZNK5Avoid7ConnEnd8positionEv(r4, r1);
  r7 = r1 + 4 | 0;
  r8 = r4;
  HEAP32[r7 >> 2] = HEAP32[r8 >> 2];
  HEAP32[r7 + 4 >> 2] = HEAP32[r8 + 4 >> 2];
  HEAP32[r7 + 8 >> 2] = HEAP32[r8 + 8 >> 2];
  HEAP32[r7 + 12 >> 2] = HEAP32[r8 + 12 >> 2];
  HEAP32[r7 + 16 >> 2] = HEAP32[r8 + 16 >> 2];
  HEAP16[r7 + 20 >> 1] = HEAP16[r8 + 20 >> 1];
  r8 = r1 + 36 | 0;
  __ZN5Avoid8Obstacle22removeFollowingConnEndEPNS_7ConnEndE(HEAP32[r8 >> 2], r1);
  HEAP32[r6 >> 2] = 0;
  if (!r2) {
    STACKTOP = r3;
    return;
  }
  __ZNK5Avoid7ConnEnd8positionEv(r5, r1);
  r2 = r5;
  HEAP32[r7 >> 2] = HEAP32[r2 >> 2];
  HEAP32[r7 + 4 >> 2] = HEAP32[r2 + 4 >> 2];
  HEAP32[r7 + 8 >> 2] = HEAP32[r2 + 8 >> 2];
  HEAP32[r7 + 12 >> 2] = HEAP32[r2 + 12 >> 2];
  HEAP32[r7 + 16 >> 2] = HEAP32[r2 + 16 >> 2];
  HEAP16[r7 + 20 >> 1] = HEAP16[r2 + 20 >> 1];
  HEAP32[r8 >> 2] = 0;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 32 >> 2] = 2147483647;
  STACKTOP = r3;
  return;
}
function __ZN5Avoid7ConnEnd13freeActivePinEv(r1) {
  var r2, r3, r4, r5;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r2;
  r4 = (r1 + 44 | 0) >> 2;
  r5 = HEAP32[r4];
  if ((r5 | 0) == 0) {
    HEAP32[r4] = 0;
    STACKTOP = r2;
    return;
  }
  HEAP32[r3 >> 2] = r1;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r5 + 56 | 0, r3);
  HEAP32[r4] = 0;
  STACKTOP = r2;
  return;
}
function __ZNK5Avoid7ConnEnd8positionEv(r1, r2) {
  var r3, r4, r5, r6;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r4 = r3;
  r5 = HEAP32[r2 + 44 >> 2];
  if ((r5 | 0) != 0) {
    __ZN5Avoid7PolygonC1Ev(r4);
    __ZNK5Avoid18ShapeConnectionPin8positionERKNS_7PolygonE(r1, r5, r4);
    __ZN5Avoid7PolygonD1Ev(r4);
    STACKTOP = r3;
    return;
  }
  r4 = HEAP32[r2 + 36 >> 2];
  if ((r4 | 0) == 0) {
    r5 = r1 >> 2;
    r6 = (r2 + 4 | 0) >> 2;
    HEAP32[r5] = HEAP32[r6];
    HEAP32[r5 + 1] = HEAP32[r6 + 1];
    HEAP32[r5 + 2] = HEAP32[r6 + 2];
    HEAP32[r5 + 3] = HEAP32[r6 + 3];
    HEAP32[r5 + 4] = HEAP32[r6 + 4];
    HEAP32[r5 + 5] = HEAP32[r6 + 5];
    STACKTOP = r3;
    return;
  } else {
    FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 8 >> 2]](r1, r4);
    STACKTOP = r3;
    return;
  }
}
function __ZNK5Avoid7ConnEnd10directionsEv(r1) {
  var r2, r3;
  r2 = HEAP32[r1 + 44 >> 2];
  if ((r2 | 0) == 0) {
    r3 = HEAP32[r1 + 28 >> 2];
    return r3;
  } else {
    r3 = __ZNK5Avoid18ShapeConnectionPin10directionsEv(r2);
    return r3;
  }
}
function __ZNK5Avoid7ConnEnd8junctionEv(r1) {
  var r2;
  if ((r1 | 0) == 0) {
    r2 = 0;
    return r2;
  }
  r2 = ___dynamic_cast(r1, 5272672, 5272764);
  return r2;
}
function __ZNK5Avoid7ConnEnd12endpointTypeEv(r1) {
  var r2, r3, r4;
  r2 = r1 + 40 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    ___assert_func(5245552, 177, 5254036, 5245608);
    r4 = HEAP32[r2 >> 2];
  } else {
    r4 = r3;
  }
  return (HEAP32[r4 + 144 >> 2] | 0) == (r1 | 0) ? 2 : 1;
}
function __ZN5Avoid7ConnEnd6usePinEPNS_18ShapeConnectionPinE(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3 + 8;
  r5 = r1 + 44 | 0;
  if ((HEAP32[r5 >> 2] | 0) != 0) {
    ___assert_func(5245552, 185, 5257984, 5244768);
  }
  HEAP32[r5 >> 2] = r2;
  if ((r2 | 0) == 0) {
    STACKTOP = r3;
    return;
  }
  HEAP32[r4 >> 2] = r1;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r3, r2 + 56 | 0, r4);
  STACKTOP = r3;
  return;
}
function __ZN5Avoid7ConnEnd12usePinVertexEPNS_7VertInfE(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = 0;
  if ((HEAP32[r1 + 44 >> 2] | 0) != 0) {
    ___assert_func(5245552, 198, 5258124, 5244768);
  }
  r4 = HEAP32[r1 + 36 >> 2];
  r5 = HEAP32[r4 + 84 >> 2];
  r6 = r4 + 88 | 0;
  if ((r5 | 0) == (r6 | 0)) {
    return;
  }
  r4 = r6;
  r6 = r5;
  while (1) {
    r7 = HEAP32[r6 + 16 >> 2];
    if ((HEAP32[r7 + 68 >> 2] | 0) == (r2 | 0)) {
      break;
    }
    r5 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r6 | 0);
    if ((r5 | 0) == (r4 | 0)) {
      r3 = 2011;
      break;
    } else {
      r6 = r5;
    }
  }
  if (r3 == 2011) {
    return;
  }
  __ZN5Avoid7ConnEnd6usePinEPNS_18ShapeConnectionPinE(r1, r7);
  return;
}
function __ZNK5Avoid7ConnEnd17possiblePinPointsEv(r1, r2) {
  var r3, r4, r5, r6;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3, r5 = r4 >> 2;
  HEAP32[r5] = 0;
  HEAP32[r5 + 1] = 0;
  HEAP32[r5 + 2] = 0;
  r5 = HEAP32[r2 + 36 >> 2];
  do {
    if ((r5 | 0) != 0) {
      r6 = HEAP32[r2 + 32 >> 2];
      if ((r6 | 0) == 2147483647) {
        break;
      }
      __ZNK5Avoid8Obstacle17possiblePinPointsEj(r1, r5, r6);
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r4);
      STACKTOP = r3;
      return;
    }
  } while (0);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_(r1, r4);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZN5Avoid7ConnEnd7connectEPNS_7ConnRefE(r1, r2) {
  var r3, r4;
  if (!__ZNK5Avoid7ConnEnd15isPinConnectionEv(HEAP32[r1 >> 2])) {
    ___assert_func(5245552, 240, 5257936, 5244456);
  }
  r3 = r1 + 36 | 0;
  if ((HEAP32[r3 >> 2] | 0) == 0) {
    ___assert_func(5245552, 241, 5257936, 5243700);
  }
  r4 = r1 + 40 | 0;
  if ((HEAP32[r4 >> 2] | 0) != 0) {
    ___assert_func(5245552, 242, 5257936, 5243104);
  }
  __ZN5Avoid8Obstacle19addFollowingConnEndEPNS_7ConnEndE(HEAP32[r3 >> 2], r1);
  HEAP32[r4 >> 2] = r2;
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = r2;
  r5 = (r3 - r4 | 0) / 28 & -1;
  r6 = r1 + 8 | 0;
  r7 = r1 | 0;
  r8 = HEAP32[r7 >> 2];
  r9 = r8;
  if (r5 >>> 0 > ((HEAP32[r6 >> 2] - r9 | 0) / 28 & -1) >>> 0) {
    __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE10deallocateEv(r1);
    if (r5 >>> 0 > 153391689) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
    r10 = (HEAP32[r6 >> 2] - HEAP32[r7 >> 2] | 0) / 28 & -1;
    if (r10 >>> 0 > 76695843) {
      r11 = 153391689;
    } else {
      r7 = r10 << 1;
      r11 = r7 >>> 0 < r5 >>> 0 ? r5 : r7;
    }
    __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE8allocateEj(r1, r11);
    __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3);
    return;
  }
  r11 = r1 + 4 | 0;
  r7 = (HEAP32[r11 >> 2] - r9 | 0) / 28 & -1;
  if (r5 >>> 0 > r7 >>> 0) {
    r12 = 1;
    r13 = r2 + (r7 * 28 & -1) | 0;
  } else {
    r12 = 0;
    r13 = r3;
  }
  if ((r13 | 0) == (r2 | 0)) {
    r14 = r8;
  } else {
    r7 = Math.floor(((r13 - 28 + -r4 | 0) >>> 0) / 28) + 1 | 0;
    r4 = r8;
    r5 = r2;
    while (1) {
      HEAP32[r4 >> 2] = HEAP32[r5 >> 2];
      r2 = r4 + 4 | 0;
      r9 = r5 + 4 | 0;
      HEAP32[r2 >> 2] = HEAP32[r9 >> 2];
      HEAP32[r2 + 4 >> 2] = HEAP32[r9 + 4 >> 2];
      HEAP32[r2 + 8 >> 2] = HEAP32[r9 + 8 >> 2];
      HEAP32[r2 + 12 >> 2] = HEAP32[r9 + 12 >> 2];
      HEAP32[r2 + 16 >> 2] = HEAP32[r9 + 16 >> 2];
      HEAP16[r2 + 20 >> 1] = HEAP16[r9 + 20 >> 1];
      r9 = r5 + 28 | 0;
      if ((r9 | 0) == (r13 | 0)) {
        break;
      } else {
        r4 = r4 + 28 | 0;
        r5 = r9;
      }
    }
    r14 = r8 + (r7 * 28 & -1) | 0;
  }
  if (r12) {
    __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r13, r3);
    return;
  } else {
    HEAP32[r11 >> 2] = r14;
    return;
  }
}
__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_["X"] = 1;
function __ZNSt3__16vectorIcNS_9allocatorIcEEE6assignIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = r3 - r2 | 0;
  r5 = r1 + 8 | 0;
  r6 = r1 | 0;
  r7 = HEAP32[r6 >> 2];
  r8 = r7;
  if (r4 >>> 0 <= (HEAP32[r5 >> 2] - r8 | 0) >>> 0) {
    r9 = r1 + 4 | 0;
    r10 = HEAP32[r9 >> 2] - r8 | 0;
    if (r4 >>> 0 > r10 >>> 0) {
      _memmove(r7, r2, r10, 1, 0);
      __ZNSt3__16vectorIcNS_9allocatorIcEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_(r1, r2 + r10 | 0, r3);
      return;
    } else {
      _memmove(r7, r2, r4, 1, 0);
      HEAP32[r9 >> 2] = r7 + r4 | 0;
      return;
    }
  }
  __ZNSt3__16vectorIcNS_9allocatorIcEEE10deallocateEv(r1);
  if ((r4 | 0) < 0) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r7 = HEAP32[r5 >> 2] - HEAP32[r6 >> 2] | 0;
  if (r7 >>> 0 > 1073741822) {
    r11 = 2147483647;
  } else {
    r6 = r7 << 1;
    r11 = r6 >>> 0 < r4 >>> 0 ? r4 : r6;
  }
  __ZNSt3__16vectorIcNS_9allocatorIcEEE8allocateEj(r1, r11);
  __ZNSt3__16vectorIcNS_9allocatorIcEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_(r1, r2, r3);
  return;
}
function __ZNSt3__14pairIN5Avoid7ConnEndES2_ED2Ev(r1) {
  __ZN5Avoid7ConnEndD1Ev(r1 + 48 | 0);
  __ZN5Avoid7ConnEndD1Ev(r1 | 0);
  return;
}
function __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 4 >> 2];
  if ((r2 | 0) == 0) {
    r3 = r1;
    while (1) {
      r1 = HEAP32[r3 + 8 >> 2];
      if ((r3 | 0) == (HEAP32[r1 >> 2] | 0)) {
        r4 = r1;
        break;
      } else {
        r3 = r1;
      }
    }
    return r4;
  } else {
    r3 = r2;
    while (1) {
      r2 = HEAP32[r3 >> 2];
      if ((r2 | 0) == 0) {
        r4 = r3;
        break;
      } else {
        r3 = r2;
      }
    }
    return r4;
  }
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L2427 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L2427;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L2427;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 4 >> 2];
  if ((r2 | 0) == 0) {
    r3 = r1;
    while (1) {
      r1 = HEAP32[r3 + 8 >> 2];
      if ((r3 | 0) == (HEAP32[r1 >> 2] | 0)) {
        r4 = r1;
        break;
      } else {
        r3 = r1;
      }
    }
    return r4;
  } else {
    r3 = r2;
    while (1) {
      r2 = HEAP32[r3 >> 2];
      if ((r2 | 0) == 0) {
        r4 = r3;
        break;
      } else {
        r3 = r2;
      }
    }
    return r4;
  }
}
function __ZN5Avoid7ConnEnd21assignPinVisibilityToEPNS_7VertInfES2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  r6 = (r1 + 36 | 0) >> 2;
  if ((HEAP32[r6] | 0) == 0) {
    ___assert_func(5245552, 280, 5258044, 5243700);
  }
  r7 = (r1 + 32 | 0) >> 2;
  if ((HEAP32[r7] | 0) == 2147483647) {
    ___assert_func(5245552, 281, 5258044, 5246460);
  }
  r8 = HEAP32[r6];
  r9 = __ZNK5Avoid8Obstacle6routerEv(HEAP32[r8 + 4 >> 2]);
  r10 = HEAP32[r8 + 84 >> 2];
  do {
    if ((r10 | 0) == (r8 + 88 | 0)) {
      r11 = r8;
    } else {
      r12 = r9;
      r13 = r9 + 889 | 0;
      r14 = r9 + 888 | 0;
      r15 = r2;
      r16 = r2 + 12 | 0;
      r17 = r3 + 12 | 0;
      r18 = r3 + 20 | 0;
      r19 = r5 | 0;
      r20 = r5 + 8 | 0;
      r21 = r10;
      r22 = 0;
      r23 = r8;
      while (1) {
        r24 = HEAP32[r21 + 16 >> 2];
        do {
          if ((HEAP32[r24 + 12 >> 2] | 0) == (HEAP32[r7] | 0)) {
            if ((HEAP8[r24 + 44 | 0] & 1) << 24 >> 24 != 0) {
              if ((HEAP32[r24 + 64 >> 2] | 0) != 0) {
                r25 = r22;
                r26 = r23;
                break;
              }
            }
            r27 = r24 + 48 | 0;
            r28 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r27 = (r24 + 68 | 0) >> 2;
            r29 = HEAP32[r27];
            r30 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r31 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r32 = r29 + 12 | 0;
            r33 = r29 + 20 | 0;
            __ZNK5Avoid5PointmiERKS0_(r5, r30, r31, (HEAP32[tempDoublePtr >> 2] = HEAP32[r32 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r32 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r33 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r33 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
            r33 = __ZN5Avoid15rotationalAngleERKNS_5PointE((HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
            if (r33 <= 45 | r33 >= 315) {
              r34 = __ZNK5Avoid18ShapeConnectionPin10directionsEv(r24) >>> 3 & 1;
            } else {
              r34 = 0;
            }
            if (r33 >= 45 & r33 <= 135) {
              r35 = (__ZNK5Avoid18ShapeConnectionPin10directionsEv(r24) & 2 | 0) == 0 ? r34 : 1;
            } else {
              r35 = r34;
            }
            if (r33 >= 135 & r33 <= 225) {
              r36 = (__ZNK5Avoid18ShapeConnectionPin10directionsEv(r24) & 4 | 0) == 0 ? r35 : 1;
            } else {
              r36 = r35;
            }
            if (r33 >= 225 & r33 <= 315) {
              r37 = (__ZNK5Avoid18ShapeConnectionPin10directionsEv(r24) & 1 | 0) == 0 ? r36 : 1;
            } else {
              r37 = r36;
            }
            if ((r37 & 1) << 24 >> 24 == 0) {
              r38 = r28 + __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r12, 5);
            } else {
              r38 = r28;
            }
            if ((HEAP8[r13] & 1) << 24 >> 24 != 0) {
              r28 = __Znwj(68);
              __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r28, r15, HEAP32[r27], 1);
              __ZN5Avoid7EdgeInf7setDistEd(r28, (r38 > .001 ? r38 : .001) + __ZN5Avoid13manhattanDistERKNS_5PointES2_(r16, HEAP32[r27] + 12 | 0));
            }
            if ((HEAP8[r14] & 1) << 24 >> 24 != 0) {
              r28 = __Znwj(68);
              __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r28, r15, HEAP32[r27], 0);
              __ZN5Avoid7EdgeInf7setDistEd(r28, (r38 > .001 ? r38 : .001) + __ZN5Avoid13euclideanDistERKNS_5PointES2_(r16, HEAP32[r27] + 12 | 0));
            }
            r25 = r22 + 1 | 0;
            r26 = HEAP32[r6];
          } else {
            r25 = r22;
            r26 = r23;
          }
        } while (0);
        r24 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r21 | 0);
        if ((r24 | 0) == (r26 + 88 | 0)) {
          break;
        }
        r21 = r24;
        r22 = r25;
        r23 = r26;
      }
      if ((r25 | 0) == 0) {
        r11 = r26;
        break;
      }
      STACKTOP = r4;
      return;
    }
  } while (0);
  r26 = __ZNK5Avoid7ConnRef2idEv(HEAP32[HEAP32[r1 + 40 >> 2] + 4 >> 2]);
  r1 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r11 + 8 >> 2]);
  r11 = HEAP32[r7];
  __ZN5Avoid10err_printfEPKcz(5252512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = r26, HEAP32[tempInt + 4 >> 2] = r1, HEAP32[tempInt + 8 >> 2] = r11, tempInt));
  STACKTOP = r4;
  return;
}
__ZN5Avoid7ConnEnd21assignPinVisibilityToEPNS_7VertInfES2_["X"] = 1;
function __ZNK5Avoid7ConnEnd18getHyperedgeVertexEPNS_6RouterE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r4;
  r6 = HEAP32[r2 + 36 >> 2];
  do {
    if ((r6 | 0) == 0) {
      __ZN5Avoid6VertIDC1Ejtt(r5, 0, 8, 1);
      r7 = __Znwj(140);
      r8 = r7;
      __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r7, r3, r5, r2 + 4 | 0, 1);
      HEAP32[r7 + 120 >> 2] = HEAP32[r2 + 28 >> 2];
      if ((HEAP8[r3 + 888 | 0] & 1) << 24 >> 24 == 0) {
        r9 = 1;
        r10 = r8;
        break;
      }
      __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(r7, 0);
      r9 = 1;
      r10 = r8;
    } else {
      r8 = HEAP32[r6 + 84 >> 2];
      r7 = r6 + 88 | 0;
      if ((r8 | 0) != (r7 | 0)) {
        r11 = HEAP32[r2 + 32 >> 2];
        r12 = r7;
        r7 = r8;
        r8 = 0;
        while (1) {
          r13 = HEAP32[r7 + 16 >> 2], r14 = r13 >> 2;
          do {
            if ((HEAP32[r14 + 3] | 0) == (r11 | 0)) {
              if ((HEAP8[r13 + 44 | 0] & 1) << 24 >> 24 != 0) {
                if ((HEAP32[r14 + 16] | 0) != 0) {
                  r15 = r8;
                  break;
                }
              }
              r15 = HEAP32[r14 + 17];
            } else {
              r15 = r8;
            }
          } while (0);
          r14 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r7 | 0);
          if ((r14 | 0) == (r12 | 0)) {
            break;
          } else {
            r7 = r14;
            r8 = r15;
          }
        }
        if ((r15 | 0) != 0) {
          r9 = 0;
          r10 = r15;
          break;
        }
      }
      ___assert_func(5245552, 392, 5253948, 5252040);
      r9 = 0;
      r10 = 0;
    }
  } while (0);
  HEAP8[r1 | 0] = r9;
  HEAP32[r1 + 4 >> 2] = r10;
  STACKTOP = r4;
  return;
}
__ZNK5Avoid7ConnEnd18getHyperedgeVertexEPNS_6RouterE["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43;
  r3 = 0;
  r4 = r2 | 0;
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 | 0) == 0) {
      r6 = r2;
      r7 = r4;
      r3 = 2154;
    } else {
      if ((HEAP32[r2 + 4 >> 2] | 0) == 0) {
        r8 = r5;
        r9 = r2;
        r10 = r4;
        r3 = 2156;
        break;
      }
      r11 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r2);
      r12 = r11 | 0;
      r13 = HEAP32[r12 >> 2];
      if ((r13 | 0) == 0) {
        r6 = r11;
        r7 = r12;
        r3 = 2154;
        break;
      } else {
        r8 = r13;
        r9 = r11;
        r10 = r12;
        r3 = 2156;
        break;
      }
    }
  } while (0);
  do {
    if (r3 == 2154) {
      r5 = HEAP32[r6 + 4 >> 2];
      if ((r5 | 0) != 0) {
        r8 = r5;
        r9 = r6;
        r10 = r7;
        r3 = 2156;
        break;
      }
      r14 = 0;
      r15 = 0;
      r16 = r6 + 8 | 0, r17 = r16 >> 2;
      r18 = r6;
      r19 = r7;
      break;
    }
  } while (0);
  if (r3 == 2156) {
    r7 = r9 + 8 | 0;
    HEAP32[r8 + 8 >> 2] = HEAP32[r7 >> 2];
    r14 = r8;
    r15 = 1;
    r16 = r7, r17 = r16 >> 2;
    r18 = r9;
    r19 = r10;
  }
  r10 = HEAP32[r17];
  r9 = r10 | 0;
  do {
    if ((r18 | 0) == (HEAP32[r9 >> 2] | 0)) {
      HEAP32[r9 >> 2] = r14;
      if ((r18 | 0) == (r1 | 0)) {
        r20 = r14;
        r21 = 0;
        break;
      }
      r20 = r1;
      r21 = HEAP32[HEAP32[r17] + 4 >> 2];
    } else {
      HEAP32[r10 + 4 >> 2] = r14;
      r20 = r1;
      r21 = HEAP32[HEAP32[r17] >> 2];
    }
  } while (0);
  r1 = r18 + 12 | 0;
  r10 = (HEAP8[r1] & 1) << 24 >> 24 == 0;
  if ((r18 | 0) == (r2 | 0)) {
    r22 = r20;
  } else {
    r9 = r2 + 8 | 0;
    r16 = HEAP32[r9 >> 2];
    HEAP32[r17] = r16;
    if ((HEAP32[HEAP32[r9 >> 2] >> 2] | 0) == (r2 | 0)) {
      HEAP32[r16 >> 2] = r18;
    } else {
      HEAP32[r16 + 4 >> 2] = r18;
    }
    r16 = HEAP32[r4 >> 2];
    HEAP32[r19 >> 2] = r16;
    HEAP32[r16 + 8 >> 2] = r18;
    r16 = HEAP32[r2 + 4 >> 2];
    HEAP32[r18 + 4 >> 2] = r16;
    if ((r16 | 0) != 0) {
      HEAP32[r16 + 8 >> 2] = r18;
    }
    HEAP8[r1] = HEAP8[r2 + 12 | 0] & 1;
    r22 = (r20 | 0) == (r2 | 0) ? r18 : r20;
  }
  if (r10 | (r22 | 0) == 0) {
    return;
  }
  if (r15) {
    HEAP8[r14 + 12 | 0] = 1;
    return;
  } else {
    r23 = r22;
    r24 = r21;
  }
  while (1) {
    r21 = (r24 + 8 | 0) >> 2;
    r22 = HEAP32[r21];
    r14 = r24 + 12 | 0;
    r15 = (HEAP8[r14] & 1) << 24 >> 24 != 0;
    if ((r24 | 0) == (HEAP32[r22 >> 2] | 0)) {
      if (r15) {
        r25 = r23;
        r26 = r24, r27 = r26 >> 2;
      } else {
        HEAP8[r14] = 1;
        HEAP8[r22 + 12 | 0] = 0;
        __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(HEAP32[r21]);
        r10 = HEAP32[r24 + 4 >> 2];
        r25 = (r23 | 0) == (r10 | 0) ? r24 : r23;
        r26 = HEAP32[r10 >> 2], r27 = r26 >> 2;
      }
      r28 = HEAP32[r27];
      r29 = (r28 | 0) == 0;
      if (!r29) {
        r10 = HEAP8[r28 + 12 | 0];
        if ((r10 & 1) << 24 >> 24 == 0) {
          r30 = r10;
          r3 = 2201;
          break;
        }
      }
      r31 = HEAP32[r27 + 1];
      if ((r31 | 0) != 0) {
        if ((HEAP8[r31 + 12 | 0] & 1) << 24 >> 24 == 0) {
          r3 = 2199;
          break;
        }
      }
      HEAP8[r26 + 12 | 0] = 0;
      r10 = HEAP32[r27 + 2];
      r32 = r10 + 12 | 0;
      if ((HEAP8[r32] & 1) << 24 >> 24 == 0 | (r10 | 0) == (r25 | 0)) {
        r3 = 2196;
        break;
      }
      r20 = HEAP32[r10 + 8 >> 2];
      r18 = HEAP32[r20 >> 2];
      if ((r10 | 0) != (r18 | 0)) {
        r23 = r25;
        r24 = r18;
        continue;
      }
      r23 = r25;
      r24 = HEAP32[r20 + 4 >> 2];
      continue;
    }
    if (r15) {
      r33 = r23;
      r34 = r24, r35 = r34 >> 2;
    } else {
      HEAP8[r14] = 1;
      HEAP8[r22 + 12 | 0] = 0;
      __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(HEAP32[r21]);
      r21 = HEAP32[r24 >> 2];
      r33 = (r23 | 0) == (r21 | 0) ? r24 : r23;
      r34 = HEAP32[r21 + 4 >> 2], r35 = r34 >> 2;
    }
    r36 = HEAP32[r35];
    if ((r36 | 0) != 0) {
      r37 = r36 + 12 | 0;
      if ((HEAP8[r37] & 1) << 24 >> 24 == 0) {
        r3 = 2183;
        break;
      }
    }
    r21 = HEAP32[r35 + 1];
    if ((r21 | 0) != 0) {
      r22 = HEAP8[r21 + 12 | 0];
      if ((r22 & 1) << 24 >> 24 == 0) {
        r38 = r22;
        r3 = 2185;
        break;
      }
    }
    HEAP8[r34 + 12 | 0] = 0;
    r22 = HEAP32[r35 + 2];
    if ((r22 | 0) == (r33 | 0)) {
      r39 = r33;
      r3 = 2180;
      break;
    }
    if ((HEAP8[r22 + 12 | 0] & 1) << 24 >> 24 == 0) {
      r39 = r22;
      r3 = 2180;
      break;
    }
    r21 = HEAP32[r22 + 8 >> 2];
    r14 = HEAP32[r21 >> 2];
    if ((r22 | 0) != (r14 | 0)) {
      r23 = r33;
      r24 = r14;
      continue;
    }
    r23 = r33;
    r24 = HEAP32[r21 + 4 >> 2];
  }
  do {
    if (r3 == 2196) {
      HEAP8[r32] = 1;
      return;
    } else if (r3 == 2199) {
      if (r29) {
        r40 = r31;
        r3 = 2203;
        break;
      }
      r30 = HEAP8[r28 + 12 | 0];
      r3 = 2201;
      break;
    } else if (r3 == 2180) {
      HEAP8[r39 + 12 | 0] = 1;
      return;
    } else if (r3 == 2183) {
      r24 = HEAP32[r35 + 1];
      if ((r24 | 0) == 0) {
        r41 = r37;
        r3 = 2187;
        break;
      }
      r38 = HEAP8[r24 + 12 | 0];
      r3 = 2185;
      break;
    }
  } while (0);
  do {
    if (r3 == 2185) {
      if ((r38 & 1) << 24 >> 24 == 0) {
        r42 = r34;
        r3 = 2188;
        break;
      }
      r41 = r36 + 12 | 0;
      r3 = 2187;
      break;
    } else if (r3 == 2201) {
      if ((r30 & 1) << 24 >> 24 == 0) {
        r43 = r26;
        r3 = 2204;
        break;
      }
      r40 = HEAP32[r27 + 1];
      r3 = 2203;
      break;
    }
  } while (0);
  do {
    if (r3 == 2187) {
      HEAP8[r41] = 1;
      HEAP8[r34 + 12 | 0] = 0;
      __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r34);
      r42 = HEAP32[r35 + 2];
      r3 = 2188;
      break;
    } else if (r3 == 2203) {
      HEAP8[r40 + 12 | 0] = 1;
      HEAP8[r26 + 12 | 0] = 0;
      __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(r26);
      r43 = HEAP32[r27 + 2];
      r3 = 2204;
      break;
    }
  } while (0);
  if (r3 == 2188) {
    r27 = r42 + 8 | 0;
    r26 = HEAP32[r27 >> 2] + 12 | 0;
    HEAP8[r42 + 12 | 0] = HEAP8[r26] & 1;
    HEAP8[r26] = 1;
    HEAP8[HEAP32[r42 + 4 >> 2] + 12 | 0] = 1;
    __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(HEAP32[r27 >> 2]);
    return;
  } else if (r3 == 2204) {
    r3 = r43 + 8 | 0;
    r27 = HEAP32[r3 >> 2] + 12 | 0;
    HEAP8[r43 + 12 | 0] = HEAP8[r27] & 1;
    HEAP8[r27] = 1;
    HEAP8[HEAP32[r43 >> 2] + 12 | 0] = 1;
    __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(HEAP32[r3 >> 2]);
    return;
  }
}
__ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 2219;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 2223;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 2222;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 2219) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 2222) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 2223) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  }
}
function __ZN5Avoid21segmentIntersectPointERKNS_5PointES2_S2_S2_PdS3_(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r7 = r2 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r1 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r8 - r9;
  r10 = r3 | 0;
  r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = r4 | 0;
  r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = r11 - r12;
  r13 = r7 < 0;
  r14 = r13 ? r8 : r9;
  r15 = r13 ? r9 : r8;
  do {
    if (r10 > 0) {
      if (r15 < r12 | r11 < r14) {
        r16 = 0;
      } else {
        break;
      }
      return r16;
    } else {
      if (r15 < r11 | r12 < r14) {
        r16 = 0;
      } else {
        break;
      }
      return r16;
    }
  } while (0);
  r14 = r2 + 8 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r14 = (r1 + 8 | 0) >> 2;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 1], HEAPF64[tempDoublePtr >> 3]);
  r12 = r2 - r1;
  r15 = r3 + 8 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r15 = r4 + 8 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r15 = r3 - r4;
  r8 = r12 < 0;
  r13 = r8 ? r2 : r1;
  r17 = r8 ? r1 : r2;
  do {
    if (r15 > 0) {
      if (r17 < r4 | r3 < r13) {
        r16 = 0;
      } else {
        break;
      }
      return r16;
    } else {
      if (r17 < r3 | r4 < r13) {
        r16 = 0;
      } else {
        break;
      }
      return r16;
    }
  } while (0);
  r13 = r9 - r11;
  r11 = r1 - r3;
  r3 = r15 * r13 - r10 * r11;
  r1 = r10 * r12 - r7 * r15;
  do {
    if (r1 > 0) {
      if (r3 < 0 | r3 > r1) {
        r16 = 0;
        return r16;
      }
      r15 = r7 * r11 - r12 * r13;
      if (r15 < 0 | r15 > r1) {
        r16 = 0;
      } else {
        break;
      }
      return r16;
    } else {
      if (r3 > 0 | r3 < r1) {
        r16 = 0;
        return r16;
      }
      r15 = r7 * r11 - r12 * r13;
      if (r15 > 0 | r15 < r1) {
        r16 = 0;
      } else {
        break;
      }
      return r16;
    }
  } while (0);
  if (r1 == 0) {
    r16 = 3;
    return r16;
  }
  r13 = r9 + r7 * r3 / r1;
  HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 1], HEAPF64[tempDoublePtr >> 3]) + r12 * r3 / r1;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r16 = 1;
  return r16;
}
__ZN5Avoid21segmentIntersectPointERKNS_5PointES2_S2_S2_PdS3_["X"] = 1;
function __ZN5Avoid17rayIntersectPointERKNS_5PointES2_S2_S2_PdS3_(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  var r10, r11, r12, r13;
  r10 = (r1 + 8 | 0) >> 2;
  r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]);
  r12 = r3 - r11;
  r3 = r5 - r7;
  r7 = r1 | 0;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r2 - r1;
  r2 = r4 - r6;
  r6 = r3 * (r1 - r4) - (r11 - r5) * r2;
  r5 = r12 * r2 - r3 * r7;
  if (r5 == 0) {
    r13 = 3;
    return r13;
  }
  r3 = r1 + r7 * r6 / r5;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]) + r12 * r6 / r5;
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r9 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r13 = 1;
  return r13;
}
function __ZN5Avoid5PointC2Ev(r1) {
  HEAP32[r1 + 16 >> 2] = 0;
  HEAP16[r1 + 20 >> 1] = 8;
  return;
}
function __ZN5Avoid5PointC2Edd(r1, r2, r3) {
  var r4;
  r4 = r1 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 16 >> 2] = 0;
  HEAP16[r1 + 20 >> 1] = 8;
  return;
}
function __ZNK5Avoid5PointeqERKS0_(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = r1 | 0;
  r4 = r2 | 0;
  do {
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r5 = r1 + 8 | 0;
      r6 = r2 + 8 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r7 = 1;
      } else {
        break;
      }
      return r7;
    }
  } while (0);
  r7 = 0;
  return r7;
}
function __ZNK5Avoid5PointneERKS0_(r1, r2) {
  var r3, r4, r5;
  r3 = r1 | 0;
  r4 = r2 | 0;
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    r5 = 1;
    return r5;
  }
  r4 = r1 + 8 | 0;
  r1 = r2 + 8 | 0;
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    r5 = 1;
    return r5;
  }
  r5 = 0;
  return r5;
}
function __ZNK5Avoid5PointltERKS0_(r1, r2) {
  var r3, r4, r5;
  r3 = r1 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 == r5) {
    r3 = r1 + 8 | 0;
    r1 = r2 + 8 | 0;
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    return r2;
  } else {
    r2 = r4 < r5;
    return r2;
  }
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid9inBetweenERKNS_5PointES2_S2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r3, 2.220446049250313e-16) | 0) != 0) {
    ___assert_func(5252356, 61, 5255960, 5249964);
  }
  r4 = r1 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r2 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (Math.abs(r5 - r6) > 2.220446049250313e-16) {
    r4 = r3 | 0;
    r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    if (r5 < r7 & r7 < r6) {
      r8 = 1;
      return r8;
    }
    if (r6 >= r7) {
      r8 = 0;
      return r8;
    }
    r8 = r7 < r5;
    return r8;
  } else {
    r5 = r1 + 8 | 0;
    r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = r3 + 8 | 0;
    r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = r2 + 8 | 0;
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    if (r1 < r3 & r3 < r2) {
      r8 = 1;
      return r8;
    }
    if (r2 >= r3) {
      r8 = 0;
      return r8;
    }
    r8 = r3 < r1;
    return r8;
  }
}
function __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9;
  if (r4 < 0) {
    ___assert_func(5246128, 82, 5255016, 5245396);
  }
  r5 = r2 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r1 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r3 + 8 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r1 + 8 | 0;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r3 | 0;
  r3 = r2 + 8 | 0;
  r2 = (r6 - r7) * (r8 - r1) - ((HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r7) * ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r1);
  if (r2 < -r4) {
    r9 = -1;
    return r9;
  }
  r9 = r2 > r4 & 1;
  return r9;
}
function __ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r1 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r2 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r6 == r7) {
    r5 = r3 | 0;
    if (r6 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r8 = 0;
      return r8;
    }
    r5 = r1 + 8 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = r3 + 8 | 0;
    r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = r2 + 8 | 0;
    r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    if (r9 < r10 & r10 < r11) {
      r8 = 1;
      return r8;
    }
    if (r11 >= r10) {
      r8 = 0;
      return r8;
    }
    r8 = r10 < r9;
    return r8;
  }
  r9 = r1 + 8 | 0;
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r9 = r2 + 8 | 0;
  if (r10 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r3, r4) | 0) != 0) {
      r8 = 0;
      return r8;
    }
    r8 = __ZN5Avoid9inBetweenERKNS_5PointES2_S2_(r1, r2, r3);
    return r8;
  }
  r2 = r3 + 8 | 0;
  if (r10 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    r8 = 0;
    return r8;
  }
  r2 = r3 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r6 < r3 & r3 < r7) {
    r8 = 1;
    return r8;
  }
  if (r7 >= r3) {
    r8 = 0;
    return r8;
  }
  r8 = r3 < r6;
  return r8;
}
__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d["X"] = 1;
function __ZN5Avoid16segmentIntersectERKNS_5PointES2_S2_S2_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9;
  r5 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r3, 0);
  do {
    if ((r5 | 0) == 0) {
      r6 = 0;
    } else {
      r7 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r4, 0);
      if ((r7 | 0) == 0) {
        r6 = 0;
        break;
      }
      r8 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r3, r4, r1, 0);
      r9 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r3, r4, r2, 0);
      if ((Math.imul(r7, r5) | 0) >= 0) {
        r6 = 0;
        break;
      }
      r6 = (Math.imul(r9, r8) | 0) < 0;
    }
  } while (0);
  return r6;
}
function __ZN5Avoid21segmentShapeIntersectERKNS_5PointES2_S2_S2_Rb(r1, r2, r3, r4, r5) {
  var r6, r7;
  r6 = 0;
  if (__ZN5Avoid16segmentIntersectERKNS_5PointES2_S2_S2_(r1, r2, r3, r4)) {
    r7 = 1;
    return r7;
  }
  do {
    if (__ZNK5Avoid5PointeqERKS0_(r4, r1)) {
      r6 = 2340;
    } else {
      if (__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r3, r4, r1, 0)) {
        r6 = 2340;
        break;
      } else {
        r6 = 2341;
        break;
      }
    }
  } while (0);
  do {
    if (r6 == 2340) {
      if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r3, r4, r2, 0) | 0) == 0) {
        r6 = 2341;
        break;
      } else {
        break;
      }
    }
  } while (0);
  do {
    if (r6 == 2341) {
      do {
        if (!__ZNK5Avoid5PointeqERKS0_(r4, r2)) {
          if (__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r3, r4, r2, 0)) {
            break;
          } else {
            r7 = 0;
          }
          return r7;
        }
      } while (0);
      if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r3, r4, r1, 0) | 0) == 0) {
        r7 = 0;
      } else {
        break;
      }
      return r7;
    }
  } while (0);
  if ((HEAP8[r5] & 1) << 24 >> 24 != 0) {
    r7 = 1;
    return r7;
  }
  HEAP8[r5] = 1;
  r7 = 0;
  return r7;
}
function __ZN5Avoid13inValidRegionEbRKNS_5PointES2_S2_S2_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9;
  r6 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r5, r2, r3, 0);
  r7 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r5, r3, r4, 0);
  r5 = (r6 | 0) < 1;
  r8 = (r7 | 0) < 1;
  if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r2, r3, r4, 0) | 0) <= 0) {
    return r5 & r8 & (r1 ^ 1);
  }
  if (!r1) {
    r9 = r5 | r8;
    return r9;
  }
  if ((r7 | 0) < 0 | r5 ^ 1) {
    return r8 & (r6 | 0) > -1;
  } else {
    r9 = 1;
    return r9;
  }
}
function __ZN5Avoid10cornerSideERKNS_5PointES2_S2_S2_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r3, 0);
  r6 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r1, r2, r4, 0);
  r1 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r2, r3, r4, 0);
  if ((r5 | 0) == 1) {
    return (r1 | r6) >> 31 | 1;
  } else if ((r5 | 0) == -1) {
    r5 = (r6 | 0) < 1 & (r1 | 0) < 1 ? -1 : 1;
    return r5;
  } else {
    r5 = r6;
    return r5;
  }
}
function __ZN5Avoid13euclideanDistERKNS_5PointES2_(r1, r2) {
  var r3, r4, r5;
  r3 = r1 | 0;
  r4 = r2 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r1 + 8 | 0;
  r1 = r2 + 8 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  return Math.sqrt(r5 * r5 + r2 * r2);
}
function __ZN5Avoid13manhattanDistERKNS_5PointES2_(r1, r2) {
  var r3, r4, r5;
  r3 = r1 | 0;
  r4 = r2 | 0;
  r5 = Math.abs((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  r4 = r1 + 8 | 0;
  r1 = r2 + 8 | 0;
  return r5 + Math.abs((HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
}
function __ZN5Avoid6inPolyERKNS_7PolygonERKNS_5PointEb(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = 0;
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1);
  if ((r4 | 0) == 0) {
    r5 = 1;
    return r5;
  }
  r6 = r4 - 1 | 0;
  r7 = r1 + 8 | 0;
  r1 = 0;
  r8 = 0;
  while (1) {
    r9 = HEAP32[r7 >> 2];
    r10 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120(r9 + (((r6 + r1 | 0) >>> 0) % (r4 >>> 0) * 24 & -1) | 0, r9 + (r1 * 24 & -1) | 0, r2, 0);
    if ((r10 | 0) == -1) {
      r5 = 0;
      r3 = 2377;
      break;
    }
    r11 = r8 | (r10 | 0) == 0;
    r10 = r1 + 1 | 0;
    if (r10 >>> 0 < r4 >>> 0) {
      r1 = r10;
      r8 = r11;
    } else {
      break;
    }
  }
  if (r3 == 2377) {
    return r5;
  }
  r5 = r11 ^ 1;
  return r5;
}
function __ZN5Avoid9inPolyGenERKNS_16PolygonInterfaceERKNS_5PointE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r4 = r3;
  __ZN5Avoid7PolygonC1ERKNS_16PolygonInterfaceE(r4, r1);
  r1 = __ZNK5Avoid7Polygon4sizeEv(r4);
  L2808 : do {
    if ((r1 | 0) == 0) {
      r5 = 0;
      r6 = 0;
    } else {
      r7 = HEAP32[r4 + 8 >> 2];
      r8 = r2 | 0;
      r9 = r2 + 8 | 0;
      r10 = 0;
      while (1) {
        r11 = (r7 + (r10 * 24 & -1) | 0) >> 2;
        r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[r11] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        r11 = (r7 + (r10 * 24 & -1) + 8 | 0) >> 2;
        r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[r11] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        r11 = r10 + 1 | 0;
        if ((r11 | 0) == (r1 | 0)) {
          break;
        } else {
          r10 = r11;
        }
      }
      r10 = r1 - 1 | 0;
      r9 = 0;
      r8 = 0;
      r11 = 0;
      while (1) {
        r12 = r7 + (r9 * 24 & -1) | 0;
        r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r12 = r7 + (r9 * 24 & -1) + 8 | 0;
        r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        if (r13 == 0 & r14 == 0) {
          r15 = 1;
          break;
        }
        r12 = ((r10 + r9 | 0) >>> 0) % (r1 >>> 0);
        r16 = r7 + (r12 * 24 & -1) + 8 | 0;
        r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        do {
          if (r14 > 0 ^ r17 > 0) {
            r16 = r7 + (r12 * 24 & -1) | 0;
            if ((r17 * r13 - r14 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) / (r17 - r14) <= 0) {
              r18 = r11;
              break;
            }
            r18 = r11 + 1 | 0;
          } else {
            r18 = r11;
          }
        } while (0);
        do {
          if (r14 < 0 ^ r17 < 0) {
            r16 = r7 + (r12 * 24 & -1) | 0;
            if ((r17 * r13 - r14 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) / (r17 - r14) >= 0) {
              r19 = r8;
              break;
            }
            r19 = r8 + 1 | 0;
          } else {
            r19 = r8;
          }
        } while (0);
        r14 = r9 + 1 | 0;
        if (r14 >>> 0 < r1 >>> 0) {
          r9 = r14;
          r8 = r19;
          r11 = r18;
        } else {
          r5 = r19;
          r6 = r18;
          break L2808;
        }
      }
      __ZN5Avoid7PolygonD1Ev(r4);
      STACKTOP = r3;
      return r15;
    }
  } while (0);
  r18 = (r6 | 0) % 2;
  r15 = (r18 | 0) == 1 | (r18 | 0) != ((r5 | 0) % 2 | 0);
  __ZN5Avoid7PolygonD1Ev(r4);
  STACKTOP = r3;
  return r15;
}
__ZN5Avoid9inPolyGenERKNS_16PolygonInterfaceERKNS_5PointE["X"] = 1;
function __ZN5Avoid15rotationalAngleERKNS_5PointE(r1, r2) {
  var r3, r4, r5;
  if (r2 == 0) {
    r3 = r1 < 0 ? 180 : 0;
    return r3;
  }
  if (r1 == 0) {
    r3 = r2 < 0 ? 270 : 90;
    return r3;
  }
  r4 = Math.atan(r2 / r1) * 180 / 3.141592653589793;
  do {
    if (r1 < 0) {
      r5 = r4 + 180;
    } else {
      if (r2 >= 0) {
        r5 = r4;
        break;
      }
      r5 = r4 + 360;
    }
  } while (0);
  if (r5 < 0) {
    ___assert_func(5252356, 633, 5261252, 5248332);
  }
  if (r5 <= 360) {
    r3 = r5;
    return r3;
  }
  ___assert_func(5252356, 634, 5261252, 5247024);
  r3 = r5;
  return r3;
}
function __ZN5Avoid5PointC1Ev(r1) {
  __ZN5Avoid5PointC2Ev(r1);
  return;
}
function __ZN5Avoid5PointC1Edd(r1, r2, r3) {
  __ZN5Avoid5PointC2Edd(r1, r2, r3);
  return;
}
function __ZNK5Avoid5Point6equalsERKS0_d(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = r1 | 0;
  r4 = r2 | 0;
  do {
    if (Math.abs((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) < 1e-4) {
      r5 = r1 + 8 | 0;
      r6 = r2 + 8 | 0;
      if (Math.abs((HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) < 1e-4) {
        r7 = 1;
      } else {
        break;
      }
      return r7;
    }
  } while (0);
  r7 = 0;
  return r7;
}
function __ZN5Avoid5PointixEj(r1, r2) {
  if (r2 >>> 0 >= 2) {
    ___assert_func(5251448, 99, 5258844, 5249900);
  }
  return (r2 | 0) == 0 ? r1 | 0 : r1 + 8 | 0;
}
function __ZN5Avoid16PolygonInterfaceC2Ev(r1) {
  HEAP32[r1 >> 2] = 5267564;
  return;
}
function __ZNK5Avoid5PointixEj(r1, r2) {
  if (r2 >>> 0 >= 2) {
    ___assert_func(5251448, 106, 5254232, 5249900);
  }
  return (r2 | 0) == 0 ? r1 | 0 : r1 + 8 | 0;
}
function __ZNK5Avoid5PointmiERKS0_(r1, r2, r3, r4, r5) {
  __ZN5Avoid5PointC1Edd(r1, r2 - r4, r3 - r5);
  return;
}
function __ZNK5Avoid16PolygonInterface17offsetBoundingBoxEd(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  __ZN5Avoid3BoxC1Ev(r1);
  r4 = (r1 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = 1.7976931348623157e+308, HEAP32[r4] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = (r1 + 8 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = 1.7976931348623157e+308, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r6 = (r1 + 24 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = -1.7976931348623157e+308, HEAP32[r6] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r7 = (r1 + 32 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = -1.7976931348623157e+308, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r1 = r2;
  if ((FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r2) | 0) == 0) {
    r8 = 1.7976931348623157e+308;
    r9 = 1.7976931348623157e+308;
    r10 = -1.7976931348623157e+308;
    r11 = -1.7976931348623157e+308;
    r12 = r8 - r3;
    HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[r4] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r13 = r9 - r3;
    HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r14 = r10 + r3;
    HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r6] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r15 = r11 + r3;
    HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    return;
  }
  r16 = r2 >> 2;
  r17 = 0;
  r18 = 1.7976931348623157e+308;
  r19 = 1.7976931348623157e+308;
  r20 = -1.7976931348623157e+308;
  r21 = -1.7976931348623157e+308;
  while (1) {
    r22 = FUNCTION_TABLE[HEAP32[HEAP32[r16] + 24 >> 2]](r2, r17) | 0;
    r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r22 = r23 < r18 ? r23 : r18;
    HEAPF64[tempDoublePtr >> 3] = r22, HEAP32[r4] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r23 = FUNCTION_TABLE[HEAP32[HEAP32[r16] + 24 >> 2]](r2, r17) + 8 | 0;
    r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r23 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r23 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r23 = r24 < r19 ? r24 : r19;
    HEAPF64[tempDoublePtr >> 3] = r23, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r24 = FUNCTION_TABLE[HEAP32[HEAP32[r16] + 24 >> 2]](r2, r17) | 0;
    r25 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r24 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r24 = r20 < r25 ? r25 : r20;
    HEAPF64[tempDoublePtr >> 3] = r24, HEAP32[r6] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r25 = FUNCTION_TABLE[HEAP32[HEAP32[r16] + 24 >> 2]](r2, r17) + 8 | 0;
    r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r25 = r21 < r26 ? r26 : r21;
    HEAPF64[tempDoublePtr >> 3] = r25, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r26 = r17 + 1 | 0;
    if (r26 >>> 0 < FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r2) >>> 0) {
      r17 = r26;
      r18 = r22;
      r19 = r23;
      r20 = r24;
      r21 = r25;
    } else {
      r8 = r22;
      r9 = r23;
      r10 = r24;
      r11 = r25;
      break;
    }
  }
  r12 = r8 - r3;
  HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[r4] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r13 = r9 - r3;
  HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r14 = r10 + r3;
  HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r6] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r15 = r11 + r3;
  HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
__ZNK5Avoid16PolygonInterface17offsetBoundingBoxEd["X"] = 1;
function __ZN5Avoid3BoxC1Ev(r1) {
  __ZN5Avoid3BoxC2Ev(r1);
  return;
}
function __ZN5Avoid7PolygonC1Ev(r1) {
  __ZN5Avoid7PolygonC2Ev(r1);
  return;
}
function __ZN5Avoid7PolygonC2Ev(r1) {
  var r2, r3, r4;
  __ZN5Avoid16PolygonInterfaceC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5267356;
  r2 = r1 + 4 | 0;
  for (r3 = r2 >> 2, r4 = r3 + 10; r3 < r4; r3++) {
    HEAP32[r3] = 0;
  }
  __ZN5Avoid7Polygon5clearEv(r1);
  return;
}
function __ZN5Avoid7PolygonC2Ei(r1) {
  var r2;
  __ZN5Avoid16PolygonInterfaceC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5267356;
  HEAP32[r1 + 4 >> 2] = 0;
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1Ej(r1 + 8 | 0, 4);
  r2 = (r1 + 20 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  return;
}
function __ZN5Avoid7PolygonC1ERKNS_16PolygonInterfaceE(r1, r2) {
  __ZN5Avoid7PolygonC2ERKNS_16PolygonInterfaceE(r1, r2);
  return;
}
function __ZN5Avoid7PolygonC2ERKNS_16PolygonInterfaceE(r1, r2) {
  var r3, r4, r5, r6, r7;
  __ZN5Avoid16PolygonInterfaceC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5267356;
  r3 = r2 >> 2;
  HEAP32[r1 + 4 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r3] + 20 >> 2]](r2);
  r4 = r1 + 8 | 0;
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1Ej(r4, FUNCTION_TABLE[HEAP32[HEAP32[r3] + 16 >> 2]](r2));
  r5 = r4 | 0;
  r4 = r2;
  r6 = (r1 + 20 | 0) >> 2;
  HEAP32[r6] = 0;
  HEAP32[r6 + 1] = 0;
  HEAP32[r6 + 2] = 0;
  HEAP32[r6 + 3] = 0;
  HEAP32[r6 + 4] = 0;
  HEAP32[r6 + 5] = 0;
  r6 = 0;
  while (1) {
    if (r6 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r3] + 16 >> 2]](r2) >>> 0) {
      break;
    }
    r1 = HEAP32[r5 >> 2] + (r6 * 24 & -1) | 0;
    r7 = FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 24 >> 2]](r2, r6);
    HEAP32[r1 >> 2] = HEAP32[r7 >> 2];
    HEAP32[r1 + 4 >> 2] = HEAP32[r7 + 4 >> 2];
    HEAP32[r1 + 8 >> 2] = HEAP32[r7 + 8 >> 2];
    HEAP32[r1 + 12 >> 2] = HEAP32[r7 + 12 >> 2];
    HEAP32[r1 + 16 >> 2] = HEAP32[r7 + 16 >> 2];
    HEAP16[r1 + 20 >> 1] = HEAP16[r7 + 20 >> 1];
    r6 = r6 + 1 | 0;
  }
  return;
}
__ZN5Avoid7PolygonC2ERKNS_16PolygonInterfaceE["X"] = 1;
function __ZN5Avoid9RectangleC1ERKNS_5PointES3_(r1, r2, r3) {
  __ZN5Avoid9RectangleC2ERKNS_5PointES3_(r1, r2, r3);
  return;
}
function __ZNK5Avoid16PolygonInterface13offsetPolygonEd(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 324 | 0;
  r5 = r4;
  r6 = r4 + 20;
  r7 = r4 + 40;
  r8 = r4 + 60;
  r9 = r4 + 80;
  r10 = r4 + 100;
  r11 = r4 + 120;
  r12 = r4 + 140;
  r13 = r4 + 160;
  r14 = r4 + 180;
  r15 = r4 + 200;
  r16 = r4 + 212;
  r17 = r4 + 236;
  r18 = r4 + 260;
  r19 = r4 + 284;
  r20 = r4 + 300;
  __ZN5Avoid7PolygonC1Ev(r1);
  r21 = r2 >> 2;
  HEAP32[r1 + 4 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r21] + 20 >> 2]](r2);
  if (r3 == 0) {
    r22 = r1 + 8 | 0;
    r23 = r2;
    r24 = (r1 + 12 | 0) >> 2;
    r25 = r1 + 16 | 0;
    r26 = r25 | 0;
    r27 = r25;
    r25 = r22 | 0;
    r28 = (r14 + 8 | 0) >> 2;
    r29 = r14 + 12 | 0;
    r30 = (r14 + 4 | 0) >> 2;
    r31 = r14 | 0;
    r32 = r14 + 16 | 0;
    r33 = r13 | 0;
    r34 = r13 + 4 | 0;
    r35 = r13 + 8 | 0;
    r36 = r13 + 12 | 0;
    r37 = 0;
    while (1) {
      if (r37 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r21] + 16 >> 2]](r2) >>> 0) {
        break;
      }
      r38 = FUNCTION_TABLE[HEAP32[HEAP32[r23 >> 2] + 24 >> 2]](r2, r37);
      r39 = HEAP32[r24];
      r40 = HEAP32[r26 >> 2];
      if (r39 >>> 0 < r40 >>> 0) {
        if ((r39 | 0) == 0) {
          r41 = 0;
        } else {
          r42 = r39 >> 2;
          r43 = r38 >> 2;
          HEAP32[r42] = HEAP32[r43];
          HEAP32[r42 + 1] = HEAP32[r43 + 1];
          HEAP32[r42 + 2] = HEAP32[r43 + 2];
          HEAP32[r42 + 3] = HEAP32[r43 + 3];
          HEAP32[r42 + 4] = HEAP32[r43 + 4];
          HEAP32[r42 + 5] = HEAP32[r43 + 5];
          r41 = HEAP32[r24];
        }
        HEAP32[r24] = r41 + 24 | 0;
      } else {
        r43 = HEAP32[r25 >> 2];
        r42 = ((r39 - r43 | 0) / 24 & -1) + 1 | 0;
        if (r42 >>> 0 > 178956970) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
          r44 = HEAP32[r26 >> 2];
          r45 = HEAP32[r25 >> 2];
        } else {
          r44 = r40;
          r45 = r43;
        }
        r43 = r45;
        r40 = (r44 - r43 | 0) / 24 & -1;
        if (r40 >>> 0 > 89478484) {
          r46 = 178956970;
        } else {
          r39 = r40 << 1;
          r46 = r39 >>> 0 < r42 >>> 0 ? r42 : r39;
        }
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r14, r46, (HEAP32[r24] - r43 | 0) / 24 & -1, r27);
        r43 = HEAP32[r28];
        do {
          if ((r43 | 0) == (HEAP32[r29 >> 2] | 0)) {
            r39 = HEAP32[r30];
            r42 = HEAP32[r31 >> 2];
            if (r39 >>> 0 > r42 >>> 0) {
              r40 = r39;
              r47 = (((r40 - r42 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
              r48 = r39 + (r47 * 24 & -1) | 0;
              r49 = r43 - r40 | 0;
              _memmove(r48, r39, r49, 4, 0);
              r40 = r39 + ((((r49 | 0) / 24 & -1) + r47) * 24 & -1) | 0;
              HEAP32[r28] = r40;
              HEAP32[r30] = r48;
              r50 = r40;
              break;
            }
            r40 = ((r43 - r42 | 0) / 24 & -1) << 1;
            r48 = (r40 | 0) == 0 ? 1 : r40;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r13, r48, r48 >>> 2, HEAP32[r32 >> 2]);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r13, r39, r43);
            HEAP32[r31 >> 2] = HEAP32[r33 >> 2];
            HEAP32[r33 >> 2] = r42;
            HEAP32[r30] = HEAP32[r34 >> 2];
            HEAP32[r34 >> 2] = r39;
            r39 = HEAP32[r35 >> 2];
            HEAP32[r28] = r39;
            HEAP32[r35 >> 2] = r43;
            HEAP32[r29 >> 2] = HEAP32[r36 >> 2];
            HEAP32[r36 >> 2] = r43;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r13);
            r50 = r39;
          } else {
            r50 = r43;
          }
        } while (0);
        if ((r50 | 0) != 0) {
          r43 = r50 >> 2;
          r39 = r38 >> 2;
          HEAP32[r43] = HEAP32[r39];
          HEAP32[r43 + 1] = HEAP32[r39 + 1];
          HEAP32[r43 + 2] = HEAP32[r39 + 2];
          HEAP32[r43 + 3] = HEAP32[r39 + 3];
          HEAP32[r43 + 4] = HEAP32[r39 + 4];
          HEAP32[r43 + 5] = HEAP32[r39 + 5];
        }
        HEAP32[r28] = r50 + 24 | 0;
        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r22, r14);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r14);
      }
      r37 = r37 + 1 | 0;
    }
    STACKTOP = r4;
    return;
  }
  r37 = FUNCTION_TABLE[HEAP32[HEAP32[r21] + 16 >> 2]](r2);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1Ej(r15, r37);
  L62 : do {
    if ((r37 | 0) != 0) {
      r14 = HEAP32[r15 >> 2];
      r22 = r2 >> 2;
      r50 = r16;
      r28 = 0;
      while (1) {
        r13 = r28 + 1 | 0;
        __ZN5AvoidL17unitNormalForEdgeERKNS_5PointES2_(r16, FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r28), FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, (r13 | 0) == (r37 | 0) ? 0 : r13));
        r36 = r14 + (r28 * 24 & -1) | 0;
        HEAP32[r36 >> 2] = HEAP32[r50 >> 2];
        HEAP32[r36 + 4 >> 2] = HEAP32[r50 + 4 >> 2];
        HEAP32[r36 + 8 >> 2] = HEAP32[r50 + 8 >> 2];
        HEAP32[r36 + 12 >> 2] = HEAP32[r50 + 12 >> 2];
        HEAP32[r36 + 16 >> 2] = HEAP32[r50 + 16 >> 2];
        HEAP16[r36 + 20 >> 1] = HEAP16[r50 + 20 >> 1];
        if (r13 >>> 0 < r37 >>> 0) {
          r28 = r13;
        } else {
          break;
        }
      }
      r28 = r19 >> 2;
      r50 = r18 + 16 | 0;
      r38 = r18 + 20 | 0;
      r13 = r1 + 8 | 0;
      r36 = (r1 + 12 | 0) >> 2;
      r29 = r1 + 16 | 0;
      r35 = (r29 | 0) >> 2;
      r34 = r18 >> 2;
      r30 = r20 + 16 | 0;
      r33 = r20 + 20 | 0;
      r31 = r20 >> 2;
      r32 = r29;
      r29 = (r13 | 0) >> 2;
      r27 = (r6 + 8 | 0) >> 2;
      r24 = r6 + 12 | 0;
      r46 = (r6 + 4 | 0) >> 2;
      r44 = r6 | 0;
      r45 = r6 + 16 | 0;
      r25 = r5 | 0;
      r26 = r5 + 4 | 0;
      r41 = r5 + 8 | 0;
      r23 = r5 + 12 | 0;
      r39 = (r8 + 8 | 0) >> 2;
      r43 = r8 + 12 | 0;
      r42 = (r8 + 4 | 0) >> 2;
      r48 = r8 | 0;
      r40 = r8 + 16 | 0;
      r47 = r7 | 0;
      r49 = r7 + 4 | 0;
      r51 = r7 + 8 | 0;
      r52 = r7 + 12 | 0;
      r53 = (r10 + 8 | 0) >> 2;
      r54 = r10 + 12 | 0;
      r55 = (r10 + 4 | 0) >> 2;
      r56 = r10 | 0;
      r57 = r10 + 16 | 0;
      r58 = r9 | 0;
      r59 = r9 + 4 | 0;
      r60 = r9 + 8 | 0;
      r61 = r9 + 12 | 0;
      r62 = r17 + 16 | 0;
      r63 = r17 + 20 | 0;
      r64 = r17 >> 2;
      r65 = (r12 + 8 | 0) >> 2;
      r66 = r12 + 12 | 0;
      r67 = (r12 + 4 | 0) >> 2;
      r68 = r12 | 0;
      r69 = r12 + 16 | 0;
      r70 = r11 | 0;
      r71 = r11 + 4 | 0;
      r72 = r11 + 8 | 0;
      r73 = r11 + 12 | 0;
      r74 = r37 - 1 | 0;
      r75 = 0;
      while (1) {
        r76 = (r14 + (r75 * 24 & -1) | 0) >> 2;
        r77 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r76], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r76 + 1], HEAPF64[tempDoublePtr >> 3]);
        r78 = (r14 + (r74 * 24 & -1) | 0) >> 2;
        r79 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r78], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r78 + 1], HEAPF64[tempDoublePtr >> 3]);
        r80 = (r14 + (r75 * 24 & -1) + 8 | 0) >> 2;
        r81 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r80], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r80 + 1], HEAPF64[tempDoublePtr >> 3]);
        r82 = (r14 + (r74 * 24 & -1) + 8 | 0) >> 2;
        r83 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r82], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r82 + 1], HEAPF64[tempDoublePtr >> 3]);
        do {
          if ((r79 * r81 - r77 * r83) * r3 < 0) {
            r84 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75) | 0;
            r85 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r84 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r84 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r84 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r78], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r78 + 1], HEAPF64[tempDoublePtr >> 3]);
            r86 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75) + 8 | 0;
            __ZN5Avoid5PointC1Edd(r18, r85 + r84 * r3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r86 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r86 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) + (HEAP32[tempDoublePtr >> 2] = HEAP32[r82], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r82 + 1], HEAPF64[tempDoublePtr >> 3]) * r3);
            r86 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75);
            HEAP32[r28] = HEAP32[r86 >> 2];
            HEAP32[r28 + 1] = HEAP32[r86 + 4 >> 2];
            HEAP32[r28 + 2] = HEAP32[r86 + 8 >> 2];
            HEAP32[r28 + 3] = HEAP32[r86 + 12 >> 2];
            r84 = HEAP16[r86 + 22 >> 1];
            r86 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75) | 0;
            r85 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r86 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r86 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r86 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r76], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r76 + 1], HEAPF64[tempDoublePtr >> 3]);
            r87 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75) + 8 | 0;
            __ZN5Avoid5PointC1Edd(r20, r85 + r86 * r3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r87 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r87 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) + (HEAP32[tempDoublePtr >> 2] = HEAP32[r80], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r80 + 1], HEAPF64[tempDoublePtr >> 3]) * r3);
            HEAP32[r50 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r21] + 20 >> 2]](r2);
            HEAP16[r38 >> 1] = __ZNK5Avoid7Polygon4sizeEv(r1) & 65535;
            r87 = HEAP32[r36];
            r86 = HEAP32[r35];
            if (r87 >>> 0 < r86 >>> 0) {
              if ((r87 | 0) == 0) {
                r88 = 0;
              } else {
                r85 = r87 >> 2;
                HEAP32[r85] = HEAP32[r34];
                HEAP32[r85 + 1] = HEAP32[r34 + 1];
                HEAP32[r85 + 2] = HEAP32[r34 + 2];
                HEAP32[r85 + 3] = HEAP32[r34 + 3];
                HEAP32[r85 + 4] = HEAP32[r34 + 4];
                HEAP32[r85 + 5] = HEAP32[r34 + 5];
                r88 = HEAP32[r36];
              }
              HEAP32[r36] = r88 + 24 | 0;
            } else {
              r85 = HEAP32[r29];
              r89 = ((r87 - r85 | 0) / 24 & -1) + 1 | 0;
              if (r89 >>> 0 > 178956970) {
                __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                r90 = HEAP32[r35];
                r91 = HEAP32[r29];
              } else {
                r90 = r86;
                r91 = r85;
              }
              r85 = r91;
              r86 = (r90 - r85 | 0) / 24 & -1;
              if (r86 >>> 0 > 89478484) {
                r92 = 178956970;
              } else {
                r87 = r86 << 1;
                r92 = r87 >>> 0 < r89 >>> 0 ? r89 : r87;
              }
              __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r10, r92, (HEAP32[r36] - r85 | 0) / 24 & -1, r32);
              r85 = HEAP32[r53];
              do {
                if ((r85 | 0) == (HEAP32[r54 >> 2] | 0)) {
                  r87 = HEAP32[r55];
                  r89 = HEAP32[r56 >> 2];
                  if (r87 >>> 0 > r89 >>> 0) {
                    r86 = r87;
                    r93 = (((r86 - r89 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                    r94 = r87 + (r93 * 24 & -1) | 0;
                    r95 = r85 - r86 | 0;
                    _memmove(r94, r87, r95, 4, 0);
                    r86 = r87 + ((((r95 | 0) / 24 & -1) + r93) * 24 & -1) | 0;
                    HEAP32[r53] = r86;
                    HEAP32[r55] = r94;
                    r96 = r86;
                    break;
                  }
                  r86 = ((r85 - r89 | 0) / 24 & -1) << 1;
                  r94 = (r86 | 0) == 0 ? 1 : r86;
                  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r9, r94, r94 >>> 2, HEAP32[r57 >> 2]);
                  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r9, r87, r85);
                  HEAP32[r56 >> 2] = HEAP32[r58 >> 2];
                  HEAP32[r58 >> 2] = r89;
                  HEAP32[r55] = HEAP32[r59 >> 2];
                  HEAP32[r59 >> 2] = r87;
                  r87 = HEAP32[r60 >> 2];
                  HEAP32[r53] = r87;
                  HEAP32[r60 >> 2] = r85;
                  HEAP32[r54 >> 2] = HEAP32[r61 >> 2];
                  HEAP32[r61 >> 2] = r85;
                  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r9);
                  r96 = r87;
                } else {
                  r96 = r85;
                }
              } while (0);
              if ((r96 | 0) != 0) {
                r85 = r96 >> 2;
                HEAP32[r85] = HEAP32[r34];
                HEAP32[r85 + 1] = HEAP32[r34 + 1];
                HEAP32[r85 + 2] = HEAP32[r34 + 2];
                HEAP32[r85 + 3] = HEAP32[r34 + 3];
                HEAP32[r85 + 4] = HEAP32[r34 + 4];
                HEAP32[r85 + 5] = HEAP32[r34 + 5];
              }
              HEAP32[r53] = r96 + 24 | 0;
              __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r13, r10);
              __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r10);
            }
            r85 = FUNCTION_TABLE[HEAP32[HEAP32[r21] + 20 >> 2]](r2);
            r87 = __ZNK5Avoid7Polygon4sizeEv(r1) & 65535;
            r89 = HEAP32[r36];
            r94 = HEAP32[r35];
            if (r89 >>> 0 < r94 >>> 0) {
              if ((r89 | 0) == 0) {
                r97 = 0;
              } else {
                r86 = r89;
                HEAP32[r86 >> 2] = HEAP32[r28];
                HEAP32[r86 + 4 >> 2] = HEAP32[r28 + 1];
                HEAP32[r86 + 8 >> 2] = HEAP32[r28 + 2];
                HEAP32[r86 + 12 >> 2] = HEAP32[r28 + 3];
                HEAP32[r89 + 16 >> 2] = r85;
                HEAP16[r89 + 20 >> 1] = r87;
                HEAP16[r86 + 22 >> 1] = r84;
                r97 = HEAP32[r36];
              }
              HEAP32[r36] = r97 + 24 | 0;
            } else {
              r86 = HEAP32[r29];
              r93 = ((r89 - r86 | 0) / 24 & -1) + 1 | 0;
              if (r93 >>> 0 > 178956970) {
                __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                r98 = HEAP32[r35];
                r99 = HEAP32[r29];
              } else {
                r98 = r94;
                r99 = r86;
              }
              r86 = r99;
              r94 = (r98 - r86 | 0) / 24 & -1;
              if (r94 >>> 0 > 89478484) {
                r100 = 178956970;
              } else {
                r89 = r94 << 1;
                r100 = r89 >>> 0 < r93 >>> 0 ? r93 : r89;
              }
              __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r8, r100, (HEAP32[r36] - r86 | 0) / 24 & -1, r32);
              r86 = HEAP32[r39];
              do {
                if ((r86 | 0) == (HEAP32[r43 >> 2] | 0)) {
                  r89 = HEAP32[r42];
                  r93 = HEAP32[r48 >> 2];
                  if (r89 >>> 0 > r93 >>> 0) {
                    r94 = r89;
                    r95 = (((r94 - r93 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                    r101 = r89 + (r95 * 24 & -1) | 0;
                    r102 = r86 - r94 | 0;
                    _memmove(r101, r89, r102, 4, 0);
                    r94 = r89 + ((((r102 | 0) / 24 & -1) + r95) * 24 & -1) | 0;
                    HEAP32[r39] = r94;
                    HEAP32[r42] = r101;
                    r103 = r94;
                    break;
                  }
                  r94 = ((r86 - r93 | 0) / 24 & -1) << 1;
                  r101 = (r94 | 0) == 0 ? 1 : r94;
                  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r7, r101, r101 >>> 2, HEAP32[r40 >> 2]);
                  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r7, r89, r86);
                  HEAP32[r48 >> 2] = HEAP32[r47 >> 2];
                  HEAP32[r47 >> 2] = r93;
                  HEAP32[r42] = HEAP32[r49 >> 2];
                  HEAP32[r49 >> 2] = r89;
                  r89 = HEAP32[r51 >> 2];
                  HEAP32[r39] = r89;
                  HEAP32[r51 >> 2] = r86;
                  HEAP32[r43 >> 2] = HEAP32[r52 >> 2];
                  HEAP32[r52 >> 2] = r86;
                  __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r7);
                  r103 = r89;
                } else {
                  r103 = r86;
                }
              } while (0);
              if ((r103 | 0) == 0) {
                r104 = 0;
              } else {
                r86 = r103;
                HEAP32[r86 >> 2] = HEAP32[r28];
                HEAP32[r86 + 4 >> 2] = HEAP32[r28 + 1];
                HEAP32[r86 + 8 >> 2] = HEAP32[r28 + 2];
                HEAP32[r86 + 12 >> 2] = HEAP32[r28 + 3];
                HEAP32[r103 + 16 >> 2] = r85;
                HEAP16[r103 + 20 >> 1] = r87;
                HEAP16[r86 + 22 >> 1] = r84;
                r104 = r103;
              }
              HEAP32[r39] = r104 + 24 | 0;
              __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r13, r8);
              __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r8);
            }
            HEAP32[r30 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r21] + 20 >> 2]](r2);
            HEAP16[r33 >> 1] = __ZNK5Avoid7Polygon4sizeEv(r1) & 65535;
            r86 = HEAP32[r36];
            r89 = HEAP32[r35];
            if (r86 >>> 0 < r89 >>> 0) {
              if ((r86 | 0) == 0) {
                r105 = 0;
              } else {
                r93 = r86 >> 2;
                HEAP32[r93] = HEAP32[r31];
                HEAP32[r93 + 1] = HEAP32[r31 + 1];
                HEAP32[r93 + 2] = HEAP32[r31 + 2];
                HEAP32[r93 + 3] = HEAP32[r31 + 3];
                HEAP32[r93 + 4] = HEAP32[r31 + 4];
                HEAP32[r93 + 5] = HEAP32[r31 + 5];
                r105 = HEAP32[r36];
              }
              HEAP32[r36] = r105 + 24 | 0;
              break;
            }
            r93 = HEAP32[r29];
            r101 = ((r86 - r93 | 0) / 24 & -1) + 1 | 0;
            if (r101 >>> 0 > 178956970) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
              r106 = HEAP32[r35];
              r107 = HEAP32[r29];
            } else {
              r106 = r89;
              r107 = r93;
            }
            r93 = r107;
            r89 = (r106 - r93 | 0) / 24 & -1;
            if (r89 >>> 0 > 89478484) {
              r108 = 178956970;
            } else {
              r86 = r89 << 1;
              r108 = r86 >>> 0 < r101 >>> 0 ? r101 : r86;
            }
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r6, r108, (HEAP32[r36] - r93 | 0) / 24 & -1, r32);
            r93 = HEAP32[r27];
            do {
              if ((r93 | 0) == (HEAP32[r24 >> 2] | 0)) {
                r86 = HEAP32[r46];
                r101 = HEAP32[r44 >> 2];
                if (r86 >>> 0 > r101 >>> 0) {
                  r89 = r86;
                  r94 = (((r89 - r101 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                  r95 = r86 + (r94 * 24 & -1) | 0;
                  r102 = r93 - r89 | 0;
                  _memmove(r95, r86, r102, 4, 0);
                  r89 = r86 + ((((r102 | 0) / 24 & -1) + r94) * 24 & -1) | 0;
                  HEAP32[r27] = r89;
                  HEAP32[r46] = r95;
                  r109 = r89;
                  break;
                }
                r89 = ((r93 - r101 | 0) / 24 & -1) << 1;
                r95 = (r89 | 0) == 0 ? 1 : r89;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r5, r95, r95 >>> 2, HEAP32[r45 >> 2]);
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r5, r86, r93);
                HEAP32[r44 >> 2] = HEAP32[r25 >> 2];
                HEAP32[r25 >> 2] = r101;
                HEAP32[r46] = HEAP32[r26 >> 2];
                HEAP32[r26 >> 2] = r86;
                r86 = HEAP32[r41 >> 2];
                HEAP32[r27] = r86;
                HEAP32[r41 >> 2] = r93;
                HEAP32[r24 >> 2] = HEAP32[r23 >> 2];
                HEAP32[r23 >> 2] = r93;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r5);
                r109 = r86;
              } else {
                r109 = r93;
              }
            } while (0);
            if ((r109 | 0) != 0) {
              r93 = r109 >> 2;
              HEAP32[r93] = HEAP32[r31];
              HEAP32[r93 + 1] = HEAP32[r31 + 1];
              HEAP32[r93 + 2] = HEAP32[r31 + 2];
              HEAP32[r93 + 3] = HEAP32[r31 + 3];
              HEAP32[r93 + 4] = HEAP32[r31 + 4];
              HEAP32[r93 + 5] = HEAP32[r31 + 5];
            }
            HEAP32[r27] = r109 + 24 | 0;
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r13, r6);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r6);
          } else {
            r93 = r3 / (r77 * r79 + r81 * r83 + 1);
            r84 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75) | 0;
            r87 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r84 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r84 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r84 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r78], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r78 + 1], HEAPF64[tempDoublePtr >> 3]);
            r85 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r76], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r76 + 1], HEAPF64[tempDoublePtr >> 3]);
            r86 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 24 >> 2]](r2, r75) + 8 | 0;
            r101 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r86 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r86 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            __ZN5Avoid5PointC1Edd(r17, r87 + r93 * (r84 + r85), r101 + r93 * ((HEAP32[tempDoublePtr >> 2] = HEAP32[r82], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r82 + 1], HEAPF64[tempDoublePtr >> 3]) + (HEAP32[tempDoublePtr >> 2] = HEAP32[r80], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r80 + 1], HEAPF64[tempDoublePtr >> 3])));
            HEAP32[r62 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r21] + 20 >> 2]](r2);
            HEAP16[r63 >> 1] = __ZNK5Avoid7Polygon4sizeEv(r1) & 65535;
            r93 = HEAP32[r36];
            r101 = HEAP32[r35];
            if (r93 >>> 0 < r101 >>> 0) {
              if ((r93 | 0) == 0) {
                r110 = 0;
              } else {
                r85 = r93 >> 2;
                HEAP32[r85] = HEAP32[r64];
                HEAP32[r85 + 1] = HEAP32[r64 + 1];
                HEAP32[r85 + 2] = HEAP32[r64 + 2];
                HEAP32[r85 + 3] = HEAP32[r64 + 3];
                HEAP32[r85 + 4] = HEAP32[r64 + 4];
                HEAP32[r85 + 5] = HEAP32[r64 + 5];
                r110 = HEAP32[r36];
              }
              HEAP32[r36] = r110 + 24 | 0;
              break;
            }
            r85 = HEAP32[r29];
            r84 = ((r93 - r85 | 0) / 24 & -1) + 1 | 0;
            if (r84 >>> 0 > 178956970) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
              r111 = HEAP32[r35];
              r112 = HEAP32[r29];
            } else {
              r111 = r101;
              r112 = r85;
            }
            r85 = r112;
            r101 = (r111 - r85 | 0) / 24 & -1;
            if (r101 >>> 0 > 89478484) {
              r113 = 178956970;
            } else {
              r93 = r101 << 1;
              r113 = r93 >>> 0 < r84 >>> 0 ? r84 : r93;
            }
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r12, r113, (HEAP32[r36] - r85 | 0) / 24 & -1, r32);
            r85 = HEAP32[r65];
            do {
              if ((r85 | 0) == (HEAP32[r66 >> 2] | 0)) {
                r93 = HEAP32[r67];
                r84 = HEAP32[r68 >> 2];
                if (r93 >>> 0 > r84 >>> 0) {
                  r101 = r93;
                  r87 = (((r101 - r84 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                  r86 = r93 + (r87 * 24 & -1) | 0;
                  r95 = r85 - r101 | 0;
                  _memmove(r86, r93, r95, 4, 0);
                  r101 = r93 + ((((r95 | 0) / 24 & -1) + r87) * 24 & -1) | 0;
                  HEAP32[r65] = r101;
                  HEAP32[r67] = r86;
                  r114 = r101;
                  break;
                }
                r101 = ((r85 - r84 | 0) / 24 & -1) << 1;
                r86 = (r101 | 0) == 0 ? 1 : r101;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r11, r86, r86 >>> 2, HEAP32[r69 >> 2]);
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r11, r93, r85);
                HEAP32[r68 >> 2] = HEAP32[r70 >> 2];
                HEAP32[r70 >> 2] = r84;
                HEAP32[r67] = HEAP32[r71 >> 2];
                HEAP32[r71 >> 2] = r93;
                r93 = HEAP32[r72 >> 2];
                HEAP32[r65] = r93;
                HEAP32[r72 >> 2] = r85;
                HEAP32[r66 >> 2] = HEAP32[r73 >> 2];
                HEAP32[r73 >> 2] = r85;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r11);
                r114 = r93;
              } else {
                r114 = r85;
              }
            } while (0);
            if ((r114 | 0) != 0) {
              r85 = r114 >> 2;
              HEAP32[r85] = HEAP32[r64];
              HEAP32[r85 + 1] = HEAP32[r64 + 1];
              HEAP32[r85 + 2] = HEAP32[r64 + 2];
              HEAP32[r85 + 3] = HEAP32[r64 + 3];
              HEAP32[r85 + 4] = HEAP32[r64 + 4];
              HEAP32[r85 + 5] = HEAP32[r64 + 5];
            }
            HEAP32[r65] = r114 + 24 | 0;
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r13, r12);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r12);
          }
        } while (0);
        r80 = r75 + 1 | 0;
        if (r80 >>> 0 < r37 >>> 0) {
          r74 = r75;
          r75 = r80;
        } else {
          break L62;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r15);
  STACKTOP = r4;
  return;
}
__ZNK5Avoid16PolygonInterface13offsetPolygonEd["X"] = 1;
function __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d182(r1, r2, r3, r4, r5, r6) {
  var r7, r8;
  r7 = (r3 - r1) * (r6 - r2) - (r4 - r2) * (r5 - r1);
  if (r7 < 0) {
    r8 = -1;
    return r8;
  }
  r8 = r7 > 0 & 1;
  return r8;
}
function __ZNK5Avoid7Polygon4sizeEv(r1) {
  return (HEAP32[r1 + 12 >> 2] - HEAP32[r1 + 8 >> 2] | 0) / 24 & -1;
}
function __ZN5Avoid7Polygon5clearEv(r1) {
  HEAP32[r1 + 12 >> 2] = HEAP32[r1 + 8 >> 2];
  HEAP32[r1 + 24 >> 2] = HEAP32[r1 + 20 >> 2];
  return;
}
function __ZNK5Avoid7Polygon5emptyEv(r1) {
  return (HEAP32[r1 + 8 >> 2] | 0) == (HEAP32[r1 + 12 >> 2] | 0);
}
function __ZNK5Avoid7Polygon2idEv(r1) {
  return HEAP32[r1 + 4 >> 2];
}
function __ZN5AvoidL17unitNormalForEdgeERKNS_5PointES2_(r1, r2, r3) {
  var r4, r5, r6;
  if (__ZNK5Avoid5PointeqERKS0_(r3, r2)) {
    __ZN5Avoid5PointC1Edd(r1, 0, 0);
    return;
  } else {
    r4 = r3 | 0;
    r5 = r2 | 0;
    r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = r3 + 8 | 0;
    r3 = r2 + 8 | 0;
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r3 = 1 / Math.sqrt(r6 * r6 + r2 * r2);
    __ZN5Avoid5PointC1Edd(r1, r2 * r3, -(r6 * r3));
    return;
  }
}
function __ZNK5Avoid7Polygon2atEj(r1, r2) {
  if (FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1) >>> 0 <= r2 >>> 0) {
    ___assert_func(5251448, 373, 5253812, 5246112);
  }
  return HEAP32[r1 + 8 >> 2] + (r2 * 24 & -1) | 0;
}
function __ZN5Avoid7Polygon9translateEdd(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = r1;
  if ((FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 16 >> 2]](r1) | 0) == 0) {
    return;
  }
  r5 = r1 + 8 | 0;
  r6 = 0;
  while (1) {
    r7 = (HEAP32[r5 >> 2] + (r6 * 24 & -1) | 0) >> 2;
    r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]) + r2;
    HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r7 = (HEAP32[r5 >> 2] + (r6 * 24 & -1) + 8 | 0) >> 2;
    r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]) + r3;
    HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r7 = r6 + 1 | 0;
    if (r7 >>> 0 < FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 16 >> 2]](r1) >>> 0) {
      r6 = r7;
    } else {
      break;
    }
  }
  return;
}
function __ZNK5Avoid7Polygon8simplifyEv(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32;
  __ZN5Avoid7PolygonC1ERKS0_(r1, r2);
  r2 = r1 + 32 | 0;
  r3 = r1 + 36 | 0;
  r4 = (HEAP32[r2 >> 2] | 0) == (HEAP32[r3 >> 2] | 0);
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = r1 + 12 | 0;
  r8 = HEAP32[r7 >> 2];
  r9 = 0;
  r10 = 2;
  r11 = (r6 | 0) == (r8 | 0) ? r6 : r6 + 24 | 0;
  r6 = r8;
  L217 : while (1) {
    r8 = r10 - 2 | 0;
    r12 = r10 - 1 | 0;
    r13 = r11 + 24 | 0;
    r14 = r13;
    r15 = r11;
    r16 = r13;
    r17 = r10 - 3 | 0;
    r18 = r9;
    r19 = r6;
    L219 : while (1) {
      r20 = r19;
      while (1) {
        if (r10 >>> 0 >= __ZNK5Avoid7Polygon4sizeEv(r1) >>> 0) {
          break L217;
        }
        r21 = HEAP32[r5 >> 2];
        r22 = r21 + (r8 * 24 & -1) | 0;
        r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r22 = r21 + (r8 * 24 & -1) + 8 | 0;
        r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r22 = r21 + (r12 * 24 & -1) | 0;
        r25 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r22 = r21 + (r12 * 24 & -1) + 8 | 0;
        r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r22 = r21 + (r10 * 24 & -1) | 0;
        r27 = r21 + (r10 * 24 & -1) + 8 | 0;
        if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d182(r23, r24, r25, r26, (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) != 0) {
          break L219;
        }
        r27 = r20 - r14 | 0;
        _memmove(r15, r16, r27, 4, 0);
        r28 = r11 + (((r27 | 0) / 24 & -1) * 24 & -1) | 0;
        HEAP32[r7 >> 2] = r28;
        if (r4) {
          r20 = r28;
        } else {
          break;
        }
      }
      r27 = HEAP32[r2 >> 2];
      r22 = r18;
      while (1) {
        r29 = r27 + (r22 * 28 & -1) | 0;
        r30 = HEAP32[r29 >> 2];
        if (r30 >>> 0 < r8 >>> 0) {
          r22 = r22 + 1 | 0;
        } else {
          break;
        }
      }
      L229 : do {
        if ((r30 | 0) == (r8 | 0)) {
          r26 = r22;
          r25 = r29;
          while (1) {
            HEAP32[r25 >> 2] = r17;
            r24 = r26 + 1 | 0;
            r23 = r27 + (r24 * 28 & -1) | 0;
            if ((HEAP32[r23 >> 2] | 0) == (r8 | 0)) {
              r26 = r24;
              r25 = r23;
            } else {
              r31 = r24;
              break L229;
            }
          }
        } else {
          r31 = r22;
        }
      } while (0);
      r25 = (HEAP32[r3 >> 2] - r27 | 0) / 28 & -1;
      if (r31 >>> 0 < r25 >>> 0) {
        r32 = r31;
      } else {
        r18 = r22;
        r19 = r28;
        continue;
      }
      while (1) {
        r26 = r27 + (r32 * 28 & -1) | 0;
        HEAP32[r26 >> 2] = HEAP32[r26 >> 2] - 2 | 0;
        r26 = r32 + 1 | 0;
        if (r26 >>> 0 < r25 >>> 0) {
          r32 = r26;
        } else {
          r18 = r22;
          r19 = r28;
          continue L219;
        }
      }
    }
    r9 = r18;
    r10 = r10 + 1 | 0;
    r11 = r13;
    r6 = r20;
  }
  return;
}
__ZNK5Avoid7Polygon8simplifyEv["X"] = 1;
function __ZNK5Avoid7Polygon19checkpointOnSegmentEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r5 = r4;
  r6 = r4 + 20;
  r7 = (r1 | 0) >> 2;
  HEAP32[r7] = 0;
  r8 = (r1 + 4 | 0) >> 2;
  HEAP32[r8] = 0;
  r9 = r1 + 8 | 0;
  r10 = (r9 | 0) >> 2;
  HEAP32[r10] = 0;
  r11 = r3 << 1;
  r3 = r11 + 2 | 0;
  r12 = r2 + 36 | 0;
  r13 = r2 + 32 | 0;
  r2 = HEAP32[r13 >> 2];
  if ((HEAP32[r12 >> 2] | 0) == (r2 | 0)) {
    STACKTOP = r4;
    return;
  }
  r14 = r9;
  r9 = (r6 + 8 | 0) >> 2;
  r15 = r6 + 12 | 0;
  r16 = (r6 + 4 | 0) >> 2;
  r17 = r6 | 0;
  r18 = r6 + 16 | 0;
  r19 = r5 | 0;
  r20 = r5 + 4 | 0;
  r21 = r5 + 8 | 0;
  r22 = r5 + 12 | 0;
  r23 = 0;
  r24 = r2;
  while (1) {
    r2 = HEAP32[r24 + (r23 * 28 & -1) >> 2];
    do {
      if (!(r2 >>> 0 < r11 >>> 0 | r2 >>> 0 > r3 >>> 0)) {
        r25 = r24 + (r23 * 28 & -1) + 4 | 0;
        r26 = HEAP32[r8];
        r27 = HEAP32[r10];
        if (r26 >>> 0 < r27 >>> 0) {
          if ((r26 | 0) == 0) {
            r28 = 0;
          } else {
            r29 = r26 >> 2;
            r30 = r25 >> 2;
            HEAP32[r29] = HEAP32[r30];
            HEAP32[r29 + 1] = HEAP32[r30 + 1];
            HEAP32[r29 + 2] = HEAP32[r30 + 2];
            HEAP32[r29 + 3] = HEAP32[r30 + 3];
            HEAP32[r29 + 4] = HEAP32[r30 + 4];
            HEAP32[r29 + 5] = HEAP32[r30 + 5];
            r28 = HEAP32[r8];
          }
          HEAP32[r8] = r28 + 24 | 0;
          break;
        }
        r30 = HEAP32[r7];
        r29 = ((r26 - r30 | 0) / 24 & -1) + 1 | 0;
        if (r29 >>> 0 > 178956970) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
          r31 = HEAP32[r10];
          r32 = HEAP32[r7];
        } else {
          r31 = r27;
          r32 = r30;
        }
        r30 = r32;
        r27 = (r31 - r30 | 0) / 24 & -1;
        if (r27 >>> 0 > 89478484) {
          r33 = 178956970;
        } else {
          r26 = r27 << 1;
          r33 = r26 >>> 0 < r29 >>> 0 ? r29 : r26;
        }
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r6, r33, (HEAP32[r8] - r30 | 0) / 24 & -1, r14);
        r30 = HEAP32[r9];
        do {
          if ((r30 | 0) == (HEAP32[r15 >> 2] | 0)) {
            r26 = HEAP32[r16];
            r29 = HEAP32[r17 >> 2];
            if (r26 >>> 0 > r29 >>> 0) {
              r27 = r26;
              r34 = (((r27 - r29 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
              r35 = r26 + (r34 * 24 & -1) | 0;
              r36 = r30 - r27 | 0;
              _memmove(r35, r26, r36, 4, 0);
              r27 = r26 + ((((r36 | 0) / 24 & -1) + r34) * 24 & -1) | 0;
              HEAP32[r9] = r27;
              HEAP32[r16] = r35;
              r37 = r27;
              break;
            }
            r27 = ((r30 - r29 | 0) / 24 & -1) << 1;
            r35 = (r27 | 0) == 0 ? 1 : r27;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r5, r35, r35 >>> 2, HEAP32[r18 >> 2]);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r5, r26, r30);
            HEAP32[r17 >> 2] = HEAP32[r19 >> 2];
            HEAP32[r19 >> 2] = r29;
            HEAP32[r16] = HEAP32[r20 >> 2];
            HEAP32[r20 >> 2] = r26;
            r26 = HEAP32[r21 >> 2];
            HEAP32[r9] = r26;
            HEAP32[r21 >> 2] = r30;
            HEAP32[r15 >> 2] = HEAP32[r22 >> 2];
            HEAP32[r22 >> 2] = r30;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r5);
            r37 = r26;
          } else {
            r37 = r30;
          }
        } while (0);
        if ((r37 | 0) != 0) {
          r30 = r37 >> 2;
          r26 = r25 >> 2;
          HEAP32[r30] = HEAP32[r26];
          HEAP32[r30 + 1] = HEAP32[r26 + 1];
          HEAP32[r30 + 2] = HEAP32[r26 + 2];
          HEAP32[r30 + 3] = HEAP32[r26 + 3];
          HEAP32[r30 + 4] = HEAP32[r26 + 4];
          HEAP32[r30 + 5] = HEAP32[r26 + 5];
        }
        HEAP32[r9] = r37 + 24 | 0;
        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r1, r6);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r6);
      }
    } while (0);
    r2 = r23 + 1 | 0;
    r26 = HEAP32[r13 >> 2];
    if (r2 >>> 0 < ((HEAP32[r12 >> 2] - r26 | 0) / 28 & -1) >>> 0) {
      r23 = r2;
      r24 = r26;
    } else {
      break;
    }
  }
  STACKTOP = r4;
  return;
}
__ZNK5Avoid7Polygon19checkpointOnSegmentEj["X"] = 1;
function __ZN5Avoid9RectangleC2ERKNS_5PointES3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 96 | 0;
  r5 = r4;
  r6 = r4 + 24;
  r7 = r4 + 48;
  r8 = r4 + 72;
  __ZN5Avoid7PolygonC2Ei(r1 | 0);
  HEAP32[r1 >> 2] = 5267260;
  r9 = r2 | 0;
  r10 = r3 | 0;
  r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r9 = r11 < r10 ? r11 : r10;
  r12 = r10 < r11 ? r11 : r10;
  r10 = r2 + 8 | 0;
  r2 = r3 + 8 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = r3 < r2 ? r3 : r2;
  r11 = r2 < r3 ? r3 : r2;
  r2 = (r1 + 8 | 0) >> 2;
  r1 = HEAP32[r2];
  __ZN5Avoid5PointC1Edd(r5, r12, r10);
  r3 = r1;
  r1 = r5;
  HEAP32[r3 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r3 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
  HEAP32[r3 + 8 >> 2] = HEAP32[r1 + 8 >> 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r1 + 12 >> 2];
  HEAP32[r3 + 16 >> 2] = HEAP32[r1 + 16 >> 2];
  HEAP16[r3 + 20 >> 1] = HEAP16[r1 + 20 >> 1];
  r1 = HEAP32[r2];
  __ZN5Avoid5PointC1Edd(r6, r12, r11);
  r12 = r1 + 24 | 0;
  r1 = r6;
  HEAP32[r12 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r12 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
  HEAP32[r12 + 8 >> 2] = HEAP32[r1 + 8 >> 2];
  HEAP32[r12 + 12 >> 2] = HEAP32[r1 + 12 >> 2];
  HEAP32[r12 + 16 >> 2] = HEAP32[r1 + 16 >> 2];
  HEAP16[r12 + 20 >> 1] = HEAP16[r1 + 20 >> 1];
  r1 = HEAP32[r2];
  __ZN5Avoid5PointC1Edd(r7, r9, r11);
  r11 = r1 + 48 | 0;
  r1 = r7;
  HEAP32[r11 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r11 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
  HEAP32[r11 + 8 >> 2] = HEAP32[r1 + 8 >> 2];
  HEAP32[r11 + 12 >> 2] = HEAP32[r1 + 12 >> 2];
  HEAP32[r11 + 16 >> 2] = HEAP32[r1 + 16 >> 2];
  HEAP16[r11 + 20 >> 1] = HEAP16[r1 + 20 >> 1];
  r1 = HEAP32[r2];
  __ZN5Avoid5PointC1Edd(r8, r9, r10);
  r10 = r1 + 72 | 0;
  r1 = r8;
  HEAP32[r10 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r10 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
  HEAP32[r10 + 8 >> 2] = HEAP32[r1 + 8 >> 2];
  HEAP32[r10 + 12 >> 2] = HEAP32[r1 + 12 >> 2];
  HEAP32[r10 + 16 >> 2] = HEAP32[r1 + 16 >> 2];
  HEAP16[r10 + 20 >> 1] = HEAP16[r1 + 20 >> 1];
  STACKTOP = r4;
  return;
}
function __ZN5Avoid7PolygonD0Ev(r1) {
  __ZN5Avoid7PolygonD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid9RectangleD0Ev(r1) {
  __ZN5Avoid9RectangleD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid3BoxC2Ev(r1) {
  __ZN5Avoid5PointC1Ev(r1 | 0);
  __ZN5Avoid5PointC1Ev(r1 + 24 | 0);
  return;
}
function __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r1, r2, r3, r4) {
  __ZN5Avoid7EdgeInfC2EPNS_7VertInfES2_b(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid7EdgeInfC2EPNS_7VertInfES2_b(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = r1 + 8 | 0;
  r6 = r1;
  HEAP32[r6 >> 2] = 0;
  HEAP32[r6 + 4 >> 2] = 0;
  HEAP32[r6 + 8 >> 2] = 0;
  HEAP32[r6 + 12 >> 2] = 0;
  HEAP16[r6 + 16 >> 1] = 0;
  HEAP8[r1 + 18 | 0] = r4 & 1;
  HEAP8[r1 + 19 | 0] = 0;
  HEAP8[r1 + 20 | 0] = 0;
  r4 = (r1 + 24 | 0) >> 2;
  HEAP32[r4] = r2;
  r6 = r1 + 28 | 0;
  HEAP32[r6 >> 2] = r3;
  r7 = r1 + 40 | 0;
  r8 = r7 | 0;
  r9 = r7;
  HEAP32[r7 >> 2] = r9;
  HEAP32[r1 + 44 >> 2] = r9;
  HEAP32[r1 + 48 >> 2] = 0;
  r9 = r1 + 52 | 0;
  HEAPF64[tempDoublePtr >> 3] = -1, HEAP32[r9 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  if ((r2 | 0) == 0 | (r3 | 0) == 0) {
    ___assert_func(5250276, 58, 5256944, 5249780);
    r10 = HEAP32[r4];
    r11 = HEAP32[r6 >> 2];
  } else {
    r10 = r2;
    r11 = r3;
  }
  r3 = HEAP32[r10 >> 2];
  if ((r3 | 0) == (HEAP32[r11 >> 2] | 0)) {
    r12 = r3;
    HEAP32[r5 >> 2] = r12;
    __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r8);
    return;
  }
  ___assert_func(5250276, 61, 5256944, 5248196);
  r12 = HEAP32[HEAP32[r4] >> 2];
  HEAP32[r5 >> 2] = r12;
  __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r8);
  return;
}
__ZN5Avoid7EdgeInfC2EPNS_7VertInfES2_b["X"] = 1;
function __ZNSt3__14listIPbNS_9allocatorIS1_EEED1Ev(r1) {
  __ZNSt3__14listIPbNS_9allocatorIS1_EEED2Ev(r1);
  return;
}
function __ZN5Avoid7EdgeInfD1Ev(r1) {
  __ZN5Avoid7EdgeInfD2Ev(r1);
  return;
}
function __ZN5Avoid7EdgeInfD2Ev(r1) {
  if ((HEAP8[r1 + 16 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid7EdgeInf12makeInactiveEv(r1);
  }
  __ZNSt3__14listIPbNS_9allocatorIS1_EEED1Ev(r1 + 40 | 0);
  return;
}
function __ZN5Avoid7EdgeInf12makeInactiveEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r2 = r1 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 8;
  r7 = r3 + 12;
  r8 = r3 + 16;
  r9 = r3 + 20;
  r10 = r1 + 16 | 0;
  if ((HEAP8[r10] & 1) << 24 >> 24 == 0) {
    ___assert_func(5250276, 223, 5257160, 5245188);
  }
  r11 = (HEAP8[r1 + 17 | 0] & 1) << 24 >> 24 != 0;
  if ((HEAP8[r1 + 18 | 0] & 1) << 24 >> 24 != 0) {
    if (!r11) {
      ___assert_func(5250276, 227, 5257160, 5246020);
    }
    __ZN5Avoid8EdgeList10removeEdgeEPNS_7EdgeInfE(HEAP32[r2 + 2] + 72 | 0, r1);
    r12 = r1 + 24 | 0;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r4, HEAP32[r12 >> 2] + 68 | 0, HEAP32[r2 + 8]);
    r4 = HEAP32[r12 >> 2] + 80 | 0;
    HEAP32[r4 >> 2] = HEAP32[r4 >> 2] - 1 | 0;
    r4 = r1 + 28 | 0;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r5, HEAP32[r4 >> 2] + 68 | 0, HEAP32[r2 + 9]);
    r5 = HEAP32[r4 >> 2] + 80 | 0;
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
    r13 = r1 + 12 | 0, r14 = r13 >> 2;
    HEAP32[r14] = 0;
    r15 = r1 + 40 | 0;
    __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r15);
    HEAP8[r10] = 0;
    STACKTOP = r3;
    return;
  }
  r5 = HEAP32[r2 + 2];
  if (r11) {
    __ZN5Avoid8EdgeList10removeEdgeEPNS_7EdgeInfE(r5 + 40 | 0, r1);
    r11 = r1 + 24 | 0;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r6, HEAP32[r11 >> 2] + 52 | 0, HEAP32[r2 + 8]);
    r6 = HEAP32[r11 >> 2] + 64 | 0;
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
    r6 = r1 + 28 | 0;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r7, HEAP32[r6 >> 2] + 52 | 0, HEAP32[r2 + 9]);
    r7 = HEAP32[r6 >> 2] + 64 | 0;
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] - 1 | 0;
    r13 = r1 + 12 | 0, r14 = r13 >> 2;
    HEAP32[r14] = 0;
    r15 = r1 + 40 | 0;
    __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r15);
    HEAP8[r10] = 0;
    STACKTOP = r3;
    return;
  } else {
    __ZN5Avoid8EdgeList10removeEdgeEPNS_7EdgeInfE(r5 + 56 | 0, r1);
    r5 = r1 + 24 | 0;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r8, HEAP32[r5 >> 2] + 84 | 0, HEAP32[r2 + 8]);
    r8 = HEAP32[r5 >> 2] + 96 | 0;
    HEAP32[r8 >> 2] = HEAP32[r8 >> 2] - 1 | 0;
    r8 = r1 + 28 | 0;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r9, HEAP32[r8 >> 2] + 84 | 0, HEAP32[r2 + 9]);
    r2 = HEAP32[r8 >> 2] + 96 | 0;
    HEAP32[r2 >> 2] = HEAP32[r2 >> 2] - 1 | 0;
    r13 = r1 + 12 | 0, r14 = r13 >> 2;
    HEAP32[r14] = 0;
    r15 = r1 + 40 | 0;
    __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r15);
    HEAP8[r10] = 0;
    STACKTOP = r3;
    return;
  }
}
__ZN5Avoid7EdgeInf12makeInactiveEv["X"] = 1;
function __ZNK5Avoid7EdgeInf16rotationLessThanEPKNS_7VertInfEPKS0_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  r6 = HEAP32[r1 + 24 >> 2];
  r7 = HEAP32[r3 + 24 >> 2];
  do {
    if ((r6 | 0) == (r7 | 0)) {
      r8 = HEAP32[r1 + 28 >> 2];
      r9 = HEAP32[r3 + 28 >> 2];
      if ((r8 | 0) == (r9 | 0)) {
        r10 = 0;
      } else {
        r11 = r8;
        r12 = r9;
        r13 = r6;
        break;
      }
      STACKTOP = r4;
      return r10;
    } else {
      r9 = HEAP32[r3 + 28 >> 2];
      r8 = HEAP32[r1 + 28 >> 2];
      if ((r6 | 0) == (r9 | 0)) {
        r11 = r8;
        r12 = r7;
        r13 = r6;
        break;
      }
      if ((r8 | 0) == (r7 | 0)) {
        r11 = r6;
        r12 = r9;
        r13 = r7;
        break;
      }
      r14 = (r8 | 0) == (r9 | 0);
      r11 = r14 ? r6 : 0;
      r12 = r14 ? r7 : 0;
      r13 = r14 ? r8 : 0;
    }
  } while (0);
  r7 = r13 + 12 | 0;
  if ((r2 | 0) == 0) {
    r6 = r7 | 0;
    r1 = r13 + 20 | 0;
    __ZN5Avoid5PointC1Edd(r5, (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - 10, (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  } else {
    r1 = r5 >> 2;
    r6 = (r2 + 12 | 0) >> 2;
    HEAP32[r1] = HEAP32[r6];
    HEAP32[r1 + 1] = HEAP32[r6 + 1];
    HEAP32[r1 + 2] = HEAP32[r6 + 2];
    HEAP32[r1 + 3] = HEAP32[r6 + 3];
    HEAP32[r1 + 4] = HEAP32[r6 + 4];
    HEAP32[r1 + 5] = HEAP32[r6 + 5];
  }
  r6 = r5 | 0;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r6 = r5 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r10 = (__ZN5AvoidL15orthogTurnOrderERKNS_5PointES2_S2_(r1, r5, r7, r11 + 12 | 0) | 0) < (__ZN5AvoidL15orthogTurnOrderERKNS_5PointES2_S2_(r1, r5, r7, r12 + 12 | 0) | 0);
  STACKTOP = r4;
  return r10;
}
__ZNK5Avoid7EdgeInf16rotationLessThanEPKNS_7VertInfEPKS0_["X"] = 1;
function __ZN5AvoidL15orthogTurnOrderERKNS_5PointES2_S2_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r4 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r3 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r6 != r7) {
      r5 = r4 + 8 | 0;
      r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r5 = r3 + 8 | 0;
      r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r8 != r9) {
        r10 = 4;
      } else {
        r11 = r9;
        break;
      }
      return r10;
    } else {
      r9 = r3 + 8 | 0;
      r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    }
  } while (0);
  if (r7 != r1 & r11 != r2) {
    r10 = 4;
    return r10;
  }
  r3 = r4 + 8 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d226(r1, r2, r7, r11, r6, r4);
  if ((r3 | 0) > 0) {
    r10 = 1;
    return r10;
  }
  if ((r3 | 0) < 0) {
    r10 = 2;
    return r10;
  }
  do {
    if (r7 == r6) {
      if (r11 > r2 & r4 < r11) {
        r10 = 0;
        return r10;
      }
      if (r11 < r2 & r4 > r11) {
        r10 = 0;
      } else {
        break;
      }
      return r10;
    } else {
      if (r7 > r1 & r6 < r7) {
        r10 = 0;
        return r10;
      }
      if (r7 < r1 & r6 > r7) {
        r10 = 0;
      } else {
        break;
      }
      return r10;
    }
  } while (0);
  r10 = 3;
  return r10;
}
function __ZNK5Avoid7EdgeInf8mtstDistEv(r1) {
  return r1;
}
function __ZNK5Avoid7EdgeInf7blockerEv(r1) {
  return r1;
}
function __ZNK5Avoid7EdgeInf10isDisabledEv(r1) {
  return (r1 & 1) << 24 >> 24 != 0;
}
function __ZN5Avoid7EdgeInf5addedEv(r1) {
  return (r1 & 1) << 24 >> 24 != 0;
}
function __ZN5Avoid8EdgeList10removeEdgeEPNS_7EdgeInfE(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r2 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r2 + 4 | 0) >> 2;
  if ((r4 | 0) != 0) {
    HEAP32[r4 + 4 >> 2] = HEAP32[r5];
  }
  r4 = HEAP32[r5];
  if ((r4 | 0) != 0) {
    HEAP32[r4 >> 2] = HEAP32[r3];
  }
  r4 = r1 + 8 | 0;
  do {
    if ((HEAP32[r4 >> 2] | 0) == (r2 | 0)) {
      HEAP32[r4 >> 2] = HEAP32[r3];
      r6 = r1 + 4 | 0;
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        break;
      }
      HEAP32[r6 >> 2] = 0;
    } else {
      r6 = r1 + 4 | 0;
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        break;
      }
      HEAP32[r6 >> 2] = HEAP32[r5];
    }
  } while (0);
  HEAP32[r3] = 0;
  HEAP32[r5] = 0;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  return;
}
function __ZN5Avoid7EdgeInf11setMtstDistEd(r1, r2) {
  var r3;
  r3 = r1 + 60 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
function __ZN5Avoid7EdgeInf11setDisabledEb(r1, r2) {
  HEAP8[r1 + 20 | 0] = r2 & 1;
  return;
}
function __ZN5Avoid7EdgeInf19setHyperedgeSegmentEb(r1, r2) {
  HEAP8[r1 + 19 | 0] = r2 & 1;
  return;
}
function __ZN5Avoid7EdgeInf10makeActiveEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20;
  r2 = r1 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 8;
  r7 = r3 + 12;
  r8 = r3 + 16;
  r9 = r3 + 20;
  r10 = r3 + 24;
  r11 = r3 + 28;
  r12 = r3 + 32;
  r13 = r3 + 36;
  r14 = r3 + 40;
  r15 = r3 + 44;
  r16 = r1 + 16 | 0;
  if ((HEAP8[r16] & 1) << 24 >> 24 != 0) {
    ___assert_func(5250276, 187, 5257196, 5246912);
  }
  r17 = (HEAP8[r1 + 17 | 0] & 1) << 24 >> 24 != 0;
  if ((HEAP8[r1 + 18 | 0] & 1) << 24 >> 24 != 0) {
    if (!r17) {
      ___assert_func(5250276, 191, 5257196, 5246020);
    }
    __ZN5Avoid8EdgeList7addEdgeEPNS_7EdgeInfE(HEAP32[r2 + 2] + 72 | 0, r1);
    r18 = r1 + 24 | 0;
    r19 = HEAP32[r18 >> 2];
    r20 = HEAP32[r19 + 72 >> 2];
    HEAP32[r5 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r4, r19 + 68 | 0, r20, r5);
    HEAP32[r2 + 8] = HEAP32[r4 >> 2];
    r4 = HEAP32[r18 >> 2] + 80 | 0;
    HEAP32[r4 >> 2] = HEAP32[r4 >> 2] + 1 | 0;
    r4 = r1 + 28 | 0;
    r18 = HEAP32[r4 >> 2];
    r5 = HEAP32[r18 + 72 >> 2];
    HEAP32[r7 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r6, r18 + 68 | 0, r5, r7);
    HEAP32[r2 + 9] = HEAP32[r6 >> 2];
    r6 = HEAP32[r4 >> 2] + 80 | 0;
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
    HEAP8[r16] = 1;
    STACKTOP = r3;
    return;
  }
  r6 = HEAP32[r2 + 2];
  if (r17) {
    __ZN5Avoid8EdgeList7addEdgeEPNS_7EdgeInfE(r6 + 40 | 0, r1);
    r17 = r1 + 24 | 0;
    r4 = HEAP32[r17 >> 2];
    r7 = HEAP32[r4 + 56 >> 2];
    HEAP32[r9 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r8, r4 + 52 | 0, r7, r9);
    HEAP32[r2 + 8] = HEAP32[r8 >> 2];
    r8 = HEAP32[r17 >> 2] + 64 | 0;
    HEAP32[r8 >> 2] = HEAP32[r8 >> 2] + 1 | 0;
    r8 = r1 + 28 | 0;
    r17 = HEAP32[r8 >> 2];
    r9 = HEAP32[r17 + 56 >> 2];
    HEAP32[r11 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r10, r17 + 52 | 0, r9, r11);
    HEAP32[r2 + 9] = HEAP32[r10 >> 2];
    r10 = HEAP32[r8 >> 2] + 64 | 0;
    HEAP32[r10 >> 2] = HEAP32[r10 >> 2] + 1 | 0;
    HEAP8[r16] = 1;
    STACKTOP = r3;
    return;
  } else {
    __ZN5Avoid8EdgeList7addEdgeEPNS_7EdgeInfE(r6 + 56 | 0, r1);
    r6 = r1 + 24 | 0;
    r10 = HEAP32[r6 >> 2];
    r8 = HEAP32[r10 + 88 >> 2];
    HEAP32[r13 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r12, r10 + 84 | 0, r8, r13);
    HEAP32[r2 + 8] = HEAP32[r12 >> 2];
    r12 = HEAP32[r6 >> 2] + 96 | 0;
    HEAP32[r12 >> 2] = HEAP32[r12 >> 2] + 1 | 0;
    r12 = r1 + 28 | 0;
    r6 = HEAP32[r12 >> 2];
    r13 = HEAP32[r6 + 88 >> 2];
    HEAP32[r15 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r14, r6 + 84 | 0, r13, r15);
    HEAP32[r2 + 9] = HEAP32[r14 >> 2];
    r14 = HEAP32[r12 >> 2] + 96 | 0;
    HEAP32[r14 >> 2] = HEAP32[r14 >> 2] + 1 | 0;
    HEAP8[r16] = 1;
    STACKTOP = r3;
    return;
  }
}
__ZN5Avoid7EdgeInf10makeActiveEv["X"] = 1;
function __ZN5Avoid8EdgeList7addEdgeEPNS_7EdgeInfE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = r2 >> 2;
  do {
    if ((HEAP8[r1 | 0] & 1) << 24 >> 24 != 0) {
      r4 = HEAP32[r3 + 6];
      r5 = HEAP32[r3 + 7];
      if (__ZNK5Avoid7EdgeInf12isOrthogonalEv(r4, r5)) {
        break;
      }
      if (__ZNK5Avoid7EdgeInf17isDummyConnectionEv(r4, r5)) {
        break;
      }
      ___assert_func(5250276, 709, 5256640, 5249228);
    }
  } while (0);
  r5 = r1 + 4 | 0;
  r4 = (r1 + 8 | 0) >> 2;
  r6 = HEAP32[r4];
  r7 = (r6 | 0) == 0;
  if ((HEAP32[r5 >> 2] | 0) == 0) {
    if (!r7) {
      ___assert_func(5250276, 713, 5256640, 5248984);
    }
    HEAP32[r4] = r2;
    HEAP32[r5 >> 2] = r2;
    HEAP32[r3] = 0;
    HEAP32[r3 + 1] = 0;
    r5 = r1 + 12 | 0, r8 = r5 >> 2;
    r9 = HEAP32[r8];
    r10 = r9 + 1 | 0;
    HEAP32[r8] = r10;
    return;
  } else {
    if (r7) {
      ___assert_func(5250276, 723, 5256640, 5248740);
      r11 = HEAP32[r4];
    } else {
      r11 = r6;
    }
    HEAP32[r11 + 4 >> 2] = r2;
    HEAP32[r3] = HEAP32[r4];
    HEAP32[r4] = r2;
    HEAP32[r3 + 1] = 0;
    r5 = r1 + 12 | 0, r8 = r5 >> 2;
    r9 = HEAP32[r8];
    r10 = r9 + 1 | 0;
    HEAP32[r8] = r10;
    return;
  }
}
__ZN5Avoid8EdgeList7addEdgeEPNS_7EdgeInfE["X"] = 1;
function __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8;
  r5 = __Znwj(12);
  r6 = r5;
  r7 = r5;
  HEAP32[r7 >> 2] = 0;
  r8 = r5 + 8 | 0;
  if ((r8 | 0) != 0) {
    HEAP32[r8 >> 2] = HEAP32[r4 >> 2];
  }
  r4 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r4] + 4 >> 2] = r6;
  HEAP32[r7 >> 2] = HEAP32[r4];
  HEAP32[r4] = r6;
  HEAP32[r5 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  HEAP32[r1 >> 2] = r6;
  return;
}
function __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZN5Avoid7EdgeInf7setDistEd(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r1 + 16 | 0;
  r4 = HEAP8[r3];
  do {
    if ((r4 & 1) << 24 >> 24 == 0) {
      r5 = r4;
    } else {
      if ((HEAP8[r1 + 17 | 0] & 1) << 24 >> 24 != 0) {
        r5 = r4;
        break;
      }
      __ZN5Avoid7EdgeInf12makeInactiveEv(r1);
      r6 = HEAP8[r3];
      if ((r6 & 1) << 24 >> 24 == 0) {
        r5 = r6;
        break;
      }
      ___assert_func(5250276, 266, 5257016, 5244664);
      r5 = HEAP8[r3];
    }
  } while (0);
  if ((r5 & 1) << 24 >> 24 == 0) {
    HEAP8[r1 + 17 | 0] = 1;
    __ZN5Avoid7EdgeInf10makeActiveEv(r1);
  }
  r5 = r1 + 52 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 12 >> 2] = 0;
  return;
}
function __ZN5Avoid7EdgeInf10alertConnsEv(r1) {
  var r2, r3, r4, r5;
  r2 = r1 + 40 | 0;
  r3 = r2;
  r4 = HEAP32[r1 + 44 >> 2];
  if ((r4 | 0) == (r3 | 0)) {
    __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r2);
    return;
  } else {
    r5 = r4;
  }
  while (1) {
    HEAP8[HEAP32[r5 + 8 >> 2]] = 1;
    r4 = HEAP32[r5 + 4 >> 2];
    if ((r4 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r4;
    }
  }
  __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r2);
  return;
}
function __ZN5Avoid7EdgeInf7addConnEPb(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  HEAP32[r4 >> 2] = r2;
  __ZNSt3__14listIPbNS_9allocatorIS1_EEE9push_backERKS1_(r1 + 40 | 0, r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__14listIPbNS_9allocatorIS1_EEE9push_backERKS1_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid7EdgeInf10addBlockerEi(r1, r2) {
  var r3, r4, r5, r6;
  if ((HEAP8[HEAP32[r1 + 8 >> 2] + 141 | 0] & 1) << 24 >> 24 == 0) {
    ___assert_func(5250276, 344, 5257232, 5244324);
  }
  r3 = r1 + 16 | 0;
  r4 = HEAP8[r3];
  do {
    if ((r4 & 1) << 24 >> 24 == 0) {
      r5 = r4;
    } else {
      if ((HEAP8[r1 + 17 | 0] & 1) << 24 >> 24 == 0) {
        r5 = r4;
        break;
      }
      __ZN5Avoid7EdgeInf12makeInactiveEv(r1);
      r6 = HEAP8[r3];
      if ((r6 & 1) << 24 >> 24 == 0) {
        r5 = r6;
        break;
      }
      ___assert_func(5250276, 349, 5257232, 5244664);
      r5 = HEAP8[r3];
    }
  } while (0);
  if ((r5 & 1) << 24 >> 24 == 0) {
    HEAP8[r1 + 17 | 0] = 0;
    __ZN5Avoid7EdgeInf10makeActiveEv(r1);
  }
  r5 = r1 + 52 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 12 >> 2] = r2;
  return;
}
function __ZNK5Avoid7EdgeInf3idsEv(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 8;
  __ZN5Avoid6VertIDC1ERKS0_(r4, HEAP32[r2 + 24 >> 2] + 4 | 0);
  __ZN5Avoid6VertIDC1ERKS0_(r5, HEAP32[r2 + 28 >> 2] + 4 | 0);
  __ZN5Avoid6VertIDC1ERKS0_(r1 | 0, r4);
  __ZN5Avoid6VertIDC1ERKS0_(r1 + 8 | 0, r5);
  STACKTOP = r3;
  return;
}
function __ZNK5Avoid7EdgeInf6pointsEv(r1, r2, r3) {
  var r4;
  r4 = (r2 + 12 | 0) >> 2;
  r2 = (r3 + 12 | 0) >> 2;
  r3 = r1 >> 2;
  HEAP32[r3] = HEAP32[r4];
  HEAP32[r3 + 1] = HEAP32[r4 + 1];
  HEAP32[r3 + 2] = HEAP32[r4 + 2];
  HEAP32[r3 + 3] = HEAP32[r4 + 3];
  HEAP32[r3 + 4] = HEAP32[r4 + 4];
  HEAP32[r3 + 5] = HEAP32[r4 + 5];
  r4 = (r1 + 24 | 0) >> 2;
  HEAP32[r4] = HEAP32[r2];
  HEAP32[r4 + 1] = HEAP32[r2 + 1];
  HEAP32[r4 + 2] = HEAP32[r2 + 2];
  HEAP32[r4 + 3] = HEAP32[r2 + 3];
  HEAP32[r4 + 4] = HEAP32[r2 + 4];
  HEAP32[r4 + 5] = HEAP32[r2 + 5];
  return;
}
function __ZN5Avoid7EdgeInf8checkVisEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = HEAP32[r1 + 24 >> 2];
  r7 = HEAP32[r1 + 28 >> 2];
  r8 = r6 + 4 | 0;
  r9 = r7 + 4 | 0;
  r10 = r6 + 12 | 0;
  r11 = r7 + 12 | 0;
  r12 = (r1 + 8 | 0) >> 2;
  r13 = HEAP32[r12] + 668 | 0;
  HEAP32[r13 >> 2] = HEAP32[r13 >> 2] + 1 | 0;
  r13 = r6 + 10 | 0;
  r14 = __ZNK5Avoid6VertID8isConnPtEv(HEAP16[r13 >> 1]);
  r15 = HEAP32[r12];
  r16 = HEAP8[r15 + 139 | 0] & 1;
  do {
    if (r14) {
      if (r16 << 24 >> 24 != 0) {
        r2 = 379;
        break;
      }
      r17 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r15 + 88 | 0, r8);
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r7 + 10 >> 1])) {
        r2 = 379;
        break;
      }
      __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r5, r17 | 0, r9 | 0);
      if ((HEAP32[r5 >> 2] | 0) == (r17 + 4 | 0)) {
        r2 = 379;
        break;
      } else {
        r18 = 0;
        break;
      }
    } else {
      if (__ZN5Avoid13inValidRegionEbRKNS_5PointES2_S2_S2_(r16 << 24 >> 24 != 0, HEAP32[r6 + 44 >> 2] + 12 | 0, r10, HEAP32[r6 + 48 >> 2] + 12 | 0, r11)) {
        r2 = 379;
        break;
      } else {
        r18 = 0;
        break;
      }
    }
  } while (0);
  L448 : do {
    if (r2 == 379) {
      r6 = __ZNK5Avoid6VertID8isConnPtEv(HEAP16[r7 + 10 >> 1]);
      r16 = HEAP32[r12];
      r5 = HEAP8[r16 + 139 | 0] & 1;
      do {
        if (r6) {
          if (r5 << 24 >> 24 != 0) {
            break;
          }
          r15 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r16 + 88 | 0, r9);
          if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r13 >> 1])) {
            break;
          }
          __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r4, r15 | 0, r8 | 0);
          if ((HEAP32[r4 >> 2] | 0) != (r15 + 4 | 0)) {
            r18 = 0;
            break L448;
          }
        } else {
          if (!__ZN5Avoid13inValidRegionEbRKNS_5PointES2_S2_S2_(r5 << 24 >> 24 != 0, HEAP32[r7 + 44 >> 2] + 12 | 0, r11, HEAP32[r7 + 48 >> 2] + 12 | 0, r10)) {
            r18 = 0;
            break L448;
          }
        }
      } while (0);
      r5 = __ZN5Avoid7EdgeInf12firstBlockerEv(r1);
      if ((r5 | 0) != 0) {
        r18 = r5;
        break;
      }
      __ZN5Avoid7EdgeInf7setDistEd(r1, __ZN5Avoid13euclideanDistERKNS_5PointES2_(r10, r11));
      STACKTOP = r3;
      return;
    }
  } while (0);
  if ((HEAP8[HEAP32[r12] + 141 | 0] & 1) << 24 >> 24 == 0) {
    STACKTOP = r3;
    return;
  }
  __ZN5Avoid7EdgeInf10addBlockerEi(r1, r18);
  STACKTOP = r3;
  return;
}
__ZN5Avoid7EdgeInf8checkVisEv["X"] = 1;
function __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(r1, r4, r2);
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) != 0) {
    r8 = r7;
    r9 = r8 + 24 | 0;
    STACKTOP = r3;
    return r9;
  }
  __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEE16__construct_nodeERSB_(r5, r1, r2);
  r2 = r5 | 0;
  r5 = HEAP32[r2 >> 2];
  HEAP32[r2 >> 2] = 0;
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_(r1 | 0, HEAP32[r4 >> 2], r6, r5 | 0);
  r8 = r5;
  r9 = r8 + 24 | 0;
  STACKTOP = r3;
  return r9;
}
function __ZN5Avoid7EdgeInf12firstBlockerEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 36 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 8;
  r7 = r3 + 12;
  r8 = r3 + 24;
  r9 = r3 + 28;
  r10 = r7 | 0;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC1ERKS2_(r10);
  r11 = HEAP32[r1 + 24 >> 2];
  r12 = r11 + 12 | 0;
  r13 = HEAP32[r1 + 28 >> 2];
  r14 = r13 + 12 | 0;
  r15 = r11 + 4 | 0;
  r16 = r13 + 4 | 0;
  r17 = r1 + 8 | 0;
  r1 = HEAP32[r17 >> 2] + 88 | 0;
  L469 : do {
    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r11 + 10 >> 1])) {
      r18 = HEAP32[__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r1, r15) >> 2];
      r19 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r1, r15) + 4 | 0;
      r20 = r7 + 4 | 0;
      if ((r18 | 0) == (r19 | 0)) {
        break;
      }
      r21 = r19;
      r19 = r18;
      while (1) {
        __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEERKj(r6, r10, r20, r19 + 16 | 0);
        r18 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r19 | 0);
        if ((r18 | 0) == (r21 | 0)) {
          break L469;
        } else {
          r19 = r18;
        }
      }
    }
  } while (0);
  L478 : do {
    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r13 + 10 >> 1])) {
      r6 = HEAP32[__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r1, r16) >> 2];
      r15 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r1, r16) + 4 | 0;
      r11 = r7 + 4 | 0;
      if ((r6 | 0) == (r15 | 0)) {
        break;
      }
      r19 = r15;
      r15 = r6;
      while (1) {
        __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEERKj(r5, r10, r11, r15 + 16 | 0);
        r6 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r15 | 0);
        if ((r6 | 0) == (r19 | 0)) {
          break L478;
        } else {
          r15 = r6;
        }
      }
    }
  } while (0);
  r5 = HEAP32[r17 >> 2] + 100 | 0;
  HEAP8[r8] = 0;
  r17 = __ZN5Avoid11VertInfList11shapesBeginEv(HEAP32[r5 >> 2]);
  L487 : do {
    if ((r17 | 0) != 0) {
      r5 = r9 | 0, r16 = r5 >> 2;
      r1 = r4 | 0;
      r13 = r7 + 4 | 0;
      r15 = r17;
      r19 = 0;
      while (1) {
        r11 = r15, r6 = r11 >> 2;
        L491 : while (1) {
          r21 = r11 + 4 | 0;
          __ZN5Avoid6VertIDC1ERKS0_(r9, r21);
          if (__ZNK5Avoid6VertIDeqERKS0_(r21, 5274208)) {
            r21 = HEAP32[r6 + 10];
            if ((r21 | 0) == 0) {
              break L487;
            } else {
              r11 = r21, r6 = r11 >> 2;
              continue;
            }
          }
          if ((HEAP32[r16] | 0) == (r19 | 0)) {
            r22 = r19;
            break;
          }
          __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r4, r10, r5);
          if ((HEAP32[r1 >> 2] | 0) == (r13 | 0)) {
            r2 = 421;
            break;
          }
          r21 = HEAP32[r16];
          if ((r11 | 0) == 0) {
            break L487;
          } else {
            r23 = r11;
          }
          while (1) {
            if ((HEAP32[r23 + 4 >> 2] | 0) != (r21 | 0)) {
              r11 = r23, r6 = r11 >> 2;
              continue L491;
            }
            r20 = HEAP32[r23 + 40 >> 2];
            if ((r20 | 0) == 0) {
              break L487;
            } else {
              r23 = r20;
            }
          }
        }
        if (r2 == 421) {
          r2 = 0;
          HEAP8[r8] = 0;
          r22 = HEAP32[r16];
        }
        if (__ZN5Avoid21segmentShapeIntersectERKNS_5PointES2_S2_S2_Rb(r12, r14, HEAP32[r6 + 11] + 12 | 0, r11 + 12 | 0, r8)) {
          break;
        }
        r21 = HEAP32[r6 + 10];
        if ((r21 | 0) == 0) {
          break L487;
        } else {
          r15 = r21;
          r19 = r22;
        }
      }
      __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5clearEv(r10);
      r24 = HEAP32[r16];
      __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r7);
      STACKTOP = r3;
      return r24;
    }
  } while (0);
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5clearEv(r10);
  r24 = 0;
  __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r7);
  STACKTOP = r3;
  return r24;
}
__ZN5Avoid7EdgeInf12firstBlockerEv["X"] = 1;
function __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r1) {
  __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED2Ev(r1);
  return;
}
function __ZNK5Avoid8EdgeList4sizeEv(r1) {
  return r1;
}
function __ZN5Avoid8EdgeList5beginEv(r1) {
  return r1;
}
function __ZN5Avoid7EdgeInf9isBetweenEPNS_7VertInfES2_(r1, r2, r3, r4) {
  if ((r1 | 0) == (r3 | 0) & (r2 | 0) == (r4 | 0)) {
    return 1;
  } else {
    return (r2 | 0) == (r3 | 0) & (r1 | 0) == (r4 | 0);
  }
}
function __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d226(r1, r2, r3, r4, r5, r6) {
  var r7, r8;
  r7 = (r3 - r1) * (r6 - r2) - (r4 - r2) * (r5 - r1);
  if (r7 < 0) {
    r8 = -1;
    return r8;
  }
  r8 = r7 > 0 & 1;
  return r8;
}
function __ZNK5Avoid7EdgeInf12isOrthogonalEv(r1, r2) {
  var r3, r4, r5;
  r3 = r1 + 12 | 0;
  r4 = r2 + 12 | 0;
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    r5 = 1;
    return r5;
  }
  r4 = r1 + 20 | 0;
  r1 = r2 + 20 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  return r5;
}
function __ZN5Avoid8EdgeListC2Eb(r1, r2) {
  HEAP8[r1 | 0] = r2 & 1;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 + 12 >> 2] = 0;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEESB_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 456;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 460;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 459;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 459) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 460) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  } else if (r4 == 456) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  }
}
function __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    r3 = r1;
    while (1) {
      r1 = HEAP32[r3 + 8 >> 2];
      if ((r3 | 0) == (HEAP32[r1 >> 2] | 0)) {
        r3 = r1;
      } else {
        r4 = r1;
        break;
      }
    }
    return r4;
  } else {
    r3 = r2;
    while (1) {
      r2 = HEAP32[r3 + 4 >> 2];
      if ((r2 | 0) == 0) {
        r4 = r3;
        break;
      } else {
        r3 = r2;
      }
    }
    return r4;
  }
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC2ERKS2_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE13__lower_boundIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_SB_SB_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L556 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L556;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L556;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNK5Avoid7EdgeInf17isDummyConnectionEv(r1, r2) {
  var r3, r4, r5, r6;
  r3 = HEAP16[r1 + 10 >> 1];
  r1 = __ZNK5Avoid6VertID15isConnectionPinEv(r3);
  r4 = HEAP16[r2 + 10 >> 1];
  do {
    if (r1) {
      if (__ZNK5Avoid6VertID8isConnPtEv(r4)) {
        r5 = 1;
      } else {
        r6 = r4;
        break;
      }
      return r5;
    } else {
      r6 = r4;
    }
  } while (0);
  if (!__ZNK5Avoid6VertID15isConnectionPinEv(r6)) {
    r5 = 0;
    return r5;
  }
  r5 = __ZNK5Avoid6VertID8isConnPtEv(r3);
  return r5;
}
function __ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 + 24 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r1 + 28 | 0;
  do {
    if ((r4 | 0) == (r2 | 0)) {
      r6 = r5;
    } else {
      if ((HEAP32[r5 >> 2] | 0) == (r2 | 0)) {
        r7 = r4;
      } else {
        ___assert_func(5250276, 580, 5253876, 5250204);
        r7 = HEAP32[r3 >> 2];
      }
      if ((r7 | 0) == (r2 | 0)) {
        r6 = r5;
        break;
      } else {
        r8 = r7;
      }
      return r8;
    }
  } while (0);
  r8 = HEAP32[r6 >> 2];
  return r8;
}
function __ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b(r1, r2) {
  var r3, r4, r5;
  if (!__ZNK5Avoid6VertIDneERKS0_(r1 + 4 | 0, 5274208)) {
    ___assert_func(5250276, 590, 5257056, 5250096);
  }
  if (!__ZNK5Avoid6VertIDneERKS0_(r2 + 4 | 0, 5274208)) {
    ___assert_func(5250276, 591, 5257056, 5249940);
  }
  r3 = HEAP32[r1 >> 2];
  if ((__ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_(r1, r2) | 0) != 0) {
    ___assert_func(5250276, 598, 5257056, 5249732);
  }
  r4 = __Znwj(68);
  r5 = r4;
  __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r5, r1, r2, 0);
  __ZN5Avoid7EdgeInf8checkVisEv(r5);
  if ((HEAP8[r4 + 16 | 0] & 1) << 24 >> 24 != 0) {
    return;
  }
  if ((HEAP8[r3 + 141 | 0] & 1) << 24 >> 24 != 0 | (r4 | 0) == 0) {
    return;
  }
  __ZN5Avoid7EdgeInfD1Ev(r5);
  __ZdlPv(r4);
  return;
}
__ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b["X"] = 1;
function __ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = 0;
  r4 = HEAP32[r1 + 64 >> 2] >>> 0 <= HEAP32[r2 + 64 >> 2] >>> 0 ? r1 : r2;
  r5 = r4 + 52 | 0;
  r6 = r4 + 56 | 0;
  while (1) {
    r4 = HEAP32[r6 >> 2];
    if ((r4 | 0) == (r5 | 0)) {
      break;
    }
    r7 = HEAP32[r4 + 8 >> 2];
    if (__ZN5Avoid7EdgeInf9isBetweenEPNS_7VertInfES2_(HEAP32[r7 + 24 >> 2], HEAP32[r7 + 28 >> 2], r1, r2)) {
      r8 = r7;
      r3 = 527;
      break;
    } else {
      r6 = r4 + 4 | 0;
    }
  }
  if (r3 == 527) {
    return r8;
  }
  r6 = HEAP32[r1 + 80 >> 2] >>> 0 <= HEAP32[r2 + 80 >> 2] >>> 0 ? r1 : r2;
  r5 = r6 + 68 | 0;
  r4 = r6 + 72 | 0;
  while (1) {
    r6 = HEAP32[r4 >> 2];
    if ((r6 | 0) == (r5 | 0)) {
      break;
    }
    r7 = HEAP32[r6 + 8 >> 2];
    if (__ZN5Avoid7EdgeInf9isBetweenEPNS_7VertInfES2_(HEAP32[r7 + 24 >> 2], HEAP32[r7 + 28 >> 2], r1, r2)) {
      r8 = r7;
      r3 = 525;
      break;
    } else {
      r4 = r6 + 4 | 0;
    }
  }
  if (r3 == 525) {
    return r8;
  }
  r4 = HEAP32[r1 + 96 >> 2] >>> 0 <= HEAP32[r2 + 96 >> 2] >>> 0 ? r1 : r2;
  r5 = r4 + 84 | 0;
  r6 = r4 + 88 | 0;
  while (1) {
    r4 = HEAP32[r6 >> 2];
    if ((r4 | 0) == (r5 | 0)) {
      r8 = 0;
      r3 = 526;
      break;
    }
    r7 = HEAP32[r4 + 8 >> 2];
    if (__ZN5Avoid7EdgeInf9isBetweenEPNS_7VertInfES2_(HEAP32[r7 + 24 >> 2], HEAP32[r7 + 28 >> 2], r1, r2)) {
      r8 = r7;
      r3 = 528;
      break;
    } else {
      r6 = r4 + 4 | 0;
    }
  }
  if (r3 == 526) {
    return r8;
  } else if (r3 == 528) {
    return r8;
  }
}
__ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_["X"] = 1;
function __ZN5Avoid8EdgeListC1Eb(r1, r2) {
  __ZN5Avoid8EdgeListC2Eb(r1, r2);
  return;
}
function __ZN5Avoid8EdgeListD1Ev(r1) {
  __ZN5Avoid8EdgeListD2Ev(r1);
  return;
}
function __ZN5Avoid8EdgeListD2Ev(r1) {
  __ZN5Avoid8EdgeList5clearEv(r1);
  return;
}
function __ZN5Avoid8EdgeList5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 4 | 0;
  r3 = HEAP32[r2 >> 2];
  L625 : do {
    if ((r3 | 0) != 0) {
      r4 = r3;
      while (1) {
        __ZN5Avoid7EdgeInfD1Ev(r4);
        __ZdlPv(r4);
        r5 = HEAP32[r2 >> 2];
        if ((r5 | 0) == 0) {
          break L625;
        } else {
          r4 = r5;
        }
      }
    }
  } while (0);
  if ((HEAP32[r1 + 12 >> 2] | 0) == 0) {
    r6 = r1 + 8 | 0;
    HEAP32[r6 >> 2] = 0;
    return;
  }
  ___assert_func(5250276, 693, 5256688, 5249436);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = 0;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5clearEv(r1) {
  var r2, r3;
  r2 = r1 + 4 | 0;
  r3 = r2 | 0;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(HEAP32[r3 >> 2]);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  HEAP32[r3 >> 2] = 0;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEERKj(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjS8_EEiEESB_RKT_(r2, r3, r6, r4);
  r3 = HEAP32[r8 >> 2];
  if ((r3 | 0) != 0) {
    r9 = r3;
    r10 = r1 | 0;
    HEAP32[r10 >> 2] = r9;
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeERKj(r7, r2, r4);
  r4 = r7 | 0;
  r7 = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = 0;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_16__tree_node_baseIPvEERS9_S9_(r2, HEAP32[r6 >> 2], r8, r7 | 0);
  r9 = r7;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjS8_EEiEESB_RKT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r6 = r1 + 4 | 0;
  do {
    if ((r6 | 0) != (r2 | 0)) {
      r7 = HEAP32[r4 >> 2];
      r8 = HEAP32[r2 + 16 >> 2];
      if (r7 >>> 0 < r8 >>> 0) {
        break;
      }
      r9 = r2 | 0;
      if (r8 >>> 0 >= r7 >>> 0) {
        HEAP32[r5] = r9;
        r10 = r3;
        return r10;
      }
      r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r9);
      do {
        if ((r8 | 0) != (r6 | 0)) {
          if (r7 >>> 0 < HEAP32[r8 + 16 >> 2] >>> 0) {
            break;
          }
          r10 = __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEESB_RKT_(r1, r3, r4);
          return r10;
        }
      } while (0);
      r7 = r2 + 4 | 0;
      if ((HEAP32[r7 >> 2] | 0) == 0) {
        HEAP32[r5] = r9;
        r10 = r7;
        return r10;
      } else {
        HEAP32[r5] = r8;
        r10 = r8 | 0;
        return r10;
      }
    }
  } while (0);
  do {
    if ((HEAP32[r1 >> 2] | 0) == (r2 | 0)) {
      r11 = r2;
    } else {
      r6 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
      if (HEAP32[r6 + 16 >> 2] >>> 0 < HEAP32[r4 >> 2] >>> 0) {
        r11 = r6;
        break;
      }
      r10 = __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEESB_RKT_(r1, r3, r4);
      return r10;
    }
  } while (0);
  r4 = r2 | 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    HEAP32[r5] = r2 | 0;
    r10 = r4;
    return r10;
  } else {
    HEAP32[r5] = r11 | 0;
    r10 = r11 + 4 | 0;
    return r10;
  }
}
__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjS8_EEiEESB_RKT_["X"] = 1;
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeERKj(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_16__tree_node_baseIPvEERS9_S9_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC1ERKS2_(r1) {
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC2ERKS2_(r1);
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE13__lower_boundIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_SB_SB_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid6VertIDltERKS0_(r3, r6)) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 591;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid6VertIDltERKS0_(r6, r3)) {
      r4 = 595;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 594;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 595) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 591) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  } else if (r4 == 594) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  }
}
function __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEE16__construct_nodeERSB_(r1, r2, r3) {
  var r4, r5;
  r4 = __Znwj(36);
  r5 = r4 + 16 | 0;
  if ((r5 | 0) != 0) {
    __ZN5Avoid6VertIDC1ERKS0_(r5, r3);
  }
  r3 = r4 + 24 | 0;
  if ((r3 | 0) != 0) {
    __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC1ERKS2_(r3);
  }
  HEAP32[r1 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  HEAP8[r1 + 9 | 0] = 1;
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED2Ev(r1) {
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r1) {
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEED2Ev(r1) {
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(r1);
  return;
}
function __ZNSt3__14listIPbNS_9allocatorIS1_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv(r1);
  return;
}
function __ZN5Avoid11JunctionRefC1EPNS_6RouterENS_5PointEj(r1, r2, r3) {
  var r4, r5;
  r4 = STACKTOP;
  r5 = r3 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  HEAP32[r3 >> 2] = HEAP32[r5];
  HEAP32[r3 + 4 >> 2] = HEAP32[r5 + 1];
  HEAP32[r3 + 8 >> 2] = HEAP32[r5 + 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r5 + 3];
  HEAP32[r3 + 16 >> 2] = HEAP32[r5 + 4];
  HEAP32[r3 + 20 >> 2] = HEAP32[r5 + 5];
  __ZN5Avoid11JunctionRefC2EPNS_6RouterENS_5PointEj(r1, r2, r3);
  STACKTOP = r4;
  return;
}
function __ZNK5Avoid11JunctionRef13positionFixedEv(r1) {
  return (r1 & 1) << 24 >> 24 != 0;
}
function __ZN5Avoid11JunctionRef13makeRectangleEPNS_6RouterERKNS_5PointE(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r5 = r4;
  r6 = r4 + 24;
  if ((r2 | 0) == 0) {
    ___assert_func(5248148, 64, 5261768, 5246844);
  }
  r7 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r2, 7);
  r2 = r7 > .001 ? r7 : .001;
  r7 = r5 >> 2;
  r8 = r3 >> 2;
  HEAP32[r7] = HEAP32[r8];
  HEAP32[r7 + 1] = HEAP32[r8 + 1];
  HEAP32[r7 + 2] = HEAP32[r8 + 2];
  HEAP32[r7 + 3] = HEAP32[r8 + 3];
  HEAP32[r7 + 4] = HEAP32[r8 + 4];
  HEAP32[r7 + 5] = HEAP32[r8 + 5];
  r7 = (r5 | 0) >> 2;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]) - r2;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r7 = (r5 + 8 | 0) >> 2;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]) - r2;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r7 = r6 >> 2;
  HEAP32[r7] = HEAP32[r8];
  HEAP32[r7 + 1] = HEAP32[r8 + 1];
  HEAP32[r7 + 2] = HEAP32[r8 + 2];
  HEAP32[r7 + 3] = HEAP32[r8 + 3];
  HEAP32[r7 + 4] = HEAP32[r8 + 4];
  HEAP32[r7 + 5] = HEAP32[r8 + 5];
  r8 = (r6 | 0) >> 2;
  r7 = r2 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r8 = (r6 + 8 | 0) >> 2;
  r7 = r2 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZN5Avoid9RectangleC1ERKNS_5PointES3_(r1, r5, r6);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid11JunctionRefD0Ev(r1) {
  __ZN5Avoid11JunctionRefD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid11JunctionRefD1Ev(r1) {
  __ZN5Avoid11JunctionRefD2Ev(r1);
  return;
}
function __ZNK5Avoid11JunctionRef8positionEv(r1, r2) {
  var r3;
  r3 = r1 >> 2;
  r1 = (r2 + 96 | 0) >> 2;
  HEAP32[r3] = HEAP32[r1];
  HEAP32[r3 + 1] = HEAP32[r1 + 1];
  HEAP32[r3 + 2] = HEAP32[r1 + 2];
  HEAP32[r3 + 3] = HEAP32[r1 + 3];
  HEAP32[r3 + 4] = HEAP32[r1 + 4];
  HEAP32[r3 + 5] = HEAP32[r1 + 5];
  return;
}
function __ZN5Avoid11JunctionRef11setPositionERKNS_5PointE(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r4 = r3;
  r5 = r1 + 96 | 0;
  r6 = r5;
  r7 = r2;
  HEAP32[r6 >> 2] = HEAP32[r7 >> 2];
  HEAP32[r6 + 4 >> 2] = HEAP32[r7 + 4 >> 2];
  HEAP32[r6 + 8 >> 2] = HEAP32[r7 + 8 >> 2];
  HEAP32[r6 + 12 >> 2] = HEAP32[r7 + 12 >> 2];
  HEAP32[r6 + 16 >> 2] = HEAP32[r7 + 16 >> 2];
  HEAP16[r6 + 20 >> 1] = HEAP16[r7 + 20 >> 1];
  r6 = r1 + 120 | 0;
  HEAP32[r6 >> 2] = HEAP32[r7 >> 2];
  HEAP32[r6 + 4 >> 2] = HEAP32[r7 + 4 >> 2];
  HEAP32[r6 + 8 >> 2] = HEAP32[r7 + 8 >> 2];
  HEAP32[r6 + 12 >> 2] = HEAP32[r7 + 12 >> 2];
  HEAP32[r6 + 16 >> 2] = HEAP32[r7 + 16 >> 2];
  HEAP16[r6 + 20 >> 1] = HEAP16[r7 + 20 >> 1];
  r7 = r1 + 12 | 0;
  __ZN5Avoid11JunctionRef13makeRectangleEPNS_6RouterERKNS_5PointE(r4, HEAP32[r1 + 4 >> 2], r5);
  __ZN5Avoid7PolygonaSERKS0_(r7, r4 | 0);
  __ZN5Avoid9RectangleD1Ev(r4);
  __ZN5Avoid8Obstacle10setNewPolyERKNS_7PolygonE(r1, r7);
  STACKTOP = r3;
  return;
}
function __ZN5Avoid11JunctionRef22setRecommendedPositionERKNS_5PointE(r1, r2) {
  var r3;
  r3 = r1 + 120 | 0;
  r1 = r2;
  HEAP32[r3 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r3 + 4 >> 2] = HEAP32[r1 + 4 >> 2];
  HEAP32[r3 + 8 >> 2] = HEAP32[r1 + 8 >> 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r1 + 12 >> 2];
  HEAP32[r3 + 16 >> 2] = HEAP32[r1 + 16 >> 2];
  HEAP16[r3 + 20 >> 1] = HEAP16[r1 + 20 >> 1];
  return;
}
function __ZNK5Avoid11JunctionRef10outputCodeEP7__sFILE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r4 = r3;
  r5 = r3 + 24;
  r6 = (r1 + 8 | 0) >> 2;
  r7 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r6]);
  r8 = r1;
  FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 8 >> 2]](r4, r1);
  r9 = r4 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 8 >> 2]](r5, r1);
  r8 = r5 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r6]);
  _fprintf(r2, 5245928, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = r7, HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAP32[tempInt + 20 >> 2] = r8, tempInt));
  if ((HEAP8[r1 + 144 | 0] & 1) << 24 >> 24 != 0) {
    r8 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r6]);
    _fprintf(r2, 5245120, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r8, tempInt));
  }
  _fwrite(5244656, 7, 1, r2);
  _fwrite(5244260, 57, 1, r2);
  r8 = HEAP32[r1 + 84 >> 2];
  r6 = r1 + 88 | 0;
  if ((r8 | 0) == (r6 | 0)) {
    r10 = _fwrite(5243444, 7, 1, r2);
    r11 = _fputc(10, r2);
    STACKTOP = r3;
    return;
  }
  r1 = r6;
  r6 = r8;
  while (1) {
    __ZNK5Avoid18ShapeConnectionPin10outputCodeEP7__sFILE(HEAP32[r6 + 16 >> 2], r2);
    r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r6 | 0);
    if ((r8 | 0) == (r1 | 0)) {
      break;
    } else {
      r6 = r8;
    }
  }
  r10 = _fwrite(5243444, 7, 1, r2);
  r11 = _fputc(10, r2);
  STACKTOP = r3;
  return;
}
__ZNK5Avoid11JunctionRef10outputCodeEP7__sFILE["X"] = 1;
function __ZN5Avoid11JunctionRef17moveAttachedConnsERKNS_5PointE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = HEAP32[r1 + 72 >> 2];
  r4 = r1 + 76 | 0;
  L755 : do {
    if ((r3 | 0) != (r4 | 0)) {
      r5 = r1 + 4 | 0;
      r6 = r4;
      r7 = r3;
      while (1) {
        r8 = HEAP32[r7 + 16 >> 2];
        r9 = r8 + 40 | 0;
        r10 = HEAP32[r9 >> 2];
        if ((r10 | 0) == 0) {
          ___assert_func(5248148, 174, 5261700, 5246596);
          r11 = HEAP32[r9 >> 2];
        } else {
          r11 = r10;
        }
        __ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb(HEAP32[r5 >> 2], r11, __ZNK5Avoid7ConnEnd12endpointTypeEv(r8), r8, 0);
        r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r7 | 0);
        if ((r8 | 0) == (r6 | 0)) {
          break L755;
        } else {
          r7 = r8;
        }
      }
    }
  } while (0);
  r11 = HEAP32[r1 + 84 >> 2];
  r3 = r1 + 88 | 0;
  if ((r11 | 0) == (r3 | 0)) {
    return;
  }
  r1 = r3;
  r3 = r11;
  while (1) {
    __ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_5PointE(HEAP32[HEAP32[r3 + 16 >> 2] + 68 >> 2], r2);
    r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r3 | 0);
    if ((r11 | 0) == (r1 | 0)) {
      break;
    } else {
      r3 = r11;
    }
  }
  return;
}
__ZN5Avoid11JunctionRef17moveAttachedConnsERKNS_5PointE["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid13CmpConnPinPtrclEPKNS_18ShapeConnectionPinES3_(HEAP32[r3 >> 2], HEAP32[r6 >> 2])) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 661;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid13CmpConnPinPtrclEPKNS_18ShapeConnectionPinES3_(HEAP32[r6 >> 2], HEAP32[r3 >> 2])) {
      r4 = 665;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 664;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 665) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 664) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  } else if (r4 == 661) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  }
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNK5Avoid13CmpConnPinPtrclEPKNS_18ShapeConnectionPinES3_(r1, r2) {
  return __ZNK5Avoid18ShapeConnectionPinltERKS0_(r1, r2);
}
function __ZN5AvoidltERKNS_5ANodeES2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 + 20 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 + 20 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (Math.abs(r4 - r5) > 1e-7) {
    r6 = r4 > r5;
    return r6;
  }
  r5 = HEAP32[r1 + 32 >> 2];
  r4 = HEAP32[r2 + 32 >> 2];
  if ((r5 | 0) != (r4 | 0)) {
    r6 = (r5 | 0) < (r4 | 0);
    return r6;
  }
  r4 = r1 + 28 | 0;
  r1 = HEAP32[r4 >> 2];
  r5 = r2 + 28 | 0;
  r2 = HEAP32[r5 >> 2];
  if ((r1 | 0) == (r2 | 0)) {
    ___assert_func(5248932, 103, 5254948, 5249628);
    r7 = HEAP32[r4 >> 2];
    r8 = HEAP32[r5 >> 2];
  } else {
    r7 = r1;
    r8 = r2;
  }
  r6 = (r7 | 0) > (r8 | 0);
  return r6;
}
function __ZN5Avoid11JunctionRefC2EPNS_6RouterENS_5PointEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r5 = r3 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  HEAP32[r3 >> 2] = HEAP32[r5];
  HEAP32[r3 + 4 >> 2] = HEAP32[r5 + 1];
  HEAP32[r3 + 8 >> 2] = HEAP32[r5 + 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r5 + 3];
  HEAP32[r3 + 16 >> 2] = HEAP32[r5 + 4];
  HEAP32[r3 + 20 >> 2] = HEAP32[r5 + 5];
  r5 = r4 + 8;
  r6 = r4 + 52;
  r7 = r4 + 96;
  r8 = r1 | 0;
  HEAP32[r8 >> 2] = 5267648;
  __ZN5Avoid11JunctionRef13makeRectangleEPNS_6RouterERKNS_5PointE(r6, r2, r3);
  __ZN5Avoid7PolygonC1ERKS0_(r5, r6 | 0);
  __ZN5Avoid8ObstacleC2EPNS_6RouterENS_7PolygonEj(r1, r2, r5);
  __ZN5Avoid7PolygonD1Ev(r5);
  __ZN5Avoid9RectangleD1Ev(r6);
  HEAP32[r8 >> 2] = 5267648;
  r8 = (r1 + 96 | 0) >> 2;
  r6 = r3 >> 2;
  HEAP32[r8] = HEAP32[r6];
  HEAP32[r8 + 1] = HEAP32[r6 + 1];
  HEAP32[r8 + 2] = HEAP32[r6 + 2];
  HEAP32[r8 + 3] = HEAP32[r6 + 3];
  HEAP32[r8 + 4] = HEAP32[r6 + 4];
  HEAP32[r8 + 5] = HEAP32[r6 + 5];
  r8 = (r1 + 120 | 0) >> 2;
  HEAP32[r8] = HEAP32[r6];
  HEAP32[r8 + 1] = HEAP32[r6 + 1];
  HEAP32[r8 + 2] = HEAP32[r6 + 2];
  HEAP32[r8 + 3] = HEAP32[r6 + 3];
  HEAP32[r8 + 4] = HEAP32[r6 + 4];
  HEAP32[r8 + 5] = HEAP32[r6 + 5];
  HEAP8[r1 + 144 | 0] = 0;
  r6 = __Znwj(72);
  __ZN5Avoid18ShapeConnectionPinC1EPNS_11JunctionRefEjj(r6, r1);
  HEAP32[r7 >> 2] = r6;
  __ZN5Avoid18ShapeConnectionPin12setExclusiveEb(r6, 0);
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r4, r1 + 84 | 0, r7);
  __ZN5Avoid6Router11addJunctionEPNS_11JunctionRefE(HEAP32[r1 + 4 >> 2], r1);
  STACKTOP = r4;
  return;
}
__ZN5Avoid11JunctionRefC2EPNS_6RouterENS_5PointEj["X"] = 1;
function __ZN5Avoid11JunctionRefD2Ev(r1) {
  var r2, r3;
  r2 = STACKTOP;
  HEAP32[r1 >> 2] = 5267648;
  if ((HEAP8[HEAP32[r1 + 4 >> 2] + 689 | 0] & 1) << 24 >> 24 != 0) {
    r3 = r1;
    __ZN5Avoid8ObstacleD2Ev(r3);
    STACKTOP = r2;
    return;
  }
  __ZN5Avoid10err_printfEPKcz(5249452, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 3 >> 2 << 2, HEAP32[tempInt >> 2] = 0, tempInt));
  __ZN5Avoid10err_printfEPKcz(5249656, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 3 >> 2 << 2, HEAP32[tempInt >> 2] = 0, tempInt));
  _abort();
  r3 = r1;
  __ZN5Avoid8ObstacleD2Ev(r3);
  STACKTOP = r2;
  return;
}
function __ZN5Avoid9aStarPathEPNS_7ConnRefEPNS_7VertInfES3_S3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130, r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 564 | 0;
  r7 = r6;
  r8 = r6 + 20;
  r9 = r6 + 40;
  r10 = r6 + 44;
  r11 = r6 + 48;
  r12 = r6 + 68;
  r13 = r6 + 88;
  r14 = r6 + 124;
  r15 = r6 + 144;
  r16 = r6 + 164;
  r17 = r6 + 184;
  r18 = r6 + 204;
  r19 = r6 + 224;
  r20 = r6 + 244;
  r21 = r6 + 264;
  r22 = r6 + 284;
  r23 = r6 + 304;
  r24 = r6 + 324;
  r25 = r6 + 336;
  r26 = r6 + 348;
  r27 = r6 + 360;
  r28 = r6 + 372, r29 = r28 >> 2;
  r30 = r6 + 376;
  r31 = r6 + 412;
  r32 = r6 + 448;
  r33 = r6 + 456;
  r34 = r6 + 492;
  r35 = r6 + 528;
  r36 = r1;
  r37 = (__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r1 + 8 >> 2]) | 0) == 2;
  r38 = r37 ? 194 : 772;
  r39 = (r24 | 0) >> 2;
  HEAP32[r39] = 0;
  r40 = (r24 + 4 | 0) >> 2;
  HEAP32[r40] = 0;
  r41 = r24 + 8 | 0;
  r42 = (r41 | 0) >> 2;
  HEAP32[r42] = 0;
  do {
    if (r37) {
      __ZNK5Avoid7ConnRef20possibleDstPinPointsEv(r25, HEAP32[r1 + 144 >> 2]);
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r24, HEAP32[r25 >> 2], HEAP32[r25 + 4 >> 2]);
      __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r25);
      r43 = HEAP32[r40];
      r44 = HEAP32[r42];
      r45 = r3 + 12 | 0;
      if (r43 >>> 0 >= r44 >>> 0) {
        r46 = r44;
        r47 = r43;
        r48 = r45;
        r49 = HEAP32[r39];
        r5 = 725;
        break;
      }
      if ((r43 | 0) != 0) {
        r44 = r43 >> 2;
        r50 = r45 >> 2;
        HEAP32[r44] = HEAP32[r50];
        HEAP32[r44 + 1] = HEAP32[r50 + 1];
        HEAP32[r44 + 2] = HEAP32[r50 + 2];
        HEAP32[r44 + 3] = HEAP32[r50 + 3];
        HEAP32[r44 + 4] = HEAP32[r50 + 4];
        HEAP32[r44 + 5] = HEAP32[r50 + 5];
      }
      HEAP32[r40] = r43 + 24 | 0;
      r51 = r45;
      break;
    } else {
      r46 = 0;
      r47 = 0;
      r48 = r3 + 12 | 0;
      r49 = 0;
      r5 = 725;
      break;
    }
  } while (0);
  if (r5 == 725) {
    r5 = ((r47 - r49 | 0) / 24 & -1) + 1 | 0;
    if (r5 >>> 0 > 178956970) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      r52 = HEAP32[r42];
      r53 = HEAP32[r39];
    } else {
      r52 = r46;
      r53 = r49;
    }
    r49 = r53;
    r53 = (r52 - r49 | 0) / 24 & -1;
    if (r53 >>> 0 > 89478484) {
      r54 = 178956970;
    } else {
      r52 = r53 << 1;
      r54 = r52 >>> 0 < r5 >>> 0 ? r5 : r52;
    }
    __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r23, r54, (HEAP32[r40] - r49 | 0) / 24 & -1, r41);
    r41 = (r23 + 8 | 0) >> 2;
    r49 = HEAP32[r41];
    r40 = r23 + 12 | 0;
    do {
      if ((r49 | 0) == (HEAP32[r40 >> 2] | 0)) {
        r54 = (r23 + 4 | 0) >> 2;
        r52 = HEAP32[r54];
        r5 = r23 | 0;
        r53 = HEAP32[r5 >> 2];
        if (r52 >>> 0 > r53 >>> 0) {
          r46 = r52;
          r39 = (((r46 - r53 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
          r42 = r52 + (r39 * 24 & -1) | 0;
          r47 = r49 - r46 | 0;
          _memmove(r42, r52, r47, 4, 0);
          r46 = r52 + ((((r47 | 0) / 24 & -1) + r39) * 24 & -1) | 0;
          HEAP32[r41] = r46;
          HEAP32[r54] = r42;
          r55 = r46;
          break;
        }
        r46 = ((r49 - r53 | 0) / 24 & -1) << 1;
        r42 = (r46 | 0) == 0 ? 1 : r46;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r22, r42, r42 >>> 2, HEAP32[r23 + 16 >> 2]);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r22, r52, r49);
        r42 = r22 | 0;
        HEAP32[r5 >> 2] = HEAP32[r42 >> 2];
        HEAP32[r42 >> 2] = r53;
        r53 = r22 + 4 | 0;
        HEAP32[r54] = HEAP32[r53 >> 2];
        HEAP32[r53 >> 2] = r52;
        r52 = r22 + 8 | 0;
        r53 = HEAP32[r52 >> 2];
        HEAP32[r41] = r53;
        HEAP32[r52 >> 2] = r49;
        r52 = r22 + 12 | 0;
        HEAP32[r40 >> 2] = HEAP32[r52 >> 2];
        HEAP32[r52 >> 2] = r49;
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r22);
        r55 = r53;
      } else {
        r55 = r49;
      }
    } while (0);
    if ((r55 | 0) != 0) {
      r49 = r55 >> 2;
      r22 = r48 >> 2;
      HEAP32[r49] = HEAP32[r22];
      HEAP32[r49 + 1] = HEAP32[r22 + 1];
      HEAP32[r49 + 2] = HEAP32[r22 + 2];
      HEAP32[r49 + 3] = HEAP32[r22 + 3];
      HEAP32[r49 + 4] = HEAP32[r22 + 4];
      HEAP32[r49 + 5] = HEAP32[r22 + 5];
    }
    HEAP32[r41] = r55 + 24 | 0;
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r24, r23);
    __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r23);
    r51 = r48;
  }
  r48 = (r26 | 0) >> 2;
  HEAP32[r48] = 0;
  r23 = (r26 + 4 | 0) >> 2;
  HEAP32[r23] = 0;
  r55 = r26 + 8 | 0;
  r41 = (r55 | 0) >> 2;
  HEAP32[r41] = 0;
  r22 = (r27 | 0) >> 2;
  HEAP32[r22] = 0;
  r49 = (r27 + 4 | 0) >> 2;
  HEAP32[r49] = 0;
  r40 = r27 + 8 | 0;
  r53 = (r40 | 0) >> 2;
  HEAP32[r53] = 0;
  HEAP32[r29] = 0;
  __ZN5Avoid5ANodeC1Ev(r30);
  __ZN5Avoid5ANodeC1Ev(r31);
  r52 = (r4 | 0) == 0 ? r2 : r4;
  r4 = __ZNK5Avoid7ConnRef6routerEv(HEAP32[r1 >> 2]);
  r54 = r4 + 144 | 0;
  r42 = (r52 | 0) == (r2 | 0);
  L858 : do {
    if ((HEAP8[r54] & 1) << 24 >> 24 == 0 | r42) {
      r5 = HEAP32[r52 + 100 >> 2];
      if ((r5 | 0) == 0) {
        r56 = 1;
        r57 = -1;
      } else {
        __ZN5Avoid5ANodeC1EPNS_7VertInfEi(r33, r5, 1);
        r5 = HEAP32[r49];
        r46 = HEAP32[r53];
        if (r5 >>> 0 < r46 >>> 0) {
          if ((r5 | 0) != 0) {
            r39 = r5;
            r47 = r33;
            for (r58 = r47 >> 2, r59 = r39 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
              HEAP32[r59] = HEAP32[r58];
            }
          }
          HEAP32[r49] = r5 + 36 | 0;
        } else {
          r39 = HEAP32[r22];
          r47 = ((r5 - r39 | 0) / 36 & -1) + 1 | 0;
          if (r47 >>> 0 > 119304647) {
            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            r61 = HEAP32[r53];
            r62 = HEAP32[r22];
          } else {
            r61 = r46;
            r62 = r39;
          }
          r39 = r62;
          r25 = (r61 - r39 | 0) / 36 & -1;
          if (r25 >>> 0 > 59652322) {
            r63 = 119304647;
          } else {
            r45 = r25 << 1;
            r63 = r45 >>> 0 < r47 >>> 0 ? r47 : r45;
          }
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r17, r63, (HEAP32[r49] - r39 | 0) / 36 & -1, r40);
          r39 = (r17 + 8 | 0) >> 2;
          r45 = HEAP32[r39];
          r47 = r17 + 12 | 0;
          do {
            if ((r45 | 0) == (HEAP32[r47 >> 2] | 0)) {
              r25 = (r17 + 4 | 0) >> 2;
              r43 = HEAP32[r25];
              r50 = r17 | 0;
              r44 = HEAP32[r50 >> 2];
              if (r43 >>> 0 > r44 >>> 0) {
                r64 = r43;
                r65 = (((r64 - r44 | 0) / 36 & -1) + 1 | 0) / -2 & -1;
                r66 = r43 + (r65 * 36 & -1) | 0;
                r67 = r45 - r64 | 0;
                _memmove(r66, r43, r67, 4, 0);
                r64 = r43 + ((((r67 | 0) / 36 & -1) + r65) * 36 & -1) | 0;
                HEAP32[r39] = r64;
                HEAP32[r25] = r66;
                r68 = r64;
                break;
              }
              r64 = ((r45 - r44 | 0) / 36 & -1) << 1;
              r66 = (r64 | 0) == 0 ? 1 : r64;
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r16, r66, r66 >>> 2, HEAP32[r17 + 16 >> 2]);
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r16, r43, r45);
              r66 = r16 | 0;
              HEAP32[r50 >> 2] = HEAP32[r66 >> 2];
              HEAP32[r66 >> 2] = r44;
              r44 = r16 + 4 | 0;
              HEAP32[r25] = HEAP32[r44 >> 2];
              HEAP32[r44 >> 2] = r43;
              r43 = r16 + 8 | 0;
              r44 = HEAP32[r43 >> 2];
              HEAP32[r39] = r44;
              HEAP32[r43 >> 2] = r45;
              r43 = r16 + 12 | 0;
              HEAP32[r47 >> 2] = HEAP32[r43 >> 2];
              HEAP32[r43 >> 2] = r45;
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r16);
              r68 = r44;
            } else {
              r68 = r45;
            }
          } while (0);
          if ((r68 | 0) != 0) {
            r45 = r68;
            r47 = r33;
            for (r58 = r47 >> 2, r59 = r45 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
              HEAP32[r59] = HEAP32[r58];
            }
          }
          HEAP32[r39] = r68 + 36 | 0;
          __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r27, r17);
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r17);
        }
        HEAP32[r29] = 1;
        r56 = 2;
        r57 = 0;
      }
      r45 = r56 + 1 | 0;
      __ZN5Avoid5ANodeC1EPNS_7VertInfEi(r30, r2, r56);
      r47 = r30;
      r46 = (r30 + 4 | 0) >> 2;
      HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r46] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      r5 = __ZN5AvoidL13estimatedCostEPNS_7ConnRefEPKNS_5PointERS3_S5_(r1, 0, HEAP32[r30 >> 2] + 12 | 0, r51);
      r44 = r30 + 12 | 0;
      HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r44 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r44 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      r44 = r5 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r46], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 1], HEAPF64[tempDoublePtr >> 3]);
      r46 = r30 + 20 | 0;
      HEAPF64[tempDoublePtr >> 3] = r44, HEAP32[r46 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      HEAP32[r30 + 28 >> 2] = r57;
      r46 = HEAP32[r23];
      r44 = HEAP32[r41];
      if (r46 >>> 0 < r44 >>> 0) {
        if ((r46 | 0) != 0) {
          r5 = r46;
          for (r58 = r47 >> 2, r59 = r5 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
            HEAP32[r59] = HEAP32[r58];
          }
        }
        HEAP32[r23] = r46 + 36 | 0;
        r69 = r45;
        break;
      }
      r5 = HEAP32[r48];
      r39 = ((r46 - r5 | 0) / 36 & -1) + 1 | 0;
      if (r39 >>> 0 > 119304647) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        r70 = HEAP32[r41];
        r71 = HEAP32[r48];
      } else {
        r70 = r44;
        r71 = r5;
      }
      r5 = r71;
      r43 = (r70 - r5 | 0) / 36 & -1;
      if (r43 >>> 0 > 59652322) {
        r72 = 119304647;
      } else {
        r25 = r43 << 1;
        r72 = r25 >>> 0 < r39 >>> 0 ? r39 : r25;
      }
      __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r15, r72, (HEAP32[r23] - r5 | 0) / 36 & -1, r55);
      r5 = (r15 + 8 | 0) >> 2;
      r25 = HEAP32[r5];
      r39 = r15 + 12 | 0;
      do {
        if ((r25 | 0) == (HEAP32[r39 >> 2] | 0)) {
          r43 = (r15 + 4 | 0) >> 2;
          r66 = HEAP32[r43];
          r50 = r15 | 0;
          r64 = HEAP32[r50 >> 2];
          if (r66 >>> 0 > r64 >>> 0) {
            r65 = r66;
            r67 = (((r65 - r64 | 0) / 36 & -1) + 1 | 0) / -2 & -1;
            r73 = r66 + (r67 * 36 & -1) | 0;
            r74 = r25 - r65 | 0;
            _memmove(r73, r66, r74, 4, 0);
            r65 = r66 + ((((r74 | 0) / 36 & -1) + r67) * 36 & -1) | 0;
            HEAP32[r5] = r65;
            HEAP32[r43] = r73;
            r75 = r65;
            break;
          }
          r65 = ((r25 - r64 | 0) / 36 & -1) << 1;
          r73 = (r65 | 0) == 0 ? 1 : r65;
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r14, r73, r73 >>> 2, HEAP32[r15 + 16 >> 2]);
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r14, r66, r25);
          r73 = r14 | 0;
          HEAP32[r50 >> 2] = HEAP32[r73 >> 2];
          HEAP32[r73 >> 2] = r64;
          r64 = r14 + 4 | 0;
          HEAP32[r43] = HEAP32[r64 >> 2];
          HEAP32[r64 >> 2] = r66;
          r66 = r14 + 8 | 0;
          r64 = HEAP32[r66 >> 2];
          HEAP32[r5] = r64;
          HEAP32[r66 >> 2] = r25;
          r66 = r14 + 12 | 0;
          HEAP32[r39 >> 2] = HEAP32[r66 >> 2];
          HEAP32[r66 >> 2] = r25;
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r14);
          r75 = r64;
        } else {
          r75 = r25;
        }
      } while (0);
      if ((r75 | 0) != 0) {
        r25 = r75;
        for (r58 = r47 >> 2, r59 = r25 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
          HEAP32[r59] = HEAP32[r58];
        }
      }
      HEAP32[r5] = r75 + 36 | 0;
      __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r26, r15);
      __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r15);
      r69 = r45;
    } else {
      if ((HEAP8[r4 + 139 | 0] & 1) << 24 >> 24 == 0) {
        ___assert_func(5248932, 475, 5256048, 5248116);
      }
      r25 = __ZNK5Avoid7ConnRef5routeEv(r36);
      if ((r52 | 0) == 0) {
        r69 = 1;
        break;
      }
      r47 = r25;
      r39 = r4 + 100 | 0;
      r44 = r30 >> 2;
      r46 = (r30 + 4 | 0) >> 2;
      r64 = r30 | 0;
      r66 = (r30 + 12 | 0) >> 2;
      r43 = (r30 + 20 | 0) >> 2;
      r73 = r55;
      r50 = (r19 + 8 | 0) >> 2;
      r65 = r19 + 12 | 0;
      r67 = (r19 + 4 | 0) >> 2;
      r74 = r19 | 0;
      r76 = r19 + 16 | 0;
      r77 = r18 | 0;
      r78 = r18 + 4 | 0;
      r79 = r18 + 8 | 0;
      r80 = r18 + 12 | 0;
      r81 = r31 >> 2;
      r82 = r31 | 0;
      r83 = r40;
      r84 = (r21 + 8 | 0) >> 2;
      r85 = r21 + 12 | 0;
      r86 = (r21 + 4 | 0) >> 2;
      r87 = r21 | 0;
      r88 = r21 + 16 | 0;
      r89 = r20 | 0;
      r90 = r20 + 4 | 0;
      r91 = r20 + 8 | 0;
      r92 = r20 + 12 | 0;
      r93 = r31 + 4 | 0;
      r94 = r31 + 28 | 0;
      r95 = r30 + 28 | 0;
      r96 = 0;
      r97 = 0;
      r98 = 1;
      r99 = 0;
      while (1) {
        r100 = FUNCTION_TABLE[HEAP32[HEAP32[r47 >> 2] + 24 >> 2]](r25, r96);
        __ZN5Avoid6VertIDC1Ejtt(r32, HEAP32[r100 + 16 >> 2], HEAP16[r100 + 20 >> 1], (r96 | 0) < 1 & 1);
        r100 = __ZN5Avoid11VertInfList13getVertexByIDERKNS_6VertIDE(r39, r32);
        r101 = r100;
        if ((r100 | 0) == 0) {
          ___assert_func(5248932, 490, 5256048, 5246828);
        }
        r102 = r98 + 1 | 0;
        __ZN5Avoid5ANodeC1EPNS_7VertInfEi(r30, r101, r98);
        if ((r97 | 0) == 0) {
          HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r46] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
          r103 = __ZN5AvoidL13estimatedCostEPNS_7ConnRefEPKNS_5PointERS3_S5_(r1, 0, HEAP32[r64 >> 2] + 12 | 0, r51);
          HEAPF64[tempDoublePtr >> 3] = r103, HEAP32[r66] = HEAP32[tempDoublePtr >> 2], HEAP32[r66 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
          r104 = r103;
          HEAPF64[tempDoublePtr >> 3] = r104, HEAP32[r43] = HEAP32[tempDoublePtr >> 2], HEAP32[r43 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        } else {
          r104 = HEAP32[r82 >> 2];
          r103 = r104 + 12 | 0;
          r105 = FUNCTION_TABLE[r38](r103, r100 + 12 | 0);
          r100 = HEAP32[r64 >> 2];
          r106 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r93 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r93 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) + __ZN5AvoidL4costEPNS_7ConnRefEdPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi(r1, r105, r104, r100, r27, HEAP32[r94 >> 2]);
          HEAPF64[tempDoublePtr >> 3] = r106, HEAP32[r46] = HEAP32[tempDoublePtr >> 2], HEAP32[r46 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
          r104 = __ZN5AvoidL13estimatedCostEPNS_7ConnRefEPKNS_5PointERS3_S5_(r1, r103, r100 + 12 | 0, r51);
          HEAPF64[tempDoublePtr >> 3] = r104, HEAP32[r66] = HEAP32[tempDoublePtr >> 2], HEAP32[r66 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
          r100 = r104 + r106;
          HEAPF64[tempDoublePtr >> 3] = r100, HEAP32[r43] = HEAP32[tempDoublePtr >> 2], HEAP32[r43 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
          HEAP32[r95 >> 2] = r99 - 1 | 0;
        }
        r100 = (r101 | 0) == (r52 | 0);
        do {
          if (r100) {
            r106 = HEAP32[r23];
            r104 = HEAP32[r41];
            if (r106 >>> 0 < r104 >>> 0) {
              if ((r106 | 0) != 0) {
                r103 = r106;
                for (r58 = r44, r59 = r103 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                  HEAP32[r59] = HEAP32[r58];
                }
              }
              HEAP32[r23] = r106 + 36 | 0;
              r107 = r99;
              break;
            }
            r103 = HEAP32[r48];
            r105 = ((r106 - r103 | 0) / 36 & -1) + 1 | 0;
            if (r105 >>> 0 > 119304647) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
              r108 = HEAP32[r41];
              r109 = HEAP32[r48];
            } else {
              r108 = r104;
              r109 = r103;
            }
            r103 = r109;
            r110 = (r108 - r103 | 0) / 36 & -1;
            if (r110 >>> 0 > 59652322) {
              r111 = 119304647;
            } else {
              r112 = r110 << 1;
              r111 = r112 >>> 0 < r105 >>> 0 ? r105 : r112;
            }
            __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r19, r111, (HEAP32[r23] - r103 | 0) / 36 & -1, r73);
            r103 = HEAP32[r50];
            do {
              if ((r103 | 0) == (HEAP32[r65 >> 2] | 0)) {
                r112 = HEAP32[r67];
                r105 = HEAP32[r74 >> 2];
                if (r112 >>> 0 > r105 >>> 0) {
                  r110 = r112;
                  r113 = (((r110 - r105 | 0) / 36 & -1) + 1 | 0) / -2 & -1;
                  r114 = r112 + (r113 * 36 & -1) | 0;
                  r115 = r103 - r110 | 0;
                  _memmove(r114, r112, r115, 4, 0);
                  r110 = r112 + ((((r115 | 0) / 36 & -1) + r113) * 36 & -1) | 0;
                  HEAP32[r50] = r110;
                  HEAP32[r67] = r114;
                  r116 = r110;
                  break;
                }
                r110 = ((r103 - r105 | 0) / 36 & -1) << 1;
                r114 = (r110 | 0) == 0 ? 1 : r110;
                __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r18, r114, r114 >>> 2, HEAP32[r76 >> 2]);
                __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r18, r112, r103);
                HEAP32[r74 >> 2] = HEAP32[r77 >> 2];
                HEAP32[r77 >> 2] = r105;
                HEAP32[r67] = HEAP32[r78 >> 2];
                HEAP32[r78 >> 2] = r112;
                r112 = HEAP32[r79 >> 2];
                HEAP32[r50] = r112;
                HEAP32[r79 >> 2] = r103;
                HEAP32[r65 >> 2] = HEAP32[r80 >> 2];
                HEAP32[r80 >> 2] = r103;
                __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r18);
                r116 = r112;
              } else {
                r116 = r103;
              }
            } while (0);
            if ((r116 | 0) != 0) {
              r103 = r116;
              for (r58 = r44, r59 = r103 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                HEAP32[r59] = HEAP32[r58];
              }
            }
            HEAP32[r50] = r116 + 36 | 0;
            __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r26, r19);
            __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r19);
            r107 = r99;
          } else {
            for (r58 = r44, r59 = r81, r60 = r58 + 9; r58 < r60; r58++, r59++) {
              HEAP32[r59] = HEAP32[r58];
            }
            r103 = HEAP32[r49];
            r104 = HEAP32[r53];
            if (r103 >>> 0 < r104 >>> 0) {
              if ((r103 | 0) != 0) {
                r106 = r103;
                for (r58 = r81, r59 = r106 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                  HEAP32[r59] = HEAP32[r58];
                }
              }
              HEAP32[r49] = r103 + 36 | 0;
            } else {
              r106 = HEAP32[r22];
              r112 = ((r103 - r106 | 0) / 36 & -1) + 1 | 0;
              if (r112 >>> 0 > 119304647) {
                __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                r117 = HEAP32[r53];
                r118 = HEAP32[r22];
              } else {
                r117 = r104;
                r118 = r106;
              }
              r106 = r118;
              r105 = (r117 - r106 | 0) / 36 & -1;
              if (r105 >>> 0 > 59652322) {
                r119 = 119304647;
              } else {
                r114 = r105 << 1;
                r119 = r114 >>> 0 < r112 >>> 0 ? r112 : r114;
              }
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r21, r119, (HEAP32[r49] - r106 | 0) / 36 & -1, r83);
              r106 = HEAP32[r84];
              do {
                if ((r106 | 0) == (HEAP32[r85 >> 2] | 0)) {
                  r114 = HEAP32[r86];
                  r112 = HEAP32[r87 >> 2];
                  if (r114 >>> 0 > r112 >>> 0) {
                    r105 = r114;
                    r110 = (((r105 - r112 | 0) / 36 & -1) + 1 | 0) / -2 & -1;
                    r113 = r114 + (r110 * 36 & -1) | 0;
                    r115 = r106 - r105 | 0;
                    _memmove(r113, r114, r115, 4, 0);
                    r105 = r114 + ((((r115 | 0) / 36 & -1) + r110) * 36 & -1) | 0;
                    HEAP32[r84] = r105;
                    HEAP32[r86] = r113;
                    r120 = r105;
                    break;
                  }
                  r105 = ((r106 - r112 | 0) / 36 & -1) << 1;
                  r113 = (r105 | 0) == 0 ? 1 : r105;
                  __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r20, r113, r113 >>> 2, HEAP32[r88 >> 2]);
                  __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r20, r114, r106);
                  HEAP32[r87 >> 2] = HEAP32[r89 >> 2];
                  HEAP32[r89 >> 2] = r112;
                  HEAP32[r86] = HEAP32[r90 >> 2];
                  HEAP32[r90 >> 2] = r114;
                  r114 = HEAP32[r91 >> 2];
                  HEAP32[r84] = r114;
                  HEAP32[r91 >> 2] = r106;
                  HEAP32[r85 >> 2] = HEAP32[r92 >> 2];
                  HEAP32[r92 >> 2] = r106;
                  __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r20);
                  r120 = r114;
                } else {
                  r120 = r106;
                }
              } while (0);
              if ((r120 | 0) != 0) {
                r106 = r120;
                for (r58 = r81, r59 = r106 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                  HEAP32[r59] = HEAP32[r58];
                }
              }
              HEAP32[r84] = r120 + 36 | 0;
              __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r27, r21);
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r21);
            }
            __ZNSt3__14listIjNS_9allocatorIjEEE9push_backERKj(HEAP32[r82 >> 2] + 124 | 0, r28);
            r106 = HEAP32[r29] + 1 | 0;
            HEAP32[r29] = r106;
            r107 = r106;
          }
        } while (0);
        if (r100) {
          r69 = r102;
          break L858;
        } else {
          r96 = r96 + 1 | 0;
          r97 = r101;
          r98 = r102;
          r99 = r107;
        }
      }
    }
  } while (0);
  HEAP32[r3 + 100 >> 2] = 0;
  __ZNSt3__111__make_heapIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_(HEAP32[r48], HEAP32[r23]);
  r107 = HEAP32[r48];
  r21 = HEAP32[r23];
  L992 : do {
    if ((r107 | 0) != (r21 | 0)) {
      r120 = r31 >> 2;
      r20 = r13;
      r119 = r31 | 0;
      r117 = r31 + 28 | 0;
      r118 = r30 >> 2;
      r19 = r35;
      r116 = (r30 + 28 | 0) >> 2;
      r18 = r30 | 0;
      r111 = r2 + 12 | 0;
      r108 = r31 + 4 | 0;
      r109 = (r30 + 4 | 0) >> 2;
      r52 = r30 + 12 | 0;
      r38 = r30 + 20 | 0;
      r32 = r55;
      r36 = (r8 + 8 | 0) >> 2;
      r15 = r8 + 12 | 0;
      r75 = (r8 + 4 | 0) >> 2;
      r14 = r8 | 0;
      r72 = r8 + 16 | 0;
      r70 = r7 | 0;
      r71 = r7 + 4 | 0;
      r57 = r7 + 8 | 0;
      r56 = r7 + 12 | 0;
      r17 = r40;
      r68 = (r12 + 8 | 0) >> 2;
      r33 = r12 + 12 | 0;
      r16 = (r12 + 4 | 0) >> 2;
      r63 = r12 | 0;
      r61 = r12 + 16 | 0;
      r62 = r11 | 0;
      r99 = r11 + 4 | 0;
      r98 = r11 + 8 | 0;
      r97 = r11 + 12 | 0;
      r96 = r1 + 120 | 0;
      r82 = r1 + 124 | 0;
      r84 = r69;
      r81 = r107;
      r92 = r21;
      while (1) {
        r85 = r81 >> 2;
        for (r58 = r85, r59 = r120, r60 = r58 + 9; r58 < r60; r58++, r59++) {
          HEAP32[r59] = HEAP32[r58];
        }
        r102 = r92 - r81 | 0;
        if ((r102 | 0) > 36) {
          r101 = (r102 | 0) / 36 & -1;
          r102 = r92 - 36 | 0;
          for (r58 = r85, r59 = r20 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
            HEAP32[r59] = HEAP32[r58];
          }
          r100 = r102;
          for (r58 = r100 >> 2, r59 = r85, r60 = r58 + 9; r58 < r60; r58++, r59++) {
            HEAP32[r59] = HEAP32[r58];
          }
          for (r58 = r20 >> 2, r59 = r100 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
            HEAP32[r59] = HEAP32[r58];
          }
          __ZNSt3__117__push_heap_frontIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r81, r101 - 1 | 0);
          r121 = HEAP32[r23];
        } else {
          r121 = r92;
        }
        HEAP32[r23] = r121 - 36 | 0;
        r100 = HEAP32[r49];
        r85 = HEAP32[r53];
        if (r100 >>> 0 < r85 >>> 0) {
          if ((r100 | 0) != 0) {
            r102 = r100;
            for (r58 = r120, r59 = r102 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
              HEAP32[r59] = HEAP32[r58];
            }
          }
          HEAP32[r49] = r100 + 36 | 0;
        } else {
          r102 = HEAP32[r22];
          r101 = ((r100 - r102 | 0) / 36 & -1) + 1 | 0;
          if (r101 >>> 0 > 119304647) {
            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            r122 = HEAP32[r53];
            r123 = HEAP32[r22];
          } else {
            r122 = r85;
            r123 = r102;
          }
          r102 = r123;
          r91 = (r122 - r102 | 0) / 36 & -1;
          if (r91 >>> 0 > 59652322) {
            r124 = 119304647;
          } else {
            r90 = r91 << 1;
            r124 = r90 >>> 0 < r101 >>> 0 ? r101 : r90;
          }
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r12, r124, (HEAP32[r49] - r102 | 0) / 36 & -1, r17);
          r102 = HEAP32[r68];
          do {
            if ((r102 | 0) == (HEAP32[r33 >> 2] | 0)) {
              r90 = HEAP32[r16];
              r101 = HEAP32[r63 >> 2];
              if (r90 >>> 0 > r101 >>> 0) {
                r91 = r90;
                r86 = (((r91 - r101 | 0) / 36 & -1) + 1 | 0) / -2 & -1;
                r89 = r90 + (r86 * 36 & -1) | 0;
                r87 = r102 - r91 | 0;
                _memmove(r89, r90, r87, 4, 0);
                r91 = r90 + ((((r87 | 0) / 36 & -1) + r86) * 36 & -1) | 0;
                HEAP32[r68] = r91;
                HEAP32[r16] = r89;
                r125 = r91;
                break;
              }
              r91 = ((r102 - r101 | 0) / 36 & -1) << 1;
              r89 = (r91 | 0) == 0 ? 1 : r91;
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r11, r89, r89 >>> 2, HEAP32[r61 >> 2]);
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r11, r90, r102);
              HEAP32[r63 >> 2] = HEAP32[r62 >> 2];
              HEAP32[r62 >> 2] = r101;
              HEAP32[r16] = HEAP32[r99 >> 2];
              HEAP32[r99 >> 2] = r90;
              r90 = HEAP32[r98 >> 2];
              HEAP32[r68] = r90;
              HEAP32[r98 >> 2] = r102;
              HEAP32[r33 >> 2] = HEAP32[r97 >> 2];
              HEAP32[r97 >> 2] = r102;
              __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r11);
              r125 = r90;
            } else {
              r125 = r102;
            }
          } while (0);
          if ((r125 | 0) != 0) {
            r102 = r125;
            for (r58 = r120, r59 = r102 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
              HEAP32[r59] = HEAP32[r58];
            }
          }
          HEAP32[r68] = r125 + 36 | 0;
          __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r27, r12);
          __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r12);
        }
        r102 = HEAP32[r119 >> 2];
        __ZNSt3__14listIjNS_9allocatorIjEEE9push_backERKj(r102 + 124 | 0, r28);
        r85 = HEAP32[r29];
        HEAP32[r29] = r85 + 1 | 0;
        r100 = HEAP32[r117 >> 2];
        r90 = (r100 | 0) > -1;
        if (r90) {
          r126 = HEAP32[HEAP32[r22] + (r100 * 36 & -1) >> 2];
        } else {
          r126 = 0;
        }
        if ((r102 | 0) == (r3 | 0)) {
          break;
        }
        r101 = r37 ? r102 + 68 | 0 : r102 + 52 | 0;
        if (r37) {
          __ZN5Avoid18CmpVisEdgeRotationC1EPKNS_7VertInfE(r10, r126);
          r89 = r101 + 4 | 0;
          r91 = r101;
          __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6__sortINS1_18CmpVisEdgeRotationEEENS_15__list_iteratorIS3_PvEESB_SB_jRT_(r9, HEAP32[r89 >> 2], r91, HEAP32[r101 + 8 >> 2], r10);
          r127 = r91;
          r128 = r89;
        } else {
          r127 = r101;
          r128 = r101 + 4 | 0;
        }
        r101 = HEAP32[r128 >> 2];
        L1035 : do {
          if ((r101 | 0) == (r127 | 0)) {
            r129 = r84;
          } else {
            r89 = r102;
            r91 = r102 + 12 | 0;
            r86 = (r91 | 0) >> 2;
            r87 = (r102 + 20 | 0) >> 2;
            r88 = (r102 + 136 | 0) >> 2;
            r83 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r108 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r108 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r44 = r102;
            r50 = r84;
            r80 = r101;
            while (1) {
              r65 = (r80 + 8 | 0) >> 2;
              r79 = HEAP32[r65];
              L1039 : do {
                if (__ZNK5Avoid7EdgeInf10isDisabledEv(HEAP8[r79 + 20 | 0])) {
                  r130 = r50;
                } else {
                  r78 = r50 + 1 | 0;
                  __ZN5Avoid5ANodeC1EPNS_7VertInfEi(r35, __ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE(r79, r89), r50);
                  for (r58 = r19 >> 2, r59 = r118, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                    HEAP32[r59] = HEAP32[r58];
                  }
                  HEAP32[r116] = r85;
                  do {
                    if (r90) {
                      r67 = HEAP32[HEAP32[r22] + (r100 * 36 & -1) >> 2];
                      if ((r67 | 0) == 0) {
                        r131 = 0;
                        r132 = 0;
                        break;
                      }
                      if ((r67 | 0) == (HEAP32[r18 >> 2] | 0)) {
                        r130 = r78;
                        break L1039;
                      } else {
                        r131 = r67;
                        r132 = 1;
                      }
                    } else {
                      r131 = 0;
                      r132 = 0;
                    }
                  } while (0);
                  r67 = HEAP32[r18 >> 2];
                  r77 = HEAP16[r67 + 10 >> 1];
                  do {
                    if (__ZNK5Avoid6VertID15isConnectionPinEv(r77)) {
                      r74 = __ZNK5Avoid7ConnRef3srcEv(HEAP32[r96 >> 2]);
                      if ((r102 | 0) == (r74 | 0)) {
                        if (__ZNK5Avoid6VertID16isDummyPinHelperEv(HEAP16[r74 + 10 >> 1])) {
                          break;
                        }
                      }
                      if ((__ZNK5Avoid7VertInf12hasNeighbourEPS0_b(r67, __ZNK5Avoid7ConnRef3dstEv(HEAP32[r82 >> 2]), r37) | 0) == 0) {
                        r130 = r78;
                        break L1039;
                      }
                      if (!__ZNK5Avoid6VertID16isDummyPinHelperEv(HEAP16[__ZNK5Avoid7ConnRef3dstEv(HEAP32[r82 >> 2]) + 10 >> 1])) {
                        r130 = r78;
                        break L1039;
                      }
                    } else {
                      if (!((r67 | 0) == (r3 | 0) | __ZNK5Avoid6VertID8isConnPtEv(r77) ^ 1)) {
                        r130 = r78;
                        break L1039;
                      }
                    }
                  } while (0);
                  do {
                    if (r37) {
                      r77 = HEAP32[r65];
                      if (__ZNK5Avoid7EdgeInf17isDummyConnectionEv(HEAP32[r77 + 24 >> 2], HEAP32[r77 + 28 >> 2])) {
                        break;
                      }
                      if (!r132) {
                        break;
                      }
                      r77 = r131 + 12 | 0;
                      r74 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r77 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r77 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      r77 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r86], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r86 + 1], HEAPF64[tempDoublePtr >> 3]);
                      r76 = r74 != r77;
                      r74 = r131 + 20 | 0;
                      r73 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r74 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r74 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r87], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r87 + 1], HEAPF64[tempDoublePtr >> 3]);
                      r74 = (r67 + 12 | 0) >> 2;
                      if (!(r77 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r74], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r74 + 1], HEAPF64[tempDoublePtr >> 3]) | r76 ^ 1 | r73)) {
                        r77 = __ZN5Avoid5PointixEj(r91, 1);
                        r95 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r77 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r77 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                        r77 = __ZN5Avoid5PointixEj(r111, 1);
                        if (r95 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r77 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r77 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                          break;
                        }
                        r77 = r67 + 20 | 0;
                        r95 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r77 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r77 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                        r77 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r87], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r87 + 1], HEAPF64[tempDoublePtr >> 3]);
                        if (r95 < r77) {
                          if ((HEAP32[r88] & 16 | 0) != 0) {
                            break;
                          }
                          if (__ZN5AvoidL21pointAlignedWithOneOfERKNS_5PointERKNSt3__16vectorIS0_NS3_9allocatorIS0_EEEEj(r91, r24, 0)) {
                            break;
                          } else {
                            r130 = r78;
                            break L1039;
                          }
                        }
                        if (r95 <= r77) {
                          break;
                        }
                        if ((HEAP32[r88] & 64 | 0) != 0) {
                          break;
                        }
                        if (__ZN5AvoidL21pointAlignedWithOneOfERKNS_5PointERKNSt3__16vectorIS0_NS3_9allocatorIS0_EEEEj(r91, r24, 0)) {
                          break;
                        } else {
                          r130 = r78;
                          break L1039;
                        }
                      }
                      r77 = r67 + 20 | 0;
                      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r87], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r87 + 1], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r77 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r77 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) | r73 ^ 1 | r76) {
                        break;
                      }
                      r76 = __ZN5Avoid5PointixEj(r91, 0);
                      r73 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r76 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r76 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      r76 = __ZN5Avoid5PointixEj(r111, 0);
                      if (r73 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r76 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r76 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                        break;
                      }
                      r76 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r74], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r74 + 1], HEAPF64[tempDoublePtr >> 3]);
                      r74 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r86], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r86 + 1], HEAPF64[tempDoublePtr >> 3]);
                      if (r76 < r74) {
                        if ((HEAP32[r88] & 1 | 0) != 0) {
                          break;
                        }
                        if (__ZN5AvoidL21pointAlignedWithOneOfERKNS_5PointERKNSt3__16vectorIS0_NS3_9allocatorIS0_EEEEj(r91, r24, 1)) {
                          break;
                        } else {
                          r130 = r78;
                          break L1039;
                        }
                      }
                      if (r76 <= r74) {
                        break;
                      }
                      if ((HEAP32[r88] & 4 | 0) != 0) {
                        break;
                      }
                      if (!__ZN5AvoidL21pointAlignedWithOneOfERKNS_5PointERKNSt3__16vectorIS0_NS3_9allocatorIS0_EEEEj(r91, r24, 1)) {
                        r130 = r78;
                        break L1039;
                      }
                    }
                  } while (0);
                  r74 = HEAP32[r65] + 52 | 0;
                  r76 = __ZN5Avoid7EdgeInf7getDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r74 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r74 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
                  if (r76 == 0) {
                    r130 = r78;
                    break;
                  }
                  do {
                    if (!r37) {
                      if (!((HEAP8[r54] & 1) << 24 >> 24 == 0 | r42)) {
                        break;
                      }
                      if (!__ZN5Avoid17validateBendPointEPNS_7VertInfES1_S1_(r131, r44, r67)) {
                        r130 = r78;
                        break L1039;
                      }
                    }
                  } while (0);
                  r74 = r83 + __ZN5AvoidL4costEPNS_7ConnRefEdPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi(r1, r76, r102, r67, r27, r100);
                  HEAPF64[tempDoublePtr >> 3] = r74, HEAP32[r109] = HEAP32[tempDoublePtr >> 2], HEAP32[r109 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                  r74 = __ZN5AvoidL13estimatedCostEPNS_7ConnRefEPKNS_5PointERS3_S5_(r1, r91, r67 + 12 | 0, r51);
                  HEAPF64[tempDoublePtr >> 3] = r74, HEAP32[r52 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r52 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
                  r73 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r109], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r109 + 1], HEAPF64[tempDoublePtr >> 3]);
                  r77 = r74 + r73;
                  HEAPF64[tempDoublePtr >> 3] = r77, HEAP32[r38 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r38 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
                  r77 = HEAP32[r23];
                  r74 = HEAP32[r48];
                  r95 = r77;
                  r43 = (r95 - r74 | 0) / 36 & -1;
                  L1096 : do {
                    if ((r77 | 0) == (r74 | 0)) {
                      r133 = r77;
                    } else {
                      r66 = HEAP32[r22];
                      r46 = r66 + (HEAP32[r116] * 36 & -1) | 0;
                      r94 = 0;
                      while (1) {
                        r134 = r74 + (r94 * 36 & -1) | 0;
                        if ((r67 | 0) == (HEAP32[r134 >> 2] | 0)) {
                          if ((HEAP32[r46 >> 2] | 0) == (HEAP32[r66 + (HEAP32[r74 + (r94 * 36 & -1) + 28 >> 2] * 36 & -1) >> 2] | 0)) {
                            break;
                          }
                        }
                        r93 = r94 + 1 | 0;
                        if (r93 >>> 0 < r43 >>> 0) {
                          r94 = r93;
                        } else {
                          r133 = r74;
                          break L1096;
                        }
                      }
                      r66 = r74 + (r94 * 36 & -1) + 4 | 0;
                      if (r73 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r66 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r66 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                        r130 = r78;
                        break L1039;
                      }
                      r66 = r134;
                      for (r58 = r118, r59 = r66 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                        HEAP32[r59] = HEAP32[r58];
                      }
                      __ZNSt3__111__make_heapIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_(r74, r77);
                      r130 = r78;
                      break L1039;
                    }
                  } while (0);
                  r43 = HEAP32[r67 + 128 >> 2];
                  r76 = r67 + 124 | 0;
                  L1106 : do {
                    if ((r43 | 0) != (r76 | 0)) {
                      r66 = HEAP32[r22], r94 = r66 >> 2;
                      r46 = r66 + (HEAP32[r116] * 36 & -1) | 0;
                      r93 = r43;
                      while (1) {
                        r135 = HEAP32[r93 + 8 >> 2];
                        if ((r67 | 0) == (HEAP32[((r135 * 36 & -1) >> 2) + r94] | 0)) {
                          if ((HEAP32[r46 >> 2] | 0) == (HEAP32[((HEAP32[((r135 * 36 & -1) + 28 >> 2) + r94] * 36 & -1) >> 2) + r94] | 0)) {
                            break;
                          }
                        }
                        r64 = HEAP32[r93 + 4 >> 2];
                        if ((r64 | 0) == (r76 | 0)) {
                          break L1106;
                        } else {
                          r93 = r64;
                        }
                      }
                      r93 = r66 + (r135 * 36 & -1) + 4 | 0;
                      if (r73 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r93 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r93 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - 1e-9) {
                        r130 = r78;
                        break L1039;
                      }
                      ___assert_func(5248932, 817, 5256048, 5245088);
                      r130 = r78;
                      break L1039;
                    }
                  } while (0);
                  r73 = HEAP32[r41];
                  if (r77 >>> 0 < r73 >>> 0) {
                    if ((r77 | 0) != 0) {
                      r76 = r77;
                      for (r58 = r118, r59 = r76 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                        HEAP32[r59] = HEAP32[r58];
                      }
                    }
                    r76 = r77 + 36 | 0;
                    HEAP32[r23] = r76;
                    r136 = r133;
                    r137 = r76;
                  } else {
                    r76 = ((r95 - r133 | 0) / 36 & -1) + 1 | 0;
                    if (r76 >>> 0 > 119304647) {
                      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                      r138 = HEAP32[r41];
                      r139 = HEAP32[r48];
                    } else {
                      r138 = r73;
                      r139 = r74;
                    }
                    r67 = r139;
                    r43 = (r138 - r67 | 0) / 36 & -1;
                    if (r43 >>> 0 > 59652322) {
                      r140 = 119304647;
                    } else {
                      r93 = r43 << 1;
                      r140 = r93 >>> 0 < r76 >>> 0 ? r76 : r93;
                    }
                    __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r8, r140, (HEAP32[r23] - r67 | 0) / 36 & -1, r32);
                    r67 = HEAP32[r36];
                    do {
                      if ((r67 | 0) == (HEAP32[r15 >> 2] | 0)) {
                        r93 = HEAP32[r75];
                        r76 = HEAP32[r14 >> 2];
                        if (r93 >>> 0 > r76 >>> 0) {
                          r43 = r93;
                          r94 = (((r43 - r76 | 0) / 36 & -1) + 1 | 0) / -2 & -1;
                          r46 = r93 + (r94 * 36 & -1) | 0;
                          r64 = r67 - r43 | 0;
                          _memmove(r46, r93, r64, 4, 0);
                          r43 = r93 + ((((r64 | 0) / 36 & -1) + r94) * 36 & -1) | 0;
                          HEAP32[r36] = r43;
                          HEAP32[r75] = r46;
                          r141 = r43;
                          break;
                        }
                        r43 = ((r67 - r76 | 0) / 36 & -1) << 1;
                        r46 = (r43 | 0) == 0 ? 1 : r43;
                        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r7, r46, r46 >>> 2, HEAP32[r72 >> 2]);
                        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r7, r93, r67);
                        HEAP32[r14 >> 2] = HEAP32[r70 >> 2];
                        HEAP32[r70 >> 2] = r76;
                        HEAP32[r75] = HEAP32[r71 >> 2];
                        HEAP32[r71 >> 2] = r93;
                        r93 = HEAP32[r57 >> 2];
                        HEAP32[r36] = r93;
                        HEAP32[r57 >> 2] = r67;
                        HEAP32[r15 >> 2] = HEAP32[r56 >> 2];
                        HEAP32[r56 >> 2] = r67;
                        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r7);
                        r141 = r93;
                      } else {
                        r141 = r67;
                      }
                    } while (0);
                    if ((r141 | 0) != 0) {
                      r67 = r141;
                      for (r58 = r118, r59 = r67 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
                        HEAP32[r59] = HEAP32[r58];
                      }
                    }
                    HEAP32[r36] = r141 + 36 | 0;
                    __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r26, r8);
                    __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r8);
                    r136 = HEAP32[r48];
                    r137 = HEAP32[r23];
                  }
                  __ZNSt3__116__push_heap_backIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r136, r137, (r137 - r136 | 0) / 36 & -1);
                  r130 = r78;
                }
              } while (0);
              r65 = HEAP32[r80 + 4 >> 2];
              if ((r65 | 0) == (r127 | 0)) {
                r129 = r130;
                break L1035;
              } else {
                r50 = r130;
                r80 = r65;
              }
            }
          }
        } while (0);
        r100 = HEAP32[r48];
        r102 = HEAP32[r23];
        if ((r100 | 0) == (r102 | 0)) {
          break L992;
        } else {
          r84 = r129;
          r81 = r100;
          r92 = r102;
        }
      }
      __ZN5Avoid5ANodeC1Ev(r34);
      r92 = r34;
      for (r58 = r120, r59 = r92 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
        HEAP32[r59] = HEAP32[r58];
      }
      r120 = r34 + 28 | 0;
      r81 = HEAP32[r120 >> 2];
      L1145 : do {
        if ((r81 | 0) > 0) {
          r84 = r34 | 0;
          r36 = r81;
          r118 = HEAP32[r22];
          while (1) {
            HEAP32[HEAP32[r84 >> 2] + 100 >> 2] = HEAP32[r118 + (r36 * 36 & -1) >> 2];
            r56 = HEAP32[r22];
            r15 = r56 + (r36 * 36 & -1) | 0;
            for (r58 = r15 >> 2, r59 = r92 >> 2, r60 = r58 + 9; r58 < r60; r58++, r59++) {
              HEAP32[r59] = HEAP32[r58];
            }
            r15 = HEAP32[r120 >> 2];
            if ((r15 | 0) > 0) {
              r36 = r15;
              r118 = r56;
            } else {
              r142 = r15;
              break L1145;
            }
          }
        } else {
          r142 = r81;
        }
      } while (0);
      if ((r142 | 0) != 0) {
        ___assert_func(5248932, 619, 5256048, 5245908);
      }
      HEAP32[HEAP32[r34 >> 2] + 100 >> 2] = HEAP32[HEAP32[r22] + (r142 * 36 & -1) >> 2];
    }
  } while (0);
  r142 = __ZN5Avoid11VertInfList10connsBeginEv(r4 + 100 | 0);
  if ((r142 | 0) == 0) {
    __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED1Ev(r27);
    __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED1Ev(r26);
    __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r24);
    STACKTOP = r6;
    return;
  }
  r4 = r142;
  while (1) {
    __ZNSt3__110__list_impIjNS_9allocatorIjEEE5clearEv(r4 + 124 | 0);
    r142 = HEAP32[r4 + 40 >> 2];
    if ((r142 | 0) == 0) {
      break;
    } else {
      r4 = r142;
    }
  }
  __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED1Ev(r27);
  __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED1Ev(r26);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r24);
  STACKTOP = r6;
  return;
}
__ZN5Avoid9aStarPathEPNS_7ConnRefEPNS_7VertInfES3_S3_["X"] = 1;
function __ZN5Avoid7EdgeInf7getDistEv(r1) {
  return r1;
}
function __ZNK5Avoid6VertID16isDummyPinHelperEv(r1) {
  return (r1 & 16) << 16 >> 16 != 0;
}
function __ZN5Avoid5ANodeC1Ev(r1) {
  __ZN5Avoid5ANodeC2Ev(r1);
  return;
}
function __ZN5Avoid5ANodeC1EPNS_7VertInfEi(r1, r2, r3) {
  __ZN5Avoid5ANodeC2EPNS_7VertInfEi(r1, r2, r3);
  return;
}
function __ZN5AvoidL13estimatedCostEPNS_7ConnRefEPKNS_5PointERS3_S5_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r1 + 8 >> 2]) | 0) == 1) {
    r5 = __ZN5Avoid13euclideanDistERKNS_5PointES2_(r3, r4);
    return r5;
  }
  do {
    if ((r2 | 0) == 0) {
      r6 = r3 + 8 | 0;
      r7 = r4 + 8 | 0;
      r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r8;
      r8 = r3 | 0;
      r7 = r4 | 0;
      r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r9 != 0 & r6 != 0 ? 1 : 0;
    } else {
      r6 = 3.141592653589793 - __ZN5AvoidL12angleBetweenERKNS_5PointES2_S2_(r2, r3, r4);
      if (r6 > 1.5707963267948966) {
        r10 = 2;
        break;
      }
      if (r6 <= 0) {
        r10 = 0;
        break;
      }
      r10 = 1;
    }
  } while (0);
  r5 = r10 * __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(__ZNK5Avoid7ConnRef6routerEv(HEAP32[r1 >> 2]), 0) + __ZN5Avoid13manhattanDistERKNS_5PointES2_(r3, r4);
  return r5;
}
function __ZN5AvoidL4costEPNS_7ConnRefEdPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 412 | 0;
  r8 = r7;
  r9 = r7 + 44;
  r10 = r7 + 68;
  r11 = r7 + 92;
  r12 = r7 + 116;
  r13 = r7 + 160;
  r14 = r7 + 204;
  r15 = r7 + 264;
  r16 = r7 + 308;
  r17 = r7 + 352;
  if ((r6 | 0) > -1) {
    r18 = HEAP32[HEAP32[r5 >> 2] + (r6 * 36 & -1) >> 2];
  } else {
    r18 = 0;
  }
  __ZN5Avoid7PolygonC1Ev(r8);
  r19 = HEAP32[r3 >> 2], r20 = r19 >> 2;
  r21 = r19;
  do {
    if ((r18 | 0) == 0) {
      r22 = r2;
    } else {
      r23 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r21, 1);
      r24 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r21, 0);
      if (!(r23 > 0 | r24 > 0)) {
        r22 = r2;
        break;
      }
      r25 = r9 >> 2;
      r26 = (r18 + 12 | 0) >> 2;
      HEAP32[r25] = HEAP32[r26];
      HEAP32[r25 + 1] = HEAP32[r26 + 1];
      HEAP32[r25 + 2] = HEAP32[r26 + 2];
      HEAP32[r25 + 3] = HEAP32[r26 + 3];
      HEAP32[r25 + 4] = HEAP32[r26 + 4];
      HEAP32[r25 + 5] = HEAP32[r26 + 5];
      r26 = r10 >> 2;
      r25 = (r3 + 12 | 0) >> 2;
      HEAP32[r26] = HEAP32[r25];
      HEAP32[r26 + 1] = HEAP32[r25 + 1];
      HEAP32[r26 + 2] = HEAP32[r25 + 2];
      HEAP32[r26 + 3] = HEAP32[r25 + 3];
      HEAP32[r26 + 4] = HEAP32[r25 + 4];
      HEAP32[r26 + 5] = HEAP32[r25 + 5];
      r25 = r11 >> 2;
      r26 = (r4 + 12 | 0) >> 2;
      HEAP32[r25] = HEAP32[r26];
      HEAP32[r25 + 1] = HEAP32[r26 + 1];
      HEAP32[r25 + 2] = HEAP32[r26 + 2];
      HEAP32[r25 + 3] = HEAP32[r26 + 3];
      HEAP32[r25 + 4] = HEAP32[r26 + 4];
      HEAP32[r25 + 5] = HEAP32[r26 + 5];
      r26 = 3.141592653589793 - __ZN5AvoidL12angleBetweenERKNS_5PointES2_S2_(r9, r10, r11);
      r25 = r26 > 0;
      if (r25) {
        r27 = r26 * 10 / 3.141592653589793;
        r28 = r23 * (r27 * _log10(r27 + 1) / 10.5) + r2;
      } else {
        r28 = r2;
      }
      if (r26 == 3.141592653589793) {
        r22 = r24 * 2 + r28;
        break;
      }
      if (!r25) {
        r22 = r28;
        break;
      }
      r22 = r24 + r28;
    }
  } while (0);
  r28 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r21, 3);
  L1195 : do {
    if ((HEAP8[r19 + 138 | 0] & 1) << 24 >> 24 == 0) {
      r29 = r22;
    } else {
      if (!((HEAP32[r20 + 9] | 0) != 0 & r28 > 0)) {
        r29 = r22;
        break;
      }
      if (__ZNK5Avoid7Polygon5emptyEv(r8)) {
        __ZN5AvoidL20constructPolygonPathERNS_7PolygonEPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi(r8, r3, r4, r5, r6);
      }
      r2 = HEAP32[r20 + 8];
      r11 = r19 + 28 | 0;
      if ((r2 | 0) == (r11 | 0)) {
        r29 = r22;
        break;
      }
      r10 = r12 + 8 | 0;
      r9 = r14;
      r18 = r14 + 12 | 0;
      r24 = r14 + 24 | 0;
      r25 = r1 + 8 | 0;
      r26 = r1 + 124 | 0;
      r27 = r19 + 100 | 0;
      r23 = r22;
      r30 = r2;
      while (1) {
        r2 = (__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r25 >> 2]) | 0) == 2;
        r31 = HEAP32[r30 + 8 >> 2];
        if (r2) {
          __ZN5Avoid7PolygonC1ERKS0_(r12, __ZN5Avoid10ClusterRef18rectangularPolygonEv(r31));
        } else {
          __ZN5Avoid7PolygonC1ERKNS_16PolygonInterfaceE(r12, __ZN5Avoid10ClusterRef7polygonEv(r31) | 0);
        }
        r31 = __ZNK5Avoid7Polygon4sizeEv(r12);
        if (r31 >>> 0 < 3) {
          r32 = r23;
        } else {
          r33 = HEAP32[r10 >> 2];
          if (!__ZNK5Avoid5PointneERKS0_(r33, r33 + ((r31 - 1) * 24 & -1) | 0)) {
            ___assert_func(5248932, 276, 5255116, 5244596);
          }
          L1213 : do {
            if ((__ZNK5Avoid7Polygon4sizeEv(r12) | 0) != 0) {
              r31 = 0;
              while (1) {
                do {
                  if (!r2) {
                    r33 = __ZNK5Avoid7Polygon2atEj(r12, r31);
                    if ((__ZN5Avoid11VertInfList14getVertexByPosERKNS_5PointE(HEAP32[r27 >> 2], r33) | 0) != 0) {
                      break;
                    }
                    ___assert_func(5248932, 282, 5255116, 5244192);
                  }
                } while (0);
                r33 = r31 + 1 | 0;
                if (r33 >>> 0 < __ZNK5Avoid7Polygon4sizeEv(r12) >>> 0) {
                  r31 = r33;
                } else {
                  break L1213;
                }
              }
            }
          } while (0);
          __ZN5Avoid7PolygonC1ERKS0_(r13, r8);
          r2 = __ZNK5Avoid7ConnRef3dstEv(HEAP32[r26 >> 2]);
          __ZN5Avoid18ConnectorCrossingsC1ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r9, r12, 0, r13, 0, 0);
          HEAP8[r18] = 1;
          __ZN5Avoid18ConnectorCrossings15countForSegmentEjb(r9, __ZNK5Avoid7Polygon4sizeEv(r8) - 1 | 0, (r2 | 0) == (r4 | 0));
          r2 = HEAP32[r24 >> 2];
          __ZN5Avoid7PolygonD1Ev(r13);
          r32 = r23 + r28 * (r2 >>> 0);
        }
        __ZN5Avoid7PolygonD1Ev(r12);
        r2 = HEAP32[r30 + 4 >> 2];
        if ((r2 | 0) == (r11 | 0)) {
          r29 = r32;
          break L1195;
        } else {
          r23 = r32;
          r30 = r2;
        }
      }
    }
  } while (0);
  if (!__ZNK5Avoid6Router33isInCrossingPenaltyReroutingStageEv(HEAP8[r19 + 891 | 0])) {
    r34 = r29;
    __ZN5Avoid7PolygonD1Ev(r8);
    STACKTOP = r7;
    return r34;
  }
  r32 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r21, 2);
  r12 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r21, 4);
  if (!(r12 > 0 | r32 > 0)) {
    r34 = r29;
    __ZN5Avoid7PolygonD1Ev(r8);
    STACKTOP = r7;
    return r34;
  }
  if (__ZNK5Avoid7Polygon5emptyEv(r8)) {
    __ZN5AvoidL20constructPolygonPathERNS_7PolygonEPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi(r8, r3, r4, r5, r6);
  }
  r6 = r19 + 16 | 0;
  r19 = HEAP32[r20 + 5];
  if ((r19 | 0) == (r6 | 0)) {
    r34 = r29;
    __ZN5Avoid7PolygonD1Ev(r8);
    STACKTOP = r7;
    return r34;
  }
  r20 = r1;
  r5 = r4 + 12 | 0;
  r4 = r17;
  r3 = r17 + 12 | 0;
  r28 = r17 + 28 | 0;
  r13 = r17 + 24 | 0;
  r17 = r1 + 4 | 0;
  r22 = r1 + 124 | 0;
  r1 = r29;
  r29 = r19;
  while (1) {
    r19 = HEAP32[r29 + 8 >> 2];
    r14 = r19;
    if ((__ZNK5Avoid7ConnRef2idEv(HEAP32[r19 + 4 >> 2]) | 0) == (__ZNK5Avoid7ConnRef2idEv(HEAP32[r17 >> 2]) | 0)) {
      r35 = r1;
    } else {
      __ZN5Avoid7PolygonC1ERKS0_(r15, __ZN5Avoid7ConnRef12displayRouteEv(r14));
      __ZN5Avoid7PolygonC1ERKS0_(r16, r8);
      r19 = __ZNK5Avoid5PointeqERKS0_(r5, __ZNK5Avoid7ConnRef3dstEv(HEAP32[r22 >> 2]) + 12 | 0);
      __ZN5Avoid18ConnectorCrossingsC1ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r4, r15, 1, r16, r14, r20);
      HEAP8[r3] = 1;
      __ZN5Avoid18ConnectorCrossings15countForSegmentEjb(r4, __ZNK5Avoid7Polygon4sizeEv(r8) - 1 | 0, r19);
      r19 = HEAP32[r28 >> 2];
      do {
        if ((r19 & 10 | 0) == 10) {
          if (!__ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(r21, 2)) {
            if ((r19 & 4 | 0) != 0) {
              r36 = r1;
              break;
            }
          }
          r36 = r12 + r1;
        } else {
          r36 = r1;
        }
      } while (0);
      r19 = HEAP32[r13 >> 2];
      __ZN5Avoid7PolygonD1Ev(r16);
      __ZN5Avoid7PolygonD1Ev(r15);
      r35 = r36 + r32 * (r19 >>> 0);
    }
    r19 = HEAP32[r29 + 4 >> 2];
    if ((r19 | 0) == (r6 | 0)) {
      r34 = r35;
      break;
    } else {
      r1 = r35;
      r29 = r19;
    }
  }
  __ZN5Avoid7PolygonD1Ev(r8);
  STACKTOP = r7;
  return r34;
}
__ZN5AvoidL4costEPNS_7ConnRefEdPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi["X"] = 1;
function __ZNSt3__14listIjNS_9allocatorIjEEE9push_backERKj(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid18CmpVisEdgeRotationC1EPKNS_7VertInfE(r1, r2) {
  __ZN5Avoid18CmpVisEdgeRotationC2EPKNS_7VertInfE(r1, r2);
  return;
}
function __ZN5AvoidL21pointAlignedWithOneOfERKNS_5PointERKNSt3__16vectorIS0_NS3_9allocatorIS0_EEEEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r2 + 4 | 0;
  r6 = r2 | 0;
  r2 = 0;
  while (1) {
    if (r2 >>> 0 >= ((HEAP32[r5 >> 2] - HEAP32[r6 >> 2] | 0) / 24 & -1) >>> 0) {
      r7 = 0;
      r4 = 1078;
      break;
    }
    r8 = __ZNK5Avoid5PointixEj(r1, r3);
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r8 = __ZNK5Avoid5PointixEj(HEAP32[r6 >> 2] + (r2 * 24 & -1) | 0, r3);
    if (r9 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r7 = 1;
      r4 = 1077;
      break;
    } else {
      r2 = r2 + 1 | 0;
    }
  }
  if (r4 == 1078) {
    return r7;
  } else if (r4 == 1077) {
    return r7;
  }
}
function __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__110__list_impIjNS_9allocatorIjEEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__116__push_heap_backIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 36 | 0;
  r5 = r4;
  if ((r3 | 0) <= 1) {
    STACKTOP = r4;
    return;
  }
  r6 = (r3 - 2 | 0) / 2 & -1;
  r3 = r1 + (r6 * 36 & -1) | 0;
  r7 = r2 - 36 | 0;
  if (!__ZN5AvoidltERKNS_5ANodeES2_(r3, r7)) {
    STACKTOP = r4;
    return;
  }
  r2 = r5;
  r8 = r7;
  for (r9 = r8 >> 2, r10 = r2 >> 2, r11 = r9 + 9; r9 < r11; r9++, r10++) {
    HEAP32[r10] = HEAP32[r9];
  }
  r8 = r6;
  r6 = r3;
  r3 = r7;
  while (1) {
    r7 = r3;
    r12 = r6;
    for (r9 = r12 >> 2, r10 = r7 >> 2, r11 = r9 + 9; r9 < r11; r9++, r10++) {
      HEAP32[r10] = HEAP32[r9];
    }
    if ((r8 | 0) == 0) {
      break;
    }
    r7 = (r8 - 1 | 0) / 2 & -1;
    r13 = r1 + (r7 * 36 & -1) | 0;
    if (__ZN5AvoidltERKNS_5ANodeES2_(r13, r5)) {
      r8 = r7;
      r3 = r6;
      r6 = r13;
    } else {
      break;
    }
  }
  for (r9 = r2 >> 2, r10 = r12 >> 2, r11 = r9 + 9; r9 < r11; r9++, r10++) {
    HEAP32[r10] = HEAP32[r9];
  }
  STACKTOP = r4;
  return;
}
function __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6__sortINS1_18CmpVisEdgeRotationEEENS_15__list_iteratorIS3_PvEESB_SB_jRT_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r7 = r6;
  r8 = r6 + 4;
  if ((r4 | 0) == 0 | (r4 | 0) == 1) {
    HEAP32[r1 >> 2] = r2;
    STACKTOP = r6;
    return;
  } else if ((r4 | 0) == 2) {
    r9 = HEAP32[r3 >> 2];
    if (__ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_(r5, HEAP32[r9 + 8 >> 2], HEAP32[r2 + 8 >> 2])) {
      r10 = (r9 + 4 | 0) >> 2;
      r11 = (r9 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = HEAP32[r10];
      HEAP32[HEAP32[r10] >> 2] = HEAP32[r11];
      r12 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r12] + 4 >> 2] = r9;
      HEAP32[r11] = HEAP32[r12];
      HEAP32[r12] = r9;
      HEAP32[r10] = r2;
      HEAP32[r1 >> 2] = r9;
      STACKTOP = r6;
      return;
    } else {
      HEAP32[r1 >> 2] = r2;
      STACKTOP = r6;
      return;
    }
  } else {
    r9 = r4 >>> 1;
    L1302 : do {
      if ((r9 | 0) == 0) {
        r13 = r2;
      } else {
        r10 = r9;
        r12 = r2;
        while (1) {
          r11 = r10 - 1 | 0;
          r14 = HEAP32[r12 + 4 >> 2];
          if ((r11 | 0) > 0) {
            r10 = r11;
            r12 = r14;
          } else {
            r13 = r14;
            break L1302;
          }
        }
      }
    } while (0);
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6__sortINS1_18CmpVisEdgeRotationEEENS_15__list_iteratorIS3_PvEESB_SB_jRT_(r7, r2, r13, r9, r5);
    r2 = HEAP32[r7 >> 2];
    __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6__sortINS1_18CmpVisEdgeRotationEEENS_15__list_iteratorIS3_PvEESB_SB_jRT_(r8, r13, r3, r4 - r9 | 0, r5);
    r9 = HEAP32[r8 >> 2];
    r8 = r2 + 8 | 0;
    if (__ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_(r5, HEAP32[r9 + 8 >> 2], HEAP32[r8 >> 2])) {
      r4 = HEAP32[r9 + 4 >> 2];
      L1309 : do {
        if ((r4 | 0) == (r3 | 0)) {
          r15 = r3;
        } else {
          r13 = r4;
          while (1) {
            if (!__ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_(r5, HEAP32[r13 + 8 >> 2], HEAP32[r8 >> 2])) {
              r15 = r13;
              break L1309;
            }
            r7 = HEAP32[r13 + 4 >> 2];
            if ((r7 | 0) == (r3 | 0)) {
              r15 = r3;
              break L1309;
            } else {
              r13 = r7;
            }
          }
        }
      } while (0);
      r8 = HEAP32[r15 >> 2];
      r4 = (r8 + 4 | 0) >> 2;
      r13 = (r9 | 0) >> 2;
      HEAP32[HEAP32[r13] + 4 >> 2] = HEAP32[r4];
      HEAP32[HEAP32[r4] >> 2] = HEAP32[r13];
      r7 = HEAP32[r2 + 4 >> 2];
      r12 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r12] + 4 >> 2] = r9;
      HEAP32[r13] = HEAP32[r12];
      HEAP32[r12] = r8;
      HEAP32[r4] = r2;
      r16 = r9;
      r17 = r15;
      r18 = r7;
    } else {
      r16 = r2;
      r17 = r9;
      r18 = HEAP32[r2 + 4 >> 2];
    }
    L1315 : do {
      if ((r18 | 0) != (r17 | 0)) {
        r2 = r17;
        r9 = r17;
        r7 = r18;
        while (1) {
          r15 = r2 + 8 | 0;
          r4 = (r2 | 0) == (r3 | 0);
          r8 = r7;
          while (1) {
            if (r4) {
              break L1315;
            }
            r19 = r8 + 8 | 0;
            if (__ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_(r5, HEAP32[r15 >> 2], HEAP32[r19 >> 2])) {
              break;
            }
            r12 = HEAP32[r8 + 4 >> 2];
            if ((r12 | 0) == (r9 | 0)) {
              break L1315;
            } else {
              r8 = r12;
            }
          }
          r15 = HEAP32[r2 + 4 >> 2];
          L1323 : do {
            if ((r15 | 0) == (r3 | 0)) {
              r20 = r3;
            } else {
              r4 = r15;
              while (1) {
                if (!__ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_(r5, HEAP32[r4 + 8 >> 2], HEAP32[r19 >> 2])) {
                  r20 = r4;
                  break L1323;
                }
                r12 = HEAP32[r4 + 4 >> 2];
                if ((r12 | 0) == (r3 | 0)) {
                  r20 = r3;
                  break L1323;
                } else {
                  r4 = r12;
                }
              }
            }
          } while (0);
          r15 = HEAP32[r20 >> 2];
          r4 = (r15 + 4 | 0) >> 2;
          r12 = (r2 | 0) >> 2;
          HEAP32[HEAP32[r12] + 4 >> 2] = HEAP32[r4];
          HEAP32[HEAP32[r4] >> 2] = HEAP32[r12];
          r13 = HEAP32[r8 + 4 >> 2];
          r10 = (r9 | 0) == (r2 | 0) ? r20 : r9;
          r14 = (r8 | 0) >> 2;
          HEAP32[HEAP32[r14] + 4 >> 2] = r2;
          HEAP32[r12] = HEAP32[r14];
          HEAP32[r14] = r15;
          HEAP32[r4] = r8;
          if ((r13 | 0) == (r10 | 0)) {
            break L1315;
          } else {
            r2 = r20;
            r9 = r10;
            r7 = r13;
          }
        }
      }
    } while (0);
    HEAP32[r1 >> 2] = r16;
    STACKTOP = r6;
    return;
  }
}
__ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6__sortINS1_18CmpVisEdgeRotationEEENS_15__list_iteratorIS3_PvEESB_SB_jRT_["X"] = 1;
function __ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_(r1, r2, r3) {
  var r4, r5;
  r4 = r2;
  do {
    if (__ZNK5Avoid7EdgeInf12isOrthogonalEv(HEAP32[r2 + 24 >> 2], HEAP32[r2 + 28 >> 2])) {
      if (!__ZNK5Avoid7EdgeInf12isOrthogonalEv(HEAP32[r3 + 24 >> 2], HEAP32[r3 + 28 >> 2])) {
        break;
      }
      r5 = __ZNK5Avoid7EdgeInf16rotationLessThanEPKNS_7VertInfEPKS0_(r4, HEAP32[r1 >> 2], r3);
      return r5;
    }
  } while (0);
  r5 = r2 >>> 0 < r3 >>> 0;
  return r5;
}
function __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d272(r1, r2, r3, r4, r5, r6) {
  var r7, r8;
  r7 = (r3 - r1) * (r6 - r2) - (r4 - r2) * (r5 - r1);
  if (r7 < 0) {
    r8 = -1;
    return r8;
  }
  r8 = r7 > 0 & 1;
  return r8;
}
function __ZN5AvoidL11CrossLengthERKNS_5PointES2_(r1, r2, r3, r4) {
  return r1 * r4 - r2 * r3;
}
function __ZN5AvoidL3DotERKNS_5PointES2_(r1, r2, r3, r4) {
  return r1 * r3 + r2 * r4;
}
function __ZN5Avoid18CmpVisEdgeRotationC2EPKNS_7VertInfE(r1, r2) {
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__117__push_heap_frontIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 36 | 0;
  r5 = r4;
  if ((r2 | 0) <= 1) {
    STACKTOP = r4;
    return;
  }
  r6 = r1 + 72 | 0;
  r7 = r1 + 36 | 0;
  do {
    if ((r2 | 0) == 2) {
      r3 = 1143;
    } else {
      if (__ZN5AvoidltERKNS_5ANodeES2_(r6, r7)) {
        r3 = 1143;
        break;
      } else {
        r8 = 2;
        r9 = r6;
        break;
      }
    }
  } while (0);
  if (r3 == 1143) {
    r8 = 1;
    r9 = r7;
  }
  if (!__ZN5AvoidltERKNS_5ANodeES2_(r1, r9)) {
    STACKTOP = r4;
    return;
  }
  r7 = r5;
  r6 = r1;
  for (r10 = r6 >> 2, r11 = r7 >> 2, r12 = r10 + 9; r10 < r12; r10++, r11++) {
    HEAP32[r11] = HEAP32[r10];
  }
  r6 = r8;
  r8 = r9;
  r9 = r1;
  while (1) {
    r13 = r9;
    r14 = r8;
    for (r10 = r14 >> 2, r11 = r13 >> 2, r12 = r10 + 9; r10 < r12; r10++, r11++) {
      HEAP32[r11] = HEAP32[r10];
    }
    r13 = r6 << 1;
    r15 = r13 + 2 | 0;
    if ((r15 | 0) > (r2 | 0)) {
      break;
    }
    r16 = r1 + (r15 * 36 & -1) | 0;
    r17 = r13 | 1;
    r13 = r1 + (r17 * 36 & -1) | 0;
    do {
      if ((r15 | 0) == (r2 | 0)) {
        r3 = 1149;
      } else {
        if (__ZN5AvoidltERKNS_5ANodeES2_(r16, r13)) {
          r3 = 1149;
          break;
        } else {
          r18 = r15;
          r19 = r16;
          break;
        }
      }
    } while (0);
    if (r3 == 1149) {
      r3 = 0;
      r18 = r17;
      r19 = r13;
    }
    if (__ZN5AvoidltERKNS_5ANodeES2_(r5, r19)) {
      r6 = r18;
      r9 = r8;
      r8 = r19;
    } else {
      break;
    }
  }
  for (r10 = r7 >> 2, r11 = r14 >> 2, r12 = r10 + 9; r10 < r12; r10++, r11++) {
    HEAP32[r11] = HEAP32[r10];
  }
  STACKTOP = r4;
  return;
}
function __ZNSt3__111__make_heapIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r2 - r1 | 0;
  r2 = (r3 | 0) / 36 & -1;
  if ((r3 | 0) <= 36) {
    return;
  }
  r3 = 1;
  r4 = r1 + 36 | 0;
  while (1) {
    r5 = r4 + 36 | 0;
    r6 = r3 + 1 | 0;
    __ZNSt3__116__push_heap_backIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r5, r6);
    if ((r6 | 0) < (r2 | 0)) {
      r3 = r6;
      r4 = r5;
    } else {
      break;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC2EjjS5_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1376 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 36 | 0;
        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE10push_frontERKS2_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1376;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE10push_frontERKS2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (((r12 - r11 | 0) / 36 & -1) + 1 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = r9 + ((((r14 | 0) / -36 & -1) + r13) * 36 & -1) | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = HEAP32[r8] + (r13 * 36 & -1) | 0;
        r15 = r11;
        break;
      } else {
        r11 = ((r12 - r6 | 0) / 36 & -1) << 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 36 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 36 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  r15 = r6;
  r6 = r2;
  for (r2 = r6 >> 2, r4 = r15 >> 2, r7 = r2 + 9; r2 < r7; r2++, r4++) {
    HEAP32[r4] = HEAP32[r2];
  }
  r16 = HEAP32[r5];
  r17 = r16 - 36 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE10push_frontERKS2_["X"] = 1;
function __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2;
      r7 = r1;
      for (r8 = r7 >> 2, r9 = r6 >> 2, r10 = r8 + 9; r8 < r10; r8++, r9++) {
        HEAP32[r9] = HEAP32[r8];
      }
      r5 = HEAP32[r4];
    }
    r6 = r5 + 36 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 36 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC2EjjS5_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 36 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 36 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 36 & -1) | 0;
  return;
}
function __ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIN5Avoid5ANodeENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIN5Avoid5ANodeENS_9allocatorIS2_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZN5AvoidL12angleBetweenERKNS_5PointES2_S2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r5 = r4;
  r6 = r4 + 24;
  r7 = r1 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = (r2 | 0) >> 2;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r8 == r9) {
      r10 = r1 + 8 | 0;
      r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r10 = r2 + 8 | 0;
      r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r11 == r12) {
        r13 = 3.141592653589793;
      } else {
        r14 = r12;
        break;
      }
      STACKTOP = r4;
      return r13;
    } else {
      r12 = r2 + 8 | 0;
      r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    }
  } while (0);
  r12 = (r3 | 0) >> 2;
  r11 = r2 + 8 | 0;
  r2 = (r3 + 8 | 0) >> 2;
  do {
    if (r9 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3])) {
      if (r14 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3])) {
        r13 = 3.141592653589793;
      } else {
        break;
      }
      STACKTOP = r4;
      return r13;
    }
  } while (0);
  r3 = r1 + 8 | 0;
  __ZN5Avoid5PointC1Edd(r5, r8 - r9, (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r14);
  r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]);
  __ZN5Avoid5PointC1Edd(r6, r14, (HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  r11 = r5 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r11 = r5 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r11 = r6 | 0;
  r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r11 = r6 + 8 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r13 = Math.abs(Math.atan2(__ZN5AvoidL11CrossLengthERKNS_5PointES2_(r2, r5, r14, r6), __ZN5AvoidL3DotERKNS_5PointES2_(r2, r5, r14, r6)));
  STACKTOP = r4;
  return r13;
}
__ZN5AvoidL12angleBetweenERKNS_5PointES2_S2_["X"] = 1;
function __ZN5AvoidL20constructPolygonPathERNS_7PolygonEPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27;
  r6 = 0;
  r7 = (r5 | 0) > -1;
  L1429 : do {
    if (r7) {
      r8 = HEAP32[r4 >> 2];
      r9 = r5;
      r10 = 2;
      while (1) {
        r11 = r10 + 1 | 0;
        r12 = HEAP32[r8 + (r9 * 36 & -1) + 28 >> 2];
        if ((r12 | 0) > -1) {
          r9 = r12;
          r10 = r11;
        } else {
          r13 = r11;
          break L1429;
        }
      }
    } else {
      r13 = 2;
    }
  } while (0);
  r10 = r1 + 8 | 0;
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6resizeEj(r10, r13);
  r9 = (r10 | 0) >> 2;
  r8 = HEAP32[r9] + ((r13 - 1) * 24 & -1) | 0;
  r11 = r3 + 12 | 0;
  HEAP32[r8 >> 2] = HEAP32[r11 >> 2];
  HEAP32[r8 + 4 >> 2] = HEAP32[r11 + 4 >> 2];
  HEAP32[r8 + 8 >> 2] = HEAP32[r11 + 8 >> 2];
  HEAP32[r8 + 12 >> 2] = HEAP32[r11 + 12 >> 2];
  HEAP32[r8 + 16 >> 2] = HEAP32[r11 + 16 >> 2];
  HEAP16[r8 + 20 >> 1] = HEAP16[r11 + 20 >> 1];
  r11 = HEAP32[r9] + ((r13 - 2) * 24 & -1) | 0;
  r8 = r2 + 12 | 0;
  HEAP32[r11 >> 2] = HEAP32[r8 >> 2];
  HEAP32[r11 + 4 >> 2] = HEAP32[r8 + 4 >> 2];
  HEAP32[r11 + 8 >> 2] = HEAP32[r8 + 8 >> 2];
  HEAP32[r11 + 12 >> 2] = HEAP32[r8 + 12 >> 2];
  HEAP32[r11 + 16 >> 2] = HEAP32[r8 + 16 >> 2];
  HEAP16[r11 + 20 >> 1] = HEAP16[r8 + 20 >> 1];
  r8 = r13 - 3 | 0;
  L1434 : do {
    if (r7) {
      r11 = (r4 | 0) >> 2;
      r2 = r5;
      r3 = r8;
      while (1) {
        do {
          if ((r2 | 0) == (r5 | 0)) {
            r14 = HEAP32[r9];
            r15 = HEAP32[HEAP32[r11] + (r5 * 36 & -1) >> 2];
            r6 = 1216;
            break;
          } else {
            r12 = HEAP32[HEAP32[r11] + (r2 * 36 & -1) >> 2];
            r16 = r12 + 12 | 0;
            r17 = r3 + 1 | 0;
            r18 = HEAP32[r9];
            r19 = r18 + (r17 * 24 & -1) | 0;
            r20 = r3 + 2 | 0;
            r21 = r16 | 0;
            r22 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r21 = r12 + 20 | 0;
            r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r21 = r19 | 0;
            r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r21 = r18 + (r17 * 24 & -1) + 8 | 0;
            r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r21 = r18 + (r20 * 24 & -1) | 0;
            r25 = r18 + (r20 * 24 & -1) + 8 | 0;
            if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d272(r22, r23, r24, r17, (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) != 0) {
              r14 = r18;
              r15 = r12;
              r6 = 1216;
              break;
            }
            r12 = r19;
            r19 = r16;
            HEAP32[r12 >> 2] = HEAP32[r19 >> 2];
            HEAP32[r12 + 4 >> 2] = HEAP32[r19 + 4 >> 2];
            HEAP32[r12 + 8 >> 2] = HEAP32[r19 + 8 >> 2];
            HEAP32[r12 + 12 >> 2] = HEAP32[r19 + 12 >> 2];
            HEAP32[r12 + 16 >> 2] = HEAP32[r19 + 16 >> 2];
            HEAP16[r12 + 20 >> 1] = HEAP16[r19 + 20 >> 1];
            r26 = r3;
            break;
          }
        } while (0);
        if (r6 == 1216) {
          r6 = 0;
          r19 = r14 + (r3 * 24 & -1) | 0;
          r12 = r15 + 12 | 0;
          HEAP32[r19 >> 2] = HEAP32[r12 >> 2];
          HEAP32[r19 + 4 >> 2] = HEAP32[r12 + 4 >> 2];
          HEAP32[r19 + 8 >> 2] = HEAP32[r12 + 8 >> 2];
          HEAP32[r19 + 12 >> 2] = HEAP32[r12 + 12 >> 2];
          HEAP32[r19 + 16 >> 2] = HEAP32[r12 + 16 >> 2];
          HEAP16[r19 + 20 >> 1] = HEAP16[r12 + 20 >> 1];
          r26 = r3 - 1 | 0;
        }
        r12 = HEAP32[HEAP32[r11] + (r2 * 36 & -1) + 28 >> 2];
        if ((r12 | 0) > -1) {
          r2 = r12;
          r3 = r26;
        } else {
          r27 = r26;
          break L1434;
        }
      }
    } else {
      r27 = r8;
    }
  } while (0);
  r8 = r27 + 1 | 0;
  if ((r8 | 0) <= 0) {
    return;
  }
  L1449 : do {
    if ((r8 | 0) < (r13 | 0)) {
      r27 = r8;
      while (1) {
        r26 = HEAP32[r9];
        r15 = r26 + ((r27 - r8) * 24 & -1) | 0;
        r14 = r26 + (r27 * 24 & -1) | 0;
        HEAP32[r15 >> 2] = HEAP32[r14 >> 2];
        HEAP32[r15 + 4 >> 2] = HEAP32[r14 + 4 >> 2];
        HEAP32[r15 + 8 >> 2] = HEAP32[r14 + 8 >> 2];
        HEAP32[r15 + 12 >> 2] = HEAP32[r14 + 12 >> 2];
        HEAP32[r15 + 16 >> 2] = HEAP32[r14 + 16 >> 2];
        HEAP16[r15 + 20 >> 1] = HEAP16[r14 + 20 >> 1];
        r14 = r27 + 1 | 0;
        if ((r14 | 0) == (r13 | 0)) {
          break L1449;
        } else {
          r27 = r14;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6resizeEj(r10, FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1) - r8 | 0);
  return;
}
__ZN5AvoidL20constructPolygonPathERNS_7PolygonEPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi["X"] = 1;
function __ZN5Avoid5ANodeC2EPNS_7VertInfEi(r1, r2, r3) {
  HEAP32[r1 >> 2] = r2;
  r2 = (r1 + 4 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  HEAP32[r1 + 28 >> 2] = -1;
  HEAP32[r1 + 32 >> 2] = r3;
  return;
}
function __ZN5Avoid5ANodeC2Ev(r1) {
  var r2;
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  HEAP32[r2 + 6] = 0;
  HEAP32[r1 + 28 >> 2] = -1;
  HEAP32[r1 + 32 >> 2] = -1;
  return;
}
function __ZN5Avoid8ObstacleC2EPNS_6RouterENS_7PolygonEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 52 | 0;
  r5 = r4;
  r6 = r4 + 8;
  HEAP32[r1 >> 2] = 5267328;
  r7 = (r1 + 4 | 0) >> 2;
  HEAP32[r7] = r2;
  __ZN5Avoid7PolygonC1ERKS0_(r1 + 12 | 0, r3);
  HEAP8[r1 + 56 | 0] = 0;
  r3 = (r1 + 64 | 0) >> 2;
  HEAP32[r3] = 0;
  r2 = (r1 + 68 | 0) >> 2;
  HEAP32[r2] = 0;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1 + 72 | 0);
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEEC1ERKS4_(r1 + 84 | 0);
  r8 = HEAP32[r7];
  if ((r8 | 0) == 0) {
    ___assert_func(5248600, 41, 5256360, 5251428);
    r9 = HEAP32[r7];
  } else {
    r9 = r8;
  }
  r8 = __ZN5Avoid6Router8assignIdEj(r9);
  HEAP32[r1 + 8 >> 2] = r8;
  __ZN5Avoid6VertIDC1Ejtt(r5, r8, 0, 0);
  __ZNK5Avoid8Obstacle14routingPolygonEv(r6, r1);
  if ((__ZNK5Avoid7Polygon4sizeEv(r6) | 0) == 0) {
    r10 = 0;
    HEAP32[r2] = r10;
    r11 = HEAP32[r3];
    r12 = r10 + 48 | 0;
    HEAP32[r12 >> 2] = r11;
    r13 = r11 + 44 | 0;
    HEAP32[r13 >> 2] = r10;
    __ZN5Avoid7PolygonD1Ev(r6);
    STACKTOP = r4;
    return;
  }
  r1 = r6 + 8 | 0;
  r8 = 0;
  r9 = 0;
  while (1) {
    r14 = __Znwj(140);
    r15 = r14;
    __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r14, HEAP32[r7], r5, HEAP32[r1 >> 2] + (r9 * 24 & -1) | 0, 0);
    if ((HEAP32[r3] | 0) == 0) {
      HEAP32[r3] = r15;
    } else {
      HEAP32[r14 + 44 >> 2] = r8;
      HEAP32[r8 + 48 >> 2] = r15;
    }
    __ZN5Avoid6VertIDppEi(r5);
    r14 = r9 + 1 | 0;
    if (r14 >>> 0 < __ZNK5Avoid7Polygon4sizeEv(r6) >>> 0) {
      r8 = r15;
      r9 = r14;
    } else {
      r10 = r15;
      break;
    }
  }
  HEAP32[r2] = r10;
  r11 = HEAP32[r3];
  r12 = r10 + 48 | 0;
  HEAP32[r12 >> 2] = r11;
  r13 = r11 + 44 | 0;
  HEAP32[r13 >> 2] = r10;
  __ZN5Avoid7PolygonD1Ev(r6);
  STACKTOP = r4;
  return;
}
__ZN5Avoid8ObstacleC2EPNS_6RouterENS_7PolygonEj["X"] = 1;
function __ZNK5Avoid8Obstacle14routingPolygonEv(r1, r2) {
  var r3, r4, r5;
  r3 = r2 + 12 | 0;
  if (__ZNK5Avoid7Polygon5emptyEv(r3)) {
    ___assert_func(5248600, 279, 5253568, 5252308);
  }
  r4 = r2 + 4 | 0;
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == 0) {
    ___assert_func(5248600, 280, 5253568, 5251940);
    r5 = HEAP32[r4 >> 2];
  } else {
    r5 = r2;
  }
  __ZNK5Avoid16PolygonInterface13offsetPolygonEd(r1, r3 | 0, __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r5, 6));
  return;
}
function __ZNSt3__13setIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid8ObstacleD0Ev(r1) {
  __ZN5Avoid8ObstacleD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid8ObstacleD1Ev(r1) {
  __ZN5Avoid8ObstacleD2Ev(r1);
  return;
}
function __ZN5Avoid8ObstacleD2Ev(r1) {
  var r2, r3, r4, r5, r6, r7, r8;
  HEAP32[r1 >> 2] = 5267328;
  if ((HEAP8[r1 + 56 | 0] & 1) << 24 >> 24 != 0) {
    ___assert_func(5248600, 78, 5256320, 5247956);
  }
  r2 = (r1 + 64 | 0) >> 2;
  r3 = HEAP32[r2];
  do {
    if ((r3 | 0) == 0) {
      ___assert_func(5248600, 79, 5256320, 5246700);
      r4 = HEAP32[r2];
      r5 = r4;
      r6 = r4;
      break;
    } else {
      r5 = r3;
      r6 = r3;
    }
  } while (0);
  while (1) {
    r3 = HEAP32[r5 + 48 >> 2];
    if ((r5 | 0) == 0) {
      r7 = r6;
    } else {
      __ZN5Avoid7VertInfD1Ev(r5);
      __ZdlPv(r5);
      r7 = HEAP32[r2];
    }
    if ((r3 | 0) == (r7 | 0)) {
      break;
    } else {
      r5 = r3;
      r6 = r7;
    }
  }
  HEAP32[r1 + 68 >> 2] = 0;
  HEAP32[r2] = 0;
  r2 = r1 + 84 | 0;
  r7 = r1 + 92 | 0;
  r6 = HEAP32[r7 >> 2];
  L1500 : do {
    if ((r6 | 0) != 0) {
      r5 = r2 | 0;
      r3 = r6;
      while (1) {
        r4 = HEAP32[HEAP32[r5 >> 2] + 16 >> 2];
        if ((r4 | 0) == 0) {
          r8 = r3;
        } else {
          __ZN5Avoid18ShapeConnectionPinD1Ev(r4);
          __ZdlPv(r4);
          r8 = HEAP32[r7 >> 2];
        }
        if ((r8 | 0) == 0) {
          break L1500;
        } else {
          r3 = r8;
        }
      }
    }
  } while (0);
  __ZNSt3__13setIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED1Ev(r2);
  __ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1 + 72 | 0);
  __ZN5Avoid7PolygonD1Ev(r1 + 12 | 0);
  return;
}
__ZN5Avoid8ObstacleD2Ev["X"] = 1;
function __ZN5Avoid8Obstacle9firstVertEv(r1) {
  return r1;
}
function __ZN5Avoid8Obstacle8lastVertEv(r1) {
  return r1;
}
function __ZNK5Avoid8Obstacle2idEv(r1) {
  return r1;
}
function __ZNK5Avoid8Obstacle6routerEv(r1) {
  return r1;
}
function __ZNK5Avoid8Obstacle8isActiveEv(r1) {
  return (r1 & 1) << 24 >> 24 != 0;
}
function __ZNK5Avoid8Obstacle7polygonEv(r1) {
  return r1 + 12 | 0;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEEC2ERKS4_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZN5Avoid8Obstacle10setNewPolyERKNS_7PolygonE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r4 = r3;
  r5 = (r1 + 64 | 0) >> 2;
  if ((HEAP32[r5] | 0) == 0) {
    ___assert_func(5248600, 102, 5256480, 5246700);
  }
  r6 = r1 + 12 | 0;
  if ((__ZNK5Avoid7Polygon4sizeEv(r6) | 0) != (FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 16 >> 2]](r2) | 0)) {
    ___assert_func(5248600, 103, 5256480, 5245876);
  }
  __ZN5Avoid7PolygonaSERKS0_(r6, r2);
  __ZNK5Avoid8Obstacle14routingPolygonEv(r4, r1);
  do {
    if ((__ZNK5Avoid7Polygon4sizeEv(r4) | 0) != 0) {
      r2 = r4 + 8 | 0;
      r7 = 0;
      r8 = HEAP32[r5], r9 = r8 >> 2;
      while (1) {
        if ((HEAP32[r9 + 16] | 0) != 0) {
          ___assert_func(5248600, 111, 5256480, 5245064);
        }
        if ((HEAP32[r9 + 24] | 0) != 0) {
          ___assert_func(5248600, 112, 5256480, 5244568);
        }
        __ZN5Avoid7VertInf5ResetERKNS_5PointE(r8, HEAP32[r2 >> 2] + (r7 * 24 & -1) | 0);
        HEAP32[r9 + 25] = 0;
        r10 = r7 + 1 | 0;
        r11 = HEAP32[r9 + 12];
        if (r10 >>> 0 < __ZNK5Avoid7Polygon4sizeEv(r4) >>> 0) {
          r7 = r10;
          r8 = r11, r9 = r8 >> 2;
        } else {
          break;
        }
      }
      if ((r11 | 0) == (HEAP32[r5] | 0)) {
        break;
      }
      ___assert_func(5248600, 120, 5256480, 5244168);
    }
  } while (0);
  r5 = HEAP32[r1 + 84 >> 2];
  r11 = r1 + 88 | 0;
  if ((r5 | 0) == (r11 | 0)) {
    __ZN5Avoid7PolygonD1Ev(r4);
    STACKTOP = r3;
    return;
  }
  r1 = r11;
  r11 = r5;
  while (1) {
    __ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_7PolygonE(HEAP32[r11 + 16 >> 2], r6);
    r5 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r11 | 0);
    if ((r5 | 0) == (r1 | 0)) {
      break;
    } else {
      r11 = r5;
    }
  }
  __ZN5Avoid7PolygonD1Ev(r4);
  STACKTOP = r3;
  return;
}
__ZN5Avoid8Obstacle10setNewPolyERKNS_7PolygonE["X"] = 1;
function __ZN5Avoid8Obstacle10makeActiveEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r3 = r2;
  r4 = r2 + 4;
  r5 = r1 + 56 | 0;
  if ((HEAP8[r5] & 1) << 24 >> 24 != 0) {
    ___assert_func(5248600, 136, 5256540, 5245748);
  }
  r6 = r1 + 4 | 0;
  r7 = HEAP32[r6 >> 2];
  r8 = HEAP32[r7 + 8 >> 2];
  HEAP32[r4 >> 2] = r1;
  __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r3, r7 + 4 | 0, r8, r4);
  HEAP32[r1 + 60 >> 2] = HEAP32[r3 >> 2];
  r3 = r1 + 64 | 0;
  r1 = HEAP32[r3 >> 2];
  while (1) {
    r4 = HEAP32[r1 + 48 >> 2];
    __ZN5Avoid11VertInfList9addVertexEPNS_7VertInfE(HEAP32[r6 >> 2] + 100 | 0, r1);
    if ((r4 | 0) == (HEAP32[r3 >> 2] | 0)) {
      break;
    } else {
      r1 = r4;
    }
  }
  HEAP8[r5] = 1;
  STACKTOP = r2;
  return;
}
function __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8;
  r5 = __Znwj(12);
  r6 = r5;
  r7 = r5;
  HEAP32[r7 >> 2] = 0;
  r8 = r5 + 8 | 0;
  if ((r8 | 0) != 0) {
    HEAP32[r8 >> 2] = HEAP32[r4 >> 2];
  }
  r4 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r4] + 4 >> 2] = r6;
  HEAP32[r7 >> 2] = HEAP32[r4];
  HEAP32[r4] = r6;
  HEAP32[r5 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  HEAP32[r1 >> 2] = r6;
  return;
}
function __ZN5Avoid8Obstacle12makeInactiveEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r1 + 56 | 0;
  if ((HEAP8[r3] & 1) << 24 >> 24 == 0) {
    ___assert_func(5248600, 159, 5256440, 5244836);
  }
  r4 = r1 + 4 | 0;
  __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r2, HEAP32[r4 >> 2] + 4 | 0, HEAP32[r1 + 60 >> 2]);
  r5 = r1 + 64 | 0;
  r6 = HEAP32[r5 >> 2];
  while (1) {
    r7 = HEAP32[r6 + 48 >> 2];
    __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(HEAP32[r4 >> 2] + 100 | 0, r6);
    if ((r7 | 0) == (HEAP32[r5 >> 2] | 0)) {
      break;
    } else {
      r6 = r7;
    }
  }
  HEAP8[r3] = 0;
  r3 = r1 + 80 | 0;
  if ((HEAP32[r3 >> 2] | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  r6 = r1 + 72 | 0;
  while (1) {
    __ZN5Avoid7ConnEnd10disconnectEb(HEAP32[HEAP32[r6 >> 2] + 16 >> 2], 1);
    if ((HEAP32[r3 >> 2] | 0) == 0) {
      break;
    }
  }
  STACKTOP = r2;
  return;
}
function __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZN5Avoid8Obstacle27updatePinPolyLineVisibilityEv(r1) {
  var r2, r3;
  r2 = HEAP32[r1 + 84 >> 2];
  r3 = r1 + 88 | 0;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r1 = r3;
  r3 = r2;
  while (1) {
    __ZN5Avoid18ShapeConnectionPin16updateVisibilityEv(HEAP32[r3 + 16 >> 2]);
    r2 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r3 | 0);
    if ((r2 | 0) == (r1 | 0)) {
      break;
    } else {
      r3 = r2;
    }
  }
  return;
}
function __ZNK5Avoid8Obstacle17possiblePinPointsEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r5 = r4;
  r6 = r4 + 20;
  r7 = (r1 | 0) >> 2;
  HEAP32[r7] = 0;
  r8 = (r1 + 4 | 0) >> 2;
  HEAP32[r8] = 0;
  r9 = r1 + 8 | 0;
  r10 = (r9 | 0) >> 2;
  HEAP32[r10] = 0;
  r11 = HEAP32[r2 + 84 >> 2];
  r12 = r2 + 88 | 0;
  if ((r11 | 0) == (r12 | 0)) {
    STACKTOP = r4;
    return;
  }
  r2 = r9;
  r9 = (r6 + 8 | 0) >> 2;
  r13 = r6 + 12 | 0;
  r14 = (r6 + 4 | 0) >> 2;
  r15 = r6 | 0;
  r16 = r6 + 16 | 0;
  r17 = r5 | 0;
  r18 = r5 + 4 | 0;
  r19 = r5 + 8 | 0;
  r20 = r5 + 12 | 0;
  r21 = r12;
  r12 = r11;
  while (1) {
    r11 = HEAP32[r12 + 16 >> 2], r22 = r11 >> 2;
    do {
      if ((HEAP32[r22 + 3] | 0) == (r3 | 0)) {
        if ((HEAP8[r11 + 44 | 0] & 1) << 24 >> 24 != 0) {
          if ((HEAP32[r22 + 16] | 0) != 0) {
            break;
          }
        }
        r23 = HEAP32[r22 + 17] + 12 | 0;
        r24 = HEAP32[r8];
        r25 = HEAP32[r10];
        if (r24 >>> 0 < r25 >>> 0) {
          if ((r24 | 0) == 0) {
            r26 = 0;
          } else {
            r27 = r24 >> 2;
            r28 = r23 >> 2;
            HEAP32[r27] = HEAP32[r28];
            HEAP32[r27 + 1] = HEAP32[r28 + 1];
            HEAP32[r27 + 2] = HEAP32[r28 + 2];
            HEAP32[r27 + 3] = HEAP32[r28 + 3];
            HEAP32[r27 + 4] = HEAP32[r28 + 4];
            HEAP32[r27 + 5] = HEAP32[r28 + 5];
            r26 = HEAP32[r8];
          }
          HEAP32[r8] = r26 + 24 | 0;
          break;
        }
        r28 = HEAP32[r7];
        r27 = ((r24 - r28 | 0) / 24 & -1) + 1 | 0;
        if (r27 >>> 0 > 178956970) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
          r29 = HEAP32[r10];
          r30 = HEAP32[r7];
        } else {
          r29 = r25;
          r30 = r28;
        }
        r28 = r30;
        r25 = (r29 - r28 | 0) / 24 & -1;
        if (r25 >>> 0 > 89478484) {
          r31 = 178956970;
        } else {
          r24 = r25 << 1;
          r31 = r24 >>> 0 < r27 >>> 0 ? r27 : r24;
        }
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r6, r31, (HEAP32[r8] - r28 | 0) / 24 & -1, r2);
        r28 = HEAP32[r9];
        do {
          if ((r28 | 0) == (HEAP32[r13 >> 2] | 0)) {
            r24 = HEAP32[r14];
            r27 = HEAP32[r15 >> 2];
            if (r24 >>> 0 > r27 >>> 0) {
              r25 = r24;
              r32 = (((r25 - r27 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
              r33 = r24 + (r32 * 24 & -1) | 0;
              r34 = r28 - r25 | 0;
              _memmove(r33, r24, r34, 4, 0);
              r25 = r24 + ((((r34 | 0) / 24 & -1) + r32) * 24 & -1) | 0;
              HEAP32[r9] = r25;
              HEAP32[r14] = r33;
              r35 = r25;
              break;
            }
            r25 = ((r28 - r27 | 0) / 24 & -1) << 1;
            r33 = (r25 | 0) == 0 ? 1 : r25;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r5, r33, r33 >>> 2, HEAP32[r16 >> 2]);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r5, r24, r28);
            HEAP32[r15 >> 2] = HEAP32[r17 >> 2];
            HEAP32[r17 >> 2] = r27;
            HEAP32[r14] = HEAP32[r18 >> 2];
            HEAP32[r18 >> 2] = r24;
            r24 = HEAP32[r19 >> 2];
            HEAP32[r9] = r24;
            HEAP32[r19 >> 2] = r28;
            HEAP32[r13 >> 2] = HEAP32[r20 >> 2];
            HEAP32[r20 >> 2] = r28;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r5);
            r35 = r24;
          } else {
            r35 = r28;
          }
        } while (0);
        if ((r35 | 0) != 0) {
          r28 = r35 >> 2;
          r24 = r23 >> 2;
          HEAP32[r28] = HEAP32[r24];
          HEAP32[r28 + 1] = HEAP32[r24 + 1];
          HEAP32[r28 + 2] = HEAP32[r24 + 2];
          HEAP32[r28 + 3] = HEAP32[r24 + 3];
          HEAP32[r28 + 4] = HEAP32[r24 + 4];
          HEAP32[r28 + 5] = HEAP32[r24 + 5];
        }
        HEAP32[r9] = r35 + 24 | 0;
        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r1, r6);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r6);
      }
    } while (0);
    r22 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r12 | 0);
    if ((r22 | 0) == (r21 | 0)) {
      break;
    } else {
      r12 = r22;
    }
  }
  STACKTOP = r4;
  return;
}
__ZNK5Avoid8Obstacle17possiblePinPointsEj["X"] = 1;
function __ZN5Avoid8Obstacle16addConnectionPinEPNS_18ShapeConnectionPinE(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3 + 8;
  HEAP32[r4 >> 2] = r2;
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r3, r1 + 84 | 0, r4);
  __ZN5Avoid6Router19modifyConnectionPinEPNS_18ShapeConnectionPinE(HEAP32[r1 + 4 >> 2], HEAP32[r4 >> 2]);
  STACKTOP = r3;
  return;
}
function __ZN5Avoid8Obstacle19removeConnectionPinEPNS_18ShapeConnectionPinE(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  HEAP32[r4 >> 2] = r2;
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1 + 84 | 0, r4);
  __ZN5Avoid6Router19modifyConnectionPinEPNS_18ShapeConnectionPinE(HEAP32[r1 + 4 >> 2], HEAP32[r4 >> 2]);
  STACKTOP = r3;
  return;
}
function __ZNK5Avoid8Obstacle10routingBoxEv(r1, r2) {
  var r3, r4, r5;
  r3 = r2 + 12 | 0;
  if (__ZNK5Avoid7Polygon5emptyEv(r3)) {
    ___assert_func(5248600, 269, 5253624, 5252308);
  }
  r4 = r2 + 4 | 0;
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == 0) {
    ___assert_func(5248600, 270, 5253624, 5251940);
    r5 = HEAP32[r4 >> 2];
  } else {
    r5 = r2;
  }
  __ZNK5Avoid16PolygonInterface17offsetBoundingBoxEd(r1, r3 | 0, __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r5, 6));
  return;
}
function __ZN5Avoid8Obstacle15removeFromGraphEv(r1) {
  var r2, r3, r4;
  r2 = __ZN5Avoid8Obstacle9firstVertEv(HEAP32[r1 + 64 >> 2]);
  r3 = r1 + 68 | 0;
  if ((r2 | 0) == (HEAP32[__ZN5Avoid8Obstacle8lastVertEv(HEAP32[r3 >> 2]) + 40 >> 2] | 0)) {
    return;
  } else {
    r4 = r2;
  }
  while (1) {
    r2 = HEAP32[r4 + 40 >> 2];
    __ZN5Avoid7VertInf15removeFromGraphEb(r4, 0);
    if ((r2 | 0) == (HEAP32[__ZN5Avoid8Obstacle8lastVertEv(HEAP32[r3 >> 2]) + 40 >> 2] | 0)) {
      break;
    } else {
      r4 = r2;
    }
  }
  return;
}
function __ZN5Avoid8Obstacle19addFollowingConnEndEPNS_7ConnEndE(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3 + 8;
  HEAP32[r4 >> 2] = r2;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r3, r1 + 72 | 0, r4);
  STACKTOP = r3;
  return;
}
function __ZN5Avoid8Obstacle22removeFollowingConnEndEPNS_7ConnEndE(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  HEAP32[r4 >> 2] = r2;
  __ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1 + 72 | 0, r4);
  STACKTOP = r3;
  return;
}
function __ZNK5Avoid8Obstacle18attachedConnectorsEv(r1, r2) {
  var r3, r4;
  r3 = r1;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = HEAP32[r2 + 72 >> 2];
  r4 = r2 + 76 | 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  }
  r2 = r4;
  r4 = r3;
  while (1) {
    r3 = HEAP32[r4 + 16 >> 2] + 40 | 0;
    if ((HEAP32[r3 >> 2] | 0) == 0) {
      ___assert_func(5248600, 347, 5253512, 5246596);
    }
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_(r1, r3);
    r3 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r4 | 0);
    if ((r3 | 0) == (r2 | 0)) {
      break;
    } else {
      r4 = r3;
    }
  }
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (__ZNK5Avoid13CmpConnPinPtrclEPKNS_18ShapeConnectionPinES3_(HEAP32[r3 >> 2], HEAP32[r6 + 16 >> 2])) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  L1663 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = r3;
      r7 = r4;
      while (1) {
        r8 = r6, r9 = r8 >> 2;
        while (1) {
          if (!__ZNK5Avoid13CmpConnPinPtrclEPKNS_18ShapeConnectionPinES3_(HEAP32[r9 + 4], HEAP32[r2 >> 2])) {
            break;
          }
          r10 = HEAP32[r9 + 1];
          if ((r10 | 0) == 0) {
            r5 = r7;
            break L1663;
          } else {
            r8 = r10, r9 = r8 >> 2;
          }
        }
        r10 = HEAP32[r9];
        if ((r10 | 0) == 0) {
          r5 = r8;
          break L1663;
        } else {
          r6 = r10;
          r7 = r8;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEEC1ERKS4_(r1) {
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEEC2ERKS4_(r1);
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__13setIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZN5Avoid6RouterC1Ej(r1) {
  __ZN5Avoid6RouterC2Ej(r1);
  return;
}
function __ZN5Avoid23ConnRerouteFlagDelegateC1Ev(r1) {
  __ZN5Avoid23ConnRerouteFlagDelegateC2Ev(r1);
  return;
}
function __ZN5Avoid22TopologyAddonInterfaceC1Ev(r1) {
  __ZN5Avoid22TopologyAddonInterfaceC2Ev(r1);
  return;
}
function __ZN5Avoid17HyperedgeRerouterD1Ev(r1) {
  __ZN5Avoid17HyperedgeRerouterD2Ev(r1);
  return;
}
function __ZN5Avoid23ConnRerouteFlagDelegateD1Ev(r1) {
  __ZN5Avoid23ConnRerouteFlagDelegateD2Ev(r1);
  return;
}
function __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED1Ev(r1) {
  __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev(r1);
  return;
}
function __ZNSt3__14listIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid6RouterD0Ev(r1) {
  __ZN5Avoid6RouterD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid6RouterD1Ev(r1) {
  __ZN5Avoid6RouterD2Ev(r1);
  return;
}
function __ZN5Avoid6Router25destroyOrthogonalVisGraphEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = 0;
  __ZN5Avoid8EdgeList5clearEv(r1 + 72 | 0);
  r3 = r1 + 100 | 0;
  r1 = r3;
  r4 = __ZN5Avoid11VertInfList11shapesBeginEv(HEAP32[r3 >> 2]);
  if ((r4 | 0) == 0) {
    return;
  }
  r3 = r4;
  while (1) {
    r4 = r3;
    do {
      if (__ZN5Avoid7VertInf8orphanedEv(r4)) {
        if (!__ZNK5Avoid6VertIDeqERKS0_(r3 + 4 | 0, 5274200)) {
          r2 = 1451;
          break;
        }
        r5 = __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(r1, r4);
        __ZN5Avoid7VertInfD1Ev(r4);
        __ZdlPv(r3);
        r6 = r5;
        break;
      } else {
        r2 = 1451;
      }
    } while (0);
    if (r2 == 1451) {
      r2 = 0;
      r6 = HEAP32[r3 + 40 >> 2];
    }
    if ((r6 | 0) == 0) {
      break;
    } else {
      r3 = r6;
    }
  }
  return;
}
function __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE9push_backERKS4_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = __Znwj(60);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
    r5 = r3 + 12 | 0;
    r6 = r2 + 4 | 0;
    for (r2 = r6 >> 2, r7 = r5 >> 2, r8 = r2 + 12; r2 < r8; r2++, r7++) {
      HEAP32[r7] = HEAP32[r2];
    }
  }
  r5 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r5];
  HEAP32[r5] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__14pairIjN5Avoid7ConnEndEED1Ev(r1) {
  __ZNSt3__14pairIjN5Avoid7ConnEndEED2Ev(r1);
  return;
}
function __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(100);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    __ZN5Avoid10ActionInfoC1ERKS0_(r5, r2);
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid6Router18processTransactionEv(r1) {
  do {
    if ((HEAP32[r1 + 680 >> 2] | 0) == 0) {
      if ((__ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r1 + 776 >> 2], HEAP32[r1 + 780 >> 2]) | 0) != 0) {
        break;
      }
      return;
    }
  } while (0);
  if ((HEAP8[r1 + 137 | 0] & 1) << 24 >> 24 != 0) {
    return;
  }
  __ZN5Avoid6Router14processActionsEv(r1);
  HEAP8[r1 + 890 | 0] = 1;
  __ZN5Avoid6Router28rerouteAndCallbackConnectorsEv(r1);
  return;
}
function __ZN5Avoid6Router19modifyConnectionPinEPNS_18ShapeConnectionPinE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 92 | 0;
  r5 = r4;
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_18ShapeConnectionPinE(r5, r2);
  r2 = r1 + 672 | 0;
  r6 = r2;
  r7 = HEAP32[r5 >> 2];
  r8 = HEAP32[r5 + 4 >> 2];
  r9 = r1 + 676 | 0;
  while (1) {
    r10 = HEAP32[r9 >> 2];
    if ((r10 | 0) == (r6 | 0)) {
      r3 = 1477;
      break;
    }
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r10 + 8 | 0, r7, r8)) {
      break;
    } else {
      r9 = r10 + 4 | 0;
    }
  }
  if (r3 == 1477) {
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r2, r5);
  }
  if ((HEAP8[r1 + 688 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid10ActionInfoD1Ev(r5);
    STACKTOP = r4;
    return;
  }
  __ZN5Avoid6Router18processTransactionEv(r1);
  __ZN5Avoid10ActionInfoD1Ev(r5);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid6Router29removeObjectFromQueuedActionsEPKv(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = r1 + 672 | 0;
  r6 = HEAP32[r1 + 676 >> 2];
  r1 = r5;
  if ((r6 | 0) == (r1 | 0)) {
    STACKTOP = r3;
    return;
  }
  r7 = r4 | 0;
  r8 = r6;
  while (1) {
    if ((HEAP32[r8 + 12 >> 2] | 0) == (r2 | 0)) {
      __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r4, r5, r8);
      r9 = HEAP32[r7 >> 2];
    } else {
      r9 = HEAP32[r8 + 4 >> 2];
    }
    if ((r9 | 0) == (r1 | 0)) {
      break;
    } else {
      r8 = r9;
    }
  }
  STACKTOP = r3;
  return;
}
function __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZN5Avoid10ActionInfoD1Ev(r3 + 8 | 0);
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZN5Avoid6RouterC2Ej(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 >> 2;
  HEAP32[r2] = 5267396;
  r3 = r1 + 4 | 0;
  r4 = r3;
  HEAP32[r3 >> 2] = r4;
  HEAP32[r2 + 2] = r4;
  HEAP32[r2 + 3] = 0;
  r4 = r1 + 16 | 0;
  r3 = r4;
  HEAP32[r4 >> 2] = r3;
  HEAP32[r2 + 5] = r3;
  HEAP32[r2 + 6] = 0;
  r3 = r1 + 28 | 0;
  r4 = r3;
  HEAP32[r3 >> 2] = r4;
  HEAP32[r2 + 8] = r4;
  HEAP32[r2 + 9] = 0;
  __ZN5Avoid8EdgeListC1Eb(r1 + 40 | 0, 0);
  __ZN5Avoid8EdgeListC1Eb(r1 + 56 | 0, 0);
  __ZN5Avoid8EdgeListC1Eb(r1 + 72 | 0, 1);
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC1ERKSD_(r1 + 88 | 0);
  __ZN5Avoid11VertInfListC1Ev(r1 + 100 | 0);
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC1ERKSD_(r1 + 124 | 0);
  HEAP8[r1 + 136 | 0] = 0;
  HEAP8[r1 + 137 | 0] = 0;
  r4 = r1 + 138 | 0;
  HEAP8[r4] = 1;
  HEAP8[r4 + 1 | 0] = 1;
  HEAP8[r4 + 2 | 0] = 1;
  HEAP8[r4 + 3 | 0] = 1;
  HEAP8[r4 + 4 | 0] = 1;
  HEAP8[r1 + 143 | 0] = 0;
  HEAP8[r1 + 144 | 0] = 0;
  __ZN5Avoid5TimerC1Ev(r1 + 148 | 0);
  HEAP32[r2 + 167] = 0;
  r4 = r1 + 672 | 0;
  r3 = r4;
  HEAP32[r4 >> 2] = r3;
  HEAP32[r2 + 169] = r3;
  HEAP32[r2 + 170] = 0;
  HEAP32[r2 + 171] = 0;
  HEAP8[r1 + 688 | 0] = 1;
  HEAP8[r1 + 689 | 0] = 0;
  __ZN5Avoid23ConnRerouteFlagDelegateC1Ev(r1 + 760 | 0);
  r3 = r1 + 772 | 0;
  __ZN5Avoid17HyperedgeRerouterC1Ev(r3);
  HEAP32[r2 + 218] = 0;
  r4 = __Znwj(4);
  __ZN5Avoid22TopologyAddonInterfaceC1Ev(r4);
  HEAP32[r2 + 221] = r4;
  HEAP8[r1 + 890 | 0] = 1;
  HEAP8[r1 + 891 | 0] = 0;
  HEAP8[r1 + 888 | 0] = 1;
  HEAP8[r1 + 889 | 0] = 1;
  r4 = r1 + 692 | 0;
  r2 = r4;
  for (r5 = r2 >> 2, r6 = r5 + 14; r5 < r6; r5++) {
    HEAP32[r5] = 0;
  }
  HEAPF64[tempDoublePtr >> 3] = 10, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 716 | 0;
  HEAPF64[tempDoublePtr >> 3] = 4e3, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 732 | 0;
  HEAPF64[tempDoublePtr >> 3] = 100, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 748 | 0;
  HEAPF64[tempDoublePtr >> 3] = 4, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP8[r1 + 756 | 0] = 0;
  HEAP8[r1 + 757 | 0] = 1;
  HEAP8[r1 + 758 | 0] = 0;
  HEAP8[r1 + 759 | 0] = 0;
  __ZN5Avoid17HyperedgeRerouter9setRouterEPNS_6RouterE(r3, r1);
  return;
}
__ZN5Avoid6RouterC2Ej["X"] = 1;
function __ZN5Avoid6RouterD2Ev(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r2 = r1 >> 2;
  HEAP32[r2] = 5267396;
  r3 = r1 + 689 | 0;
  HEAP8[r3] = 1;
  r4 = r1 + 16 | 0;
  r5 = r1 + 20 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = r4;
  L1760 : do {
    if ((r6 | 0) != (r7 | 0)) {
      r8 = r6;
      while (1) {
        r9 = HEAP32[r8 + 8 >> 2];
        if ((r9 | 0) == 0) {
          r10 = r8;
        } else {
          __ZN5Avoid7ConnRefD1Ev(r9);
          __ZdlPv(r9);
          r10 = HEAP32[r5 >> 2];
        }
        if ((r10 | 0) == (r7 | 0)) {
          break L1760;
        } else {
          r8 = r10;
        }
      }
    }
  } while (0);
  r10 = r1 + 4 | 0;
  r7 = r1 + 8 | 0;
  r5 = HEAP32[r7 >> 2];
  r6 = r10;
  L1768 : do {
    if ((r5 | 0) != (r6 | 0)) {
      r8 = r5;
      while (1) {
        r9 = HEAP32[r8 + 8 >> 2];
        r11 = (r9 | 0) == 0;
        if (!r11) {
          ___dynamic_cast(r9, 5272672, 5272660);
        }
        r12 = r9;
        if (__ZNK5Avoid8Obstacle8isActiveEv(HEAP8[r9 + 56 | 0])) {
          __ZN5Avoid8Obstacle15removeFromGraphEv(r12);
          __ZN5Avoid8Obstacle12makeInactiveEv(r12);
        }
        if (!r11) {
          FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 4 >> 2]](r9);
        }
        r9 = HEAP32[r7 >> 2];
        if ((r9 | 0) == (r6 | 0)) {
          break L1768;
        } else {
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP8[r3] = 0;
  __ZN5Avoid6Router25destroyOrthogonalVisGraphEv(r1);
  if ((HEAP32[r2 + 3] | 0) != 0) {
    ___assert_func(5248184, 136, 5258176, 5244544);
  }
  if ((HEAP32[r2 + 6] | 0) != 0) {
    ___assert_func(5248184, 137, 5258176, 5244128);
  }
  if ((__ZNK5Avoid8EdgeList4sizeEv(HEAP32[r2 + 13]) | 0) != 0) {
    ___assert_func(5248184, 138, 5258176, 5243380);
  }
  r3 = HEAP32[r2 + 221];
  if ((r3 | 0) != 0) {
    FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 4 >> 2]](r3);
  }
  __ZN5Avoid17HyperedgeRerouterD1Ev(r1 + 772 | 0);
  __ZN5Avoid23ConnRerouteFlagDelegateD1Ev(r1 + 760 | 0);
  __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEED1Ev(r1 + 672 | 0);
  __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED1Ev(r1 + 124 | 0);
  __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED1Ev(r1 + 88 | 0);
  __ZN5Avoid8EdgeListD1Ev(r1 + 72 | 0);
  __ZN5Avoid8EdgeListD1Ev(r1 + 56 | 0);
  __ZN5Avoid8EdgeListD1Ev(r1 + 40 | 0);
  __ZNSt3__14listIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED1Ev(r1 + 28 | 0);
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r4);
  __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEED1Ev(r10);
  return;
}
__ZN5Avoid6RouterD2Ev["X"] = 1;
function __ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r6 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 192 | 0;
  r8 = r7;
  r9 = r7 + 92;
  r10 = r7 + 144;
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_7ConnRefE(r8, r2);
  r2 = r1 + 672 | 0;
  r11 = r2;
  r12 = HEAP32[r8 >> 2];
  r13 = HEAP32[r8 + 4 >> 2];
  r14 = r1 + 676 | 0;
  while (1) {
    r15 = HEAP32[r14 >> 2];
    if ((r15 | 0) == (r11 | 0)) {
      r6 = 1545;
      break;
    }
    r16 = r15 + 8 | 0;
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r16, r12, r13)) {
      r6 = 1553;
      break;
    } else {
      r14 = r15 + 4 | 0;
    }
  }
  if (r6 == 1545) {
    r14 = r8 + 80 | 0;
    r13 = r10;
    r12 = r4;
    for (r17 = r12 >> 2, r18 = r13 >> 2, r19 = r17 + 12; r17 < r19; r17++, r18++) {
      HEAP32[r18] = HEAP32[r17];
    }
    HEAP32[r9 >> 2] = r3;
    r13 = r9 + 4 | 0;
    for (r17 = r12 >> 2, r18 = r13 >> 2, r19 = r17 + 12; r17 < r19; r17++, r18++) {
      HEAP32[r18] = HEAP32[r17];
    }
    __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE9push_backERKS4_(r14, r9);
    __ZNSt3__14pairIjN5Avoid7ConnEndEED1Ev(r9);
    __ZN5Avoid7ConnEndD1Ev(r10);
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r2, r8);
  } else if (r6 == 1553) {
    __ZN5Avoid10ActionInfo16addConnEndUpdateEjRKNS_7ConnEndEb(r16, r3, r4, r5);
  }
  if ((HEAP8[r1 + 688 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid10ActionInfoD1Ev(r8);
    STACKTOP = r7;
    return;
  }
  __ZN5Avoid6Router18processTransactionEv(r1);
  __ZN5Avoid10ActionInfoD1Ev(r8);
  STACKTOP = r7;
  return;
}
__ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb["X"] = 1;
function __ZN5Avoid6Router25setStaticGraphInvalidatedEb(r1) {
  HEAP8[r1 + 890 | 0] = 1;
  return;
}
function __ZN5Avoid6Router8addShapeEPNS_8ShapeRefE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 276 | 0;
  r5 = r4;
  r6 = r4 + 92;
  r7 = r4 + 184;
  r8 = r1 + 672 | 0;
  r9 = r1 + 676 | 0;
  r10 = HEAP32[r9 >> 2];
  r11 = r8;
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE(r5, 2, r2);
  L1815 : do {
    if ((r10 | 0) != (r11 | 0)) {
      r12 = HEAP32[r5 >> 2];
      r13 = HEAP32[r5 + 4 >> 2];
      r14 = r10;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r14 + 8 | 0, r12, r13)) {
          break;
        }
        r15 = HEAP32[r14 + 4 >> 2];
        if ((r15 | 0) == (r11 | 0)) {
          break L1815;
        } else {
          r14 = r15;
        }
      }
      ___assert_func(5248184, 229, 5258360, 5252800);
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r5);
  r5 = HEAP32[r9 >> 2];
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE(r6, 0, r2);
  L1822 : do {
    if ((r5 | 0) != (r11 | 0)) {
      r10 = HEAP32[r6 >> 2];
      r14 = HEAP32[r6 + 4 >> 2];
      r13 = r5;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r13 + 8 | 0, r10, r14)) {
          break;
        }
        r12 = HEAP32[r13 + 4 >> 2];
        if ((r12 | 0) == (r11 | 0)) {
          break L1822;
        } else {
          r13 = r12;
        }
      }
      ___assert_func(5248184, 231, 5258360, 5252212);
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r6);
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE(r7, 1, r2);
  r2 = HEAP32[r7 >> 2];
  r6 = HEAP32[r7 + 4 >> 2];
  r5 = r9;
  while (1) {
    r9 = HEAP32[r5 >> 2];
    if ((r9 | 0) == (r11 | 0)) {
      r3 = 1575;
      break;
    }
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r9 + 8 | 0, r2, r6)) {
      break;
    } else {
      r5 = r9 + 4 | 0;
    }
  }
  if (r3 == 1575) {
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r8, r7);
  }
  if ((HEAP8[r1 + 688 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid10ActionInfoD1Ev(r7);
    STACKTOP = r4;
    return;
  }
  __ZN5Avoid6Router18processTransactionEv(r1);
  __ZN5Avoid10ActionInfoD1Ev(r7);
  STACKTOP = r4;
  return;
}
__ZN5Avoid6Router8addShapeEPNS_8ShapeRefE["X"] = 1;
function __ZN5Avoid6Router15deleteConnectorEPNS_7ConnRefE(r1, r2) {
  var r3;
  r3 = r1 + 689 | 0;
  HEAP8[r3] = 1;
  if ((r2 | 0) != 0) {
    __ZN5Avoid7ConnRefD1Ev(r2);
    __ZdlPv(r2);
  }
  HEAP8[r3] = 0;
  return;
}
function __ZN5Avoid6Router9moveShapeEPNS_8ShapeRefEdd(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 180 | 0;
  r7 = r6;
  r8 = r6 + 92;
  r9 = r6 + 136;
  __ZN5Avoid7PolygonC1Ev(r8);
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb(r7, r2, r8);
  __ZN5Avoid7PolygonD1Ev(r8);
  r8 = r1 + 672 | 0;
  r10 = HEAP32[r7 >> 2];
  r11 = HEAP32[r7 + 4 >> 2];
  r12 = r1 + 676 | 0;
  while (1) {
    r13 = HEAP32[r12 >> 2];
    if ((r13 | 0) == (r8 | 0)) {
      r5 = 1596;
      break;
    }
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r13 + 8 | 0, r10, r11)) {
      r5 = 1594;
      break;
    } else {
      r12 = r13 + 4 | 0;
    }
  }
  if (r5 == 1596) {
    __ZN5Avoid7PolygonC1Ev(r9);
    __ZN5Avoid7PolygonaSERKS0_(r9, __ZNK5Avoid8ShapeRef7polygonEv(r2));
  } else if (r5 == 1594) {
    __ZN5Avoid7PolygonC1Ev(r9);
    __ZN5Avoid7PolygonaSERKS0_(r9, r13 + 16 | 0);
  }
  __ZN5Avoid7Polygon9translateEdd(r9, r3, r4);
  __ZN5Avoid6Router9moveShapeEPNS_8ShapeRefERKNS_7PolygonEb(r1, r2, r9);
  __ZN5Avoid7PolygonD1Ev(r9);
  __ZN5Avoid10ActionInfoD1Ev(r7);
  STACKTOP = r6;
  return;
}
__ZN5Avoid6Router9moveShapeEPNS_8ShapeRefEdd["X"] = 1;
function __ZN5Avoid6Router9moveShapeEPNS_8ShapeRefERKNS_7PolygonEb(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 276 | 0;
  r6 = r5;
  r7 = r5 + 92;
  r8 = r5 + 184;
  r9 = r1 + 672 | 0;
  r10 = r1 + 676 | 0;
  r11 = HEAP32[r10 >> 2];
  r12 = r9;
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE(r6, 2, r2);
  L1856 : do {
    if ((r11 | 0) != (r12 | 0)) {
      r13 = HEAP32[r6 >> 2];
      r14 = HEAP32[r6 + 4 >> 2];
      r15 = r11;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r15 + 8 | 0, r13, r14)) {
          break;
        }
        r16 = HEAP32[r15 + 4 >> 2];
        if ((r16 | 0) == (r12 | 0)) {
          break L1856;
        } else {
          r15 = r16;
        }
      }
      ___assert_func(5248184, 335, 5258212, 5252800);
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r6);
  r6 = HEAP32[r10 >> 2];
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE(r7, 1, r2);
  L1863 : do {
    if ((r6 | 0) != (r12 | 0)) {
      r11 = HEAP32[r7 >> 2];
      r15 = HEAP32[r7 + 4 >> 2];
      r14 = r6;
      while (1) {
        r17 = r14 + 8 | 0;
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r17, r11, r15)) {
          break;
        }
        r13 = HEAP32[r14 + 4 >> 2];
        if ((r13 | 0) == (r12 | 0)) {
          break L1863;
        } else {
          r14 = r13;
        }
      }
      __ZN5Avoid10ActionInfoD1Ev(r7);
      __ZN5Avoid8Obstacle10setNewPolyERKNS_7PolygonE(__ZNK5Avoid10ActionInfo5shapeEv(r17), r3);
      STACKTOP = r5;
      return;
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r7);
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb(r8, r2, r3);
  r2 = HEAP32[r8 >> 2];
  r7 = HEAP32[r8 + 4 >> 2];
  r17 = r10;
  while (1) {
    r18 = HEAP32[r17 >> 2];
    if ((r18 | 0) == (r12 | 0)) {
      r4 = 1618;
      break;
    }
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r18 + 8 | 0, r2, r7)) {
      r4 = 1616;
      break;
    } else {
      r17 = r18 + 4 | 0;
    }
  }
  if (r4 == 1618) {
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r9, r8);
  } else if (r4 == 1616) {
    __ZN5Avoid7PolygonaSERKS0_(r18 + 16 | 0, r3);
  }
  if ((HEAP8[r1 + 688 | 0] & 1) << 24 >> 24 == 0) {
    __ZN5Avoid6Router18processTransactionEv(r1);
  }
  __ZN5Avoid10ActionInfoD1Ev(r8);
  STACKTOP = r5;
  return;
}
__ZN5Avoid6Router9moveShapeEPNS_8ShapeRefERKNS_7PolygonEb["X"] = 1;
function __ZN5Avoid6Router26regenerateStaticBuiltGraphEv(r1) {
  var r2, r3;
  r2 = r1 + 890 | 0;
  if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
    return;
  }
  if ((HEAP8[r1 + 889 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid6Router25destroyOrthogonalVisGraphEv(r1);
    r3 = r1 + 148 | 0;
    __ZN5Avoid5Timer8RegisterENS_10TimerIndexEb(r3, 6);
    __ZN5Avoid32generateStaticOrthogonalVisGraphEPNS_6RouterE(r1);
    __ZN5Avoid5Timer4StopEv(r3);
  }
  HEAP8[r2] = 0;
  return;
}
function __ZN5Avoid6Router14processActionsEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r3 = r2 + 4;
  if ((HEAP8[r1 + 143 | 0] & 1) << 24 >> 24 == 0) {
    r4 = 1;
  } else {
    r4 = (HEAP8[r1 + 136 | 0] & 1) << 24 >> 24 == 0;
  }
  HEAP32[r1 + 876 >> 2] = _clock();
  HEAP8[r1 + 880 | 0] = 0;
  r5 = r1 + 672 | 0;
  r6 = (r1 + 676 | 0) >> 2;
  r7 = r5;
  __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r2, HEAP32[r6], r7, HEAP32[r1 + 680 >> 2]);
  r8 = HEAP32[r6];
  L1894 : do {
    if ((r8 | 0) != (r7 | 0)) {
      r9 = r1 + 142 | 0;
      r10 = r1 + 689 | 0;
      r11 = 0;
      r12 = r8;
      while (1) {
        r13 = r12 + 8 | 0;
        r14 = r13 | 0;
        r15 = HEAP32[r14 >> 2];
        do {
          if ((r15 | 0) == 2 | (r15 | 0) == 0 | (r15 | 0) == 5 | (r15 | 0) == 3) {
            r16 = __ZNK5Avoid10ActionInfo8obstacleEv(r13);
            r17 = __ZNK5Avoid10ActionInfo5shapeEv(r13);
            r18 = __ZNK5Avoid10ActionInfo8junctionEv(r13);
            r19 = HEAP32[r14 >> 2];
            r20 = HEAP8[r12 + 84 | 0];
            r21 = r16;
            r22 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r16 + 8 >> 2]);
            __ZN5Avoid8Obstacle15removeFromGraphEv(r21);
            do {
              if ((HEAP8[r9] & 1) << 24 >> 24 != 0) {
                if (!(r4 | (r19 | 0) != 3 & (r19 | 0) != 0 | (r20 & 1) << 24 >> 24 != 0)) {
                  break;
                }
                __ZN5Avoid6Router14markConnectorsEPNS_8ObstacleE(r1, r16);
              }
            } while (0);
            __ZN5Avoid6Router21adjustContainsWithDelEi(r1, r22);
            if ((r19 | 0) == 3 | (r19 | 0) == 0) {
              if ((r17 | 0) != 0) {
                __ZN5Avoid8ShapeRef17moveAttachedConnsERKNS_7PolygonE(r17, r12 + 16 | 0);
                __ZN5Avoid8Obstacle12makeInactiveEv(r21);
                r23 = 1;
                break;
              }
              if ((r18 | 0) != 0) {
                __ZN5Avoid11JunctionRef17moveAttachedConnsERKNS_5PointE(r18, r12 + 60 | 0);
              }
              __ZN5Avoid8Obstacle12makeInactiveEv(r21);
              if ((r19 | 0) == 3 | (r19 | 0) == 0) {
                r23 = 1;
                break;
              }
            } else {
              __ZN5Avoid8Obstacle12makeInactiveEv(r21);
            }
            HEAP8[r10] = 1;
            if ((r16 | 0) != 0) {
              FUNCTION_TABLE[HEAP32[HEAP32[r16 >> 2] + 4 >> 2]](r16);
            }
            HEAP8[r10] = 0;
            r23 = 1;
          } else {
            r23 = r11;
          }
        } while (0);
        r14 = HEAP32[r12 + 4 >> 2];
        if ((r14 | 0) == (r7 | 0)) {
          break;
        } else {
          r11 = r23;
          r12 = r14;
        }
      }
      if ((r23 & 1) << 24 >> 24 == 0) {
        break;
      }
      if ((HEAP8[r1 + 888 | 0] & 1) << 24 >> 24 == 0) {
        break;
      }
      if ((HEAP8[r1 + 141 | 0] & 1) << 24 >> 24 == 0) {
        __ZN5Avoid6Router20checkAllMissingEdgesEv(r1);
        break;
      }
      r12 = HEAP32[r6];
      if ((r12 | 0) == (r7 | 0)) {
        break;
      } else {
        r24 = r12;
      }
      while (1) {
        r12 = r24 + 8 | 0;
        r11 = HEAP32[r12 >> 2];
        if ((r11 | 0) == 2 | (r11 | 0) == 0 | (r11 | 0) == 5 | (r11 | 0) == 3) {
          __ZN5Avoid6Router20checkAllBlockedEdgesEi(r1, __ZNK5Avoid8Obstacle2idEv(HEAP32[__ZNK5Avoid10ActionInfo8obstacleEv(r12) + 8 >> 2]));
        }
        r12 = HEAP32[r24 + 4 >> 2];
        if ((r12 | 0) == (r7 | 0)) {
          break L1894;
        } else {
          r24 = r12;
        }
      }
    }
  } while (0);
  r24 = HEAP32[r6];
  if ((r24 | 0) == (r7 | 0)) {
    __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5clearEv(r5);
    STACKTOP = r2;
    return;
  }
  r23 = r1 + 888 | 0;
  r8 = r1 + 140 | 0;
  r12 = r24;
  while (1) {
    r24 = r12 + 8 | 0;
    r11 = r24 | 0;
    r10 = HEAP32[r11 >> 2];
    if ((r10 | 0) == 1 | (r10 | 0) == 0 | (r10 | 0) == 4 | (r10 | 0) == 3) {
      r10 = __ZNK5Avoid10ActionInfo8obstacleEv(r24);
      r9 = __ZNK5Avoid10ActionInfo5shapeEv(r24);
      r14 = __ZNK5Avoid10ActionInfo8junctionEv(r24);
      r24 = r12 + 16 | 0;
      r13 = HEAP32[r11 >> 2];
      r11 = r10;
      r15 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r10 + 8 >> 2]);
      __ZN5Avoid8Obstacle10makeActiveEv(r11);
      do {
        if ((r13 | 0) == 3 | (r13 | 0) == 0) {
          if ((r9 | 0) == 0) {
            __ZN5Avoid11JunctionRef11setPositionERKNS_5PointE(r14, r12 + 60 | 0);
            break;
          } else {
            __ZN5Avoid8Obstacle10setNewPolyERKNS_7PolygonE(r9, r24);
            break;
          }
        }
      } while (0);
      __ZNK5Avoid8Obstacle14routingPolygonEv(r3, r11);
      __ZN5Avoid6Router21adjustContainsWithAddERKNS_7PolygonEi(r1, r3, r15);
      if ((HEAP8[r23] & 1) << 24 >> 24 != 0) {
        if (r4 | (r13 | 0) != 3 & (r13 | 0) != 0) {
          __ZN5Avoid6Router16newBlockingShapeERKNS_7PolygonEi(r1, r3, r15);
        }
        if ((HEAP8[r8] & 1) << 24 >> 24 == 0) {
          __ZN5Avoid8Obstacle22computeVisibilityNaiveEv(r10);
        } else {
          __ZN5Avoid8Obstacle22computeVisibilitySweepEv(r10);
        }
        __ZN5Avoid8Obstacle27updatePinPolyLineVisibilityEv(r11);
      }
      __ZN5Avoid7PolygonD1Ev(r3);
    }
    r24 = HEAP32[r12 + 4 >> 2];
    if ((r24 | 0) == (r7 | 0)) {
      break;
    } else {
      r12 = r24;
    }
  }
  r12 = HEAP32[r6];
  if ((r12 | 0) == (r7 | 0)) {
    __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5clearEv(r5);
    STACKTOP = r2;
    return;
  } else {
    r25 = r12;
  }
  while (1) {
    r12 = r25 + 8 | 0;
    L1960 : do {
      if ((HEAP32[r12 >> 2] | 0) == 6) {
        r6 = HEAP32[r25 + 92 >> 2];
        r3 = r25 + 88 | 0;
        if ((r6 | 0) == (r3 | 0)) {
          break;
        } else {
          r26 = r6;
        }
        while (1) {
          __ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE(__ZNK5Avoid10ActionInfo4connEv(r12), HEAP32[r26 + 8 >> 2], r26 + 12 | 0);
          r6 = HEAP32[r26 + 4 >> 2];
          if ((r6 | 0) == (r3 | 0)) {
            break L1960;
          } else {
            r26 = r6;
          }
        }
      }
    } while (0);
    r12 = HEAP32[r25 + 4 >> 2];
    if ((r12 | 0) == (r7 | 0)) {
      break;
    } else {
      r25 = r12;
    }
  }
  __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5clearEv(r5);
  STACKTOP = r2;
  return;
}
__ZN5Avoid6Router14processActionsEv["X"] = 1;
function __ZN5Avoid6Router14markConnectorsEPNS_8ObstacleE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 168 | 0;
  r5 = r4;
  r6 = r4 + 24;
  r7 = r4 + 48;
  r8 = r4 + 72;
  r9 = r4 + 96;
  r10 = r4 + 120;
  r11 = r4 + 144;
  if ((HEAP8[r1 + 144 | 0] & 1) << 24 >> 24 != 0) {
    STACKTOP = r4;
    return;
  }
  if ((HEAP8[r1 + 142 | 0] & 1) << 24 >> 24 == 0) {
    ___assert_func(5248184, 1504, 5258548, 5250076);
  }
  r12 = r1 + 16 | 0;
  r13 = HEAP32[r1 + 20 >> 2];
  if ((r13 | 0) == (r12 | 0)) {
    STACKTOP = r4;
    return;
  }
  r1 = r5;
  r14 = r6;
  r15 = (r5 | 0) >> 2;
  r16 = (r5 + 8 | 0) >> 2;
  r17 = (r6 | 0) >> 2;
  r18 = (r6 + 8 | 0) >> 2;
  r19 = r11 | 0;
  r20 = r11 + 8 | 0;
  r21 = r7 + 8 | 0;
  r22 = r7 | 0;
  r23 = r8;
  r24 = r9;
  r25 = r8 | 0;
  r26 = r8 + 8 | 0;
  r27 = r9 | 0;
  r28 = r9 + 8 | 0;
  r29 = r10 + 8 | 0;
  r30 = r10 | 0;
  r31 = r2 + 64 | 0;
  r32 = r2 + 68 | 0;
  r2 = r13;
  while (1) {
    r13 = HEAP32[r2 + 8 >> 2];
    r33 = r13 + 20 | 0;
    L1978 : do {
      if (!__ZNK5Avoid7Polygon5emptyEv(r33)) {
        r34 = r13 + 16 | 0;
        if ((HEAP8[r34] & 1) << 24 >> 24 != 0) {
          break;
        }
        r35 = HEAP32[r13 + 28 >> 2];
        r36 = r35 >> 2;
        HEAP32[r1 >> 2] = HEAP32[r36];
        HEAP32[r1 + 4 >> 2] = HEAP32[r36 + 1];
        HEAP32[r1 + 8 >> 2] = HEAP32[r36 + 2];
        HEAP32[r1 + 12 >> 2] = HEAP32[r36 + 3];
        HEAP32[r1 + 16 >> 2] = HEAP32[r36 + 4];
        HEAP32[r1 + 20 >> 2] = HEAP32[r36 + 5];
        r36 = (r35 + ((__ZNK5Avoid7Polygon4sizeEv(r33) - 1) * 24 & -1) | 0) >> 2;
        HEAP32[r14 >> 2] = HEAP32[r36];
        HEAP32[r14 + 4 >> 2] = HEAP32[r36 + 1];
        HEAP32[r14 + 8 >> 2] = HEAP32[r36 + 2];
        HEAP32[r14 + 12 >> 2] = HEAP32[r36 + 3];
        HEAP32[r14 + 16 >> 2] = HEAP32[r36 + 4];
        HEAP32[r14 + 20 >> 2] = HEAP32[r36 + 5];
        r36 = r13 + 108 | 0;
        r35 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r36 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r36 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r36 = __ZN5Avoid8Obstacle9firstVertEv(HEAP32[r31 >> 2]);
        r37 = HEAP32[__ZN5Avoid8Obstacle8lastVertEv(HEAP32[r32 >> 2]) + 40 >> 2];
        r38 = r37;
        if ((r36 | 0) == (r37 | 0)) {
          break;
        }
        r37 = r36;
        while (1) {
          r36 = r37 + 12 | 0;
          r39 = HEAP32[r37 + 48 >> 2];
          r40 = r39 + 12 | 0;
          r41 = r37 + 20 | 0, r42 = r41 >> 2;
          r43 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r42], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r42 + 1], HEAPF64[tempDoublePtr >> 3]);
          r44 = r39 + 20 | 0;
          r39 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r44 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r44 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          do {
            if (r43 == r39) {
              r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 1], HEAPF64[tempDoublePtr >> 3]);
              r46 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 1], HEAPF64[tempDoublePtr >> 3]) - r43;
              r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]);
              r48 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]) - r43;
              r49 = r36 | 0;
              r50 = r40 | 0;
              r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r50 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r49 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r49 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r52 = r43;
              r53 = r45;
              r54 = r48;
              r55 = r47;
              r56 = r46;
              r57 = r51 < r50 ? r51 : r50;
              r58 = r50 < r51 ? r51 : r50;
            } else {
              r50 = (r36 | 0) >> 2;
              r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r50], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 1], HEAPF64[tempDoublePtr >> 3]);
              r46 = r40 | 0;
              r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              if (r51 == r47) {
                r46 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 1], HEAPF64[tempDoublePtr >> 3]);
                r48 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 1], HEAPF64[tempDoublePtr >> 3]) - r51;
                r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]);
                r49 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]) - r51;
                r59 = r39 < r43 ? r44 : r41;
                r60 = r43 < r39 ? r44 : r41;
                r52 = r51;
                r53 = r46;
                r54 = r49;
                r55 = r45;
                r56 = r48;
                r57 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r59 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r59 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r58 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r60 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r60 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                break;
              } else {
                __ZN5Avoid5PointC1Edd(r7, r47 - r51, r39 - r43);
                r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r50], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 1], HEAPF64[tempDoublePtr >> 3]);
                __ZN5Avoid5PointC1Edd(r8, r51, (HEAP32[tempDoublePtr >> 2] = HEAP32[r16], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r42], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r42 + 1], HEAPF64[tempDoublePtr >> 3]));
                r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r50], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 1], HEAPF64[tempDoublePtr >> 3]);
                __ZN5Avoid5PointC1Edd(r9, r51, (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r42], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r42 + 1], HEAPF64[tempDoublePtr >> 3]));
                r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r47 = -Math.atan2(r51, r50);
                __ZN5Avoid5PointC1Edd(r10, 0, 0);
                HEAP32[r1 >> 2] = HEAP32[r23 >> 2];
                HEAP32[r1 + 4 >> 2] = HEAP32[r23 + 4 >> 2];
                HEAP32[r1 + 8 >> 2] = HEAP32[r23 + 8 >> 2];
                HEAP32[r1 + 12 >> 2] = HEAP32[r23 + 12 >> 2];
                HEAP32[r1 + 16 >> 2] = HEAP32[r23 + 16 >> 2];
                HEAP16[r1 + 20 >> 1] = HEAP16[r23 + 20 >> 1];
                HEAP32[r14 >> 2] = HEAP32[r24 >> 2];
                HEAP32[r14 + 4 >> 2] = HEAP32[r24 + 4 >> 2];
                HEAP32[r14 + 8 >> 2] = HEAP32[r24 + 8 >> 2];
                HEAP32[r14 + 12 >> 2] = HEAP32[r24 + 12 >> 2];
                HEAP32[r14 + 16 >> 2] = HEAP32[r24 + 16 >> 2];
                HEAP16[r14 + 20 >> 1] = HEAP16[r24 + 20 >> 1];
                r60 = Math.cos(r47);
                r59 = Math.sin(r47);
                r47 = r60 * r50 - r59 * r51;
                r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r26 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r26 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r48 = r60 * r51 - r59 * r50;
                HEAPF64[tempDoublePtr >> 3] = r48, HEAP32[r15] = HEAP32[tempDoublePtr >> 2], HEAP32[r15 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r45 = r60 * r50 + r59 * r51;
                HEAPF64[tempDoublePtr >> 3] = r45, HEAP32[r16] = HEAP32[tempDoublePtr >> 2], HEAP32[r16 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r28 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r28 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r49 = r60 * r51 - r59 * r50;
                HEAPF64[tempDoublePtr >> 3] = r49, HEAP32[r17] = HEAP32[tempDoublePtr >> 2], HEAP32[r17 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r46 = r60 * r50 + r59 * r51;
                HEAPF64[tempDoublePtr >> 3] = r46, HEAP32[r18] = HEAP32[tempDoublePtr >> 2], HEAP32[r18 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r51 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r29 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r29 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r59 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r30 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r30 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r52 = r51;
                r53 = r48;
                r54 = r46 - r51;
                r55 = r49;
                r56 = r45 - r51;
                r57 = r47 < r59 ? r47 : r59;
                r58 = r59 < r47 ? r47 : r59;
                break;
              }
            }
          } while (0);
          if (r56 + r54 == 0) {
            r61 = r54 * -1;
          } else {
            r61 = r54;
          }
          do {
            if (r56 == 0 & r61 == 0) {
              if (r53 < r57 & r55 < r57) {
                r62 = r53;
                r3 = 1707;
                break;
              }
              if (r53 > r58 & r55 > r58) {
                r62 = r53;
                r3 = 1707;
                break;
              } else {
                break;
              }
            } else {
              r62 = (r56 * r55 + r53 * r61) / (r56 + r61);
              r3 = 1707;
              break;
            }
          } while (0);
          if (r3 == 1707) {
            r3 = 0;
            r42 = r57 < r62 ? r62 : r57;
            r43 = r42 < r58 ? r42 : r58;
            __ZN5Avoid5PointC1Ev(r11);
            r42 = r36 | 0;
            r39 = r40 | 0;
            r41 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r42 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r42 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r39 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r39 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r39 = r41 ? r52 : r43;
            r42 = r41 ? r43 : r52;
            HEAPF64[tempDoublePtr >> 3] = r39, HEAP32[r19 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r19 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
            HEAPF64[tempDoublePtr >> 3] = r42, HEAP32[r20 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r20 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
            if (__ZN5Avoid13euclideanDistERKNS_5PointES2_(r5, r11) + __ZN5Avoid13euclideanDistERKNS_5PointES2_(r11, r6) < r35) {
              break;
            }
          }
          r42 = HEAP32[r37 + 40 >> 2];
          if ((r42 | 0) == (r38 | 0)) {
            break L1978;
          } else {
            r37 = r42;
          }
        }
        HEAP8[r34] = HEAP8[r34] | 1;
      }
    } while (0);
    r13 = HEAP32[r2 + 4 >> 2];
    if ((r13 | 0) == (r12 | 0)) {
      break;
    } else {
      r2 = r13;
    }
  }
  STACKTOP = r4;
  return;
}
__ZN5Avoid6Router14markConnectorsEPNS_8ObstacleE["X"] = 1;
function __ZN5Avoid6Router21adjustContainsWithDelEi(r1, r2) {
  var r3, r4, r5, r6;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = HEAP32[r1 + 88 >> 2];
  r6 = r1 + 92 | 0;
  if ((r5 | 0) == (r6 | 0)) {
    STACKTOP = r3;
    return;
  }
  r1 = r6;
  r6 = r5;
  while (1) {
    HEAP32[r4 >> 2] = r2;
    __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE14__erase_uniqueIjEEjRKT_(r6 + 24 | 0, r4);
    r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r6 | 0);
    if ((r5 | 0) == (r1 | 0)) {
      break;
    } else {
      r6 = r5;
    }
  }
  STACKTOP = r3;
  return;
}
function __ZN5Avoid6Router20checkAllBlockedEdgesEi(r1, r2) {
  var r3, r4, r5;
  if ((HEAP8[r1 + 141 | 0] & 1) << 24 >> 24 == 0) {
    ___assert_func(5248184, 1350, 5258500, 5250312);
  }
  r3 = __ZN5Avoid8EdgeList5beginEv(HEAP32[r1 + 60 >> 2]);
  if ((r3 | 0) == 0) {
    return;
  }
  r1 = r3;
  while (1) {
    r3 = HEAP32[r1 + 4 >> 2];
    r4 = r1;
    r5 = __ZNK5Avoid7EdgeInf7blockerEv(HEAP32[r1 + 12 >> 2]);
    do {
      if ((r5 | 0) == -1) {
        __ZN5Avoid7EdgeInf10alertConnsEv(r4);
        __ZN5Avoid7EdgeInf8checkVisEv(r4);
      } else {
        if ((r5 | 0) != (r2 | 0)) {
          break;
        }
        __ZN5Avoid7EdgeInf8checkVisEv(r4);
      }
    } while (0);
    if ((r3 | 0) == 0) {
      break;
    } else {
      r1 = r3;
    }
  }
  return;
}
function __ZN5Avoid6Router20checkAllMissingEdgesEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 8;
  if ((HEAP8[r1 + 141 | 0] & 1) << 24 >> 24 != 0) {
    ___assert_func(5248184, 1372, 5258456, 5250184);
  }
  r6 = __ZN5Avoid11VertInfList10connsBeginEv(r1 + 100 | 0);
  r1 = r6;
  if ((r6 | 0) == 0) {
    STACKTOP = r3;
    return;
  }
  r6 = r4 | 0;
  r7 = r5 | 0;
  r8 = r4 + 6 | 0;
  r9 = r1;
  while (1) {
    __ZN5Avoid6VertIDC1ERKS0_(r4, r9 + 4 | 0);
    L2035 : do {
      if ((r1 | 0) != (r9 | 0)) {
        r10 = r9;
        r11 = r1;
        while (1) {
          __ZN5Avoid6VertIDC1ERKS0_(r5, r11 + 4 | 0);
          r12 = HEAP16[r8 >> 1];
          do {
            if (__ZNK5Avoid6VertID8isConnPtEv(r12)) {
              if (__ZNK5Avoid6VertID15isConnectionPinEv(r12)) {
                r2 = 1742;
                break;
              }
              if ((HEAP32[r6 >> 2] | 0) == (HEAP32[r7 >> 2] | 0)) {
                r2 = 1742;
                break;
              } else {
                break;
              }
            } else {
              r2 = 1742;
            }
          } while (0);
          do {
            if (r2 == 1742) {
              r2 = 0;
              r12 = r11;
              if ((__ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_(r10, r12) | 0) != 0) {
                break;
              }
              __ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b(r10, r12);
            }
          } while (0);
          r12 = HEAP32[r11 + 40 >> 2];
          if ((r12 | 0) == (r9 | 0)) {
            break L2035;
          } else {
            r11 = r12;
          }
        }
      }
    } while (0);
    r11 = HEAP32[r9 + 40 >> 2];
    if ((r11 | 0) == 0) {
      break;
    } else {
      r9 = r11;
    }
  }
  STACKTOP = r3;
  return;
}
__ZN5Avoid6Router20checkAllMissingEdgesEv["X"] = 1;
function __ZN5Avoid6Router21adjustContainsWithAddERKNS_7PolygonEi(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r1 + 100 | 0;
  r8 = __ZN5Avoid11VertInfList10connsBeginEv(r7);
  r9 = r7;
  if ((r8 | 0) == (__ZN5Avoid11VertInfList11shapesBeginEv(HEAP32[r9 >> 2]) | 0)) {
    STACKTOP = r4;
    return;
  }
  r7 = r1 + 88 | 0;
  r1 = r8;
  while (1) {
    if (__ZN5Avoid6inPolyERKNS_7PolygonERKNS_5PointEb(r2, r1 + 12 | 0)) {
      r8 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r7, r1 + 4 | 0);
      HEAP32[r6 >> 2] = r3;
      __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj(r5, r8 | 0, r6);
    }
    r8 = HEAP32[r1 + 40 >> 2];
    if ((r8 | 0) == (__ZN5Avoid11VertInfList11shapesBeginEv(HEAP32[r9 >> 2]) | 0)) {
      break;
    } else {
      r1 = r8;
    }
  }
  STACKTOP = r4;
  return;
}



function __ZN5Avoid6Router16newBlockingShapeERKNS_7PolygonEi(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 132 | 0;
  r5 = r4;
  r6 = r4 + 16;
  r7 = r4 + 24;
  r8 = r4 + 32;
  r9 = r4 + 80;
  r10 = r4 + 104;
  r11 = r4 + 128;
  r12 = __ZN5Avoid8EdgeList5beginEv(HEAP32[r1 + 44 >> 2]);
  if ((r12 | 0) == 0) {
    STACKTOP = r4;
    return;
  }
  r13 = r5;
  r14 = r5 | 0;
  r15 = r5 + 8 | 0;
  r5 = r8;
  r16 = r9 >> 2;
  r17 = r8 >> 2;
  r18 = r10 >> 2;
  r19 = (r8 + 24 | 0) >> 2;
  r8 = r2;
  r20 = r2 + 8 | 0;
  r21 = r1 + 141 | 0;
  r1 = r6 + 6 | 0;
  r22 = r7 + 6 | 0;
  r23 = r12, r12 = r23 >> 2;
  while (1) {
    r24 = HEAP32[r12 + 1];
    r25 = r23 + 52 | 0;
    L2064 : do {
      if (__ZN5Avoid7EdgeInf7getDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) != 0) {
        r26 = r23;
        __ZNK5Avoid7EdgeInf3idsEv(r13, r26);
        __ZN5Avoid6VertIDC1ERKS0_(r6, r14);
        __ZN5Avoid6VertIDC1ERKS0_(r7, r15);
        __ZNK5Avoid7EdgeInf6pointsEv(r5, HEAP32[r12 + 6], HEAP32[r12 + 7]);
        HEAP32[r16] = HEAP32[r17];
        HEAP32[r16 + 1] = HEAP32[r17 + 1];
        HEAP32[r16 + 2] = HEAP32[r17 + 2];
        HEAP32[r16 + 3] = HEAP32[r17 + 3];
        HEAP32[r16 + 4] = HEAP32[r17 + 4];
        HEAP32[r16 + 5] = HEAP32[r17 + 5];
        HEAP32[r18] = HEAP32[r19];
        HEAP32[r18 + 1] = HEAP32[r19 + 1];
        HEAP32[r18 + 2] = HEAP32[r19 + 2];
        HEAP32[r18 + 3] = HEAP32[r19 + 3];
        HEAP32[r18 + 4] = HEAP32[r19 + 4];
        HEAP32[r18 + 5] = HEAP32[r19 + 5];
        if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r1 >> 1])) {
          r27 = __ZN5Avoid6inPolyERKNS_7PolygonERKNS_5PointEb(r2, r9);
        } else {
          r27 = 0;
        }
        if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r22 >> 1])) {
          r28 = __ZN5Avoid6inPolyERKNS_7PolygonERKNS_5PointEb(r2, r10);
        } else {
          r28 = 0;
        }
        if (r27 | r28) {
          break;
        }
        HEAP8[r11] = 0;
        r29 = 0;
        while (1) {
          if (r29 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 16 >> 2]](r2) >>> 0) {
            break L2064;
          }
          r30 = r29 + 1 | 0;
          r31 = (r29 | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 16 >> 2]](r2) - 1 | 0) ? 0 : r30;
          r32 = HEAP32[r20 >> 2];
          if (__ZN5Avoid21segmentShapeIntersectERKNS_5PointES2_S2_S2_Rb(r9, r10, r32 + (r29 * 24 & -1) | 0, r32 + (r31 * 24 & -1) | 0, r11)) {
            break;
          } else {
            r29 = r30;
          }
        }
        __ZN5Avoid7EdgeInf10alertConnsEv(r26);
        if ((HEAP8[r21] & 1) << 24 >> 24 != 0) {
          __ZN5Avoid7EdgeInf10addBlockerEi(r26, r3);
          break;
        }
        if ((r23 | 0) == 0) {
          break;
        }
        __ZN5Avoid7EdgeInfD1Ev(r26);
        __ZdlPv(r23);
      }
    } while (0);
    if ((r24 | 0) == 0) {
      break;
    } else {
      r23 = r24, r12 = r23 >> 2;
    }
  }
  STACKTOP = r4;
  return;
}
__ZN5Avoid6Router16newBlockingShapeERKNS_7PolygonEi["X"] = 1;
function __ZN5Avoid6Router28rerouteAndCallbackConnectorsEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 28 | 0;
  r3 = r2;
  r4 = r2 + 4;
  r5 = r2 + 16;
  r6 = r4;
  HEAP32[r4 >> 2] = r6;
  r7 = r4 + 4 | 0;
  HEAP32[r7 >> 2] = r6;
  HEAP32[r4 + 8 >> 2] = 0;
  r8 = r1 + 16 | 0;
  __ZN5Avoid23ConnRerouteFlagDelegate10alertConnsEv(r1 + 760 | 0);
  __ZN5Avoid6Router26regenerateStaticBuiltGraphEv(r1);
  r9 = r1 + 20 | 0;
  r10 = HEAP32[r9 >> 2];
  L2086 : do {
    if ((r10 | 0) != (r8 | 0)) {
      r11 = r10;
      while (1) {
        __ZN5Avoid7ConnRef14freeActivePinsEv(HEAP32[r11 + 8 >> 2]);
        r12 = HEAP32[r11 + 4 >> 2];
        if ((r12 | 0) == (r8 | 0)) {
          break L2086;
        } else {
          r11 = r12;
        }
      }
    }
  } while (0);
  r10 = r1 + 772 | 0;
  __ZN5Avoid17HyperedgeRerouter23calcHyperedgeConnectorsEv(r5, r10);
  r11 = r1 + 148 | 0;
  __ZN5Avoid5Timer8RegisterENS_10TimerIndexEb(r11, 7);
  r12 = HEAP32[r9 >> 2];
  L2092 : do {
    if ((r12 | 0) != (r8 | 0)) {
      r9 = r5 | 0;
      r13 = r3 | 0;
      r14 = r5 + 4 | 0;
      r15 = r4;
      r16 = r12;
      while (1) {
        r17 = r16 + 8 | 0;
        __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r3, r9, r17);
        do {
          if ((HEAP32[r13 >> 2] | 0) == (r14 | 0)) {
            r18 = HEAP32[r17 >> 2] + 16 | 0;
            HEAP8[r18] = HEAP8[r18] & -5;
            if (!__ZN5Avoid7ConnRef12generatePathEv(HEAP32[r17 >> 2])) {
              break;
            }
            __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_(r15, r17);
          }
        } while (0);
        r17 = HEAP32[r16 + 4 >> 2];
        if ((r17 | 0) == (r8 | 0)) {
          break L2092;
        } else {
          r16 = r17;
        }
      }
    }
  } while (0);
  __ZN5Avoid5Timer4StopEv(r11);
  __ZN5Avoid17HyperedgeRerouter16performReroutingEv(r10);
  __ZN5Avoid6Router16improveCrossingsEv(r1);
  r10 = r1;
  if (__ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(r1, 1)) {
    __ZN5Avoid22improveHyperedgeRoutesEPNS_6RouterE(r10);
  }
  __ZN5Avoid23improveOrthogonalRoutesEPNS_6RouterE(r10);
  r10 = HEAP32[r7 >> 2];
  if ((r10 | 0) == (r6 | 0)) {
    __ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r5);
    r19 = r4;
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r19);
    STACKTOP = r2;
    return;
  } else {
    r20 = r10;
  }
  while (1) {
    r10 = r20 + 8 | 0;
    r7 = HEAP32[r10 >> 2] + 16 | 0;
    HEAP8[r7] = HEAP8[r7] | 4;
    __ZN5Avoid7ConnRef15performCallbackEv(HEAP32[r10 >> 2]);
    r10 = HEAP32[r20 + 4 >> 2];
    if ((r10 | 0) == (r6 | 0)) {
      break;
    } else {
      r20 = r10;
    }
  }
  __ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r5);
  r19 = r4;
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r19);
  STACKTOP = r2;
  return;
}
__ZN5Avoid6Router28rerouteAndCallbackConnectorsEv["X"] = 1;
function __ZN5Avoid6Router11addJunctionEPNS_11JunctionRefE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 276 | 0;
  r5 = r4;
  r6 = r4 + 92;
  r7 = r4 + 184;
  r8 = r1 + 672 | 0;
  r9 = r1 + 676 | 0;
  r10 = HEAP32[r9 >> 2];
  r11 = r8;
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r5, 5, r2);
  L2117 : do {
    if ((r10 | 0) != (r11 | 0)) {
      r12 = HEAP32[r5 >> 2];
      r13 = HEAP32[r5 + 4 >> 2];
      r14 = r10;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r14 + 8 | 0, r12, r13)) {
          break;
        }
        r15 = HEAP32[r14 + 4 >> 2];
        if ((r15 | 0) == (r11 | 0)) {
          break L2117;
        } else {
          r14 = r15;
        }
      }
      ___assert_func(5248184, 628, 5258664, 5251624);
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r5);
  r5 = HEAP32[r9 >> 2];
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r6, 3, r2);
  L2124 : do {
    if ((r5 | 0) != (r11 | 0)) {
      r10 = HEAP32[r6 >> 2];
      r14 = HEAP32[r6 + 4 >> 2];
      r13 = r5;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r13 + 8 | 0, r10, r14)) {
          break;
        }
        r12 = HEAP32[r13 + 4 >> 2];
        if ((r12 | 0) == (r11 | 0)) {
          break L2124;
        } else {
          r13 = r12;
        }
      }
      ___assert_func(5248184, 630, 5258664, 5251084);
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r6);
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r7, 4, r2);
  r2 = HEAP32[r7 >> 2];
  r6 = HEAP32[r7 + 4 >> 2];
  r5 = r9;
  while (1) {
    r9 = HEAP32[r5 >> 2];
    if ((r9 | 0) == (r11 | 0)) {
      r3 = 1822;
      break;
    }
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r9 + 8 | 0, r2, r6)) {
      break;
    } else {
      r5 = r9 + 4 | 0;
    }
  }
  if (r3 == 1822) {
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r8, r7);
  }
  if ((HEAP8[r1 + 688 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid10ActionInfoD1Ev(r7);
    STACKTOP = r4;
    return;
  }
  __ZN5Avoid6Router18processTransactionEv(r1);
  __ZN5Avoid10ActionInfoD1Ev(r7);
  STACKTOP = r4;
  return;
}
__ZN5Avoid6Router11addJunctionEPNS_11JunctionRefE["X"] = 1;
function __ZNK5Avoid6Router11newObjectIdEv(r1) {
  return HEAP32[r1 + 684 >> 2] + 1 | 0;
}
function __ZN5Avoid23ConnRerouteFlagDelegate10alertConnsEv(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = r1;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  } else {
    r4 = r2;
  }
  while (1) {
    r2 = HEAP32[r4 + 8 >> 2];
    do {
      if ((r2 | 0) != 0) {
        r1 = r4 + 12 | 0;
        if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
          break;
        }
        HEAP8[r1] = 0;
        r1 = r2 + 16 | 0;
        HEAP8[r1] = HEAP8[r1] | 1;
      }
    } while (0);
    r2 = HEAP32[r4 + 4 >> 2];
    if ((r2 | 0) == (r3 | 0)) {
      break;
    } else {
      r4 = r2;
    }
  }
  return;
}
function __ZN5Avoid6Router14deleteJunctionEPNS_11JunctionRefE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 280 | 0;
  r5 = r4;
  r6 = r4 + 92;
  r7 = r4 + 184;
  r8 = r4 + 188;
  r9 = r1 + 672 | 0;
  r10 = r1 + 676 | 0;
  r11 = HEAP32[r10 >> 2];
  r12 = r9;
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r5, 4, r2);
  L2153 : do {
    if ((r11 | 0) != (r12 | 0)) {
      r13 = HEAP32[r5 >> 2];
      r14 = HEAP32[r5 + 4 >> 2];
      r15 = r11;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r15 + 8 | 0, r13, r14)) {
          break;
        }
        r16 = HEAP32[r15 + 4 >> 2];
        if ((r16 | 0) == (r12 | 0)) {
          break L2153;
        } else {
          r15 = r16;
        }
      }
      ___assert_func(5248184, 654, 5258604, 5250748);
    }
  } while (0);
  __ZN5Avoid10ActionInfoD1Ev(r5);
  r5 = HEAP32[r10 >> 2];
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r6, 3, r2);
  L2160 : do {
    if ((r5 | 0) == (r12 | 0)) {
      r3 = 1852;
    } else {
      r11 = HEAP32[r6 >> 2];
      r15 = HEAP32[r6 + 4 >> 2];
      r14 = r5;
      while (1) {
        if (__ZNK5Avoid10ActionInfoeqERKS0_(r14 + 8 | 0, r11, r15)) {
          break;
        }
        r13 = HEAP32[r14 + 4 >> 2];
        if ((r13 | 0) == (r12 | 0)) {
          r3 = 1852;
          break L2160;
        } else {
          r14 = r13;
        }
      }
      __ZN5Avoid10ActionInfoD1Ev(r6);
      __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r7, r9, r14);
      break;
    }
  } while (0);
  if (r3 == 1852) {
    __ZN5Avoid10ActionInfoD1Ev(r6);
  }
  __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r8, 5, r2);
  r2 = HEAP32[r8 >> 2];
  r6 = HEAP32[r8 + 4 >> 2];
  r7 = r10;
  while (1) {
    r10 = HEAP32[r7 >> 2];
    if ((r10 | 0) == (r12 | 0)) {
      r3 = 1856;
      break;
    }
    if (__ZNK5Avoid10ActionInfoeqERKS0_(r10 + 8 | 0, r2, r6)) {
      break;
    } else {
      r7 = r10 + 4 | 0;
    }
  }
  if (r3 == 1856) {
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_(r9, r8);
  }
  if ((HEAP8[r1 + 688 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5Avoid10ActionInfoD1Ev(r8);
    STACKTOP = r4;
    return;
  }
  __ZN5Avoid6Router18processTransactionEv(r1);
  __ZN5Avoid10ActionInfoD1Ev(r8);
  STACKTOP = r4;
  return;
}
__ZN5Avoid6Router14deleteJunctionEPNS_11JunctionRefE["X"] = 1;
function __ZN5Avoid6Router8assignIdEj(r1) {
  var r2, r3;
  r2 = FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 8 >> 2]](r1);
  if (!__ZNK5Avoid6Router16objectIdIsUnusedEj(r1, r2)) {
    ___assert_func(5248184, 777, 5258300, 5250556);
  }
  r3 = r1 + 684 | 0;
  r1 = HEAP32[r3 >> 2];
  HEAP32[r3 >> 2] = r1 >>> 0 < r2 >>> 0 ? r2 : r1;
  return r2;
}
function __ZNK5Avoid6Router16objectIdIsUnusedEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = 0;
  r4 = r1 + 4 | 0;
  r5 = r1 + 8 | 0;
  while (1) {
    r6 = HEAP32[r5 >> 2];
    if ((r6 | 0) == (r4 | 0)) {
      break;
    }
    if ((__ZNK5Avoid8Obstacle2idEv(HEAP32[HEAP32[r6 + 8 >> 2] + 8 >> 2]) | 0) == (r2 | 0)) {
      r7 = 0;
      r3 = 1879;
      break;
    } else {
      r5 = r6 + 4 | 0;
    }
  }
  if (r3 == 1879) {
    return r7;
  }
  r5 = r1 + 16 | 0;
  r4 = r1 + 20 | 0;
  while (1) {
    r6 = HEAP32[r4 >> 2];
    if ((r6 | 0) == (r5 | 0)) {
      break;
    }
    if ((__ZNK5Avoid7ConnRef2idEv(HEAP32[HEAP32[r6 + 8 >> 2] + 4 >> 2]) | 0) == (r2 | 0)) {
      r7 = 0;
      r3 = 1877;
      break;
    } else {
      r4 = r6 + 4 | 0;
    }
  }
  if (r3 == 1877) {
    return r7;
  }
  r4 = r1 + 28 | 0;
  r5 = r1 + 32 | 0;
  while (1) {
    r1 = HEAP32[r5 >> 2];
    if ((r1 | 0) == (r4 | 0)) {
      r7 = 1;
      r3 = 1880;
      break;
    }
    if ((__ZNK5Avoid10ClusterRef2idEv(HEAP32[HEAP32[r1 + 8 >> 2] + 4 >> 2]) | 0) == (r2 | 0)) {
      r7 = 0;
      r3 = 1878;
      break;
    } else {
      r5 = r1 + 4 | 0;
    }
  }
  if (r3 == 1878) {
    return r7;
  } else if (r3 == 1880) {
    return r7;
  }
}
__ZNK5Avoid6Router16objectIdIsUnusedEj["X"] = 1;
function __ZN5Avoid6Router16improveCrossingsEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 192 | 0;
  r4 = r3;
  r5 = r3 + 8;
  r6 = r3 + 16;
  r7 = r3 + 20;
  r8 = r3 + 24;
  r9 = r3 + 36;
  r10 = r3 + 48;
  r11 = r3 + 60;
  r12 = r3 + 72;
  r13 = r3 + 84;
  r14 = r3 + 144;
  r15 = r3 + 156;
  r16 = r3 + 168;
  r17 = r3 + 180;
  r18 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r1, 2);
  r19 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r1, 4);
  if (r18 == 0 & r19 == 0) {
    STACKTOP = r3;
    return;
  }
  __ZN5Avoid6Router26performSlowRoutingCallBackEd(r1, 0);
  r20 = r1 + 880 | 0;
  if ((HEAP8[r20] & 1) << 24 >> 24 != 0) {
    STACKTOP = r3;
    return;
  }
  r21 = r1 + 891 | 0;
  HEAP8[r21] = 1;
  r22 = r8 | 0;
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS6_(r22);
  r23 = r9;
  HEAP32[r9 >> 2] = r23;
  r24 = r9 + 4 | 0;
  HEAP32[r24 >> 2] = r23;
  HEAP32[r9 + 8 >> 2] = 0;
  r25 = r1 + 16 | 0;
  r26 = HEAP32[r1 + 20 >> 2];
  L2209 : do {
    if ((r26 | 0) != (r25 | 0)) {
      r27 = (r10 | 0) >> 2;
      r28 = r10 + 8 | 0;
      r29 = (r11 | 0) >> 2;
      r30 = r11 + 8 | 0;
      r31 = r12 | 0;
      r32 = r12 + 8 | 0;
      r33 = r13;
      r34 = r19 > 0;
      r35 = r13 + 28 | 0;
      r36 = r1 + 758 | 0;
      r37 = r18 > 0;
      r38 = r13 + 24 | 0;
      r39 = r14 | 0;
      r40 = r14 + 8 | 0;
      r41 = r15 | 0;
      r42 = r15 + 8 | 0;
      r43 = r13 + 44 | 0;
      r44 = r13 + 52 | 0;
      r45 = r8 + 4 | 0;
      r46 = r26;
      while (1) {
        r47 = (r46 + 8 | 0) >> 2;
        r48 = __ZN5Avoid7ConnRef8routeRefEv(HEAP32[r47]);
        L2214 : do {
          if ((FUNCTION_TABLE[HEAP32[HEAP32[r48 >> 2] + 16 >> 2]](r48) | 0) == 0) {
            r49 = r46 + 4 | 0;
          } else {
            r50 = __ZN5AvoidL18cheapEstimatedCostEPNS_7ConnRefE(HEAP32[r47]);
            r51 = HEAP32[r47];
            HEAPF64[tempDoublePtr >> 3] = r50, HEAP32[r27] = HEAP32[tempDoublePtr >> 2], HEAP32[r27 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
            HEAP32[r28 >> 2] = r51;
            r51 = r46 + 4 | 0;
            r50 = HEAP32[r51 >> 2];
            if ((r50 | 0) == (r25 | 0)) {
              r49 = r51;
              break;
            } else {
              r52 = r50;
            }
            while (1) {
              r50 = (r52 + 8 | 0) >> 2;
              r53 = __ZN5AvoidL18cheapEstimatedCostEPNS_7ConnRefE(HEAP32[r50]);
              r54 = HEAP32[r50];
              HEAPF64[tempDoublePtr >> 3] = r53, HEAP32[r29] = HEAP32[tempDoublePtr >> 2], HEAP32[r29 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              HEAP32[r30 >> 2] = r54;
              r55 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 1], HEAPF64[tempDoublePtr >> 3]);
              r56 = HEAP32[r28 >> 2];
              HEAPF64[tempDoublePtr >> 3] = r53, HEAP32[r31 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r31 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
              HEAP32[r32 >> 2] = r54;
              L2220 : do {
                if (!__ZN5AvoidL17connsKnownToCrossERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_(r9, r55, r56, r12)) {
                  r57 = HEAP32[r45 >> 2];
                  if ((__ZNKSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__count_uniqueIS5_EEjRKT_(r57, r56) | 0) != 0) {
                    if ((__ZNKSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__count_uniqueIS5_EEjRKT_(r57, r54) | 0) != 0) {
                      break;
                    }
                  }
                  r57 = HEAP32[r50];
                  r58 = __ZN5Avoid7ConnRef8routeRefEv(r57);
                  __ZN5Avoid18ConnectorCrossingsC1ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r33, r48, 1, r58, HEAP32[r47], r57);
                  r57 = r58;
                  r59 = 1;
                  L2225 : while (1) {
                    if (r59 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r57 >> 2] + 16 >> 2]](r58) >>> 0) {
                      break L2220;
                    }
                    r60 = r59 + 1 | 0;
                    __ZN5Avoid18ConnectorCrossings15countForSegmentEjb(r33, r59, (r60 | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r57 >> 2] + 16 >> 2]](r58) | 0));
                    do {
                      if (r34) {
                        r61 = HEAP32[r35 >> 2];
                        if ((r61 & 10 | 0) != 10) {
                          break;
                        }
                        r62 = (r61 & 4 | 0) == 0;
                        if ((HEAP8[r36] & 1) << 24 >> 24 != 0) {
                          r2 = 1910;
                          break L2225;
                        }
                        if (r62) {
                          r63 = r55;
                          r64 = r53;
                          break L2225;
                        }
                      }
                    } while (0);
                    if (!r37) {
                      r59 = r60;
                      continue;
                    }
                    if ((HEAP32[r38 >> 2] | 0) == 0) {
                      r59 = r60;
                    } else {
                      r2 = 1915;
                      break;
                    }
                  }
                  do {
                    if (r2 == 1910) {
                      r2 = 0;
                      if (r62) {
                        r63 = r55;
                        r64 = r53;
                        break;
                      }
                      r59 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r43 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r43 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      HEAPF64[tempDoublePtr >> 3] = r59, HEAP32[r27] = HEAP32[tempDoublePtr >> 2], HEAP32[r27 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                      r58 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r44 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r44 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      HEAPF64[tempDoublePtr >> 3] = r58, HEAP32[r29] = HEAP32[tempDoublePtr >> 2], HEAP32[r29 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                      r63 = r59;
                      r64 = r58;
                    } else if (r2 == 1915) {
                      r2 = 0;
                      __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r4, r22, r10);
                      __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r5, r22, r11);
                      break L2220;
                    }
                  } while (0);
                  HEAPF64[tempDoublePtr >> 3] = r63, HEAP32[r39 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r39 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
                  HEAP32[r40 >> 2] = r56;
                  HEAPF64[tempDoublePtr >> 3] = r64, HEAP32[r41 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r41 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
                  HEAP32[r42 >> 2] = r54;
                  __ZN5AvoidL25addCrossingConnsToSetListERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_(r9, r14, r15);
                }
              } while (0);
              r54 = HEAP32[r52 + 4 >> 2];
              if ((r54 | 0) == (r25 | 0)) {
                r49 = r51;
                break L2214;
              } else {
                r52 = r54;
              }
            }
          }
        } while (0);
        r47 = HEAP32[r49 >> 2];
        if ((r47 | 0) == (r25 | 0)) {
          break L2209;
        } else {
          r46 = r47;
        }
      }
    }
  } while (0);
  __ZN5Avoid6Router26performSlowRoutingCallBackEd(r1, 0);
  if ((HEAP8[r20] & 1) << 24 >> 24 == 0) {
    r20 = r8 | 0;
    r25 = r8 + 4 | 0;
    r49 = r17 + 4 | 0;
    r52 = r17;
    r15 = r17 + 8 | 0;
    r14 = (r16 + 4 | 0) >> 2;
    r64 = r16;
    r63 = r16 + 8 | 0;
    r11 = 1;
    r5 = 1;
    r10 = 0;
    while (1) {
      r4 = HEAP32[r24 >> 2];
      L2252 : do {
        if ((r4 | 0) == (r23 | 0)) {
          r65 = r11;
          r66 = r5;
        } else {
          r2 = (r10 | 0) == 0;
          r62 = (r10 | 0) == 1;
          r12 = r4;
          r26 = r11;
          r13 = r5;
          while (1) {
            __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC1INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE(r16, HEAP32[r12 + 8 >> 2], r12 + 12 | 0);
            __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_(r6, HEAP32[r14], r64, HEAP32[r63 >> 2]);
            r18 = HEAP32[r14];
            L2257 : do {
              if ((r18 | 0) == (r64 | 0)) {
                r67 = r26;
                r68 = r13;
              } else {
                r19 = r18;
                r46 = r26;
                r42 = r13;
                while (1) {
                  if (r2) {
                    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__erase_uniqueIS5_EEjRKT_(r22, r19 + 8 | 0);
                  }
                  do {
                    if ((r19 | 0) == (HEAP32[r14] | 0)) {
                      r69 = r42;
                      r70 = r46;
                    } else {
                      r41 = HEAP32[r19 + 16 >> 2];
                      if (r2) {
                        r40 = r41;
                        __ZN5Avoid7ConnRef15makePathInvalidEv(r40);
                        __ZN5Avoid7ConnRef10freeRoutesEv(r40);
                        __ZN5Avoid7ConnRef14freeActivePinsEv(r40);
                        r69 = r42;
                        r70 = r46 + 1 | 0;
                        break;
                      }
                      if (!r62) {
                        r69 = r42;
                        r70 = r46;
                        break;
                      }
                      __ZN5Avoid6Router26performSlowRoutingCallBackEd(r1, (r42 >>> 0) / (r46 >>> 0));
                      __ZN5Avoid7ConnRef12generatePathEv(r41);
                      r69 = r42 + 1 | 0;
                      r70 = r46;
                    }
                  } while (0);
                  r41 = HEAP32[r19 + 4 >> 2];
                  if ((r41 | 0) == (r64 | 0)) {
                    r67 = r70;
                    r68 = r69;
                    break L2257;
                  } else {
                    r19 = r41;
                    r46 = r70;
                    r42 = r69;
                  }
                }
              }
            } while (0);
            __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED1Ev(r16);
            r18 = HEAP32[r12 + 4 >> 2];
            if ((r18 | 0) == (r23 | 0)) {
              r65 = r67;
              r66 = r68;
              break L2252;
            } else {
              r12 = r18;
              r26 = r67;
              r13 = r68;
            }
          }
        }
      } while (0);
      __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC1INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE(r17, HEAP32[r20 >> 2], r25);
      __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_(r7, HEAP32[r49 >> 2], r52, HEAP32[r15 >> 2]);
      r4 = HEAP32[r49 >> 2];
      L2274 : do {
        if ((r4 | 0) == (r52 | 0)) {
          r71 = r65;
          r72 = r66;
        } else {
          r13 = r4;
          r26 = r65;
          r12 = r66;
          while (1) {
            r62 = HEAP32[r13 + 16 >> 2];
            if ((r10 | 0) == 0) {
              r2 = r62;
              __ZN5Avoid7ConnRef15makePathInvalidEv(r2);
              __ZN5Avoid7ConnRef10freeRoutesEv(r2);
              __ZN5Avoid7ConnRef14freeActivePinsEv(r2);
              r73 = r12;
              r74 = r26 + 1 | 0;
            } else if ((r10 | 0) == 1) {
              __ZN5Avoid6Router26performSlowRoutingCallBackEd(r1, (r12 >>> 0) / (r26 >>> 0));
              __ZN5Avoid7ConnRef12generatePathEv(r62);
              r73 = r12 + 1 | 0;
              r74 = r26;
            } else {
              r73 = r12;
              r74 = r26;
            }
            r62 = HEAP32[r13 + 4 >> 2];
            if ((r62 | 0) == (r52 | 0)) {
              r71 = r74;
              r72 = r73;
              break L2274;
            } else {
              r13 = r62;
              r26 = r74;
              r12 = r73;
            }
          }
        }
      } while (0);
      __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED1Ev(r17);
      r4 = r10 + 1 | 0;
      if ((r4 | 0) < 2) {
        r11 = r71;
        r5 = r72;
        r10 = r4;
      } else {
        break;
      }
    }
    HEAP8[r21] = 0;
  }
  __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED1Ev(r9);
  __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(r8);
  STACKTOP = r3;
  return;
}
__ZN5Avoid6Router16improveCrossingsEv["X"] = 1;
function __ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(r1, r2) {
  if ((r2 | 0) >= 4) {
    ___assert_func(5248184, 1770, 5254164, 5248948);
  }
  return (HEAP8[r1 + (r2 + 756) | 0] & 1) << 24 >> 24 != 0;
}
function __ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid6Router26performSlowRoutingCallBackEd(r1, r2) {
  var r3, r4;
  r3 = r1 + 872 | 0;
  if ((HEAP32[r3 >> 2] | 0) == 0) {
    return;
  }
  r4 = _clock();
  if (FUNCTION_TABLE[HEAP32[r3 >> 2]](r4 - HEAP32[r1 + 876 >> 2] | 0, r2 * 100)) {
    return;
  }
  HEAP8[r1 + 891 | 0] = 0;
  HEAP8[r1 + 880 | 0] = 1;
  return;
}
function __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r1, r2) {
  var r3;
  if ((r2 | 0) >= 8) {
    ___assert_func(5248184, 1756, 5254088, 5249116);
  }
  r3 = (r2 << 3) + r1 + 692 | 0;
  return HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3];
}
function __ZN5AvoidL18cheapEstimatedCostEPNS_7ConnRefE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r2 = __ZNK5Avoid7ConnRef5routeEv(r1);
  r3 = r2 + 8 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 16 >> 2]](r2) - 1 | 0;
  r2 = HEAP32[r3 >> 2];
  r3 = r2 + (r5 * 24 & -1) | 0;
  if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r1 + 8 >> 2]) | 0) == 1) {
    r6 = __ZN5Avoid13euclideanDistERKNS_5PointES2_(r4, r3);
    return r6;
  }
  r1 = r3 | 0;
  r7 = r4 | 0;
  do {
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != 0) {
      r8 = r4 + 8 | 0;
      r9 = r2 + (r5 * 24 & -1) + 8 | 0;
      r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r10 == 0) {
        r11 = 0;
        break;
      }
      r11 = 2e3;
    } else {
      r11 = 0;
    }
  } while (0);
  r6 = r11 + __ZN5Avoid13manhattanDistERKNS_5PointES2_(r4, r3);
  return r6;
}
function __ZN5AvoidL17connsKnownToCrossERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 32 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = r5 + 16;
  r9 = r5 + 20;
  r10 = r7 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r10 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r7 + 8 >> 2] = r3;
  __ZN5AvoidL18setForCrossingConnERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_(r6, r1, r7);
  r7 = r9 | 0;
  r3 = r4 | 0;
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r10, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r9 + 8 >> 2] = HEAP32[r4 + 8 >> 2];
  __ZN5AvoidL18setForCrossingConnERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_(r8, r1, r9);
  r9 = HEAP32[r6 >> 2];
  do {
    if ((r9 | 0) == (HEAP32[r8 >> 2] | 0)) {
      if ((r9 | 0) == (r1 | 0)) {
        break;
      } else {
        r11 = 1;
      }
      STACKTOP = r5;
      return r11;
    }
  } while (0);
  r11 = 0;
  STACKTOP = r5;
  return r11;
}
function __ZNK5Avoid6Router33isInCrossingPenaltyReroutingStageEv(r1) {
  return (r1 & 1) << 24 >> 24 != 0;
}
function __ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r1, r2) {
  return r1 < r2;
}
function __ZNK5Avoid6Router13validConnTypeENS_8ConnTypeE(r1) {
  var r2;
  if ((HEAP8[r1 + 888 | 0] & 1) << 24 >> 24 != 0) {
    r2 = 1;
    return r2;
  }
  r2 = (HEAP8[r1 + 889 | 0] & 1) << 24 >> 24 == 0 ? 0 : 2;
  return r2;
}
function __ZN5Avoid23ConnRerouteFlagDelegateC2Ev(r1) {
  var r2;
  r2 = r1;
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r2;
  HEAP32[r1 + 8 >> 2] = 0;
  return;
}
function __ZN5Avoid23ConnRerouteFlagDelegate10removeConnEPNS_7ConnRefE(r1, r2) {
  var r3, r4, r5;
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r5 = r3;
  }
  while (1) {
    r3 = r5 + 8 | 0;
    if ((HEAP32[r3 >> 2] | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 0;
    }
    r3 = HEAP32[r5 + 4 >> 2];
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r5 = r3;
    }
  }
  return;
}
function __ZN5AvoidL25addCrossingConnsToSetListERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 84 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 16;
  r8 = r4 + 24;
  r9 = r4 + 32;
  r10 = r4 + 36;
  r11 = r4 + 40;
  r12 = r4 + 52;
  r13 = r4 + 56;
  r14 = r4 + 68;
  r15 = r4 + 80;
  r16 = r11 | 0;
  r17 = r2 | 0;
  r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r18, HEAP32[r16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r16 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r11 + 8 >> 2] = HEAP32[r2 + 8 >> 2];
  __ZN5AvoidL18setForCrossingConnERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_(r10, r1, r11);
  r11 = r13 | 0;
  r16 = r3 | 0;
  r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r18, HEAP32[r11 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r13 + 8 >> 2] = HEAP32[r3 + 8 >> 2];
  __ZN5AvoidL18setForCrossingConnERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_(r12, r1, r13);
  r13 = r1;
  r11 = HEAP32[r10 >> 2];
  r10 = r12 | 0;
  r12 = HEAP32[r10 >> 2];
  r18 = (r12 | 0) == (r13 | 0);
  if ((r11 | 0) == (r13 | 0)) {
    if (!r18) {
      __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r8, r12 + 8 | 0, r2);
      STACKTOP = r4;
      return;
    }
    r8 = r14 | 0;
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS6_(r8);
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r6, r8, r2);
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r5, r8, r3);
    __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE9push_backERKSA_(r1, r14);
    __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(r14);
    STACKTOP = r4;
    return;
  }
  if (r18) {
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r7, r11 + 8 | 0, r3);
    STACKTOP = r4;
    return;
  }
  r3 = HEAP32[r12 + 8 >> 2];
  r7 = r12 + 12 | 0;
  r18 = r11 + 8 | 0;
  r14 = r11 + 12 | 0;
  if ((r3 | 0) == (r7 | 0)) {
    r19 = r12;
  } else {
    r12 = r7;
    r7 = r3;
    while (1) {
      __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEERKS5_(r9, r18, r14, r7 + 16 | 0);
      r3 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r7 | 0);
      if ((r3 | 0) == (r12 | 0)) {
        break;
      } else {
        r7 = r3;
      }
    }
    r19 = HEAP32[r10 >> 2];
  }
  __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE5eraseENS_21__list_const_iteratorISA_PvEE(r15, r1, r19);
  STACKTOP = r4;
  return;
}
__ZN5AvoidL25addCrossingConnsToSetListERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_["X"] = 1;
function __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC1INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE(r1, r2, r3) {
  __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC2INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE(r1, r2, r3);
  return;
}
function __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED1Ev(r1) {
  __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED1Ev(r1) {
  __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(r1) {
  __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED2Ev(r1);
  return;
}
function __ZN5Avoid6Router16generateContainsEPNS_7VertInfE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = r3 + 8;
  r6 = r3 + 16;
  r7 = r3 + 20;
  r8 = r1 + 88 | 0;
  r9 = r2 + 4 | 0;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5clearEv(__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r8, r9) | 0);
  r10 = r1 + 124 | 0;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5clearEv(__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r10, r9) | 0);
  r11 = r1 + 4 | 0;
  r12 = HEAP32[r1 + 8 >> 2];
  L2364 : do {
    if ((r12 | 0) != (r11 | 0)) {
      r13 = r2 + 12 | 0;
      r14 = r12;
      while (1) {
        r15 = r14 + 8 | 0;
        if (__ZN5Avoid6inPolyERKNS_7PolygonERKNS_5PointEb(__ZNK5Avoid8Obstacle7polygonEv(HEAP32[r15 >> 2]), r13)) {
          r16 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r8, r9);
          HEAP32[r6 >> 2] = __ZNK5Avoid8Obstacle2idEv(HEAP32[HEAP32[r15 >> 2] + 8 >> 2]);
          __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj(r4, r16 | 0, r6);
        }
        r16 = HEAP32[r14 + 4 >> 2];
        if ((r16 | 0) == (r11 | 0)) {
          break L2364;
        } else {
          r14 = r16;
        }
      }
    }
  } while (0);
  r11 = r1 + 28 | 0;
  r6 = HEAP32[r1 + 32 >> 2];
  if ((r6 | 0) == (r11 | 0)) {
    STACKTOP = r3;
    return;
  }
  r1 = r2 + 12 | 0;
  r2 = r6;
  while (1) {
    r6 = r2 + 8 | 0;
    if (__ZN5Avoid9inPolyGenERKNS_16PolygonInterfaceERKNS_5PointE(__ZN5Avoid10ClusterRef7polygonEv(HEAP32[r6 >> 2]) | 0, r1)) {
      r4 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r10, r9);
      HEAP32[r7 >> 2] = __ZNK5Avoid10ClusterRef2idEv(HEAP32[HEAP32[r6 >> 2] + 4 >> 2]);
      __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj(r5, r4 | 0, r7);
    }
    r4 = HEAP32[r2 + 4 >> 2];
    if ((r4 | 0) == (r11 | 0)) {
      break;
    } else {
      r2 = r4;
    }
  }
  STACKTOP = r3;
  return;
}
__ZN5Avoid6Router16generateContainsEPNS_7VertInfE["X"] = 1;
function __ZN5Avoid6Router25improveOrthogonalTopologyEv(r1) {
  var r2, r3, r4;
  r2 = r1 + 884 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    ___assert_func(5248184, 2047, 5258408, 5246440);
    r4 = HEAP32[r2 >> 2];
  } else {
    r4 = r3;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 12 >> 2]](r4, r1);
  return;
}
function __ZN5Avoid23ConnRerouteFlagDelegateD2Ev(r1) {
  __ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED1Ev(r1 | 0);
  return;
}
function __ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED1Ev(r1) {
  __ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED2Ev(r1);
  return;
}
function __ZN5Avoid23ConnRerouteFlagDelegate7addConnEPNS_7ConnRefE(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  HEAP32[r4 >> 2] = r2;
  HEAP8[r4 + 4 | 0] = 0;
  __ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEE9push_backERKS5_(r1 | 0, r4);
  STACKTOP = r3;
  return HEAP32[r1 >> 2] + 12 | 0;
}
function __ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEE9push_backERKS5_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(16);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
    HEAP8[r3 + 12 | 0] = HEAP8[r2 + 4 | 0] & 1;
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE14__erase_uniqueIjEEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5eraseENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5eraseENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEESB_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeERKj(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_16__tree_node_baseIPvEERS9_S9_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__erase_uniqueIS5_EEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE4findIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE5eraseENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE4findIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE13__lower_boundIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_SF_SF_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(HEAP32[r3 + 8 >> 2], HEAP32[r6 + 24 >> 2])) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE5eraseENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE13__lower_boundIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_SF_SF_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L2422 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 + 8 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (!__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(HEAP32[r10 + 6], r6)) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L2422;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L2422;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r1, r2) {
  return __ZNK5Avoid7ConnRef2idEv(HEAP32[r1 + 4 >> 2]) >>> 0 < __ZNK5Avoid7ConnRef2idEv(HEAP32[r2 + 4 >> 2]) >>> 0;
}
function __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  if ((r4 | 0) == 0 | (r4 | 0) == 1) {
    HEAP32[r1 >> 2] = r2;
    STACKTOP = r5;
    return;
  } else if ((r4 | 0) == 2) {
    r8 = HEAP32[r3 >> 2];
    r9 = r8 + 8 | 0;
    r10 = r2 + 8 | 0;
    if (__ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_((HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]))) {
      r10 = (r8 + 4 | 0) >> 2;
      r9 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r9] + 4 >> 2] = HEAP32[r10];
      HEAP32[HEAP32[r10] >> 2] = HEAP32[r9];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r9] = HEAP32[r11];
      HEAP32[r11] = r8;
      HEAP32[r10] = r2;
      HEAP32[r1 >> 2] = r8;
      STACKTOP = r5;
      return;
    } else {
      HEAP32[r1 >> 2] = r2;
      STACKTOP = r5;
      return;
    }
  } else {
    r8 = r4 >>> 1;
    L2443 : do {
      if ((r8 | 0) == 0) {
        r12 = r2;
      } else {
        r10 = r8;
        r11 = r2;
        while (1) {
          r9 = r10 - 1 | 0;
          r13 = HEAP32[r11 + 4 >> 2];
          if ((r9 | 0) > 0) {
            r10 = r9;
            r11 = r13;
          } else {
            r12 = r13;
            break L2443;
          }
        }
      }
    } while (0);
    __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_(r6, r2, r12, r8);
    r2 = HEAP32[r6 >> 2];
    __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_(r7, r12, r3, r4 - r8 | 0);
    r8 = HEAP32[r7 >> 2];
    r7 = r8 + 8 | 0;
    r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r7 = r2 + 8 | 0;
    r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    if (__ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r4, r12)) {
      r4 = HEAP32[r8 + 4 >> 2];
      L2449 : do {
        if ((r4 | 0) == (r3 | 0)) {
          r14 = r3;
        } else {
          r7 = r4;
          while (1) {
            r6 = r7 + 8 | 0;
            if (!__ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_((HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), r12)) {
              r14 = r7;
              break L2449;
            }
            r6 = HEAP32[r7 + 4 >> 2];
            if ((r6 | 0) == (r3 | 0)) {
              r14 = r3;
              break L2449;
            } else {
              r7 = r6;
            }
          }
        }
      } while (0);
      r12 = HEAP32[r14 >> 2];
      r4 = (r12 + 4 | 0) >> 2;
      r7 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r7] + 4 >> 2] = HEAP32[r4];
      HEAP32[HEAP32[r4] >> 2] = HEAP32[r7];
      r6 = HEAP32[r2 + 4 >> 2];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r7] = HEAP32[r11];
      HEAP32[r11] = r12;
      HEAP32[r4] = r2;
      r15 = r8;
      r16 = r14;
      r17 = r6;
    } else {
      r15 = r2;
      r16 = r8;
      r17 = HEAP32[r2 + 4 >> 2];
    }
    L2456 : do {
      if ((r17 | 0) != (r16 | 0)) {
        r2 = r16;
        r8 = r16;
        r6 = r17;
        while (1) {
          r14 = (r2 | 0) == (r3 | 0);
          r4 = r2 + 8 | 0;
          r12 = r6;
          while (1) {
            if (r14) {
              break L2456;
            }
            r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r7 = r12 + 8 | 0;
            r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            if (__ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r11, r18)) {
              break;
            }
            r11 = HEAP32[r12 + 4 >> 2];
            if ((r11 | 0) == (r8 | 0)) {
              break L2456;
            } else {
              r12 = r11;
            }
          }
          r4 = HEAP32[r2 + 4 >> 2];
          L2464 : do {
            if ((r4 | 0) == (r3 | 0)) {
              r19 = r3;
            } else {
              r14 = r4;
              while (1) {
                r11 = r14 + 8 | 0;
                if (!__ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_((HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), r18)) {
                  r19 = r14;
                  break L2464;
                }
                r11 = HEAP32[r14 + 4 >> 2];
                if ((r11 | 0) == (r3 | 0)) {
                  r19 = r3;
                  break L2464;
                } else {
                  r14 = r11;
                }
              }
            }
          } while (0);
          r4 = HEAP32[r19 >> 2];
          r14 = (r4 + 4 | 0) >> 2;
          r11 = (r2 | 0) >> 2;
          HEAP32[HEAP32[r11] + 4 >> 2] = HEAP32[r14];
          HEAP32[HEAP32[r14] >> 2] = HEAP32[r11];
          r7 = HEAP32[r12 + 4 >> 2];
          r10 = (r8 | 0) == (r2 | 0) ? r19 : r8;
          r13 = (r12 | 0) >> 2;
          HEAP32[HEAP32[r13] + 4 >> 2] = r2;
          HEAP32[r11] = HEAP32[r13];
          HEAP32[r13] = r4;
          HEAP32[r14] = r12;
          if ((r7 | 0) == (r10 | 0)) {
            break L2456;
          } else {
            r2 = r19;
            r8 = r10;
            r6 = r7;
          }
        }
      }
    } while (0);
    HEAP32[r1 >> 2] = r15;
    STACKTOP = r5;
    return;
  }
}
__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_["X"] = 1;
function __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC2INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE(r1, r2, r3) {
  var r4, r5;
  r4 = r1;
  HEAP32[r1 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  } else {
    r5 = r2;
  }
  while (1) {
    __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE9push_backERKS5_(r1, r5 + 16 | 0);
    r2 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r5 | 0);
    if ((r2 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r2;
    }
  }
  return;
}
function __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE9push_backERKS5_(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = __Znwj(20), r4 = r3 >> 2;
  r5 = r3;
  r6 = r3 + 8 | 0;
  if ((r6 | 0) != 0) {
    r3 = r6;
    r6 = r2 | 0;
    r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    HEAP32[r4 + 4] = HEAP32[r2 + 8 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r5;
  HEAP32[r4] = HEAP32[r2];
  HEAP32[r2] = r5;
  HEAP32[r4 + 1] = r1;
  r4 = r1 + 8 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__110__list_impINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNKSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__count_uniqueIS5_EEjRKT_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = 0;
  if ((r1 | 0) == 0) {
    r4 = 0;
    return r4;
  } else {
    r5 = r1;
  }
  while (1) {
    r1 = HEAP32[r5 + 24 >> 2];
    if (__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r2, r1)) {
      r6 = r5 | 0;
    } else {
      if (!__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r1, r2)) {
        r4 = 1;
        r3 = 2132;
        break;
      }
      r6 = r5 + 4 | 0;
    }
    r1 = HEAP32[r6 >> 2];
    if ((r1 | 0) == 0) {
      r4 = 0;
      r3 = 2131;
      break;
    } else {
      r5 = r1;
    }
  }
  if (r3 == 2132) {
    return r4;
  } else if (r3 == 2131) {
    return r4;
  }
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEESF_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__construct_nodeERKS5_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC2ERKS6_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L2511 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L2511;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L2511;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEESF_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 + 8 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 24 >> 2];
    if (__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r1, r6)) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 2148;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (!__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r6, r1)) {
      r4 = 2152;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 2151;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 2152) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  } else if (r4 == 2151) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 2148) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  }
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__construct_nodeERKS5_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(28);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    r8 = r6;
    r6 = r3 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    HEAP32[r5 + 24 >> 2] = HEAP32[r3 + 8 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS6_(r1) {
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC2ERKS6_(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZN5Avoid10ActionInfoD1Ev(r6 + 8 | 0);
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC2ERKSD_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC2ERKS9_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  if ((r4 | 0) == 0 | (r4 | 0) == 1) {
    HEAP32[r1 >> 2] = r2;
    STACKTOP = r5;
    return;
  } else if ((r4 | 0) == 2) {
    r8 = HEAP32[r3 >> 2];
    if (__ZNK5Avoid10ActionInfoltERKS0_(r8 + 8 | 0, r2 + 8 | 0)) {
      r9 = (r8 + 4 | 0) >> 2;
      r10 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r10] + 4 >> 2] = HEAP32[r9];
      HEAP32[HEAP32[r9] >> 2] = HEAP32[r10];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r10] = HEAP32[r11];
      HEAP32[r11] = r8;
      HEAP32[r9] = r2;
      HEAP32[r1 >> 2] = r8;
      STACKTOP = r5;
      return;
    } else {
      HEAP32[r1 >> 2] = r2;
      STACKTOP = r5;
      return;
    }
  } else {
    r8 = r4 >>> 1;
    L13 : do {
      if ((r8 | 0) == 0) {
        r12 = r2;
      } else {
        r9 = r8;
        r11 = r2;
        while (1) {
          r10 = r9 - 1 | 0;
          r13 = HEAP32[r11 + 4 >> 2];
          if ((r10 | 0) > 0) {
            r9 = r10;
            r11 = r13;
          } else {
            r12 = r13;
            break L13;
          }
        }
      }
    } while (0);
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r6, r2, r12, r8);
    r2 = HEAP32[r6 >> 2];
    __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r7, r12, r3, r4 - r8 | 0);
    r8 = HEAP32[r7 >> 2];
    r7 = r2 + 8 | 0;
    if (__ZNK5Avoid10ActionInfoltERKS0_(r8 + 8 | 0, r7)) {
      r4 = HEAP32[r8 + 4 >> 2];
      L19 : do {
        if ((r4 | 0) == (r3 | 0)) {
          r14 = r3;
        } else {
          r12 = r4;
          while (1) {
            if (!__ZNK5Avoid10ActionInfoltERKS0_(r12 + 8 | 0, r7)) {
              r14 = r12;
              break L19;
            }
            r6 = HEAP32[r12 + 4 >> 2];
            if ((r6 | 0) == (r3 | 0)) {
              r14 = r3;
              break L19;
            } else {
              r12 = r6;
            }
          }
        }
      } while (0);
      r7 = HEAP32[r14 >> 2];
      r4 = (r7 + 4 | 0) >> 2;
      r12 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r12] + 4 >> 2] = HEAP32[r4];
      HEAP32[HEAP32[r4] >> 2] = HEAP32[r12];
      r6 = HEAP32[r2 + 4 >> 2];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r12] = HEAP32[r11];
      HEAP32[r11] = r7;
      HEAP32[r4] = r2;
      r15 = r8;
      r16 = r14;
      r17 = r6;
    } else {
      r15 = r2;
      r16 = r8;
      r17 = HEAP32[r2 + 4 >> 2];
    }
    L26 : do {
      if ((r17 | 0) != (r16 | 0)) {
        r2 = r16;
        r8 = r16;
        r6 = r17;
        while (1) {
          r14 = r2 + 8 | 0;
          r4 = (r2 | 0) == (r3 | 0);
          r7 = r6;
          while (1) {
            if (r4) {
              break L26;
            }
            if (__ZNK5Avoid10ActionInfoltERKS0_(r14, r7 + 8 | 0)) {
              break;
            }
            r11 = HEAP32[r7 + 4 >> 2];
            if ((r11 | 0) == (r8 | 0)) {
              break L26;
            } else {
              r7 = r11;
            }
          }
          r14 = HEAP32[r2 + 4 >> 2];
          L34 : do {
            if ((r14 | 0) == (r3 | 0)) {
              r18 = r3;
            } else {
              r4 = r7 + 8 | 0;
              r11 = r14;
              while (1) {
                if (!__ZNK5Avoid10ActionInfoltERKS0_(r11 + 8 | 0, r4)) {
                  r18 = r11;
                  break L34;
                }
                r12 = HEAP32[r11 + 4 >> 2];
                if ((r12 | 0) == (r3 | 0)) {
                  r18 = r3;
                  break L34;
                } else {
                  r11 = r12;
                }
              }
            }
          } while (0);
          r14 = HEAP32[r18 >> 2];
          r11 = (r14 + 4 | 0) >> 2;
          r4 = (r2 | 0) >> 2;
          HEAP32[HEAP32[r4] + 4 >> 2] = HEAP32[r11];
          HEAP32[HEAP32[r11] >> 2] = HEAP32[r4];
          r12 = HEAP32[r7 + 4 >> 2];
          r9 = (r8 | 0) == (r2 | 0) ? r18 : r8;
          r13 = (r7 | 0) >> 2;
          HEAP32[HEAP32[r13] + 4 >> 2] = r2;
          HEAP32[r4] = HEAP32[r13];
          HEAP32[r13] = r14;
          HEAP32[r11] = r7;
          if ((r12 | 0) == (r9 | 0)) {
            break L26;
          } else {
            r2 = r18;
            r8 = r9;
            r6 = r12;
          }
        }
      }
    } while (0);
    HEAP32[r1 >> 2] = r15;
    STACKTOP = r5;
    return;
  }
}
__ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_["X"] = 1;
function __ZN5Avoid10ActionInfoC1ERKS0_(r1, r2) {
  __ZN5Avoid10ActionInfoC2ERKS0_(r1, r2);
  return;
}
function __ZN5Avoid10ActionInfoC2ERKS0_(r1, r2) {
  var r3, r4;
  HEAP32[r1 >> 2] = HEAP32[r2 >> 2];
  HEAP32[r1 + 4 >> 2] = HEAP32[r2 + 4 >> 2];
  __ZN5Avoid7PolygonC1ERKS0_(r1 + 8 | 0, r2 + 8 | 0);
  r3 = (r1 + 52 | 0) >> 2;
  r4 = (r2 + 52 | 0) >> 2;
  HEAP32[r3] = HEAP32[r4];
  HEAP32[r3 + 1] = HEAP32[r4 + 1];
  HEAP32[r3 + 2] = HEAP32[r4 + 2];
  HEAP32[r3 + 3] = HEAP32[r4 + 3];
  HEAP32[r3 + 4] = HEAP32[r4 + 4];
  HEAP32[r3 + 5] = HEAP32[r4 + 5];
  HEAP8[r1 + 76 | 0] = HEAP8[r2 + 76 | 0] & 1;
  __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEEC1ERKS7_(r1 + 80 | 0, r2 + 80 | 0);
  return;
}
function __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEEC1ERKS7_(r1, r2) {
  __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEEC2ERKS7_(r1, r2);
  return;
}
function __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEEC2ERKS7_(r1, r2) {
  var r3, r4, r5;
  r3 = r1;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2;
  r4 = HEAP32[r2 + 4 >> 2];
  if ((r4 | 0) == (r3 | 0)) {
    return;
  } else {
    r5 = r4;
  }
  while (1) {
    __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE9push_backERKS4_(r1, r5 + 8 | 0);
    r4 = HEAP32[r5 + 4 >> 2];
    if ((r4 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r4;
    }
  }
  return;
}
function __ZNSt3__110__list_impINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE5clearEv(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC1ERKSD_(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC2ERKSD_(r1);
  return;
}
function __ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(r1) {
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(r6 + 8 | 0);
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED2Ev(r1 | 0);
  return;
}
function __ZN5AvoidL18setForCrossingConnERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  r7 = r2;
  r8 = r6 | 0;
  r9 = r2 + 4 | 0;
  while (1) {
    r10 = HEAP32[r9 >> 2];
    if ((r10 | 0) == (r7 | 0)) {
      r4 = 75;
      break;
    }
    __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE4findIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_(r6, r10 + 8 | 0, r3);
    if ((HEAP32[r8 >> 2] | 0) == (r10 + 12 | 0)) {
      r9 = r10 + 4 | 0;
    } else {
      r4 = 74;
      break;
    }
  }
  if (r4 == 74) {
    HEAP32[r1 >> 2] = r10;
    STACKTOP = r5;
    return;
  } else if (r4 == 75) {
    HEAP32[r1 >> 2] = r7;
    STACKTOP = r5;
    return;
  }
}
function __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE9push_backERKSA_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = __Znwj(20);
  r6 = r5;
  r7 = r5 + 8 | 0;
  L95 : do {
    if ((r7 | 0) != 0) {
      r8 = r7;
      __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS9_(r8);
      r9 = HEAP32[r2 >> 2];
      r10 = r2 + 4 | 0;
      r11 = r5 + 12 | 0;
      if ((r9 | 0) == (r10 | 0)) {
        break;
      }
      r12 = r10;
      r10 = r9;
      while (1) {
        __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEERKS5_(r4, r8, r11, r10 + 16 | 0);
        r9 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r10 | 0);
        if ((r9 | 0) == (r12 | 0)) {
          break L95;
        } else {
          r10 = r9;
        }
      }
    }
  } while (0);
  r4 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r4] + 4 >> 2] = r6;
  HEAP32[r5 >> 2] = HEAP32[r4];
  HEAP32[r4] = r6;
  HEAP32[r5 + 4 >> 2] = r1;
  r5 = r1 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] + 1 | 0;
  STACKTOP = r3;
  return;
}
__ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE9push_backERKSA_["X"] = 1;
function __ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE5eraseENS_21__list_const_iteratorISA_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev(r3 + 8 | 0);
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEERKS5_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_SC_EEiEESF_RKT_(r2, r3, r6, r4);
  r3 = HEAP32[r8 >> 2];
  if ((r3 | 0) != 0) {
    r9 = r3;
    r10 = r1 | 0;
    HEAP32[r10 >> 2] = r9;
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__construct_nodeERKS5_(r7, r2, r4);
  r4 = r7 | 0;
  r7 = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = 0;
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_(r2, HEAP32[r6 >> 2], r8, r7 | 0);
  r9 = r7;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_SC_EEiEESF_RKT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r6 = r1 + 4 | 0;
  do {
    if ((r6 | 0) != (r2 | 0)) {
      r7 = HEAP32[r4 + 8 >> 2];
      r8 = HEAP32[r2 + 24 >> 2];
      if (__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r7, r8)) {
        break;
      }
      r9 = r2 | 0;
      if (!__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r8, r7)) {
        HEAP32[r5] = r9;
        r10 = r3;
        return r10;
      }
      r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r9);
      do {
        if ((r8 | 0) != (r6 | 0)) {
          if (__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(r7, HEAP32[r8 + 24 >> 2])) {
            break;
          }
          r10 = __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEESF_RKT_(r1, r3, r4);
          return r10;
        }
      } while (0);
      r7 = r2 + 4 | 0;
      if ((HEAP32[r7 >> 2] | 0) == 0) {
        HEAP32[r5] = r9;
        r10 = r7;
        return r10;
      } else {
        HEAP32[r5] = r8;
        r10 = r8 | 0;
        return r10;
      }
    }
  } while (0);
  do {
    if ((HEAP32[r1 >> 2] | 0) == (r2 | 0)) {
      r11 = r2;
    } else {
      r6 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
      if (__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_(HEAP32[r6 + 24 >> 2], HEAP32[r4 + 8 >> 2])) {
        r11 = r6;
        break;
      }
      r10 = __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEESF_RKT_(r1, r3, r4);
      return r10;
    }
  } while (0);
  r4 = r2 | 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    HEAP32[r5] = r2 | 0;
    r10 = r4;
    return r10;
  } else {
    HEAP32[r5] = r11 | 0;
    r10 = r11 + 4 | 0;
    return r10;
  }
}
__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_SC_EEiEESF_RKT_["X"] = 1;
function __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS9_(r1) {
  __ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC2ERKS9_(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__14pairIjN5Avoid7ConnEndEED2Ev(r1) {
  __ZN5Avoid7ConnEndD1Ev(r1 + 4 | 0);
  return;
}
function __ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid8ObstacleENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid8ObstacleENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid8ObstacleENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid8ObstacleENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__14listIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid10ClusterRefENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid10ClusterRefENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEED1Ev(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZNSt3__14pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEED1Ev(r1 + 16 | 0);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__14pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEED1Ev(r1) {
  __ZNSt3__14pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEED2Ev(r1);
  return;
}
function __ZNSt3__14pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEED2Ev(r1) {
  __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r1 + 8 | 0);
  return;
}
function __ZNSt3__110__list_impINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZNSt3__14pairIjN5Avoid7ConnEndEED1Ev(r6 + 8 | 0);
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZN5Avoid22TopologyAddonInterfaceD1Ev(r1) {
  return;
}
function __ZN5Avoid22TopologyAddonInterface25improveOrthogonalTopologyEPNS_6RouterE(r1, r2) {
  return;
}
function __ZNK5Avoid22TopologyAddonInterface10outputCodeEP7__sFILE(r1, r2) {
  return 0;
}
function __ZNK5Avoid22TopologyAddonInterface18outputDeletionCodeEP7__sFILE(r1, r2) {
  return 0;
}
function __ZN5Avoid22TopologyAddonInterfaceC2Ev(r1) {
  HEAP32[r1 >> 2] = 5267440;
  return;
}
function __ZN5Avoid22TopologyAddonInterfaceC2ERKS0_(r1) {
  HEAP32[r1 >> 2] = 5267440;
  return;
}
function __ZNK5Avoid8ShapeRef7polygonEv(r1) {
  return r1 + 12 | 0;
}
function __ZN5Avoid5Timer5ResetEv(r1) {
  var r2, r3, r4;
  r2 = r1 >> 2;
  r3 = 0;
  while (1) {
    r4 = (r3 << 3) + r1 + 168 | 0;
    HEAP32[r4 >> 2] = 0;
    HEAP32[r4 + 4 >> 2] = 0;
    r4 = (r3 << 3) + r1 + 56 | 0;
    HEAP32[r4 >> 2] = 0;
    HEAP32[r4 + 4 >> 2] = 0;
    HEAP32[((r3 << 2) + 336 >> 2) + r2] = 0;
    HEAP32[((r3 << 2) + 280 >> 2) + r2] = 0;
    HEAP32[((r3 << 2) + 448 >> 2) + r2] = 0;
    HEAP32[((r3 << 2) + 392 >> 2) + r2] = 0;
    r4 = r3 + 1 | 0;
    if ((r4 | 0) == 14) {
      break;
    } else {
      r3 = r4;
    }
  }
  HEAP8[r1 + 504 | 0] = 0;
  HEAP32[r2 + 127] = 0;
  HEAP32[r2 + 129] = 0;
  HEAP32[r2 + 128] = 0;
  return;
}
function __ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5clearEv(r1);
  return;
}
function __ZN5Avoid17HyperedgeRerouterD2Ev(r1) {
  __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1 + 88 | 0);
  __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED1Ev(r1 + 76 | 0);
  __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev(r1 + 64 | 0);
  __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev(r1 + 52 | 0);
  __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev(r1 + 40 | 0);
  __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev(r1 + 28 | 0);
  __ZNSt3__16vectorIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r1 + 16 | 0);
  __ZNSt3__16vectorINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED1Ev(r1 + 4 | 0);
  return;
}
function __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r4];
  if (r3 >>> 0 < r1 >>> 0) {
    r5 = r1;
    while (1) {
      r1 = r5 - 12 | 0;
      HEAP32[r4] = r1;
      __ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED1Ev(r1);
      r1 = HEAP32[r4];
      if (r3 >>> 0 < r1 >>> 0) {
        r5 = r1;
      } else {
        break;
      }
    }
    r6 = HEAP32[r2 >> 2];
  } else {
    r6 = r3;
  }
  __ZdlPv(r6);
  return;
}
function __ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid7ConnEndENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIN5Avoid7ConnEndENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid7ConnEndENS_9allocatorIS2_EEE5clearEv(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r4];
  if (r3 >>> 0 < r1 >>> 0) {
    r5 = r1;
    while (1) {
      r1 = r5 - 12 | 0;
      HEAP32[r4] = r1;
      __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r1);
      r1 = HEAP32[r4];
      if (r3 >>> 0 < r1 >>> 0) {
        r5 = r1;
      } else {
        break;
      }
    }
    r6 = HEAP32[r2 >> 2];
  } else {
    r6 = r3;
  }
  __ZdlPv(r6);
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r4];
  if (r3 >>> 0 < r1 >>> 0) {
    r5 = r1;
    while (1) {
      r1 = r5 - 12 | 0;
      HEAP32[r4] = r1;
      __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r1);
      r1 = HEAP32[r4];
      if (r3 >>> 0 < r1 >>> 0) {
        r5 = r1;
      } else {
        break;
      }
    }
    r6 = HEAP32[r2 >> 2];
  } else {
    r6 = r3;
  }
  __ZdlPv(r6);
  return;
}
function __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r4];
  if (r3 >>> 0 < r1 >>> 0) {
    r5 = r1;
    while (1) {
      r1 = r5 - 12 | 0;
      HEAP32[r4] = r1;
      __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1);
      r1 = HEAP32[r4];
      if (r3 >>> 0 < r1 >>> 0) {
        r5 = r1;
      } else {
        break;
      }
    }
    r6 = HEAP32[r2 >> 2];
  } else {
    r6 = r3;
  }
  __ZdlPv(r6);
  return;
}
function __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZN5Avoid22TopologyAddonInterfaceD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNK5Avoid22TopologyAddonInterface5cloneEv(r1) {
  r1 = __Znwj(4);
  __ZN5Avoid22TopologyAddonInterfaceC1ERKS0_(r1);
  return r1;
}
function __ZN5Avoid22TopologyAddonInterfaceC1ERKS0_(r1) {
  __ZN5Avoid22TopologyAddonInterfaceC2ERKS0_(r1);
  return;
}
function __ZN5Avoid8ShapeRefC1EPNS_6RouterERNS_7PolygonEj(r1, r2, r3) {
  __ZN5Avoid8ShapeRefC2EPNS_6RouterERNS_7PolygonEj(r1, r2, r3);
  return;
}
function __ZN5Avoid8ShapeRefD0Ev(r1) {
  __ZN5Avoid8ShapeRefD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid8ShapeRefD1Ev(r1) {
  __ZN5Avoid8ShapeRefD2Ev(r1);
  return;
}
function __ZN5Avoid8ShapeRef17moveAttachedConnsERKNS_7PolygonE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = HEAP32[r1 + 72 >> 2];
  r4 = r1 + 76 | 0;
  L299 : do {
    if ((r3 | 0) != (r4 | 0)) {
      r5 = r1 + 4 | 0;
      r6 = r4;
      r7 = r3;
      while (1) {
        r8 = HEAP32[r7 + 16 >> 2];
        r9 = r8 + 40 | 0;
        r10 = HEAP32[r9 >> 2];
        if ((r10 | 0) == 0) {
          ___assert_func(5247844, 64, 5256256, 5246596);
          r11 = HEAP32[r9 >> 2];
        } else {
          r11 = r10;
        }
        __ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb(HEAP32[r5 >> 2], r11, __ZNK5Avoid7ConnEnd12endpointTypeEv(r8), r8, 1);
        r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r7 | 0);
        if ((r8 | 0) == (r6 | 0)) {
          break L299;
        } else {
          r7 = r8;
        }
      }
    }
  } while (0);
  r11 = HEAP32[r1 + 84 >> 2];
  r3 = r1 + 88 | 0;
  if ((r11 | 0) == (r3 | 0)) {
    return;
  }
  r1 = r3;
  r3 = r11;
  while (1) {
    __ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_7PolygonE(HEAP32[r3 + 16 >> 2], r2);
    r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r3 | 0);
    if ((r11 | 0) == (r1 | 0)) {
      break;
    } else {
      r3 = r11;
    }
  }
  return;
}
function __ZNK5Avoid8ShapeRef10outputCodeEP7__sFILE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r3 = STACKTOP;
  r4 = (r1 + 8 | 0) >> 2;
  r5 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r4]);
  r6 = __ZNK5Avoid8ShapeRef7polygonEv(r1);
  r7 = r6 >> 2;
  r8 = FUNCTION_TABLE[HEAP32[HEAP32[r7] + 16 >> 2]](r6);
  _fprintf(r2, 5245784, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r5, HEAP32[tempInt + 4 >> 2] = r8, tempInt));
  L314 : do {
    if ((FUNCTION_TABLE[HEAP32[HEAP32[r7] + 16 >> 2]](r6) | 0) != 0) {
      r8 = r6;
      r5 = 0;
      while (1) {
        r9 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r4]);
        r10 = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 24 >> 2]](r6, r5) | 0;
        r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r10 = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 24 >> 2]](r6, r5) + 8 | 0;
        r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        _fprintf(r2, 5244928, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = r9, HEAP32[tempInt + 4 >> 2] = r5, HEAPF64[tempDoublePtr >> 3] = r11, HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
        r12 = r5 + 1 | 0;
        if (r12 >>> 0 < FUNCTION_TABLE[HEAP32[HEAP32[r7] + 16 >> 2]](r6) >>> 0) {
          r5 = r12;
        } else {
          break L314;
        }
      }
    }
  } while (0);
  _fwrite(5244536, 4, 1, r2);
  if ((HEAP32[r1 + 92 >> 2] | 0) != 0) {
    r6 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r4]);
    _fprintf(r2, 5244104, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt));
  }
  r6 = __ZNK5Avoid8Obstacle2idEv(HEAP32[r4]);
  _fprintf(r2, 5243312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r6, HEAP32[tempInt + 4 >> 2] = r6, tempInt));
  r6 = HEAP32[r1 + 84 >> 2];
  r4 = r1 + 88 | 0;
  if ((r6 | 0) == (r4 | 0)) {
    r13 = _fputc(10, r2);
    STACKTOP = r3;
    return;
  }
  r1 = r4;
  r4 = r6;
  while (1) {
    __ZNK5Avoid18ShapeConnectionPin10outputCodeEP7__sFILE(HEAP32[r4 + 16 >> 2], r2);
    r6 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r4 | 0);
    if ((r6 | 0) == (r1 | 0)) {
      break;
    } else {
      r4 = r6;
    }
  }
  r13 = _fputc(10, r2);
  STACKTOP = r3;
  return;
}
__ZNK5Avoid8ShapeRef10outputCodeEP7__sFILE["X"] = 1;
function __ZNK5Avoid8ShapeRef8positionEv(r1, r2) {
  var r3, r4, r5, r6;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r4 = r3;
  __ZNK5Avoid8Obstacle10routingBoxEv(r4, r2);
  __ZN5Avoid5PointC1Ev(r1);
  r2 = r4 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r4 + 24 | 0;
  r6 = r5 + ((HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r5) * .5;
  r5 = r1 | 0;
  HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = r4 + 8 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r4 + 32 | 0;
  r4 = r6 + ((HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r6) * .5;
  r6 = r1 + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  STACKTOP = r3;
  return;
}
function __ZN5Avoid5TimerC1Ev(r1) {
  __ZN5Avoid5TimerC2Ev(r1);
  return;
}
function __ZN5Avoid5TimerC2Ev(r1) {
  __ZN5Avoid5Timer5ResetEv(r1);
  return;
}
function __ZN5Avoid5Timer8RegisterENS_10TimerIndexEb(r1, r2) {
  var r3;
  if ((r2 | 0) == 0) {
    ___assert_func(5246584, 60, 5258720, 5253012);
  }
  r3 = r1 + 512 | 0;
  HEAP32[r3 >> 2] = (HEAP32[r3 >> 2] | 0) == 0 ? r2 : 5;
  __ZN5Avoid5Timer5StartEv(r1);
  return;
}
function __ZN5Avoid5Timer5StartEv(r1) {
  var r2, r3;
  r2 = r1 + 504 | 0;
  if ((HEAP8[r2] & 1) << 24 >> 24 != 0) {
    ___assert_func(5246584, 79, 5258788, 5249104);
  }
  r3 = _clock();
  HEAP32[r1 + (HEAP32[r1 + 512 >> 2] << 2) >> 2] = r3;
  HEAP8[r2] = 1;
  return;
}
function __ZNSt3__110__list_impIN5Avoid7ConnEndENS_9allocatorIS2_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZN5Avoid7ConnEndD1Ev(r6 + 8 | 0);
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZN5Avoid8ShapeRefC2EPNS_6RouterERNS_7PolygonEj(r1, r2, r3) {
  var r4, r5;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r5 = r4;
  __ZN5Avoid7PolygonC1ERKS0_(r5, r3);
  __ZN5Avoid8ObstacleC2EPNS_6RouterENS_7PolygonEj(r1, r2, r5);
  __ZN5Avoid7PolygonD1Ev(r5);
  HEAP32[r1 >> 2] = 5267300;
  __ZN5Avoid6Router8addShapeEPNS_8ShapeRefE(HEAP32[r1 + 4 >> 2], r1);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid8ShapeRefD2Ev(r1) {
  var r2, r3;
  r2 = STACKTOP;
  HEAP32[r1 >> 2] = 5267300;
  if ((HEAP8[HEAP32[r1 + 4 >> 2] + 689 | 0] & 1) << 24 >> 24 != 0) {
    r3 = r1;
    __ZN5Avoid8ObstacleD2Ev(r3);
    STACKTOP = r2;
    return;
  }
  __ZN5Avoid10err_printfEPKcz(5246852, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 3 >> 2 << 2, HEAP32[tempInt >> 2] = 0, tempInt));
  __ZN5Avoid10err_printfEPKcz(5249156, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 3 >> 2 << 2, HEAP32[tempInt >> 2] = 0, tempInt));
  _abort();
  r3 = r1;
  __ZN5Avoid8ObstacleD2Ev(r3);
  STACKTOP = r2;
  return;
}
function __ZN5Avoid6VertIDC2Ejtt(r1, r2, r3, r4) {
  HEAP32[r1 >> 2] = r2;
  HEAP16[r1 + 4 >> 1] = r3;
  HEAP16[r1 + 6 >> 1] = r4;
  return;
}
function __ZN5Avoid6VertIDC2ERKS0_(r1, r2) {
  HEAP32[r1 >> 2] = HEAP32[r2 >> 2];
  HEAP16[r1 + 4 >> 1] = HEAP16[r2 + 4 >> 1];
  HEAP16[r1 + 6 >> 1] = HEAP16[r2 + 6 >> 1];
  return;
}
function __ZN5Avoid6VertIDaSERKS0_(r1, r2) {
  HEAP32[r1 >> 2] = HEAP32[r2 >> 2];
  HEAP16[r1 + 4 >> 1] = HEAP16[r2 + 4 >> 1];
  HEAP16[r1 + 6 >> 1] = HEAP16[r2 + 6 >> 1];
  return;
}
function __ZNK5Avoid6VertIDeqERKS0_(r1, r2) {
  if ((HEAP32[r1 >> 2] | 0) == (HEAP32[r2 >> 2] | 0)) {
    return HEAP16[r1 + 4 >> 1] << 16 >> 16 == HEAP16[r2 + 4 >> 1] << 16 >> 16;
  } else {
    return 0;
  }
}
function __ZNK5Avoid6VertIDneERKS0_(r1, r2) {
  if ((HEAP32[r1 >> 2] | 0) == (HEAP32[r2 >> 2] | 0)) {
    return HEAP16[r1 + 4 >> 1] << 16 >> 16 != HEAP16[r2 + 4 >> 1] << 16 >> 16;
  } else {
    return 1;
  }
}
function __ZNK5Avoid6VertIDltERKS0_(r1, r2) {
  var r3, r4, r5;
  r3 = HEAP32[r1 >> 2];
  r4 = HEAP32[r2 >> 2];
  if (r3 >>> 0 < r4 >>> 0) {
    r5 = 1;
    return r5;
  }
  do {
    if ((r3 | 0) == (r4 | 0)) {
      if (HEAPU16[r1 + 4 >> 1] < HEAPU16[r2 + 4 >> 1]) {
        r5 = 1;
      } else {
        break;
      }
      return r5;
    }
  } while (0);
  r5 = 0;
  return r5;
}
function __ZN5Avoid6VertIDppEi(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP16[r2 >> 1] = HEAP16[r2 >> 1] + 1 & 65535;
  return;
}
function __ZN5Avoid7VertInf8orphanedEv(r1) {
  var r2;
  if ((HEAP32[r1 + 60 >> 2] | 0) != 0) {
    r2 = 0;
    return r2;
  }
  if ((HEAP32[r1 + 92 >> 2] | 0) != 0) {
    r2 = 0;
    return r2;
  }
  r2 = (HEAP32[r1 + 76 >> 2] | 0) == 0;
  return r2;
}
function __ZN5Avoid5Timer4StopEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10;
  r2 = r1 + 504 | 0;
  if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
    ___assert_func(5246584, 87, 5258816, 5247836);
  }
  r3 = _clock();
  HEAP8[r2] = 0;
  r2 = (r1 + 512 | 0) >> 2;
  r4 = HEAP32[r2];
  r5 = HEAP32[r1 + (r4 << 2) >> 2];
  if (r3 >>> 0 < r5 >>> 0) {
    r6 = (i64Math.subtract(r3 | 0, 1, r5, 0), HEAP32[tempDoublePtr >> 2]);
    r7 = HEAP32[tempDoublePtr + 4 >> 2];
    r8 = r6;
  } else {
    r7 = 0;
    r8 = r3 - r5 | 0;
  }
  r5 = 0;
  if (r7 >>> 0 < r5 >>> 0 | r7 >>> 0 == r5 >>> 0 & r8 >>> 0 < 2147483647 >>> 0) {
    r9 = r4;
  } else {
    ___assert_func(5246584, 104, 5258816, 5246564);
    r9 = HEAP32[r2];
  }
  if ((r9 | 0) == 4) {
    r4 = (r1 + 516 | 0) >> 2;
    r5 = ((HEAP32[r4] << 3) + r1 + 168 | 0) >> 2;
    r3 = (i64Math.add(HEAP32[r5], HEAP32[r5 + 1], r8, r7), HEAP32[tempDoublePtr >> 2]);
    r6 = HEAP32[tempDoublePtr + 4 >> 2];
    HEAP32[r5] = r3;
    HEAP32[r5 + 1] = r6;
    r6 = (HEAP32[r4] << 2) + r1 + 336 | 0;
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
    r6 = r8;
    r5 = (HEAP32[r4] << 2) + r1 + 448 | 0;
    if (r6 >>> 0 <= HEAP32[r5 >> 2] >>> 0) {
      HEAP32[r2] = 0;
      return;
    }
    HEAP32[r5 >> 2] = r6;
    HEAP32[r2] = 0;
    return;
  } else {
    r6 = ((r9 << 3) + r1 + 56 | 0) >> 2;
    r9 = (i64Math.add(HEAP32[r6], HEAP32[r6 + 1], r8, r7), HEAP32[tempDoublePtr >> 2]);
    r7 = HEAP32[tempDoublePtr + 4 >> 2];
    HEAP32[r6] = r9;
    HEAP32[r6 + 1] = r7;
    r7 = (HEAP32[r2] << 2) + r1 + 280 | 0;
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] + 1 | 0;
    r7 = r8;
    r8 = HEAP32[r2];
    r6 = (r8 << 2) + r1 + 392 | 0;
    if (r7 >>> 0 > HEAP32[r6 >> 2] >>> 0) {
      HEAP32[r6 >> 2] = r7;
      r10 = HEAP32[r2];
    } else {
      r10 = r8;
    }
    HEAP32[r1 + 516 >> 2] = r10;
    HEAP32[r2] = 0;
    return;
  }
}
__ZN5Avoid5Timer4StopEv["X"] = 1;
function __ZN5Avoid6VertIDC1Ejtt(r1, r2, r3, r4) {
  __ZN5Avoid6VertIDC2Ejtt(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid6VertIDC1ERKS0_(r1, r2) {
  __ZN5Avoid6VertIDC2ERKS0_(r1, r2);
  return;
}
function __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r1, r2, r3, r4, r5) {
  __ZN5Avoid7VertInfC2EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r1, r2, r3, r4, r5);
  return;
}
function __ZN5Avoid7VertInfC2EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r1, r2, r3, r4, r5) {
  var r6, r7;
  r6 = r1 | 0;
  HEAP32[r6 >> 2] = r2;
  __ZN5Avoid6VertIDC1ERKS0_(r1 + 4 | 0, r3);
  r2 = (r1 + 12 | 0) >> 2;
  r7 = r4 >> 2;
  HEAP32[r2] = HEAP32[r7];
  HEAP32[r2 + 1] = HEAP32[r7 + 1];
  HEAP32[r2 + 2] = HEAP32[r7 + 2];
  HEAP32[r2 + 3] = HEAP32[r7 + 3];
  HEAP32[r2 + 4] = HEAP32[r7 + 4];
  HEAP32[r2 + 5] = HEAP32[r7 + 5];
  r7 = r1 + 52 | 0;
  r2 = r7;
  r4 = (r1 + 36 | 0) >> 2;
  HEAP32[r4] = 0;
  HEAP32[r4 + 1] = 0;
  HEAP32[r4 + 2] = 0;
  HEAP32[r4 + 3] = 0;
  HEAP32[r7 >> 2] = r2;
  HEAP32[r1 + 56 >> 2] = r2;
  HEAP32[r1 + 60 >> 2] = 0;
  HEAP32[r1 + 64 >> 2] = 0;
  r2 = r1 + 68 | 0;
  r7 = r2;
  HEAP32[r2 >> 2] = r7;
  HEAP32[r1 + 72 >> 2] = r7;
  HEAP32[r1 + 76 >> 2] = 0;
  HEAP32[r1 + 80 >> 2] = 0;
  r7 = r1 + 84 | 0;
  r2 = r7;
  HEAP32[r7 >> 2] = r2;
  HEAP32[r1 + 88 >> 2] = r2;
  HEAP32[r1 + 120 >> 2] = 0;
  r2 = r1 + 124 | 0;
  r7 = r2;
  r4 = (r1 + 92 | 0) >> 2;
  HEAP32[r4] = 0;
  HEAP32[r4 + 1] = 0;
  HEAP32[r4 + 2] = 0;
  HEAP32[r4 + 3] = 0;
  HEAP32[r4 + 4] = 0;
  HEAP32[r2 >> 2] = r7;
  HEAP32[r1 + 128 >> 2] = r7;
  HEAP32[r1 + 132 >> 2] = 0;
  HEAP32[r1 + 136 >> 2] = 0;
  HEAP32[r1 + 28 >> 2] = HEAP32[r3 >> 2];
  HEAP16[r1 + 32 >> 1] = HEAP16[r3 + 4 >> 1];
  if (!r5) {
    return;
  }
  __ZN5Avoid11VertInfList9addVertexEPNS_7VertInfE(HEAP32[r6 >> 2] + 100 | 0, r1);
  return;
}
__ZN5Avoid7VertInfC2EPNS_6RouterERKNS_6VertIDERKNS_5PointEb["X"] = 1;
function __ZN5Avoid11VertInfList9addVertexEPNS_7VertInfE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r3 = r1 >> 2;
  r4 = 0;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  do {
    if ((r6 | 0) == 0) {
      if ((HEAP32[r3 + 5] | 0) == 0) {
        break;
      } else {
        r4 = 367;
        break;
      }
    } else {
      r4 = 367;
    }
  } while (0);
  do {
    if (r4 == 367) {
      if ((HEAP32[r6 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 5] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 490, 5261360, 5243996);
    }
  } while (0);
  r6 = (r1 | 0) >> 2;
  r7 = HEAP32[r6];
  do {
    if ((r7 | 0) == 0) {
      if ((HEAP32[r3 + 4] | 0) == 0) {
        break;
      } else {
        r4 = 372;
        break;
      }
    } else {
      r4 = 372;
    }
  } while (0);
  do {
    if (r4 == 372) {
      if ((HEAP32[r7 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 4] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 490, 5261360, 5243200);
    }
  } while (0);
  r7 = (r1 + 8 | 0) >> 2;
  r8 = HEAP32[r7];
  do {
    if ((r8 | 0) != 0) {
      if ((HEAP32[r8 + 40 >> 2] | 0) == 0) {
        break;
      }
      ___assert_func(5247720, 490, 5261360, 5252728);
    }
  } while (0);
  r8 = (r1 + 12 | 0) >> 2;
  r9 = HEAP32[r8];
  do {
    if ((r9 | 0) == 0) {
      r10 = 0;
    } else {
      if ((HEAP32[r9 + 40 >> 2] | 0) == (HEAP32[r6] | 0)) {
        r10 = r9;
        break;
      }
      ___assert_func(5247720, 490, 5261360, 5252144);
      r10 = HEAP32[r8];
    }
  } while (0);
  r9 = (r10 | 0) == 0;
  do {
    if ((HEAP32[r5] | 0) == 0) {
      if (r9) {
        break;
      } else {
        r4 = 384;
        break;
      }
    } else {
      if (r9) {
        r4 = 384;
        break;
      } else {
        break;
      }
    }
  } while (0);
  if (r4 == 384) {
    ___assert_func(5247720, 490, 5261360, 5251856);
  }
  r9 = HEAP32[r6];
  r10 = (HEAP32[r7] | 0) == 0;
  do {
    if ((r9 | 0) == 0) {
      if (r10) {
        break;
      } else {
        r4 = 388;
        break;
      }
    } else {
      if (r10) {
        r4 = 388;
        break;
      } else {
        r11 = r9;
        r4 = 389;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 388) {
      ___assert_func(5247720, 490, 5261360, 5251516);
      r9 = HEAP32[r6];
      if ((r9 | 0) == 0) {
        r4 = 391;
        break;
      } else {
        r11 = r9;
        r4 = 389;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 389) {
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r11 + 10 >> 1])) {
        r4 = 391;
        break;
      }
      ___assert_func(5247720, 490, 5261360, 5251012);
      r4 = 391;
      break;
    }
  } while (0);
  do {
    if (r4 == 391) {
      r11 = HEAP32[r7];
      if ((r11 | 0) == 0) {
        break;
      }
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r11 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 490, 5261360, 5250672);
    }
  } while (0);
  r11 = HEAP32[r5];
  do {
    if ((r11 | 0) != 0) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r11 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 490, 5261360, 5250504);
    }
  } while (0);
  r11 = HEAP32[r8];
  do {
    if ((r11 | 0) != 0) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r11 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 490, 5261360, 5250424);
    }
  } while (0);
  r11 = r2 + 36 | 0;
  if ((HEAP32[r11 >> 2] | 0) != 0) {
    ___assert_func(5247720, 491, 5261360, 5250288);
  }
  r9 = (r2 + 40 | 0) >> 2;
  if ((HEAP32[r9] | 0) != 0) {
    ___assert_func(5247720, 492, 5261360, 5250160);
  }
  if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r2 + 10 >> 1])) {
    r10 = HEAP32[r5];
    if ((r10 | 0) == 0) {
      HEAP32[r5] = r2;
      HEAP32[r8] = r2;
      HEAP32[r9] = HEAP32[r6];
    } else {
      HEAP32[r9] = r10;
      HEAP32[HEAP32[r5] + 36 >> 2] = r2;
      HEAP32[r5] = r2;
    }
    r10 = r1 + 20 | 0;
    HEAP32[r10 >> 2] = HEAP32[r10 >> 2] + 1 | 0;
  } else {
    r10 = HEAP32[r7];
    do {
      if ((r10 | 0) == 0) {
        HEAP32[r6] = r2;
        HEAP32[r7] = r2;
        r9 = HEAP32[r8];
        if ((r9 | 0) == 0) {
          break;
        }
        if ((HEAP32[r9 + 40 >> 2] | 0) == 0) {
          r12 = r9;
        } else {
          ___assert_func(5247720, 538, 5261360, 5250040);
          r12 = HEAP32[r8];
        }
        HEAP32[r12 + 40 >> 2] = r2;
      } else {
        HEAP32[r11 >> 2] = r10;
        HEAP32[HEAP32[r7] + 40 >> 2] = r2;
        HEAP32[r7] = r2;
      }
    } while (0);
    r2 = r1 + 16 | 0;
    HEAP32[r2 >> 2] = HEAP32[r2 >> 2] + 1 | 0;
  }
  r2 = HEAP32[r5];
  do {
    if ((r2 | 0) == 0) {
      if ((HEAP32[r3 + 5] | 0) == 0) {
        break;
      } else {
        r4 = 418;
        break;
      }
    } else {
      r4 = 418;
    }
  } while (0);
  do {
    if (r4 == 418) {
      if ((HEAP32[r2 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 5] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 545, 5261360, 5243996);
    }
  } while (0);
  r2 = HEAP32[r6];
  do {
    if ((r2 | 0) == 0) {
      if ((HEAP32[r3 + 4] | 0) == 0) {
        break;
      } else {
        r4 = 423;
        break;
      }
    } else {
      r4 = 423;
    }
  } while (0);
  do {
    if (r4 == 423) {
      if ((HEAP32[r2 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 4] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 545, 5261360, 5243200);
    }
  } while (0);
  r3 = HEAP32[r7];
  do {
    if ((r3 | 0) != 0) {
      if ((HEAP32[r3 + 40 >> 2] | 0) == 0) {
        break;
      }
      ___assert_func(5247720, 545, 5261360, 5252728);
    }
  } while (0);
  r3 = HEAP32[r8];
  do {
    if ((r3 | 0) == 0) {
      r13 = 0;
    } else {
      if ((HEAP32[r3 + 40 >> 2] | 0) == (HEAP32[r6] | 0)) {
        r13 = r3;
        break;
      }
      ___assert_func(5247720, 545, 5261360, 5252144);
      r13 = HEAP32[r8];
    }
  } while (0);
  r3 = (r13 | 0) == 0;
  do {
    if ((HEAP32[r5] | 0) == 0) {
      if (r3) {
        break;
      } else {
        r4 = 435;
        break;
      }
    } else {
      if (r3) {
        r4 = 435;
        break;
      } else {
        break;
      }
    }
  } while (0);
  if (r4 == 435) {
    ___assert_func(5247720, 545, 5261360, 5251856);
  }
  r3 = HEAP32[r6];
  r13 = (HEAP32[r7] | 0) == 0;
  do {
    if ((r3 | 0) == 0) {
      if (r13) {
        break;
      } else {
        r4 = 439;
        break;
      }
    } else {
      if (r13) {
        r4 = 439;
        break;
      } else {
        r14 = r3;
        r4 = 440;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 439) {
      ___assert_func(5247720, 545, 5261360, 5251516);
      r3 = HEAP32[r6];
      if ((r3 | 0) == 0) {
        r4 = 442;
        break;
      } else {
        r14 = r3;
        r4 = 440;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 440) {
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r14 + 10 >> 1])) {
        r4 = 442;
        break;
      }
      ___assert_func(5247720, 545, 5261360, 5251012);
      r4 = 442;
      break;
    }
  } while (0);
  do {
    if (r4 == 442) {
      r14 = HEAP32[r7];
      if ((r14 | 0) == 0) {
        break;
      }
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r14 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 545, 5261360, 5250672);
    }
  } while (0);
  r7 = HEAP32[r5];
  do {
    if ((r7 | 0) != 0) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r7 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 545, 5261360, 5250504);
    }
  } while (0);
  r7 = HEAP32[r8];
  if ((r7 | 0) == 0) {
    return;
  }
  if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r7 + 10 >> 1])) {
    return;
  }
  ___assert_func(5247720, 545, 5261360, 5250424);
  return;
}
__ZN5Avoid11VertInfList9addVertexEPNS_7VertInfE["X"] = 1;
function __ZNSt3__14listIjNS_9allocatorIjEEED1Ev(r1) {
  __ZNSt3__14listIjNS_9allocatorIjEEED2Ev(r1);
  return;
}
function __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid7VertInfD1Ev(r1) {
  __ZN5Avoid7VertInfD2Ev(r1);
  return;
}
function __ZN5Avoid7VertInfD2Ev(r1) {
  if (!__ZN5Avoid7VertInf8orphanedEv(r1)) {
    ___assert_func(5247720, 186, 5256720, 5246552);
  }
  __ZNSt3__14listIjNS_9allocatorIjEEED1Ev(r1 + 124 | 0);
  __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev(r1 + 84 | 0);
  __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev(r1 + 68 | 0);
  __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev(r1 + 52 | 0);
  return;
}
function __ZNK5Avoid7VertInf12hasNeighbourEPS0_b(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = 0;
  r5 = r3 ? r1 + 68 | 0 : r1 + 52 | 0;
  r3 = r5;
  r6 = r1;
  r1 = r5 + 4 | 0;
  while (1) {
    r5 = HEAP32[r1 >> 2];
    if ((r5 | 0) == (r3 | 0)) {
      r7 = 0;
      r4 = 467;
      break;
    }
    r8 = r5 + 8 | 0;
    if ((__ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE(HEAP32[r8 >> 2], r6) | 0) == (r2 | 0)) {
      break;
    } else {
      r1 = r5 + 4 | 0;
    }
  }
  if (r4 == 467) {
    return r7;
  }
  r7 = HEAP32[r8 >> 2];
  return r7;
}
function __ZN5Avoid7VertInf5ResetERKNS_6VertIDERKNS_5PointE(r1, r2, r3) {
  var r4, r5;
  r4 = r1 + 4 | 0;
  __ZN5Avoid6VertIDaSERKS0_(r4, r2);
  r2 = (r1 + 12 | 0) >> 2;
  r5 = r3 >> 2;
  HEAP32[r2] = HEAP32[r5];
  HEAP32[r2 + 1] = HEAP32[r5 + 1];
  HEAP32[r2 + 2] = HEAP32[r5 + 2];
  HEAP32[r2 + 3] = HEAP32[r5 + 3];
  HEAP32[r1 + 28 >> 2] = HEAP32[r4 >> 2];
  HEAP16[r1 + 32 >> 1] = HEAP16[r1 + 8 >> 1];
  return;
}
function __ZN5Avoid7VertInf5ResetERKNS_5PointE(r1, r2) {
  var r3, r4;
  r3 = (r1 + 12 | 0) >> 2;
  r4 = r2 >> 2;
  HEAP32[r3] = HEAP32[r4];
  HEAP32[r3 + 1] = HEAP32[r4 + 1];
  HEAP32[r3 + 2] = HEAP32[r4 + 2];
  HEAP32[r3 + 3] = HEAP32[r4 + 3];
  HEAP32[r1 + 28 >> 2] = HEAP32[r1 + 4 >> 2];
  HEAP16[r1 + 32 >> 1] = HEAP16[r1 + 8 >> 1];
  return;
}
function __ZNK5Avoid7VertInf15treeRootPointerEv(r1) {
  return r1;
}
function __ZN5Avoid11VertInfList11shapesBeginEv(r1) {
  return r1;
}
function __ZNK5Avoid11VertInfList9connsSizeEv(r1) {
  return r1;
}
function __ZNK5Avoid7VertInf8treeRootEv(r1) {
  var r2;
  if ((r1 | 0) == 0) {
    r2 = 0;
  } else {
    r2 = HEAP32[r1 >> 2];
  }
  return r2;
}
function __ZN5Avoid7VertInf18setTreeRootPointerEPPS0_(r1, r2) {
  HEAP32[r1 + 108 >> 2] = r2;
  return;
}
function __ZN5Avoid11VertInfList10connsBeginEv(r1) {
  var r2, r3;
  r2 = HEAP32[r1 + 4 >> 2];
  if ((r2 | 0) != 0) {
    r3 = r2;
    return r3;
  }
  r3 = HEAP32[r1 >> 2];
  return r3;
}
function __ZN5Avoid7VertInf15removeFromGraphEb(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  do {
    if (r2) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r1 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 232, 5256748, 5245760);
    }
  } while (0);
  r2 = r1 + 52 | 0;
  r3 = r1 + 56 | 0;
  r4 = HEAP32[r3 >> 2];
  L579 : do {
    if ((r4 | 0) != (r2 | 0)) {
      r5 = r4;
      while (1) {
        r6 = r5 + 8 | 0;
        __ZN5Avoid7EdgeInf10alertConnsEv(HEAP32[r6 >> 2]);
        r7 = HEAP32[r6 >> 2];
        if ((r7 | 0) != 0) {
          __ZN5Avoid7EdgeInfD1Ev(r7);
          __ZdlPv(r7);
        }
        r7 = HEAP32[r3 >> 2];
        if ((r7 | 0) == (r2 | 0)) {
          break L579;
        } else {
          r5 = r7;
        }
      }
    }
  } while (0);
  r2 = r1 + 68 | 0;
  r3 = r1 + 72 | 0;
  r4 = HEAP32[r3 >> 2];
  L587 : do {
    if ((r4 | 0) != (r2 | 0)) {
      r5 = r4;
      while (1) {
        r7 = r5 + 8 | 0;
        __ZN5Avoid7EdgeInf10alertConnsEv(HEAP32[r7 >> 2]);
        r6 = HEAP32[r7 >> 2];
        if ((r6 | 0) != 0) {
          __ZN5Avoid7EdgeInfD1Ev(r6);
          __ZdlPv(r6);
        }
        r6 = HEAP32[r3 >> 2];
        if ((r6 | 0) == (r2 | 0)) {
          break L587;
        } else {
          r5 = r6;
        }
      }
    }
  } while (0);
  r2 = r1 + 84 | 0;
  r3 = r1 + 88 | 0;
  r1 = HEAP32[r3 >> 2];
  if ((r1 | 0) == (r2 | 0)) {
    return;
  } else {
    r8 = r1;
  }
  while (1) {
    r1 = HEAP32[r8 + 8 >> 2];
    if ((r1 | 0) == 0) {
      r9 = r8;
    } else {
      __ZN5Avoid7EdgeInfD1Ev(r1);
      __ZdlPv(r1);
      r9 = HEAP32[r3 >> 2];
    }
    if ((r9 | 0) == (r2 | 0)) {
      break;
    } else {
      r8 = r9;
    }
  }
  return;
}
__ZN5Avoid7VertInf15removeFromGraphEb["X"] = 1;
function __ZNK5Avoid7VertInf13directionFromEPKS0_(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = r1 + 12 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r1 + 20 | 0;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r2 + 12 | 0;
  r7 = r2 + 20 | 0;
  __ZNK5Avoid5PointmiERKS0_(r4, r6, r1, (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  r7 = r4 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r5 > 1e-6 & 1;
  r1 = r5 < -1e-6 ? r7 | 2 : r7;
  r7 = r4 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r4 > 1e-6 ? r1 | 8 : r1;
  STACKTOP = r3;
  return r4 < -1e-6 ? r7 | 4 : r7;
}
function __ZN5Avoid7VertInf20setVisibleDirectionsEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = HEAP32[r1 + 56 >> 2];
  r4 = r1 + 52 | 0;
  L606 : do {
    if ((r3 | 0) != (r4 | 0)) {
      r5 = (r2 | 0) == 15;
      r6 = r1;
      r7 = r3;
      while (1) {
        r8 = r7 + 8 | 0;
        r9 = HEAP32[r8 >> 2];
        if (r5) {
          __ZN5Avoid7EdgeInf11setDisabledEb(r9, 0);
        } else {
          r10 = __ZNK5Avoid7VertInf13directionFromEPKS0_(__ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE(r9, r6), r1) & r2;
          __ZN5Avoid7EdgeInf11setDisabledEb(HEAP32[r8 >> 2], (r10 | 0) == 0);
        }
        r10 = HEAP32[r7 + 4 >> 2];
        if ((r10 | 0) == (r4 | 0)) {
          break L606;
        } else {
          r7 = r10;
        }
      }
    }
  } while (0);
  r4 = HEAP32[r1 + 72 >> 2];
  r3 = r1 + 68 | 0;
  if ((r4 | 0) == (r3 | 0)) {
    return;
  }
  r7 = (r2 | 0) == 15;
  r6 = r1;
  r5 = r4;
  while (1) {
    r4 = r5 + 8 | 0;
    r10 = HEAP32[r4 >> 2];
    if (r7) {
      __ZN5Avoid7EdgeInf11setDisabledEb(r10, 0);
    } else {
      r8 = __ZNK5Avoid7VertInf13directionFromEPKS0_(__ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE(r10, r6), r1) & r2;
      __ZN5Avoid7EdgeInf11setDisabledEb(HEAP32[r4 >> 2], (r8 | 0) == 0);
    }
    r8 = HEAP32[r5 + 4 >> 2];
    if ((r8 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r8;
    }
  }
  return;
}
__ZN5Avoid7VertInf20setVisibleDirectionsEj["X"] = 1;
function __ZNK5Avoid7VertInf15pathLeadsBackToEPKS0_(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = 0;
  if ((r1 | 0) == (r2 | 0)) {
    r4 = 1;
    return r4;
  } else {
    r5 = 1;
    r6 = r1;
  }
  while (1) {
    r1 = r5 + 1 | 0;
    if ((r6 | 0) == 0) {
      r4 = 0;
      r3 = 532;
      break;
    }
    if (r1 >>> 0 >= 2e4) {
      ___assert_func(5247720, 370, 5253736, 5244896);
    }
    r7 = HEAP32[r6 + 100 >> 2];
    if ((r7 | 0) == (r2 | 0)) {
      r4 = r1;
      r3 = 530;
      break;
    } else {
      r5 = r1;
      r6 = r7;
    }
  }
  if (r3 == 530) {
    return r4;
  } else if (r3 == 532) {
    return r4;
  }
}
function __ZN5Avoid7VertInf19makeTreeRootPointerEPS0_(r1, r2) {
  var r3, r4;
  r3 = _malloc(4);
  r4 = r1 + 108 | 0;
  HEAP32[r4 >> 2] = r3;
  HEAP32[r3 >> 2] = r2;
  return HEAP32[r4 >> 2];
}
function __ZN5Avoid11VertInfListC1Ev(r1) {
  __ZN5Avoid11VertInfListC2Ev(r1);
  return;
}
function __ZN5Avoid11VertInfListC2Ev(r1) {
  var r2;
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  return;
}
function __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r3 = r1 >> 2;
  r4 = 0;
  if ((r2 | 0) == 0) {
    r5 = 0;
    return r5;
  }
  r6 = (r1 + 4 | 0) >> 2;
  r7 = HEAP32[r6];
  do {
    if ((r7 | 0) == 0) {
      if ((HEAP32[r3 + 5] | 0) == 0) {
        break;
      } else {
        r4 = 539;
        break;
      }
    } else {
      r4 = 539;
    }
  } while (0);
  do {
    if (r4 == 539) {
      if ((HEAP32[r7 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 5] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 558, 5261416, 5243996);
    }
  } while (0);
  r7 = (r1 | 0) >> 2;
  r8 = HEAP32[r7];
  do {
    if ((r8 | 0) == 0) {
      if ((HEAP32[r3 + 4] | 0) == 0) {
        break;
      } else {
        r4 = 544;
        break;
      }
    } else {
      r4 = 544;
    }
  } while (0);
  do {
    if (r4 == 544) {
      if ((HEAP32[r8 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 4] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 558, 5261416, 5243200);
    }
  } while (0);
  r8 = (r1 + 8 | 0) >> 2;
  r9 = HEAP32[r8];
  do {
    if ((r9 | 0) != 0) {
      if ((HEAP32[r9 + 40 >> 2] | 0) == 0) {
        break;
      }
      ___assert_func(5247720, 558, 5261416, 5252728);
    }
  } while (0);
  r9 = (r1 + 12 | 0) >> 2;
  r10 = HEAP32[r9];
  do {
    if ((r10 | 0) == 0) {
      r11 = 0;
    } else {
      if ((HEAP32[r10 + 40 >> 2] | 0) == (HEAP32[r7] | 0)) {
        r11 = r10;
        break;
      }
      ___assert_func(5247720, 558, 5261416, 5252144);
      r11 = HEAP32[r9];
    }
  } while (0);
  r10 = (r11 | 0) == 0;
  do {
    if ((HEAP32[r6] | 0) == 0) {
      if (r10) {
        break;
      } else {
        r4 = 556;
        break;
      }
    } else {
      if (r10) {
        r4 = 556;
        break;
      } else {
        break;
      }
    }
  } while (0);
  if (r4 == 556) {
    ___assert_func(5247720, 558, 5261416, 5251856);
  }
  r10 = HEAP32[r7];
  r11 = (HEAP32[r8] | 0) == 0;
  do {
    if ((r10 | 0) == 0) {
      if (r11) {
        break;
      } else {
        r4 = 560;
        break;
      }
    } else {
      if (r11) {
        r4 = 560;
        break;
      } else {
        r12 = r10;
        r4 = 561;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 560) {
      ___assert_func(5247720, 558, 5261416, 5251516);
      r10 = HEAP32[r7];
      if ((r10 | 0) == 0) {
        r4 = 563;
        break;
      } else {
        r12 = r10;
        r4 = 561;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 561) {
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r12 + 10 >> 1])) {
        r4 = 563;
        break;
      }
      ___assert_func(5247720, 558, 5261416, 5251012);
      r4 = 563;
      break;
    }
  } while (0);
  do {
    if (r4 == 563) {
      r12 = HEAP32[r8];
      if ((r12 | 0) == 0) {
        break;
      }
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r12 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 558, 5261416, 5250672);
    }
  } while (0);
  r12 = HEAP32[r6];
  do {
    if ((r12 | 0) != 0) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r12 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 558, 5261416, 5250504);
    }
  } while (0);
  r12 = HEAP32[r9];
  do {
    if ((r12 | 0) != 0) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r12 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 558, 5261416, 5250424);
    }
  } while (0);
  r12 = (r2 + 40 | 0) >> 2;
  r10 = HEAP32[r12], r11 = r10 >> 2;
  if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r2 + 10 >> 1])) {
    r13 = (HEAP32[r9] | 0) == (r2 | 0);
    do {
      if ((HEAP32[r6] | 0) == (r2 | 0)) {
        if (r13) {
          HEAP32[r6] = 0;
          HEAP32[r9] = 0;
          break;
        }
        HEAP32[r6] = r10;
        if ((r10 | 0) == 0) {
          break;
        }
        HEAP32[r11 + 9] = 0;
      } else {
        r14 = r2 + 36 | 0;
        r15 = HEAP32[r14 >> 2];
        if (r13) {
          HEAP32[r9] = r15;
          HEAP32[r15 + 40 >> 2] = HEAP32[r7];
          break;
        } else {
          HEAP32[r11 + 9] = r15;
          HEAP32[HEAP32[r14 >> 2] + 40 >> 2] = HEAP32[r12];
          break;
        }
      }
    } while (0);
    r13 = r1 + 20 | 0;
    HEAP32[r13 >> 2] = HEAP32[r13 >> 2] - 1 | 0;
  } else {
    do {
      if ((HEAP32[r8] | 0) == (r2 | 0)) {
        r13 = HEAP32[r2 + 36 >> 2];
        HEAP32[r8] = r13;
        do {
          if ((HEAP32[r7] | 0) == (r2 | 0)) {
            HEAP32[r7] = 0;
            r14 = HEAP32[r9];
            if ((r14 | 0) == 0) {
              r16 = r13;
              break;
            }
            HEAP32[r14 + 40 >> 2] = 0;
            r16 = HEAP32[r8];
          } else {
            r16 = r13;
          }
        } while (0);
        if ((r16 | 0) == 0) {
          break;
        }
        HEAP32[r16 + 40 >> 2] = 0;
      } else {
        if ((HEAP32[r7] | 0) != (r2 | 0)) {
          r13 = r2 + 36 | 0;
          HEAP32[r11 + 9] = HEAP32[r13 >> 2];
          HEAP32[HEAP32[r13 >> 2] + 40 >> 2] = HEAP32[r12];
          break;
        }
        HEAP32[r7] = r10;
        r13 = HEAP32[r9];
        if ((r13 | 0) == 0) {
          r17 = r10;
        } else {
          HEAP32[r13 + 40 >> 2] = r10;
          r17 = HEAP32[r7];
        }
        if ((r17 | 0) == 0) {
          break;
        }
        HEAP32[r17 + 36 >> 2] = 0;
      }
    } while (0);
    r17 = r1 + 16 | 0;
    HEAP32[r17 >> 2] = HEAP32[r17 >> 2] - 1 | 0;
  }
  HEAP32[r2 + 36 >> 2] = 0;
  HEAP32[r12] = 0;
  r12 = HEAP32[r6];
  do {
    if ((r12 | 0) == 0) {
      if ((HEAP32[r3 + 5] | 0) == 0) {
        break;
      } else {
        r4 = 597;
        break;
      }
    } else {
      r4 = 597;
    }
  } while (0);
  do {
    if (r4 == 597) {
      if ((HEAP32[r12 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 5] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 648, 5261416, 5243996);
    }
  } while (0);
  r12 = HEAP32[r7];
  do {
    if ((r12 | 0) == 0) {
      if ((HEAP32[r3 + 4] | 0) == 0) {
        break;
      } else {
        r4 = 602;
        break;
      }
    } else {
      r4 = 602;
    }
  } while (0);
  do {
    if (r4 == 602) {
      if ((HEAP32[r12 + 36 >> 2] | 0) == 0) {
        if ((HEAP32[r3 + 4] | 0) != 0) {
          break;
        }
      }
      ___assert_func(5247720, 648, 5261416, 5243200);
    }
  } while (0);
  r3 = HEAP32[r8];
  do {
    if ((r3 | 0) != 0) {
      if ((HEAP32[r3 + 40 >> 2] | 0) == 0) {
        break;
      }
      ___assert_func(5247720, 648, 5261416, 5252728);
    }
  } while (0);
  r3 = HEAP32[r9];
  do {
    if ((r3 | 0) == 0) {
      r18 = 0;
    } else {
      if ((HEAP32[r3 + 40 >> 2] | 0) == (HEAP32[r7] | 0)) {
        r18 = r3;
        break;
      }
      ___assert_func(5247720, 648, 5261416, 5252144);
      r18 = HEAP32[r9];
    }
  } while (0);
  r3 = (r18 | 0) == 0;
  do {
    if ((HEAP32[r6] | 0) == 0) {
      if (r3) {
        break;
      } else {
        r4 = 614;
        break;
      }
    } else {
      if (r3) {
        r4 = 614;
        break;
      } else {
        break;
      }
    }
  } while (0);
  if (r4 == 614) {
    ___assert_func(5247720, 648, 5261416, 5251856);
  }
  r3 = HEAP32[r7];
  r18 = (HEAP32[r8] | 0) == 0;
  do {
    if ((r3 | 0) == 0) {
      if (r18) {
        break;
      } else {
        r4 = 618;
        break;
      }
    } else {
      if (r18) {
        r4 = 618;
        break;
      } else {
        r19 = r3;
        r4 = 619;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 618) {
      ___assert_func(5247720, 648, 5261416, 5251516);
      r3 = HEAP32[r7];
      if ((r3 | 0) == 0) {
        r4 = 621;
        break;
      } else {
        r19 = r3;
        r4 = 619;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 619) {
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r19 + 10 >> 1])) {
        r4 = 621;
        break;
      }
      ___assert_func(5247720, 648, 5261416, 5251012);
      r4 = 621;
      break;
    }
  } while (0);
  do {
    if (r4 == 621) {
      r19 = HEAP32[r8];
      if ((r19 | 0) == 0) {
        break;
      }
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r19 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 648, 5261416, 5250672);
    }
  } while (0);
  r8 = HEAP32[r6];
  do {
    if ((r8 | 0) != 0) {
      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r8 + 10 >> 1])) {
        break;
      }
      ___assert_func(5247720, 648, 5261416, 5250504);
    }
  } while (0);
  r8 = HEAP32[r9];
  if ((r8 | 0) == 0) {
    r5 = r10;
    return r5;
  }
  if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r8 + 10 >> 1])) {
    r5 = r10;
    return r5;
  }
  ___assert_func(5247720, 648, 5261416, 5250424);
  r5 = r10;
  return r5;
}
__ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE["X"] = 1;
function __ZN5Avoid11VertInfList13getVertexByIDERKNS_6VertIDE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r4;
  __ZN5Avoid6VertIDC1ERKS0_(r5, r2);
  r2 = (r5 + 4 | 0) >> 1;
  do {
    if (HEAP16[r2] << 16 >> 16 == 8) {
      r6 = r5 | 0;
      r7 = HEAP32[r6 >> 2];
      if ((r7 | 0) < 0) {
        HEAP32[r6 >> 2] = r7 & 2147483647;
        HEAP16[r2] = 1;
        break;
      } else {
        HEAP16[r2] = 2;
        break;
      }
    }
  } while (0);
  r2 = __ZN5Avoid11VertInfList10connsBeginEv(r1);
  if ((r2 | 0) == 0) {
    r8 = 0;
    STACKTOP = r4;
    return r8;
  } else {
    r9 = r2;
  }
  while (1) {
    if (__ZNK5Avoid6VertIDeqERKS0_(r9 + 4 | 0, r5)) {
      r8 = r9;
      r3 = 645;
      break;
    }
    r2 = HEAP32[r9 + 40 >> 2];
    if ((r2 | 0) == 0) {
      r8 = 0;
      r3 = 644;
      break;
    } else {
      r9 = r2;
    }
  }
  if (r3 == 644) {
    STACKTOP = r4;
    return r8;
  } else if (r3 == 645) {
    STACKTOP = r4;
    return r8;
  }
}
function __ZN5Avoid11VertInfList14getVertexByPosERKNS_5PointE(r1, r2) {
  var r3, r4, r5;
  r3 = __ZN5Avoid11VertInfList11shapesBeginEv(r1);
  L796 : do {
    if ((r3 | 0) == 0) {
      r4 = 0;
    } else {
      r1 = r3;
      while (1) {
        if (__ZNK5Avoid5PointeqERKS0_(r1 + 12 | 0, r2)) {
          r4 = r1;
          break L796;
        }
        r5 = HEAP32[r1 + 40 >> 2];
        if ((r5 | 0) == 0) {
          r4 = 0;
          break L796;
        } else {
          r1 = r5;
        }
      }
    }
  } while (0);
  return r4;
}
function __ZNK5Avoid10ClusterRef2idEv(r1) {
  return r1;
}
function __ZN5Avoid10ClusterRef7polygonEv(r1) {
  return r1 + 8 | 0;
}
function __ZN5Avoid10ClusterRef18rectangularPolygonEv(r1) {
  return r1 + 40 | 0;
}
function __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29;
  r8 = r5 - r3 | 0;
  r9 = (r6 + 12 | 0) >> 2;
  r6 = HEAP32[r9];
  r10 = (r6 | 0) > (r8 | 0) ? r6 - r8 | 0 : 0;
  L805 : do {
    if (r3 >>> 0 < r4 >>> 0) {
      r8 = r3;
      r6 = r2;
      r11 = r2;
      while (1) {
        r12 = HEAP8[r8];
        do {
          if ((r6 | 0) == 0) {
            r13 = 0;
            r14 = r11;
          } else {
            r15 = r6 + 24 | 0;
            r16 = HEAP32[r15 >> 2];
            if ((r16 | 0) == (HEAP32[r6 + 28 >> 2] | 0)) {
              r17 = (FUNCTION_TABLE[HEAP32[HEAP32[r6 >> 2] + 52 >> 2]](r6, r12 & 255) | 0) == -1;
              r13 = r17 ? 0 : r6;
              r14 = r17 ? 0 : r11;
              break;
            } else {
              HEAP32[r15 >> 2] = r16 + 1 | 0;
              HEAP8[r16] = r12;
              r13 = r6;
              r14 = r11;
              break;
            }
          }
        } while (0);
        r12 = r8 + 1 | 0;
        if ((r12 | 0) == (r4 | 0)) {
          r18 = r4;
          r19 = r14;
          break L805;
        } else {
          r8 = r12;
          r6 = r13;
          r11 = r14;
        }
      }
    } else {
      r18 = r3;
      r19 = r2;
    }
  } while (0);
  L815 : do {
    if ((r10 | 0) == 0) {
      r20 = r19;
    } else {
      r2 = r7 & 255;
      r3 = r10;
      r14 = r19;
      r13 = r19;
      while (1) {
        do {
          if ((r14 | 0) == 0) {
            r21 = 0;
            r22 = r13;
          } else {
            r4 = r14 + 24 | 0;
            r11 = HEAP32[r4 >> 2];
            if ((r11 | 0) == (HEAP32[r14 + 28 >> 2] | 0)) {
              r6 = (FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 52 >> 2]](r14, r2) | 0) == -1;
              r21 = r6 ? 0 : r14;
              r22 = r6 ? 0 : r13;
              break;
            } else {
              HEAP32[r4 >> 2] = r11 + 1 | 0;
              HEAP8[r11] = r7;
              r21 = r14;
              r22 = r13;
              break;
            }
          }
        } while (0);
        r11 = r3 - 1 | 0;
        if ((r11 | 0) == 0) {
          r20 = r22;
          break L815;
        } else {
          r3 = r11;
          r14 = r21;
          r13 = r22;
        }
      }
    }
  } while (0);
  if (r18 >>> 0 < r5 >>> 0) {
    r23 = r18;
    r24 = r20;
    r25 = r20;
  } else {
    r26 = r20;
    HEAP32[r9] = 0;
    r27 = r1 | 0;
    HEAP32[r27 >> 2] = r26;
    return;
  }
  while (1) {
    r20 = HEAP8[r23];
    do {
      if ((r24 | 0) == 0) {
        r28 = 0;
        r29 = r25;
      } else {
        r18 = r24 + 24 | 0;
        r22 = HEAP32[r18 >> 2];
        if ((r22 | 0) == (HEAP32[r24 + 28 >> 2] | 0)) {
          r21 = (FUNCTION_TABLE[HEAP32[HEAP32[r24 >> 2] + 52 >> 2]](r24, r20 & 255) | 0) == -1;
          r28 = r21 ? 0 : r24;
          r29 = r21 ? 0 : r25;
          break;
        } else {
          HEAP32[r18 >> 2] = r22 + 1 | 0;
          HEAP8[r22] = r20;
          r28 = r24;
          r29 = r25;
          break;
        }
      }
    } while (0);
    r20 = r23 + 1 | 0;
    if ((r20 | 0) == (r5 | 0)) {
      r26 = r29;
      break;
    } else {
      r23 = r20;
      r24 = r28;
      r25 = r29;
    }
  }
  HEAP32[r9] = 0;
  r27 = r1 | 0;
  HEAP32[r27 >> 2] = r26;
  return;
}
__ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_["X"] = 1;
function __ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__14listIjNS_9allocatorIjEEED2Ev(r1) {
  __ZNSt3__110__list_impIjNS_9allocatorIjEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIjNS_9allocatorIjEEED2Ev(r1) {
  __ZNSt3__110__list_impIjNS_9allocatorIjEEE5clearEv(r1);
  return;
}
function __ZN5Avoid8Obstacle22computeVisibilityNaiveEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = r1 + 4 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((HEAP8[__ZNK5Avoid8Obstacle6routerEv(r3) + 141 | 0] & 1) << 24 >> 24 == 0) {
    __ZN5Avoid8Obstacle15removeFromGraphEv(r1);
    r4 = HEAP32[r2 >> 2];
  } else {
    r4 = r3;
  }
  r3 = __ZN5Avoid8Obstacle9firstVertEv(HEAP32[r1 + 64 >> 2]);
  r2 = HEAP32[__ZN5Avoid8Obstacle8lastVertEv(HEAP32[r1 + 68 >> 2]) + 40 >> 2];
  r1 = r2;
  r5 = __ZN5Avoid11VertInfList10connsBeginEv(__ZNK5Avoid8Obstacle6routerEv(r4) + 100 | 0);
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r2 | 0) == 0;
  r2 = r3;
  while (1) {
    L859 : do {
      if ((r5 | 0) != (r2 | 0)) {
        r3 = r2;
        r6 = r5;
        while (1) {
          if (!__ZNK5Avoid6VertIDeqERKS0_(r6 + 4 | 0, 5274192)) {
            __ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b(r3, r6);
          }
          r7 = HEAP32[r6 + 40 >> 2];
          if ((r7 | 0) == (r2 | 0)) {
            break L859;
          } else {
            r6 = r7;
          }
        }
      }
    } while (0);
    L867 : do {
      if (!r4) {
        r6 = r2;
        r3 = r1;
        while (1) {
          if (!__ZNK5Avoid6VertIDeqERKS0_(r3 + 4 | 0, 5274192)) {
            __ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b(r6, r3);
          }
          r7 = HEAP32[r3 + 40 >> 2];
          if ((r7 | 0) == 0) {
            break L867;
          } else {
            r3 = r7;
          }
        }
      }
    } while (0);
    r3 = HEAP32[r2 + 40 >> 2];
    if ((r3 | 0) == (r1 | 0)) {
      break;
    } else {
      r2 = r3;
    }
  }
  return;
}
__ZN5Avoid8Obstacle22computeVisibilityNaiveEv["X"] = 1;
function __ZN5Avoid8Obstacle22computeVisibilitySweepEv(r1) {
  var r2, r3;
  if ((HEAP8[__ZNK5Avoid8Obstacle6routerEv(HEAP32[r1 + 4 >> 2]) + 141 | 0] & 1) << 24 >> 24 == 0) {
    __ZN5Avoid8Obstacle15removeFromGraphEv(r1);
  }
  r2 = __ZN5Avoid8Obstacle9firstVertEv(HEAP32[r1 + 64 >> 2]);
  r3 = HEAP32[__ZN5Avoid8Obstacle8lastVertEv(HEAP32[r1 + 68 >> 2]) + 40 >> 2];
  r1 = r3;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r3 = r2;
  while (1) {
    __ZN5AvoidL11vertexSweepEPNS_7VertInfE(r3);
    r2 = HEAP32[r3 + 40 >> 2];
    if ((r2 | 0) == (r1 | 0)) {
      break;
    } else {
      r3 = r2;
    }
  }
  return;
}
function __ZNK5Avoid6VertID16isConnCheckpointEv(r1) {
  return (r1 & 8) << 16 >> 16 != 0;
}
function __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d598(r1, r2, r3, r4, r5, r6) {
  var r7, r8;
  r7 = (r3 - r1) * (r6 - r2) - (r4 - r2) * (r5 - r1);
  if (r7 < 0) {
    r8 = -1;
    return r8;
  }
  r8 = r7 > 0 & 1;
  return r8;
}
function __ZN5Avoid8EdgePair16setNegativeAngleEv(r1) {
  var r2;
  r2 = r1 + 24 | 0;
  HEAPF64[tempDoublePtr >> 3] = -1, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
function __ZN5AvoidL11vertexSweepEPNS_7VertInfE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 644 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 12;
  r7 = r3 + 20;
  r8 = r3 + 24;
  r9 = r3 + 32;
  r10 = r3 + 40;
  r11 = r3 + 48;
  r12 = r3 + 56;
  r13 = r3 + 64;
  r14 = r3 + 68;
  r15 = r3 + 76;
  r16 = r3 + 100;
  r17 = r3 + 112;
  r18 = r3 + 156;
  r19 = r3 + 200;
  r20 = r3 + 244;
  r21 = r3 + 288;
  r22 = r3 + 332;
  r23 = r3 + 344;
  r24 = r3 + 356;
  r25 = r3 + 380;
  r26 = r3 + 444;
  r27 = r3 + 508;
  r28 = r3 + 512;
  r29 = r3 + 516;
  r30 = r3 + 580;
  r31 = HEAP32[r1 >> 2];
  r32 = r1 + 12 | 0;
  __ZN5Avoid6VertIDC1ERKS0_(r14, r1 + 4 | 0);
  r33 = r15 >> 2;
  r34 = r32 >> 2;
  HEAP32[r33] = HEAP32[r34];
  HEAP32[r33 + 1] = HEAP32[r34 + 1];
  HEAP32[r33 + 2] = HEAP32[r34 + 2];
  HEAP32[r33 + 3] = HEAP32[r34 + 3];
  HEAP32[r33 + 4] = HEAP32[r34 + 4];
  HEAP32[r33 + 5] = HEAP32[r34 + 5];
  r34 = r16 | 0;
  __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_(r34);
  r33 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r31 + 88 | 0, r14);
  r35 = __ZN5Avoid11VertInfList10connsBeginEv(r31 + 100 | 0);
  L895 : do {
    if ((r35 | 0) != 0) {
      r36 = r33 | 0;
      r37 = r13 | 0;
      r38 = r33 + 4 | 0;
      r39 = r14 | 0;
      r40 = r14 + 6 | 0;
      r41 = r35;
      while (1) {
        do {
          if ((r41 | 0) != (r1 | 0)) {
            r42 = r41 + 4 | 0;
            if (__ZNK5Avoid6VertIDeqERKS0_(r42, 5274192)) {
              break;
            }
            if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r40 >> 1])) {
              __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r13, r36, r42 | 0);
              if ((HEAP32[r37 >> 2] | 0) != (r38 | 0)) {
                break;
              }
            }
            r43 = HEAP16[r41 + 10 >> 1];
            if (!__ZNK5Avoid6VertID8isConnPtEv(r43)) {
              __ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE(r21, r15, r41);
              __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r8, r34, r21);
              break;
            }
            r44 = HEAP16[r40 >> 1];
            if (!__ZNK5Avoid6VertID8isConnPtEv(r44)) {
              __ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE(r20, r15, r41);
              __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r9, r34, r20);
              break;
            }
            if (__ZNK5Avoid6VertID15isConnectionPinEv(r43)) {
              __ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE(r17, r15, r41);
              __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r12, r34, r17);
              break;
            }
            if (__ZNK5Avoid6VertID15isConnectionPinEv(r44)) {
              __ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE(r18, r15, r41);
              __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r11, r34, r18);
              break;
            }
            if ((HEAP32[r42 >> 2] | 0) != (HEAP32[r39 >> 2] | 0)) {
              break;
            }
            __ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE(r19, r15, r41);
            __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r10, r34, r19);
          }
        } while (0);
        r42 = HEAP32[r41 + 40 >> 2];
        if ((r42 | 0) == 0) {
          break L895;
        } else {
          r41 = r42;
        }
      }
    }
  } while (0);
  r19 = r22 | 0;
  __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC1ERKS2_(r19);
  r34 = r23;
  HEAP32[r23 >> 2] = r34;
  r10 = (r23 + 4 | 0) >> 2;
  HEAP32[r10] = r34;
  r18 = r23 + 8 | 0;
  HEAP32[r18 >> 2] = 0;
  r11 = HEAP32[r16 >> 2];
  r17 = r16 + 4 | 0;
  r12 = (r1 + 20 | 0) >> 2;
  __ZN5Avoid5PointC1Edd(r24, 1.7976931348623157e+308, (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]));
  r20 = (r11 | 0) == (r17 | 0);
  L925 : do {
    if (!r20) {
      r9 = r33 | 0;
      r21 = r7 | 0;
      r8 = r33 + 4 | 0;
      r13 = (r32 | 0) >> 2;
      r35 = (r24 | 0) >> 2;
      r41 = (r24 + 8 | 0) >> 2;
      r39 = r14 + 6 | 0;
      r40 = r17;
      r38 = r11;
      while (1) {
        r37 = r38 + 16 | 0;
        r36 = HEAP32[r37 >> 2];
        if ((r36 | 0) == (r1 | 0)) {
          ___assert_func(5246524, 520, 5255916, 5244504);
        }
        do {
          if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r39 >> 1])) {
            __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r7, r9, r36 + 4 | 0);
            if ((HEAP32[r21 >> 2] | 0) == (r8 | 0)) {
              break;
            }
            ___assert_func(5246524, 522, 5255916, 5243900);
          }
        } while (0);
        r42 = HEAP32[r36 + 44 >> 2];
        r44 = HEAP32[r36 + 48 >> 2];
        do {
          if ((r42 | 0) == 0 | (r42 | 0) == (r1 | 0)) {
            r2 = 764;
          } else {
            r43 = r42 + 12 | 0;
            r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
            r46 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]);
            r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r35], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r35 + 1], HEAPF64[tempDoublePtr >> 3]);
            r48 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r41], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r41 + 1], HEAPF64[tempDoublePtr >> 3]);
            r49 = r43 | 0;
            r50 = r42 + 20 | 0;
            if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d598(r45, r46, r47, r48, (HEAP32[tempDoublePtr >> 2] = HEAP32[r49 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r49 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r50 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) != 1) {
              r2 = 764;
              break;
            }
            r50 = r36 + 12 | 0;
            if (__ZN5Avoid16segmentIntersectERKNS_5PointES2_S2_S2_(r32, r24, r43, r50)) {
              __ZN5Avoid8EdgePairC1ERKNS_9PointPairEPNS_7VertInfE(r25, r37, r42);
              __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE9push_backERKS2_(r23, r25);
            }
            if (!__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r43, r50, r32, 0)) {
              break;
            }
            __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj(r6, r19, r36 + 4 | 0);
            break;
          }
        } while (0);
        do {
          if (r2 == 764) {
            r2 = 0;
            if ((r44 | 0) == 0 | (r44 | 0) == (r1 | 0)) {
              break;
            }
            r42 = r44 + 12 | 0;
            r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
            r43 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]);
            r49 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r35], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r35 + 1], HEAPF64[tempDoublePtr >> 3]);
            r48 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r41], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r41 + 1], HEAPF64[tempDoublePtr >> 3]);
            r47 = r42 | 0;
            r46 = r44 + 20 | 0;
            if ((__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d598(r50, r43, r49, r48, (HEAP32[tempDoublePtr >> 2] = HEAP32[r47 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r47 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) | 0) != 1) {
              break;
            }
            r46 = r36 + 12 | 0;
            if (__ZN5Avoid16segmentIntersectERKNS_5PointES2_S2_S2_(r32, r24, r42, r46)) {
              __ZN5Avoid8EdgePairC1ERKNS_9PointPairEPNS_7VertInfE(r26, r37, r44);
              __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE9push_backERKS2_(r23, r26);
            }
            if (!__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r42, r46, r32, 0)) {
              break;
            }
            __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj(r5, r19, r36 + 4 | 0);
          }
        } while (0);
        r36 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r38 | 0);
        if ((r36 | 0) == (r40 | 0)) {
          break L925;
        } else {
          r38 = r36;
        }
      }
    }
  } while (0);
  r19 = HEAP32[r10];
  L957 : do {
    if ((r19 | 0) != (r34 | 0)) {
      r5 = r19;
      while (1) {
        __ZN5Avoid8EdgePair16setNegativeAngleEv(r5 + 8 | 0);
        r32 = HEAP32[r5 + 4 >> 2];
        if ((r32 | 0) == (r34 | 0)) {
          break L957;
        } else {
          r5 = r32;
        }
      }
    }
  } while (0);
  __ZN5Avoid15isBoundingShapeC1ERNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(r27, r33);
  if (r20) {
    __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED1Ev(r23);
    __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r22);
    __ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r16);
    STACKTOP = r3;
    return;
  }
  r20 = r1;
  r33 = r31 + 141 | 0;
  r27 = (r15 | 0) >> 2;
  r19 = (r15 + 8 | 0) >> 2;
  r5 = r31 + 139 | 0;
  r31 = r1 + 44 | 0;
  r32 = r1 + 48 | 0;
  r26 = r14 + 6 | 0;
  r14 = r17;
  r17 = r11;
  while (1) {
    r11 = r17 + 16 | 0;
    r24 = HEAP32[r11 >> 2], r12 = r24 >> 2;
    r2 = r24 + 12 | 0;
    r6 = r17 + 28 | 0;
    r25 = r24;
    r7 = __ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_(r20, r25);
    if ((r7 | 0) == 0) {
      r38 = __Znwj(68);
      __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r38, r20, r25, 0);
      r51 = r38;
    } else {
      r51 = r7;
    }
    r7 = HEAP32[r10];
    if ((r7 | 0) == (r34 | 0)) {
      r52 = r34;
    } else {
      r38 = r7;
      while (1) {
        __ZN5Avoid8EdgePair12setCurrAngleERKNS_9PointPairE(r38 + 8 | 0, r11);
        r7 = HEAP32[r38 + 4 >> 2];
        if ((r7 | 0) == (r34 | 0)) {
          break;
        } else {
          r38 = r7;
        }
      }
      r52 = HEAP32[r10];
    }
    __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r4, r52, r34, HEAP32[r18 >> 2]);
    HEAP32[r28 >> 2] = 0;
    r38 = __ZN5AvoidL12sweepVisibleERNSt3__14listINS_8EdgePairENS0_9allocatorIS2_EEEERKNS_9PointPairERNS0_3setIjNS0_4lessIjEENS3_IjEEEEPi(r23, r11, r22, r28);
    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r26 >> 1])) {
      r53 = 1;
    } else {
      r53 = __ZN5Avoid13inValidRegionEbRKNS_5PointES2_S2_S2_((HEAP8[r5] & 1) << 24 >> 24 != 0, HEAP32[r31 >> 2] + 12 | 0, r15, HEAP32[r32 >> 2] + 12 | 0, r2);
    }
    r7 = r24 + 10 | 0;
    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r7 >> 1])) {
      r54 = 1;
    } else {
      r54 = __ZN5Avoid13inValidRegionEbRKNS_5PointES2_S2_S2_((HEAP8[r5] & 1) << 24 >> 24 != 0, HEAP32[r12 + 11] + 12 | 0, r2, HEAP32[r12 + 12] + 12 | 0, r15);
    }
    do {
      if (r53 & r54) {
        if (r38) {
          __ZN5Avoid7EdgeInf7setDistEd(r51, (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          break;
        }
        if ((HEAP8[r33] & 1) << 24 >> 24 == 0) {
          break;
        }
        __ZN5Avoid7EdgeInf10addBlockerEi(r51, HEAP32[r28 >> 2]);
      } else {
        if ((HEAP8[r33] & 1) << 24 >> 24 == 0) {
          break;
        }
        __ZN5Avoid7EdgeInf10addBlockerEi(r51, 0);
      }
    } while (0);
    r6 = r51;
    do {
      if (!__ZN5Avoid7EdgeInf5addedEv(HEAP8[r51 + 16 | 0])) {
        if ((HEAP8[r33] & 1) << 24 >> 24 != 0 | (r51 | 0) == 0) {
          break;
        }
        __ZN5Avoid7EdgeInfD1Ev(r6);
        __ZdlPv(r51);
      }
    } while (0);
    do {
      if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r7 >> 1])) {
        r6 = HEAP32[r12 + 11];
        do {
          if ((r6 | 0) != (r1 | 0)) {
            r38 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 1], HEAPF64[tempDoublePtr >> 3]);
            r25 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
            r40 = r2 | 0;
            r41 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r40 = r24 + 20 | 0;
            r35 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r40 = r6 + 12 | 0;
            r13 = r6 + 20 | 0;
            r8 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d598(r38, r25, r41, r35, (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
            __ZN5Avoid8EdgePairC1ERKNS_9PointPairEPNS_7VertInfE(r29, r11, r6);
            if ((r8 | 0) == -1) {
              __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6removeERKS2_(r23, r29);
              break;
            } else if ((r8 | 0) == 1) {
              __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE10push_frontERKS2_(r23, r29);
              break;
            } else {
              break;
            }
          }
        } while (0);
        r6 = HEAP32[r12 + 12];
        if ((r6 | 0) == (r1 | 0)) {
          break;
        }
        r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 1], HEAPF64[tempDoublePtr >> 3]);
        r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
        r40 = r2 | 0;
        r35 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r40 = r24 + 20 | 0;
        r41 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r40 = r6 + 12 | 0;
        r25 = r6 + 20 | 0;
        r38 = __ZN5AvoidL6vecDirERKNS_5PointES2_S2_d598(r8, r13, r35, r41, (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
        __ZN5Avoid8EdgePairC1ERKNS_9PointPairEPNS_7VertInfE(r30, r11, r6);
        if ((r38 | 0) == -1) {
          __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6removeERKS2_(r23, r30);
          break;
        } else if ((r38 | 0) == 1) {
          __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE10push_frontERKS2_(r23, r30);
          break;
        } else {
          break;
        }
      }
    } while (0);
    r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r17 | 0);
    if ((r11 | 0) == (r14 | 0)) {
      break;
    } else {
      r17 = r11;
    }
  }
  __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED1Ev(r23);
  __ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev(r22);
  __ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r16);
  STACKTOP = r3;
  return;
}
__ZN5AvoidL11vertexSweepEPNS_7VertInfE["X"] = 1;
function __ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = HEAP32[r1 >> 2];
  r4 = r1 + 10 | 0;
  if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r4 >> 1])) {
    ___assert_func(5246524, 122, 5261168, 5245732);
  }
  if ((HEAP8[r3 + 141 | 0] & 1) << 24 >> 24 == 0) {
    __ZN5Avoid7VertInf15removeFromGraphEb(r1, 1);
  }
  if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r4 >> 1])) {
    __ZN5Avoid6Router16generateContainsEPNS_7VertInfE(r3, r1);
  }
  if ((HEAP8[r3 + 140 | 0] & 1) << 24 >> 24 != 0) {
    __ZN5AvoidL11vertexSweepEPNS_7VertInfE(r1);
    return;
  }
  r4 = __ZN5Avoid11VertInfList10connsBeginEv(r3 + 100 | 0);
  L1027 : do {
    if ((r4 | 0) != 0) {
      r3 = r1 + 4 | 0;
      r5 = r1;
      r6 = r4;
      while (1) {
        r7 = r6 + 4 | 0;
        L1031 : do {
          if (!__ZNK5Avoid6VertIDeqERKS0_(r7, 5274192)) {
            r8 = HEAP16[r6 + 10 >> 1];
            do {
              if (__ZNK5Avoid6VertID8isConnPtEv(r8)) {
                if (__ZNK5Avoid6VertID15isConnectionPinEv(r8)) {
                  break;
                }
                if (!__ZNK5Avoid6VertID16isConnCheckpointEv(r8)) {
                  break L1031;
                }
                if ((HEAP32[r7 >> 2] | 0) != (HEAP32[r3 >> 2] | 0)) {
                  break L1031;
                }
              }
            } while (0);
            __ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b(r5, r6);
          }
        } while (0);
        r7 = HEAP32[r6 + 40 >> 2];
        if ((r7 | 0) == 0) {
          break L1027;
        } else {
          r6 = r7;
        }
      }
    }
  } while (0);
  if ((r2 | 0) == 0) {
    return;
  }
  __ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b(r1, r2);
  return;
}
__ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb["X"] = 1;
function __ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE(r1, r2, r3) {
  __ZN5Avoid9PointPairC2ERKNS_5PointEPNS_7VertInfE(r1, r2, r3);
  return;
}
function __ZN5Avoid8EdgePairC1ERKNS_9PointPairEPNS_7VertInfE(r1, r2, r3) {
  __ZN5Avoid8EdgePairC2ERKNS_9PointPairEPNS_7VertInfE(r1, r2, r3);
  return;
}
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE9push_backERKS2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = __Znwj(72);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    r6 = r2;
    for (r2 = r6 >> 2, r7 = r5 >> 2, r8 = r2 + 16; r2 < r8; r2++, r7++) {
      HEAP32[r7] = HEAP32[r2];
    }
  }
  r5 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r5];
  HEAP32[r5] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid15isBoundingShapeC1ERNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(r1, r2) {
  __ZN5Avoid15isBoundingShapeC2ERNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(r1, r2);
  return;
}
function __ZN5Avoid8EdgePair12setCurrAngleERKNS_9PointPairE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = r2 | 0;
  r6 = HEAP32[r5 >> 2] + 12 | 0;
  r7 = r1 | 0;
  if (__ZNK5Avoid5PointeqERKS0_(r6, HEAP32[r7 >> 2] + 12 | 0)) {
    r8 = r1 + 8 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r8 = r1 + 32 | 0;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    r8 = r2 + 4 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r8 = r1 + 24 | 0;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    STACKTOP = r3;
    return;
  }
  r8 = r1 + 4 | 0;
  if (__ZNK5Avoid5PointeqERKS0_(r6, HEAP32[r8 >> 2] + 12 | 0)) {
    r6 = r1 + 16 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r6 = r1 + 32 | 0;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    r6 = r2 + 4 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r6 = r1 + 24 | 0;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    STACKTOP = r3;
    return;
  }
  r6 = (r2 + 4 | 0) >> 2;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]);
  r9 = (r1 + 24 | 0) >> 2;
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 1], HEAPF64[tempDoublePtr >> 3]);
  if (r2 == r10) {
    STACKTOP = r3;
    return;
  }
  if (r2 > r10) {
    r11 = r2;
  } else {
    ___assert_func(5246524, 287, 5256576, 5250980);
    r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]);
  }
  HEAPF64[tempDoublePtr >> 3] = r11, HEAP32[r9] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZN5Avoid5PointC1Ev(r4);
  r9 = HEAP32[r7 >> 2] + 12 | 0;
  r7 = HEAP32[r8 >> 2];
  r8 = r1 + 40 | 0;
  r11 = HEAP32[r5 >> 2];
  r5 = r7 + 12 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r7 + 20 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r8 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r1 + 48 | 0;
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r11 + 12 | 0;
  r12 = r11 + 20 | 0;
  if ((__ZN5Avoid17rayIntersectPointERKNS_5PointES2_S2_S2_PdS3_(r9, r6, r7, r2, r10, (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), r4 | 0, r4 + 8 | 0) | 0) == 1) {
    r12 = __ZN5Avoid13euclideanDistERKNS_5PointES2_(r4, r8);
    r8 = r1 + 32 | 0;
    HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    STACKTOP = r3;
    return;
  } else {
    r8 = r1 + 8 | 0;
    r12 = r1 + 16 | 0;
    r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r8 = r4 < r12 ? r4 : r12;
    r12 = r1 + 32 | 0;
    HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r12 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    STACKTOP = r3;
    return;
  }
}
__ZN5Avoid8EdgePair12setCurrAngleERKNS_9PointPairE["X"] = 1;
function __ZN5Avoid15isBoundingShapeC2ERNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(r1, r2) {
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZN5AvoidL12sweepVisibleERNSt3__14listINS_8EdgePairENS0_9allocatorIS2_EEEERKNS_9PointPairERNS0_3setIjNS0_4lessIjEENS3_IjEEEEPi(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r7 = r6;
  r8 = r6 + 4;
  r9 = r6 + 8;
  if ((HEAP32[r1 + 8 >> 2] | 0) == 0) {
    r10 = 1;
    STACKTOP = r6;
    return r10;
  }
  r11 = HEAP32[r2 >> 2];
  r12 = HEAP32[r11 >> 2];
  r13 = r1;
  r14 = HEAP32[r1 + 4 >> 2];
  if ((r14 | 0) == (r13 | 0)) {
    r10 = 1;
    STACKTOP = r6;
    return r10;
  }
  r1 = r11 + 12 | 0;
  r15 = r14, r14 = r15 >> 2;
  while (1) {
    r16 = HEAP32[r14 + 2];
    if (!__ZNK5Avoid5PointeqERKS0_(r1, r16 + 12 | 0)) {
      if (!__ZNK5Avoid5PointeqERKS0_(r1, HEAP32[r14 + 3] + 12 | 0)) {
        break;
      }
    }
    r17 = HEAP32[r14 + 1];
    if ((r17 | 0) == (r13 | 0)) {
      r10 = 1;
      r5 = 886;
      break;
    } else {
      r15 = r17, r14 = r15 >> 2;
    }
  }
  if (r5 == 886) {
    STACKTOP = r6;
    return r10;
  }
  do {
    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r11 + 10 >> 1])) {
      r14 = __ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_(r12 + 88 | 0, r11 + 4 | 0);
      if ((r15 | 0) == (r13 | 0)) {
        r10 = 1;
        STACKTOP = r6;
        return r10;
      }
      r1 = r14 | 0;
      r17 = r7 | 0;
      r18 = r14 + 4 | 0;
      r14 = r15;
      while (1) {
        r19 = r14 + 8 | 0;
        __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r7, r1, HEAP32[r19 >> 2] + 4 | 0);
        if ((HEAP32[r17 >> 2] | 0) == (r18 | 0)) {
          break;
        }
        r20 = HEAP32[r14 + 4 >> 2];
        if ((r20 | 0) == (r13 | 0)) {
          r10 = 1;
          r5 = 893;
          break;
        } else {
          r14 = r20;
        }
      }
      if (r5 == 893) {
        STACKTOP = r6;
        return r10;
      }
      r18 = r2 + 12 | 0;
      r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r18 = r14 + 40 | 0;
      r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r17 > r1) {
        r21 = r14;
        break;
      }
      if (r17 != r1) {
        r10 = 1;
        STACKTOP = r6;
        return r10;
      }
      __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r8, r3 | 0, HEAP32[r19 >> 2] + 4 | 0);
      if ((HEAP32[r8 >> 2] | 0) == (r3 + 4 | 0)) {
        r10 = 1;
      } else {
        r21 = r14;
        break;
      }
      STACKTOP = r6;
      return r10;
    } else {
      r1 = r2 + 12 | 0;
      r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r1 = r15 + 40 | 0;
      r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r17 > r18) {
        r21 = r15;
        break;
      }
      if (r17 != r18) {
        r10 = 1;
        STACKTOP = r6;
        return r10;
      }
      __ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_(r9, r3 | 0, r16 + 4 | 0);
      if ((HEAP32[r9 >> 2] | 0) == (r3 + 4 | 0)) {
        r10 = 1;
      } else {
        r21 = r15;
        break;
      }
      STACKTOP = r6;
      return r10;
    }
  } while (0);
  HEAP32[r4 >> 2] = HEAP32[HEAP32[r21 + 8 >> 2] + 4 >> 2];
  r10 = 0;
  STACKTOP = r6;
  return r10;
}
__ZN5AvoidL12sweepVisibleERNSt3__14listINS_8EdgePairENS0_9allocatorIS2_EEEERKNS_9PointPairERNS0_3setIjNS0_4lessIjEENS3_IjEEEEPi["X"] = 1;
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6removeERKS2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = HEAP32[r1 + 4 >> 2];
  r6 = r1;
  if ((r5 | 0) == (r6 | 0)) {
    STACKTOP = r3;
    return;
  }
  r7 = r4 | 0;
  r8 = r5;
  while (1) {
    r5 = __ZNK5Avoid8EdgePaireqERKS0_(r8 + 8 | 0, r2);
    r9 = HEAP32[r8 + 4 >> 2];
    if (r5) {
      L1120 : do {
        if ((r9 | 0) == (r6 | 0)) {
          r10 = r6;
        } else {
          r5 = r9;
          while (1) {
            if (!__ZNK5Avoid8EdgePaireqERKS0_(r5 + 8 | 0, r2)) {
              r10 = r5;
              break L1120;
            }
            r11 = HEAP32[r5 + 4 >> 2];
            if ((r11 | 0) == (r6 | 0)) {
              r10 = r6;
              break L1120;
            } else {
              r5 = r11;
            }
          }
        }
      } while (0);
      __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEES8_(r4, r1, r8, r10);
      r12 = HEAP32[r7 >> 2];
    } else {
      r12 = r9;
    }
    if ((r12 | 0) == (r6 | 0)) {
      break;
    } else {
      r8 = r12;
    }
  }
  STACKTOP = r3;
  return;
}
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE10push_frontERKS2_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = __Znwj(72);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    r6 = r2;
    for (r2 = r6 >> 2, r7 = r5 >> 2, r8 = r2 + 16; r2 < r8; r2++, r7++) {
      HEAP32[r7] = HEAP32[r2];
    }
  }
  r5 = HEAP32[r1 + 4 >> 2];
  r6 = (r5 | 0) >> 2;
  HEAP32[HEAP32[r6] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r6];
  HEAP32[r6] = r4;
  HEAP32[r3 + 4 >> 2] = r5;
  r5 = r1 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid8EdgePairENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIN5Avoid8EdgePairENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid8EdgePairENS_9allocatorIS2_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIN5Avoid8EdgePairENS_9allocatorIS2_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNK5Avoid8EdgePaireqERKS0_(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = HEAP32[r1 >> 2] + 4 | 0;
  r4 = HEAP32[r2 >> 2] + 4 | 0;
  do {
    if (__ZNK5Avoid6VertIDeqERKS0_(r3, r4)) {
      r5 = HEAP32[r2 + 4 >> 2];
      if (__ZNK5Avoid6VertIDeqERKS0_(HEAP32[r1 + 4 >> 2] + 4 | 0, r5 + 4 | 0)) {
        r6 = 1;
      } else {
        r7 = r5;
        break;
      }
      return r6;
    } else {
      r7 = HEAP32[r2 + 4 >> 2];
    }
  } while (0);
  do {
    if (__ZNK5Avoid6VertIDeqERKS0_(r3, r7 + 4 | 0)) {
      if (__ZNK5Avoid6VertIDeqERKS0_(HEAP32[r1 + 4 >> 2] + 4 | 0, r4)) {
        r6 = 1;
      } else {
        break;
      }
      return r6;
    }
  } while (0);
  r6 = 0;
  return r6;
}
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEES8_(r1, r2, r3, r4) {
  var r5, r6, r7;
  if ((r4 | 0) == (r3 | 0)) {
    r5 = r1 | 0;
    HEAP32[r5 >> 2] = r4;
    return;
  }
  r6 = HEAP32[r4 >> 2] + 4 | 0;
  r7 = r3 | 0;
  HEAP32[HEAP32[r7 >> 2] + 4 >> 2] = HEAP32[r6 >> 2];
  HEAP32[HEAP32[r6 >> 2] >> 2] = HEAP32[r7 >> 2];
  r7 = r2 + 8 | 0;
  r2 = r3;
  while (1) {
    r3 = HEAP32[r2 + 4 >> 2];
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] - 1 | 0;
    __ZdlPv(r2);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r2 = r3;
    }
  }
  r5 = r1 | 0;
  HEAP32[r5 >> 2] = r4;
  return;
}
function __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  if ((r4 | 0) == 0 | (r4 | 0) == 1) {
    HEAP32[r1 >> 2] = r2;
    STACKTOP = r5;
    return;
  } else if ((r4 | 0) == 2) {
    r8 = HEAP32[r3 >> 2];
    if (__ZNK5Avoid8EdgePairltERKS0_(r8 + 8 | 0, r2 + 8 | 0)) {
      r9 = (r8 + 4 | 0) >> 2;
      r10 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r10] + 4 >> 2] = HEAP32[r9];
      HEAP32[HEAP32[r9] >> 2] = HEAP32[r10];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r10] = HEAP32[r11];
      HEAP32[r11] = r8;
      HEAP32[r9] = r2;
      HEAP32[r1 >> 2] = r8;
      STACKTOP = r5;
      return;
    } else {
      HEAP32[r1 >> 2] = r2;
      STACKTOP = r5;
      return;
    }
  } else {
    r8 = r4 >>> 1;
    L1180 : do {
      if ((r8 | 0) == 0) {
        r12 = r2;
      } else {
        r9 = r8;
        r11 = r2;
        while (1) {
          r10 = r9 - 1 | 0;
          r13 = HEAP32[r11 + 4 >> 2];
          if ((r10 | 0) > 0) {
            r9 = r10;
            r11 = r13;
          } else {
            r12 = r13;
            break L1180;
          }
        }
      }
    } while (0);
    __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r6, r2, r12, r8);
    r2 = HEAP32[r6 >> 2];
    __ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r7, r12, r3, r4 - r8 | 0);
    r8 = HEAP32[r7 >> 2];
    r7 = r2 + 8 | 0;
    if (__ZNK5Avoid8EdgePairltERKS0_(r8 + 8 | 0, r7)) {
      r4 = HEAP32[r8 + 4 >> 2];
      L1186 : do {
        if ((r4 | 0) == (r3 | 0)) {
          r14 = r3;
        } else {
          r12 = r4;
          while (1) {
            if (!__ZNK5Avoid8EdgePairltERKS0_(r12 + 8 | 0, r7)) {
              r14 = r12;
              break L1186;
            }
            r6 = HEAP32[r12 + 4 >> 2];
            if ((r6 | 0) == (r3 | 0)) {
              r14 = r3;
              break L1186;
            } else {
              r12 = r6;
            }
          }
        }
      } while (0);
      r7 = HEAP32[r14 >> 2];
      r4 = (r7 + 4 | 0) >> 2;
      r12 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r12] + 4 >> 2] = HEAP32[r4];
      HEAP32[HEAP32[r4] >> 2] = HEAP32[r12];
      r6 = HEAP32[r2 + 4 >> 2];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r12] = HEAP32[r11];
      HEAP32[r11] = r7;
      HEAP32[r4] = r2;
      r15 = r8;
      r16 = r14;
      r17 = r6;
    } else {
      r15 = r2;
      r16 = r8;
      r17 = HEAP32[r2 + 4 >> 2];
    }
    L1193 : do {
      if ((r17 | 0) != (r16 | 0)) {
        r2 = r16;
        r8 = r16;
        r6 = r17;
        while (1) {
          r14 = r2 + 8 | 0;
          r4 = (r2 | 0) == (r3 | 0);
          r7 = r6;
          while (1) {
            if (r4) {
              break L1193;
            }
            if (__ZNK5Avoid8EdgePairltERKS0_(r14, r7 + 8 | 0)) {
              break;
            }
            r11 = HEAP32[r7 + 4 >> 2];
            if ((r11 | 0) == (r8 | 0)) {
              break L1193;
            } else {
              r7 = r11;
            }
          }
          r14 = HEAP32[r2 + 4 >> 2];
          L1201 : do {
            if ((r14 | 0) == (r3 | 0)) {
              r18 = r3;
            } else {
              r4 = r7 + 8 | 0;
              r11 = r14;
              while (1) {
                if (!__ZNK5Avoid8EdgePairltERKS0_(r11 + 8 | 0, r4)) {
                  r18 = r11;
                  break L1201;
                }
                r12 = HEAP32[r11 + 4 >> 2];
                if ((r12 | 0) == (r3 | 0)) {
                  r18 = r3;
                  break L1201;
                } else {
                  r11 = r12;
                }
              }
            }
          } while (0);
          r14 = HEAP32[r18 >> 2];
          r11 = (r14 + 4 | 0) >> 2;
          r4 = (r2 | 0) >> 2;
          HEAP32[HEAP32[r4] + 4 >> 2] = HEAP32[r11];
          HEAP32[HEAP32[r11] >> 2] = HEAP32[r4];
          r12 = HEAP32[r7 + 4 >> 2];
          r9 = (r8 | 0) == (r2 | 0) ? r18 : r8;
          r13 = (r7 | 0) >> 2;
          HEAP32[HEAP32[r13] + 4 >> 2] = r2;
          HEAP32[r4] = HEAP32[r13];
          HEAP32[r13] = r14;
          HEAP32[r11] = r7;
          if ((r12 | 0) == (r9 | 0)) {
            break L1193;
          } else {
            r2 = r18;
            r8 = r9;
            r6 = r12;
          }
        }
      }
    } while (0);
    HEAP32[r1 >> 2] = r15;
    STACKTOP = r5;
    return;
  }
}
__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_["X"] = 1;
function __ZNK5Avoid8EdgePairltERKS0_(r1, r2) {
  var r3, r4, r5;
  r3 = r1 + 24 | 0;
  r4 = r2 + 24 | 0;
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    ___assert_func(5246524, 240, 5253672, 5251464);
  }
  r4 = r1 + 32 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r2 + 32 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r3 == r5) {
    r4 = r1 + 16 | 0;
    r1 = r2 + 16 | 0;
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    return r2;
  } else {
    r2 = r3 < r5;
    return r2;
  }
}
function __ZN5Avoid8EdgePairC2ERKNS_9PointPairEPNS_7VertInfE(r1, r2, r3) {
  var r4, r5, r6, r7;
  HEAP32[r1 >> 2] = HEAP32[r2 >> 2];
  HEAP32[r1 + 4 >> 2] = r3;
  r4 = r1 + 8 | 0;
  r5 = (r2 + 12 | 0) >> 2;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 16 | 0;
  r6 = r2 + 20 | 0;
  r7 = __ZN5Avoid13euclideanDistERKNS_5PointES2_(r3 + 12 | 0, r6);
  HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 24 | 0;
  r7 = r2 + 4 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 32 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = (r1 + 40 | 0) >> 2;
  r1 = r6 >> 2;
  HEAP32[r4] = HEAP32[r1];
  HEAP32[r4 + 1] = HEAP32[r1 + 1];
  HEAP32[r4 + 2] = HEAP32[r1 + 2];
  HEAP32[r4 + 3] = HEAP32[r1 + 3];
  HEAP32[r4 + 4] = HEAP32[r1 + 4];
  HEAP32[r4 + 5] = HEAP32[r1 + 5];
  return;
}
function __ZN5Avoid9PointPairC2ERKNS_5PointEPNS_7VertInfE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  r6 = r1 | 0;
  HEAP32[r6 >> 2] = r3;
  r7 = (r1 + 20 | 0) >> 2;
  r8 = r2 >> 2;
  HEAP32[r7] = HEAP32[r8];
  HEAP32[r7 + 1] = HEAP32[r8 + 1];
  HEAP32[r7 + 2] = HEAP32[r8 + 2];
  HEAP32[r7 + 3] = HEAP32[r8 + 3];
  HEAP32[r7 + 4] = HEAP32[r8 + 4];
  HEAP32[r7 + 5] = HEAP32[r8 + 5];
  r8 = r3 + 12 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = r3 + 20 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = r2 | 0;
  r9 = r2 + 8 | 0;
  __ZNK5Avoid5PointmiERKS0_(r5, r7, r3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  r9 = r5 | 0;
  r8 = r5 + 8 | 0;
  r5 = __ZN5Avoid15rotationalAngleERKNS_5PointE((HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  r8 = r1 + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r8 = __ZN5Avoid13euclideanDistERKNS_5PointES2_(r2, HEAP32[r6 >> 2] + 12 | 0);
  r6 = r1 + 12 | 0;
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid9PointPairltERKS0_(r3, r6)) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 987;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid9PointPairltERKS0_(r6, r3)) {
      r4 = 991;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 990;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 991) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 987) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  } else if (r4 == 990) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  }
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r2 + 4 | 0;
  r2 = __Znwj(60);
  r6 = r2;
  r7 = r4 + 4 | 0;
  r8 = r4 | 0;
  HEAP8[r8] = HEAP8[r7];
  HEAP8[r8 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r8 + 2 | 0] = HEAP8[r7 + 2 | 0];
  r7 = r2 + 16 | 0;
  if ((r7 | 0) != 0) {
    r2 = r3;
    for (r3 = r2 >> 2, r9 = r7 >> 2, r10 = r3 + 11; r3 < r10; r3++, r9++) {
      HEAP32[r9] = HEAP32[r3];
    }
  }
  HEAP32[r1 >> 2] = r6;
  HEAP32[r1 + 4 >> 2] = r5;
  HEAP8[r1 + 8 | 0] = 1;
  r5 = r1 + 9 | 0;
  HEAP8[r5] = HEAP8[r8];
  HEAP8[r5 + 1 | 0] = HEAP8[r8 + 1 | 0];
  HEAP8[r5 + 2 | 0] = HEAP8[r8 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNK5Avoid9PointPairltERKS0_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r1 + 4 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 + 4 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r5) {
    r6 = r4 < r5;
    return r6;
  }
  r5 = r1 + 12 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r2 + 12 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 == r3) {
    r6 = __ZNK5Avoid6VertIDltERKS0_(HEAP32[r1 >> 2] + 4 | 0, HEAP32[r2 >> 2] + 4 | 0);
    return r6;
  } else {
    r6 = r4 < r3;
    return r6;
  }
}
function __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_(r1) {
  __ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_(r1);
  return;
}
function __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb(r1, r2, r3) {
  __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb(r1, r2, r3);
  return;
}
function __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb(r1, r2, r3) {
  var r4;
  r4 = r1 | 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = r2;
  __ZN5Avoid7PolygonC1ERKS0_(r1 + 8 | 0, r3);
  __ZN5Avoid5PointC1Ev(r1 + 52 | 0);
  HEAP8[r1 + 76 | 0] = 0;
  r3 = r1 + 80 | 0;
  r2 = r3;
  HEAP32[r3 >> 2] = r2;
  HEAP32[r1 + 84 >> 2] = r2;
  HEAP32[r1 + 88 >> 2] = 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    return;
  }
  ___assert_func(5245448, 42, 5261860, 5248764);
  return;
}
function __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED1Ev(r1) {
  __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED2Ev(r1);
  return;
}
function __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE(r1, r2, r3) {
  __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_8ShapeRefE(r1, r2, r3);
  return;
}
function __ZNK5Avoid17HyperedgeRerouter5countEv(r1, r2) {
  return (r2 - r1 | 0) / 12 & -1;
}
function __ZNK5Avoid10ActionInfoeqERKS0_(r1, r2, r3) {
  var r4;
  if ((HEAP32[r1 >> 2] | 0) != (r2 | 0)) {
    r4 = 0;
    return r4;
  }
  r4 = (HEAP32[r1 + 4 >> 2] | 0) == (r3 | 0);
  return r4;
}
function __ZN5Avoid17HyperedgeRerouter9setRouterEPNS_6RouterE(r1, r2) {
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_8ShapeRefE(r1, r2, r3) {
  var r4;
  r4 = r1 | 0;
  HEAP32[r4 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  __ZN5Avoid7PolygonC1Ev(r1 + 8 | 0);
  __ZN5Avoid5PointC1Ev(r1 + 52 | 0);
  r3 = r1 + 80 | 0;
  r2 = r3;
  HEAP32[r3 >> 2] = r2;
  HEAP32[r1 + 84 >> 2] = r2;
  HEAP32[r1 + 88 >> 2] = 0;
  if (HEAP32[r4 >> 2] >>> 0 < 3) {
    return;
  }
  ___assert_func(5245448, 52, 5261960, 5247564);
  return;
}
function __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE(r1, r2, r3) {
  __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_11JunctionRefE(r1, r2, r3);
  return;
}
function __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_11JunctionRefE(r1, r2, r3) {
  var r4;
  r4 = r1 | 0;
  HEAP32[r4 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  __ZN5Avoid7PolygonC1Ev(r1 + 8 | 0);
  __ZN5Avoid5PointC1Ev(r1 + 52 | 0);
  r3 = r1 + 80 | 0;
  r2 = r3;
  HEAP32[r3 >> 2] = r2;
  HEAP32[r1 + 84 >> 2] = r2;
  HEAP32[r1 + 88 >> 2] = 0;
  if ((HEAP32[r4 >> 2] - 3 | 0) >>> 0 < 3) {
    return;
  }
  ___assert_func(5245448, 70, 5262176, 5245632);
  return;
}
function __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_7ConnRefE(r1, r2) {
  __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_7ConnRefE(r1, r2);
  return;
}
function __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_7ConnRefE(r1, r2) {
  var r3, r4;
  r3 = r1 | 0;
  HEAP32[r3 >> 2] = 6;
  HEAP32[r1 + 4 >> 2] = r2;
  __ZN5Avoid7PolygonC1Ev(r1 + 8 | 0);
  __ZN5Avoid5PointC1Ev(r1 + 52 | 0);
  r2 = r1 + 80 | 0;
  r4 = r2;
  HEAP32[r2 >> 2] = r4;
  HEAP32[r1 + 84 >> 2] = r4;
  HEAP32[r1 + 88 >> 2] = 0;
  if ((HEAP32[r3 >> 2] | 0) == 6) {
    return;
  }
  ___assert_func(5245448, 77, 5262028, 5244816);
  return;
}
function __ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_18ShapeConnectionPinE(r1, r2) {
  __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_18ShapeConnectionPinE(r1, r2);
  return;
}
function __ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_18ShapeConnectionPinE(r1, r2) {
  var r3, r4;
  r3 = r1 | 0;
  HEAP32[r3 >> 2] = 7;
  HEAP32[r1 + 4 >> 2] = r2;
  __ZN5Avoid7PolygonC1Ev(r1 + 8 | 0);
  __ZN5Avoid5PointC1Ev(r1 + 52 | 0);
  r2 = r1 + 80 | 0;
  r4 = r2;
  HEAP32[r2 >> 2] = r4;
  HEAP32[r1 + 84 >> 2] = r4;
  HEAP32[r1 + 88 >> 2] = 0;
  if ((HEAP32[r3 >> 2] | 0) == 7) {
    return;
  }
  ___assert_func(5245448, 85, 5262096, 5244476);
  return;
}
function __ZN5Avoid10ActionInfoD1Ev(r1) {
  __ZN5Avoid10ActionInfoD2Ev(r1);
  return;
}
function __ZN5Avoid10ActionInfoD2Ev(r1) {
  __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED1Ev(r1 + 80 | 0);
  __ZN5Avoid7PolygonD1Ev(r1 + 8 | 0);
  return;
}
function __ZNK5Avoid10ActionInfo8obstacleEv(r1) {
  if (HEAP32[r1 >> 2] >>> 0 >= 6) {
    ___assert_func(5245448, 98, 5254844, 5243716);
  }
  return HEAP32[r1 + 4 >> 2];
}
function __ZNK5Avoid10ActionInfo5shapeEv(r1) {
  var r2, r3;
  r2 = __ZNK5Avoid10ActionInfo8obstacleEv(r1);
  if ((r2 | 0) == 0) {
    r3 = 0;
    return r3;
  }
  r3 = ___dynamic_cast(r2, 5272672, 5272660);
  return r3;
}
function __ZNK5Avoid10ActionInfo4connEv(r1) {
  if ((HEAP32[r1 >> 2] | 0) != 6) {
    ___assert_func(5245448, 111, 5254900, 5244816);
  }
  return HEAP32[r1 + 4 >> 2];
}
function __ZNK5Avoid10ActionInfo8junctionEv(r1) {
  var r2, r3;
  r2 = __ZNK5Avoid10ActionInfo8obstacleEv(r1);
  if ((r2 | 0) == 0) {
    r3 = 0;
    return r3;
  }
  r3 = ___dynamic_cast(r2, 5272672, 5272764);
  return r3;
}
function __ZNK5Avoid10ActionInfoltERKS0_(r1, r2) {
  var r3, r4, r5;
  r3 = HEAP32[r1 >> 2];
  r4 = HEAP32[r2 >> 2];
  if ((r3 | 0) != (r4 | 0)) {
    r5 = (r3 | 0) < (r4 | 0);
    return r5;
  }
  if ((r3 | 0) == 6) {
    r5 = __ZNK5Avoid7ConnRef2idEv(HEAP32[__ZNK5Avoid10ActionInfo4connEv(r1) + 4 >> 2]) >>> 0 < __ZNK5Avoid7ConnRef2idEv(HEAP32[__ZNK5Avoid10ActionInfo4connEv(r2) + 4 >> 2]) >>> 0;
    return r5;
  } else if ((r3 | 0) == 7) {
    r5 = HEAP32[r1 + 4 >> 2] >>> 0 < HEAP32[r2 + 4 >> 2] >>> 0;
    return r5;
  } else {
    r5 = __ZNK5Avoid8Obstacle2idEv(HEAP32[__ZNK5Avoid10ActionInfo8obstacleEv(r1) + 8 >> 2]) >>> 0 < __ZNK5Avoid8Obstacle2idEv(HEAP32[__ZNK5Avoid10ActionInfo8obstacleEv(r2) + 8 >> 2]) >>> 0;
    return r5;
  }
}
function __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED2Ev(r1 | 0);
  return;
}
function __ZN5Avoid17HyperedgeRerouterC1Ev(r1) {
  __ZN5Avoid17HyperedgeRerouterC2Ev(r1);
  return;
}
function __ZN5Avoid17HyperedgeRerouterC2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 88 | 0;
  r3 = r2 | 0;
  r4 = r2;
  r2 = r1;
  for (r5 = r2 >> 2, r6 = r5 + 22; r5 < r6; r5++) {
    HEAP32[r5] = 0;
  }
  HEAP32[r3 >> 2] = r4;
  HEAP32[r1 + 92 >> 2] = r4;
  HEAP32[r1 + 96 >> 2] = 0;
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC1ERKS6_(r1, r2) {
  __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC2ERKS6_(r1, r2);
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1ERKS6_(r1, r2) {
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC2ERKS6_(r1, r2);
  return;
}
function __ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_7ConnRefEPNS_11JunctionRefERNSt3__13setIS2_NS5_4lessIS2_EENS5_9allocatorIS2_EEEE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r7 = r6;
  r8 = r6 + 16;
  r9 = r6 + 24;
  r10 = r6 + 32;
  HEAP32[r9 >> 2] = r3;
  __ZN5Avoid7ConnRef29assignConnectionPinVisibilityEb(r6 + 28, r3, 1);
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_(HEAP32[r1 + 64 >> 2] + (r2 * 12 & -1) | 0, r9);
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r6 + 8, r5 | 0, r9);
  r3 = HEAP32[r9 >> 2];
  __ZNK5Avoid7ConnRef15endpointAnchorsEv(r10, r3);
  r9 = HEAP32[r10 >> 2];
  if ((r9 | 0) == 0) {
    r11 = 0;
  } else {
    r11 = ___dynamic_cast(r9, 5272672, 5272764);
  }
  r9 = HEAP32[r10 + 4 >> 2];
  if ((r9 | 0) == 0) {
    r12 = 0;
  } else {
    r12 = ___dynamic_cast(r9, 5272672, 5272764);
  }
  do {
    if ((r11 | 0) == 0) {
      r9 = r3 + 120 | 0;
      if ((HEAP32[r9 >> 2] | 0) == 0) {
        ___assert_func(5244912, 169, 5260396, 5252672);
      }
      __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r7, HEAP32[r1 + 76 >> 2] + (r2 * 12 & -1) | 0, r9);
    } else {
      if ((r11 | 0) == (r4 | 0)) {
        break;
      }
      __ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_11JunctionRefEPNS_7ConnRefERNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(r1, r2, r11, r3, r5);
    }
  } while (0);
  if ((r12 | 0) == 0) {
    r11 = r3 + 124 | 0;
    if ((HEAP32[r11 >> 2] | 0) == 0) {
      ___assert_func(5244912, 184, 5260396, 5252060);
    }
    __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r8, HEAP32[r1 + 76 >> 2] + (r2 * 12 & -1) | 0, r11);
    STACKTOP = r6;
    return;
  } else {
    if ((r12 | 0) == (r4 | 0)) {
      STACKTOP = r6;
      return;
    }
    __ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_11JunctionRefEPNS_7ConnRefERNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(r1, r2, r12, r3, r5);
    STACKTOP = r6;
    return;
  }
}
__ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_7ConnRefEPNS_11JunctionRefERNSt3__13setIS2_NS5_4lessIS2_EENS5_9allocatorIS2_EEEE["X"] = 1;
function __ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_11JunctionRefEPNS_7ConnRefERNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r7 = r6;
  r8 = r6 + 4;
  HEAP32[r7 >> 2] = r3;
  __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE9push_backERKS3_(HEAP32[r1 + 40 >> 2] + (r2 * 12 & -1) | 0, r7);
  r3 = HEAP32[r7 >> 2];
  r7 = r8;
  __ZNK5Avoid8Obstacle18attachedConnectorsEv(r7, r3);
  r9 = HEAP32[r8 + 4 >> 2];
  r10 = r8;
  if ((r9 | 0) == (r10 | 0)) {
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r7);
    STACKTOP = r6;
    return;
  } else {
    r11 = r9;
  }
  while (1) {
    r9 = r11 + 8 | 0;
    r8 = HEAP32[r9 >> 2];
    if ((r8 | 0) != (r4 | 0)) {
      if ((r8 | 0) == 0) {
        ___assert_func(5244912, 208, 5260512, 5251832);
        r12 = HEAP32[r9 >> 2];
      } else {
        r12 = r8;
      }
      __ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_7ConnRefEPNS_11JunctionRefERNSt3__13setIS2_NS5_4lessIS2_EENS5_9allocatorIS2_EEEE(r1, r2, r12, r3, r5);
    }
    r8 = HEAP32[r11 + 4 >> 2];
    if ((r8 | 0) == (r10 | 0)) {
      break;
    } else {
      r11 = r8;
    }
  }
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r7);
  STACKTOP = r6;
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE9push_backERKS3_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid17HyperedgeRerouter23calcHyperedgeConnectorsEv(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = r3 + 8;
  r6 = r3 + 16;
  r7 = r2 | 0;
  if ((HEAP32[r7 >> 2] | 0) == 0) {
    ___assert_func(5244912, 219, 5260332, 5251428);
  }
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1 | 0);
  r8 = r2 + 40 | 0;
  r9 = HEAP32[r8 >> 2];
  r10 = (r2 + 44 | 0) >> 2;
  r11 = HEAP32[r10];
  L1382 : do {
    if (r9 >>> 0 < r11 >>> 0) {
      r12 = r11;
      while (1) {
        r13 = r12 - 12 | 0;
        HEAP32[r10] = r13;
        __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r13);
        r13 = HEAP32[r10];
        if (r9 >>> 0 < r13 >>> 0) {
          r12 = r13;
        } else {
          break L1382;
        }
      }
    }
  } while (0);
  r9 = (r2 + 4 | 0) >> 2;
  r10 = (r2 + 8 | 0) >> 2;
  __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj(r8, __ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r9], HEAP32[r10]));
  r8 = r2 + 64 | 0;
  r11 = HEAP32[r8 >> 2];
  r12 = (r2 + 68 | 0) >> 2;
  r13 = HEAP32[r12];
  L1387 : do {
    if (r11 >>> 0 < r13 >>> 0) {
      r14 = r13;
      while (1) {
        r15 = r14 - 12 | 0;
        HEAP32[r12] = r15;
        __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r15);
        r15 = HEAP32[r12];
        if (r11 >>> 0 < r15 >>> 0) {
          r14 = r15;
        } else {
          break L1387;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj(r8, __ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r9], HEAP32[r10]));
  r8 = r2 + 76 | 0;
  r11 = r8 | 0;
  r12 = HEAP32[r11 >> 2];
  r13 = (r2 + 80 | 0) >> 2;
  r14 = HEAP32[r13];
  L1392 : do {
    if (r12 >>> 0 < r14 >>> 0) {
      r15 = r14;
      while (1) {
        r16 = r15 - 12 | 0;
        HEAP32[r13] = r16;
        __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r16);
        r16 = HEAP32[r13];
        if (r12 >>> 0 < r16 >>> 0) {
          r15 = r16;
        } else {
          break L1392;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE6resizeEj(r8, __ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r9], HEAP32[r10]));
  r8 = r2 + 88 | 0;
  __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r8 | 0);
  r12 = __ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r9], HEAP32[r10]);
  if ((r12 | 0) == 0) {
    STACKTOP = r3;
    return;
  }
  r10 = r2 + 16 | 0;
  r13 = r5 | 0;
  r14 = r5 + 4 | 0;
  r5 = r6;
  r15 = r6 | 0;
  r16 = r6 + 4 | 0;
  r6 = 0;
  while (1) {
    r17 = HEAP32[HEAP32[r10 >> 2] + (r6 << 2) >> 2];
    L1402 : do {
      if ((r17 | 0) == 0) {
        HEAP8[r13] = 0;
        HEAP32[r14 >> 2] = 0;
        r18 = HEAP32[r9];
        r19 = HEAP32[r18 + (r6 * 12 & -1) + 4 >> 2];
        if ((r19 | 0) == (r18 + (r6 * 12 & -1) | 0)) {
          break;
        } else {
          r20 = r19;
        }
        while (1) {
          __ZNK5Avoid7ConnEnd18getHyperedgeVertexEPNS_6RouterE(r5, r20 + 8 | 0, HEAP32[r7 >> 2]);
          HEAP8[r13] = HEAP8[r15] & 1;
          r19 = HEAP32[r16 >> 2];
          HEAP32[r14 >> 2] = r19;
          if ((r19 | 0) == 0) {
            ___assert_func(5244912, 252, 5260332, 5250932);
          }
          __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r4, HEAP32[r11 >> 2] + (r6 * 12 & -1) | 0, r14);
          if ((HEAP8[r13] & 1) << 24 >> 24 != 0) {
            __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEE9push_backERKS3_(r8, r14);
          }
          r19 = HEAP32[r20 + 4 >> 2];
          if ((r19 | 0) == (HEAP32[r9] + (r6 * 12 & -1) | 0)) {
            break L1402;
          } else {
            r20 = r19;
          }
        }
      } else {
        __ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_11JunctionRefEPNS_7ConnRefERNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(r2, r6, r17, 0, r1);
      }
    } while (0);
    r17 = r6 + 1 | 0;
    if (r17 >>> 0 < r12 >>> 0) {
      r6 = r17;
    } else {
      break;
    }
  }
  STACKTOP = r3;
  return;
}
__ZN5Avoid17HyperedgeRerouter23calcHyperedgeConnectorsEv["X"] = 1;
function __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = HEAP32[r1 >> 2];
  r6 = (r4 - r5 | 0) / 12 & -1;
  if (r6 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEj(r1, r2 - r6 | 0);
    return;
  }
  if (r6 >>> 0 <= r2 >>> 0) {
    return;
  }
  r6 = r5 + (r2 * 12 & -1) | 0;
  if (r6 >>> 0 < r4 >>> 0) {
    r7 = r4;
  } else {
    return;
  }
  while (1) {
    r4 = r7 - 12 | 0;
    HEAP32[r3] = r4;
    __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r4);
    r4 = HEAP32[r3];
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
    } else {
      break;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = HEAP32[r1 >> 2];
  r6 = (r4 - r5 | 0) / 12 & -1;
  if (r6 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEj(r1, r2 - r6 | 0);
    return;
  }
  if (r6 >>> 0 <= r2 >>> 0) {
    return;
  }
  r6 = r5 + (r2 * 12 & -1) | 0;
  if (r6 >>> 0 < r4 >>> 0) {
    r7 = r4;
  } else {
    return;
  }
  while (1) {
    r4 = r7 - 12 | 0;
    HEAP32[r3] = r4;
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r4);
    r4 = HEAP32[r3];
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
    } else {
      break;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE6resizeEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = HEAP32[r1 >> 2];
  r6 = (r4 - r5 | 0) / 12 & -1;
  if (r6 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE8__appendEj(r1, r2 - r6 | 0);
    return;
  }
  if (r6 >>> 0 <= r2 >>> 0) {
    return;
  }
  r6 = r5 + (r2 * 12 & -1) | 0;
  if (r6 >>> 0 < r4 >>> 0) {
    r7 = r4;
  } else {
    return;
  }
  while (1) {
    r4 = r7 - 12 | 0;
    HEAP32[r3] = r4;
    __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r4);
    r4 = HEAP32[r3];
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
    } else {
      break;
    }
  }
  return;
}
function __ZN5Avoid10ActionInfo16addConnEndUpdateEjRKNS_7ConnEndEb(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r7 = r6;
  r8 = r6 + 52;
  r9 = r1 + 80 | 0;
  r10 = r9;
  r11 = r1 + 84 | 0;
  while (1) {
    r12 = HEAP32[r11 >> 2];
    if ((r12 | 0) == (r10 | 0)) {
      r5 = 1191;
      break;
    }
    if ((HEAP32[r12 + 8 >> 2] | 0) == (r2 | 0)) {
      r5 = 1189;
      break;
    } else {
      r11 = r12 + 4 | 0;
    }
  }
  if (r5 == 1189) {
    if (r4) {
      STACKTOP = r6;
      return;
    }
    r4 = r12 + 12 | 0;
    r12 = r3;
    for (r13 = r12 >> 2, r14 = r4 >> 2, r15 = r13 + 12; r13 < r15; r13++, r14++) {
      HEAP32[r14] = HEAP32[r13];
    }
    STACKTOP = r6;
    return;
  } else if (r5 == 1191) {
    r5 = r8;
    r4 = r3;
    for (r13 = r4 >> 2, r14 = r5 >> 2, r15 = r13 + 12; r13 < r15; r13++, r14++) {
      HEAP32[r14] = HEAP32[r13];
    }
    HEAP32[r7 >> 2] = r2;
    r2 = r7 + 4 | 0;
    for (r13 = r4 >> 2, r14 = r2 >> 2, r15 = r13 + 12; r13 < r15; r13++, r14++) {
      HEAP32[r14] = HEAP32[r13];
    }
    __ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE9push_backERKS4_(r9, r7);
    __ZNSt3__14pairIjN5Avoid7ConnEndEED1Ev(r7);
    __ZN5Avoid7ConnEndD1Ev(r8);
    STACKTOP = r6;
    return;
  }
}
__ZN5Avoid10ActionInfo16addConnEndUpdateEjRKNS_7ConnEndEb["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 1207;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 1211;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1210;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 1207) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 1210) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 1211) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  }
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS8_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC2ERKSB_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEE9push_backERKS3_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev(r1) {
  __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS8_(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS8_(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SB_EEiEESE_RKT_(r2, r3, r6, r4);
  r3 = HEAP32[r8 >> 2];
  if ((r3 | 0) != 0) {
    r9 = r3;
    r10 = r1 | 0;
    HEAP32[r10 >> 2] = r9;
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r7, r2, r4);
  r4 = r7 | 0;
  r7 = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r6 >> 2], r8, r7 | 0);
  r9 = r7;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SB_EEiEESE_RKT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r6 = r1 + 4 | 0;
  do {
    if ((r6 | 0) != (r2 | 0)) {
      r7 = HEAP32[r4 >> 2];
      r8 = HEAP32[r2 + 16 >> 2];
      if (r7 >>> 0 < r8 >>> 0) {
        break;
      }
      r9 = r2 | 0;
      if (r8 >>> 0 >= r7 >>> 0) {
        HEAP32[r5] = r9;
        r10 = r3;
        return r10;
      }
      r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r9);
      do {
        if ((r8 | 0) != (r6 | 0)) {
          if (r7 >>> 0 < HEAP32[r8 + 16 >> 2] >>> 0) {
            break;
          }
          r10 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r1, r3, r4);
          return r10;
        }
      } while (0);
      r7 = r2 + 4 | 0;
      if ((HEAP32[r7 >> 2] | 0) == 0) {
        HEAP32[r5] = r9;
        r10 = r7;
        return r10;
      } else {
        HEAP32[r5] = r8;
        r10 = r8 | 0;
        return r10;
      }
    }
  } while (0);
  do {
    if ((HEAP32[r1 >> 2] | 0) == (r2 | 0)) {
      r11 = r2;
    } else {
      r6 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
      if (HEAP32[r6 + 16 >> 2] >>> 0 < HEAP32[r4 >> 2] >>> 0) {
        r11 = r6;
        break;
      }
      r10 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r1, r3, r4);
      return r10;
    }
  } while (0);
  r4 = r2 | 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    HEAP32[r5] = r2 | 0;
    r10 = r4;
    return r10;
  } else {
    HEAP32[r5] = r11 | 0;
    r10 = r11 + 4 | 0;
    return r10;
  }
}
__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SB_EEiEESE_RKT_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC2ERKSB_(r1);
  return;
}
function __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r2 | 0);
      r4 = HEAP32[r3];
    }
    r5 = r4 + 12 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC1EjjSB_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC2EjjSB_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r2 | 0);
      r4 = HEAP32[r3];
    }
    r5 = r4 + 12 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS9_RSA_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1555 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 12 | 0;
        __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE10push_frontERKS9_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1555;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = (r1 + 8 | 0) >> 2;
  r4 = HEAP32[r3];
  L1561 : do {
    if (r2 >>> 0 < r4 >>> 0) {
      r5 = r4;
      while (1) {
        r6 = r5 - 12 | 0;
        HEAP32[r3] = r6;
        __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r6);
        r6 = HEAP32[r3];
        if (r2 >>> 0 < r6 >>> 0) {
          r5 = r6;
        } else {
          break L1561;
        }
      }
    }
  } while (0);
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZN5Avoid17HyperedgeRerouter16performReroutingEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 212 | 0;
  r3 = r2;
  r4 = r2 + 4;
  r5 = r2 + 16;
  r6 = r2 + 196;
  r7 = r2 + 208;
  r8 = (r1 | 0) >> 2;
  if ((HEAP32[r8] | 0) == 0) {
    ___assert_func(5244912, 303, 5260628, 5251428);
  }
  r9 = r1 + 28 | 0;
  r10 = r9 | 0;
  r11 = HEAP32[r10 >> 2];
  r12 = (r1 + 32 | 0) >> 2;
  r13 = HEAP32[r12];
  L1573 : do {
    if (r11 >>> 0 < r13 >>> 0) {
      r14 = r13;
      while (1) {
        r15 = r14 - 12 | 0;
        HEAP32[r12] = r15;
        __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r15);
        r15 = HEAP32[r12];
        if (r11 >>> 0 < r15 >>> 0) {
          r14 = r15;
        } else {
          break L1573;
        }
      }
    }
  } while (0);
  r11 = (r1 + 4 | 0) >> 2;
  r12 = (r1 + 8 | 0) >> 2;
  __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj(r9, __ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r11], HEAP32[r12]));
  r9 = r1 + 52 | 0;
  r13 = r9 | 0;
  r14 = HEAP32[r13 >> 2];
  r15 = (r1 + 56 | 0) >> 2;
  r16 = HEAP32[r15];
  L1577 : do {
    if (r14 >>> 0 < r16 >>> 0) {
      r17 = r16;
      while (1) {
        r18 = r17 - 12 | 0;
        HEAP32[r15] = r18;
        __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r18);
        r18 = HEAP32[r15];
        if (r14 >>> 0 < r18 >>> 0) {
          r17 = r18;
        } else {
          break L1577;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj(r9, __ZNK5Avoid17HyperedgeRerouter5countEv(HEAP32[r11], HEAP32[r12]));
  r9 = HEAP32[r11];
  r14 = HEAP32[r12];
  r15 = __ZNK5Avoid17HyperedgeRerouter5countEv(r9, r14);
  if ((r15 | 0) == 0) {
    r19 = r9;
    r20 = r14;
  } else {
    r14 = r4 | 0;
    r9 = r1 + 76 | 0;
    r16 = r6 | 0;
    r17 = r6 + 4 | 0;
    r18 = r6;
    r21 = r4;
    r22 = (r1 + 64 | 0) >> 2;
    r23 = r1 + 40 | 0;
    r24 = r5 + 48 | 0;
    r25 = 0;
    while (1) {
      __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_(r14);
      r26 = HEAP32[r8];
      r27 = HEAP32[r9 >> 2];
      __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS8_(r16);
      r28 = HEAP32[r27 + (r25 * 12 & -1) >> 2];
      r29 = r27 + (r25 * 12 & -1) + 4 | 0;
      L1585 : do {
        if ((r28 | 0) != (r29 | 0)) {
          r27 = r29;
          r30 = r28;
          while (1) {
            __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r3, r16, r17, r30 + 16 | 0);
            r31 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r30 | 0);
            if ((r31 | 0) == (r27 | 0)) {
              break L1585;
            } else {
              r30 = r31;
            }
          }
        }
      } while (0);
      __ZN5Avoid27MinimumTerminalSpanningTreeC1EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE(r5, r26, r18, r21);
      __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r6);
      __ZN5Avoid27MinimumTerminalSpanningTree20constructInterleavedEv(r5);
      r28 = __ZNK5Avoid27MinimumTerminalSpanningTree12rootJunctionEv(HEAP32[r24 >> 2]);
      if ((r28 | 0) == 0) {
        ___assert_func(5244912, 431, 5260628, 5250652);
      }
      r29 = r28;
      __ZN5Avoid17HyperEdgeTreeNode8addConnsEPNS_17HyperEdgeTreeEdgeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEES8_(r29, 0, HEAP32[r8], HEAP32[r22] + (r25 * 12 & -1) | 0, 0);
      __ZN5Avoid17HyperEdgeTreeNode26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE(r29, 0, HEAP32[r10 >> 2] + (r25 * 12 & -1) | 0, HEAP32[r13 >> 2] + (r25 * 12 & -1) | 0);
      __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(r29, 0, 0);
      __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(r29, 0, 1);
      r29 = HEAP32[r22];
      r28 = HEAP32[r29 + (r25 * 12 & -1) + 4 >> 2];
      L1600 : do {
        if ((r28 | 0) != (r29 + (r25 * 12 & -1) | 0)) {
          r30 = r28;
          while (1) {
            r27 = r30 + 8 | 0;
            __ZN5Avoid7ConnRef29assignConnectionPinVisibilityEb(r7, HEAP32[r27 >> 2], 0);
            __ZN5Avoid6Router15deleteConnectorEPNS_7ConnRefE(HEAP32[r8], HEAP32[r27 >> 2]);
            r27 = HEAP32[r30 + 4 >> 2];
            if ((r27 | 0) == (HEAP32[r22] + (r25 * 12 & -1) | 0)) {
              break L1600;
            } else {
              r30 = r27;
            }
          }
        }
      } while (0);
      r28 = HEAP32[r23 >> 2];
      r29 = HEAP32[r28 + (r25 * 12 & -1) + 4 >> 2];
      L1606 : do {
        if ((r29 | 0) != (r28 + (r25 * 12 & -1) | 0)) {
          r26 = r29;
          while (1) {
            __ZN5Avoid6Router14deleteJunctionEPNS_11JunctionRefE(HEAP32[r8], HEAP32[r26 + 8 >> 2]);
            r30 = HEAP32[r26 + 4 >> 2];
            if ((r30 | 0) == (HEAP32[r23 >> 2] + (r25 * 12 & -1) | 0)) {
              break L1606;
            } else {
              r26 = r30;
            }
          }
        }
      } while (0);
      __ZN5Avoid27MinimumTerminalSpanningTreeD1Ev(r5);
      __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev(r4);
      r29 = r25 + 1 | 0;
      if (r29 >>> 0 < r15 >>> 0) {
        r25 = r29;
      } else {
        break;
      }
    }
    r19 = HEAP32[r11];
    r20 = HEAP32[r12];
  }
  L1614 : do {
    if (r19 >>> 0 < r20 >>> 0) {
      r11 = r20;
      while (1) {
        r25 = r11 - 12 | 0;
        HEAP32[r12] = r25;
        __ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED1Ev(r25);
        r25 = HEAP32[r12];
        if (r19 >>> 0 < r25 >>> 0) {
          r11 = r25;
        } else {
          break L1614;
        }
      }
    }
  } while (0);
  HEAP32[r1 + 20 >> 2] = HEAP32[r1 + 16 >> 2];
  r19 = r1 + 88 | 0;
  r12 = HEAP32[r1 + 92 >> 2];
  r1 = r19;
  if ((r12 | 0) == (r1 | 0)) {
    __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r19);
    STACKTOP = r2;
    return;
  } else {
    r32 = r12;
  }
  while (1) {
    r12 = (r32 + 8 | 0) >> 2;
    __ZN5Avoid7VertInf15removeFromGraphEb(HEAP32[r12], 1);
    __ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE(HEAP32[r8] + 100 | 0, HEAP32[r12]);
    r20 = HEAP32[r12];
    if ((r20 | 0) != 0) {
      __ZN5Avoid7VertInfD1Ev(r20);
      __ZdlPv(r20);
    }
    r20 = HEAP32[r32 + 4 >> 2];
    if ((r20 | 0) == (r1 | 0)) {
      break;
    } else {
      r32 = r20;
    }
  }
  __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r19);
  STACKTOP = r2;
  return;
}
__ZN5Avoid17HyperedgeRerouter16performReroutingEv["X"] = 1;
function __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (((r6 - r7 | 0) / 12 & -1) >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = (r7 - r8 | 0) / 12 & -1;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 357913941) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = (r6 - r8 | 0) / 12 & -1;
  if (r10 >>> 0 > 178956969) {
    r11 = 357913941;
  } else {
    r8 = r10 << 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC1EjjSB_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS9_RSA_EE(r1, r4);
  __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE8__detachEv(r1) {
  var r2, r3, r4, r5;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  r4 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = r4;
  r2 = r4 | 0;
  HEAP32[HEAP32[r2 >> 2] + 8 >> 2] = 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r1 = HEAP32[r3 + 4 >> 2];
  if ((r1 | 0) == 0) {
    r5 = r3;
    return r5;
  }
  r5 = r1;
  return r5;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    if (r1 >>> 0 < HEAP32[r3 + 16 >> 2] >>> 0) {
      r8 = r3 | 0;
      r6 = HEAP32[r8 >> 2];
      if ((r6 | 0) == 0) {
        r4 = 1357;
        break;
      } else {
        r3 = r6;
        continue;
      }
    } else {
      r9 = r3 + 4 | 0;
      r6 = HEAP32[r9 >> 2];
      if ((r6 | 0) == 0) {
        r4 = 1359;
        break;
      } else {
        r3 = r6;
        continue;
      }
    }
  }
  if (r4 == 1357) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 1359) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  }
}
function __ZNSt3__111__tree_leafIPNS_16__tree_node_baseIPvEEEET_S5_(r1) {
  var r2;
  r2 = r1;
  while (1) {
    r1 = HEAP32[r2 >> 2];
    if ((r1 | 0) != 0) {
      r2 = r1;
      continue;
    }
    r1 = HEAP32[r2 + 4 >> 2];
    if ((r1 | 0) == 0) {
      break;
    } else {
      r2 = r1;
    }
  }
  return r2;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3], r4 = r2 >> 2;
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2;
      HEAP32[r4] = r6;
      HEAP32[r4 + 1] = r6;
      HEAP32[r4 + 2] = 0;
      r5 = HEAP32[r3];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r3] = r6;
    r7 = r1 - 1 | 0;
    if ((r7 | 0) == 0) {
      break;
    } else {
      r1 = r7;
      r2 = r6, r4 = r2 >> 2;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3], r4 = r2 >> 2;
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2;
      HEAP32[r4] = r6;
      HEAP32[r4 + 1] = r6;
      HEAP32[r4 + 2] = 0;
      r5 = HEAP32[r3];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r3] = r6;
    r7 = r1 - 1 | 0;
    if ((r7 | 0) == 0) {
      break;
    } else {
      r1 = r7;
      r2 = r6, r4 = r2 >> 2;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE10push_frontERKS9_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = (r1 + 4 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = r7;
  r9 = (r1 | 0) >> 2;
  do {
    if ((r7 | 0) == (HEAP32[r9] | 0)) {
      r10 = (r1 + 8 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = (r1 + 12 | 0) >> 2;
      r13 = HEAP32[r12];
      r14 = r13;
      if (r11 >>> 0 >= r13 >>> 0) {
        r13 = ((r14 - r8 | 0) / 12 & -1) << 1;
        r15 = (r13 | 0) == 0 ? 1 : r13;
        __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC1EjjSB_(r5, r15, (r15 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE18__construct_at_endINS_13move_iteratorIPS9_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESI_SI_(r5, HEAP32[r6], HEAP32[r10]);
        r15 = r5 | 0;
        r13 = HEAP32[r9];
        HEAP32[r9] = HEAP32[r15 >> 2];
        HEAP32[r15 >> 2] = r13;
        r13 = r5 + 4 | 0;
        r15 = HEAP32[r6];
        HEAP32[r6] = HEAP32[r13 >> 2];
        HEAP32[r13 >> 2] = r15;
        r15 = r5 + 8 | 0;
        r13 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r15 >> 2];
        HEAP32[r15 >> 2] = r13;
        r13 = r5 + 12 | 0;
        r15 = HEAP32[r12];
        HEAP32[r12] = HEAP32[r13 >> 2];
        HEAP32[r13 >> 2] = r15;
        __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED1Ev(r5);
        r16 = HEAP32[r6];
        break;
      }
      r15 = (((r14 - r11 | 0) / 12 & -1) + 1 | 0) / 2 & -1;
      r14 = r11 + (r15 * 12 & -1) | 0;
      if ((r7 | 0) == (r11 | 0)) {
        r17 = r14;
        r18 = r7;
      } else {
        r13 = r15 - 1 - Math.floor(((r11 - 12 + -r8 | 0) >>> 0) / 12) | 0;
        r12 = r14;
        r14 = r11;
        while (1) {
          r19 = r12 - 12 | 0;
          r20 = r14 - 12 | 0;
          __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEaSERKS8_(r19 | 0, r20 | 0);
          if ((r7 | 0) == (r20 | 0)) {
            break;
          } else {
            r12 = r19;
            r14 = r20;
          }
        }
        r17 = r11 + (r13 * 12 & -1) | 0;
        r18 = HEAP32[r10];
      }
      HEAP32[r6] = r17;
      HEAP32[r10] = r18 + (r15 * 12 & -1) | 0;
      r16 = r17;
    } else {
      r16 = r7;
    }
  } while (0);
  r7 = r16 - 12 | 0;
  if ((r7 | 0) == 0) {
    r21 = r16;
    r22 = r21 - 12 | 0;
    HEAP32[r6] = r22;
    STACKTOP = r3;
    return;
  }
  r17 = r7 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS8_(r17);
  r7 = HEAP32[r2 >> 2];
  r18 = r2 + 4 | 0;
  r2 = r16 - 12 + 4 | 0;
  L1697 : do {
    if ((r7 | 0) != (r18 | 0)) {
      r16 = r18;
      r8 = r7;
      while (1) {
        __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r4, r17, r2, r8 + 16 | 0);
        r5 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r8 | 0);
        if ((r5 | 0) == (r16 | 0)) {
          break L1697;
        } else {
          r8 = r5;
        }
      }
    }
  } while (0);
  r21 = HEAP32[r6];
  r22 = r21 - 12 | 0;
  HEAP32[r6] = r22;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE10push_frontERKS9_["X"] = 1;
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE18__construct_at_endINS_13move_iteratorIPS9_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESI_SI_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  if ((r3 | 0) == (r2 | 0)) {
    STACKTOP = r4;
    return;
  }
  r6 = (r1 + 8 | 0) >> 2;
  r1 = HEAP32[r6];
  r7 = r2;
  while (1) {
    if ((r1 | 0) == 0) {
      r8 = 0;
      r9 = r7;
    } else {
      r2 = r1 | 0;
      __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS8_(r2);
      r10 = HEAP32[r7 >> 2];
      r11 = r7 + 4 | 0;
      r12 = r1 + 4 | 0;
      L1712 : do {
        if ((r10 | 0) != (r11 | 0)) {
          r13 = r11;
          r14 = r10;
          while (1) {
            __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r5, r2, r12, r14 + 16 | 0);
            r15 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r14 | 0);
            if ((r15 | 0) == (r13 | 0)) {
              break L1712;
            } else {
              r14 = r15;
            }
          }
        }
      } while (0);
      r8 = HEAP32[r6];
      r9 = r7;
    }
    r12 = r8 + 12 | 0;
    HEAP32[r6] = r12;
    r2 = r9 + 12 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r12;
      r7 = r2;
    }
  }
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEaSERKS8_(r1, r2) {
  if ((r1 | 0) == (r2 | 0)) {
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEEEEvT_SH_(r1, HEAP32[r2 >> 2], r2 + 4 | 0);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEEEEvT_SH_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r4;
  r6 = r4 + 4;
  L1726 : do {
    if ((HEAP32[r1 + 8 >> 2] | 0) == 0) {
      r7 = r2;
    } else {
      r8 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE8__detachEv(r1);
      if ((r8 | 0) == 0) {
        r7 = r2;
        break;
      } else {
        r9 = r8;
        r10 = r2;
      }
      while (1) {
        if ((r10 | 0) == (r3 | 0)) {
          break;
        }
        HEAP32[r9 + 16 >> 2] = HEAP32[r10 + 16 >> 2];
        r8 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE8__detachEPNS_11__tree_nodeIS3_PvEE(r9);
        __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__tree_nodeIS3_PvEE(r5, r1, r9);
        r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r10 | 0);
        if ((r8 | 0) == 0) {
          r7 = r11;
          break L1726;
        } else {
          r9 = r8;
          r10 = r11;
        }
      }
      r11 = HEAP32[r9 + 8 >> 2];
      if ((r11 | 0) == 0) {
        r12 = r9;
      } else {
        r8 = r11;
        while (1) {
          r11 = HEAP32[r8 + 8 >> 2];
          if ((r11 | 0) == 0) {
            break;
          } else {
            r8 = r11;
          }
        }
        r12 = r8;
      }
      __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r12);
      r7 = r10;
    }
  } while (0);
  if ((r7 | 0) == (r3 | 0)) {
    STACKTOP = r4;
    return;
  } else {
    r13 = r7;
  }
  while (1) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__insert_multiERKS3_(r6, r1, r13 + 16 | 0);
    r7 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r13 | 0);
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r13 = r7;
    }
  }
  STACKTOP = r4;
  return;
}
__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEEEEvT_SH_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE8__detachEPNS_11__tree_nodeIS3_PvEE(r1) {
  var r2, r3, r4, r5;
  r2 = (r1 + 8 | 0) >> 2;
  r3 = HEAP32[r2];
  if ((r3 | 0) == 0) {
    r4 = 0;
    return r4;
  }
  r5 = r3 | 0;
  if ((r1 | 0) == (HEAP32[r5 >> 2] | 0)) {
    HEAP32[r5 >> 2] = 0;
    r5 = HEAP32[r2];
    r1 = HEAP32[r5 + 4 >> 2];
    if ((r1 | 0) == 0) {
      r4 = r5;
      return r4;
    } else {
      r4 = __ZNSt3__111__tree_leafIPNS_16__tree_node_baseIPvEEEET_S5_(r1);
      return r4;
    }
  } else {
    HEAP32[r3 + 4 >> 2] = 0;
    r3 = HEAP32[r2];
    r2 = HEAP32[r3 >> 2];
    if ((r2 | 0) == 0) {
      r4 = r3;
      return r4;
    } else {
      r4 = __ZNSt3__111__tree_leafIPNS_16__tree_node_baseIPvEEEET_S5_(r2);
      return r4;
    }
  }
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__tree_nodeIS3_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS3_(r2, r5, r3 + 16 | 0);
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r5 >> 2], r6, r3 | 0);
  HEAP32[r1 >> 2] = r3;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__insert_multiERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS3_(r2, r5, r3);
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
  r3 = HEAP32[r6 >> 2];
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r5 >> 2], r7, r3 | 0);
  HEAP32[r1 >> 2] = r3;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC2EjjSB_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 12 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 12 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 12 & -1) | 0;
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC2EjjS9_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1769 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 12 | 0;
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1769;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = (r1 + 8 | 0) >> 2;
  r4 = HEAP32[r3];
  L1775 : do {
    if (r2 >>> 0 < r4 >>> 0) {
      r5 = r4;
      while (1) {
        r6 = r5 - 12 | 0;
        HEAP32[r3] = r6;
        __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r6);
        r6 = HEAP32[r3];
        if (r2 >>> 0 < r6 >>> 0) {
          r5 = r6;
        } else {
          break L1775;
        }
      }
    }
  } while (0);
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = r6;
  r8 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r8] | 0)) {
      r9 = (r1 + 8 | 0) >> 2;
      r10 = HEAP32[r9];
      r11 = (r1 + 12 | 0) >> 2;
      r12 = HEAP32[r11];
      r13 = r12;
      if (r10 >>> 0 >= r12 >>> 0) {
        r12 = ((r13 - r7 | 0) / 12 & -1) << 1;
        r14 = (r12 | 0) == 0 ? 1 : r12;
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_(r4, r14, (r14 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESG_SG_(r4, HEAP32[r5], HEAP32[r9]);
        r14 = r4 | 0;
        r12 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 4 | 0;
        r14 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        r14 = r4 + 8 | 0;
        r12 = HEAP32[r9];
        HEAP32[r9] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 12 | 0;
        r14 = HEAP32[r11];
        HEAP32[r11] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
      r14 = (((r13 - r10 | 0) / 12 & -1) + 1 | 0) / 2 & -1;
      r13 = r10 + (r14 * 12 & -1) | 0;
      if ((r6 | 0) == (r10 | 0)) {
        r16 = r13;
        r17 = r6;
      } else {
        r12 = r14 - 1 - Math.floor(((r10 - 12 + -r7 | 0) >>> 0) / 12) | 0;
        r11 = r13;
        r13 = r10;
        while (1) {
          r18 = r11 - 12 | 0;
          r19 = r13 - 12 | 0;
          if ((r11 | 0) != (r13 | 0)) {
            __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE(r18, HEAP32[r13 - 12 + 4 >> 2], r19);
          }
          if ((r6 | 0) == (r19 | 0)) {
            break;
          } else {
            r11 = r18;
            r13 = r19;
          }
        }
        r16 = r10 + (r12 * 12 & -1) | 0;
        r17 = HEAP32[r9];
      }
      HEAP32[r5] = r16;
      HEAP32[r9] = r17 + (r14 * 12 & -1) | 0;
      r15 = r16;
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 12 | 0;
  if ((r6 | 0) == 0) {
    r20 = r15;
    r21 = r20 - 12 | 0;
    HEAP32[r5] = r21;
    STACKTOP = r3;
    return;
  }
  __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1ERKS6_(r6, r2);
  r20 = HEAP32[r5];
  r21 = r20 - 12 | 0;
  HEAP32[r5] = r21;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_["X"] = 1;
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESG_SG_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1ERKS6_(r2, r1);
      r5 = HEAP32[r4];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 12 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = r1;
  r9 = HEAP32[r1 + 4 >> 2];
  r10 = (r9 | 0) == (r8 | 0);
  do {
    if ((r2 | 0) == (r3 | 0) | r10) {
      if (r10) {
        r11 = r2;
        r4 = 1492;
        break;
      } else {
        r12 = r9;
        r4 = 1493;
        break;
      }
    } else {
      r13 = r9;
      r14 = r2;
      while (1) {
        HEAP32[r13 + 8 >> 2] = HEAP32[r14 + 8 >> 2];
        r15 = HEAP32[r14 + 4 >> 2];
        r16 = HEAP32[r13 + 4 >> 2];
        r17 = (r16 | 0) == (r8 | 0);
        if ((r15 | 0) == (r3 | 0) | r17) {
          break;
        } else {
          r13 = r16;
          r14 = r15;
        }
      }
      if (r17) {
        r11 = r15;
        r4 = 1492;
        break;
      } else {
        r12 = r16;
        r4 = 1493;
        break;
      }
    }
  } while (0);
  if (r4 == 1492) {
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r6, r1, r8, r11, r3);
    STACKTOP = r5;
    return;
  } else if (r4 == 1493) {
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_(r7, r1, r12, r8);
    STACKTOP = r5;
    return;
  }
}
function __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (((r6 - r7 | 0) / 12 & -1) >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = (r7 - r8 | 0) / 12 & -1;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 357913941) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = (r6 - r8 | 0) / 12 & -1;
  if (r10 >>> 0 > 178956969) {
    r11 = 357913941;
  } else {
    r8 = r10 << 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE(r1, r4);
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3], r4 = r2 >> 2;
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2;
      HEAP32[r4] = r6;
      HEAP32[r4 + 1] = r6;
      HEAP32[r4 + 2] = 0;
      r5 = HEAP32[r3];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r3] = r6;
    r7 = r1 - 1 | 0;
    if ((r7 | 0) == 0) {
      break;
    } else {
      r1 = r7;
      r2 = r6, r4 = r2 >> 2;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3], r4 = r2 >> 2;
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2;
      HEAP32[r4] = r6;
      HEAP32[r4 + 1] = r6;
      HEAP32[r4 + 2] = 0;
      r5 = HEAP32[r3];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r3] = r6;
    r7 = r1 - 1 | 0;
    if ((r7 | 0) == 0) {
      break;
    } else {
      r1 = r7;
      r2 = r6, r4 = r2 >> 2;
    }
  }
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 1524;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 1528;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1527;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 1524) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 1527) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 1528) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  }
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_(r1, r2, r3, r4) {
  var r5, r6, r7;
  if ((r4 | 0) == (r3 | 0)) {
    r5 = r1 | 0;
    HEAP32[r5 >> 2] = r4;
    return;
  }
  r6 = HEAP32[r4 >> 2] + 4 | 0;
  r7 = r3 | 0;
  HEAP32[HEAP32[r7 >> 2] + 4 >> 2] = HEAP32[r6 >> 2];
  HEAP32[HEAP32[r6 >> 2] >> 2] = HEAP32[r7 >> 2];
  r7 = r2 + 8 | 0;
  r2 = r3;
  while (1) {
    r3 = HEAP32[r2 + 4 >> 2];
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] - 1 | 0;
    __ZdlPv(r2);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r2 = r3;
    }
  }
  r5 = r1 | 0;
  HEAP32[r5 >> 2] = r4;
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC2EjjS9_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 12 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 12 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 12 & -1) | 0;
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC2EjjS9_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1884 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 12 | 0;
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1884;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED2Ev(r1) {
  var r2, r3, r4, r5, r6;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = (r1 + 8 | 0) >> 2;
  r4 = HEAP32[r3];
  L1890 : do {
    if (r2 >>> 0 < r4 >>> 0) {
      r5 = r4;
      while (1) {
        r6 = r5 - 12 | 0;
        HEAP32[r3] = r6;
        __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev(r6);
        r6 = HEAP32[r3];
        if (r2 >>> 0 < r6 >>> 0) {
          r5 = r6;
        } else {
          break L1890;
        }
      }
    }
  } while (0);
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = r6;
  r8 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r8] | 0)) {
      r9 = (r1 + 8 | 0) >> 2;
      r10 = HEAP32[r9];
      r11 = (r1 + 12 | 0) >> 2;
      r12 = HEAP32[r11];
      r13 = r12;
      if (r10 >>> 0 >= r12 >>> 0) {
        r12 = ((r13 - r7 | 0) / 12 & -1) << 1;
        r14 = (r12 | 0) == 0 ? 1 : r12;
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_(r4, r14, (r14 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESG_SG_(r4, HEAP32[r5], HEAP32[r9]);
        r14 = r4 | 0;
        r12 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 4 | 0;
        r14 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        r14 = r4 + 8 | 0;
        r12 = HEAP32[r9];
        HEAP32[r9] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 12 | 0;
        r14 = HEAP32[r11];
        HEAP32[r11] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
      r14 = (((r13 - r10 | 0) / 12 & -1) + 1 | 0) / 2 & -1;
      r13 = r10 + (r14 * 12 & -1) | 0;
      if ((r6 | 0) == (r10 | 0)) {
        r16 = r13;
        r17 = r6;
      } else {
        r12 = r14 - 1 - Math.floor(((r10 - 12 + -r7 | 0) >>> 0) / 12) | 0;
        r11 = r13;
        r13 = r10;
        while (1) {
          r18 = r11 - 12 | 0;
          r19 = r13 - 12 | 0;
          if ((r11 | 0) != (r13 | 0)) {
            __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE(r18, HEAP32[r13 - 12 + 4 >> 2], r19);
          }
          if ((r6 | 0) == (r19 | 0)) {
            break;
          } else {
            r11 = r18;
            r13 = r19;
          }
        }
        r16 = r10 + (r12 * 12 & -1) | 0;
        r17 = HEAP32[r9];
      }
      HEAP32[r5] = r16;
      HEAP32[r9] = r17 + (r14 * 12 & -1) | 0;
      r15 = r16;
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 12 | 0;
  if ((r6 | 0) == 0) {
    r20 = r15;
    r21 = r20 - 12 | 0;
    HEAP32[r5] = r21;
    STACKTOP = r3;
    return;
  }
  __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC1ERKS6_(r6, r2);
  r20 = HEAP32[r5];
  r21 = r20 - 12 | 0;
  HEAP32[r5] = r21;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_["X"] = 1;
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESG_SG_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC1ERKS6_(r2, r1);
      r5 = HEAP32[r4];
    }
    r6 = r5 + 12 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 12 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = r1;
  r9 = HEAP32[r1 + 4 >> 2];
  r10 = (r9 | 0) == (r8 | 0);
  do {
    if ((r2 | 0) == (r3 | 0) | r10) {
      if (r10) {
        r11 = r2;
        r4 = 1585;
        break;
      } else {
        r12 = r9;
        r4 = 1586;
        break;
      }
    } else {
      r13 = r9;
      r14 = r2;
      while (1) {
        HEAP32[r13 + 8 >> 2] = HEAP32[r14 + 8 >> 2];
        r15 = HEAP32[r14 + 4 >> 2];
        r16 = HEAP32[r13 + 4 >> 2];
        r17 = (r16 | 0) == (r8 | 0);
        if ((r15 | 0) == (r3 | 0) | r17) {
          break;
        } else {
          r13 = r16;
          r14 = r15;
        }
      }
      if (r17) {
        r11 = r15;
        r4 = 1585;
        break;
      } else {
        r12 = r16;
        r4 = 1586;
        break;
      }
    }
  } while (0);
  if (r4 == 1585) {
    __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r6, r1, r8, r11, r3);
    STACKTOP = r5;
    return;
  } else if (r4 == 1586) {
    __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_(r7, r1, r12, r8);
    STACKTOP = r5;
    return;
  }
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_(r1, r2, r3, r4) {
  var r5, r6, r7;
  if ((r4 | 0) == (r3 | 0)) {
    r5 = r1 | 0;
    HEAP32[r5 >> 2] = r4;
    return;
  }
  r6 = HEAP32[r4 >> 2] + 4 | 0;
  r7 = r3 | 0;
  HEAP32[HEAP32[r7 >> 2] + 4 >> 2] = HEAP32[r6 >> 2];
  HEAP32[HEAP32[r6 >> 2] >> 2] = HEAP32[r7 >> 2];
  r7 = r2 + 8 | 0;
  r2 = r3;
  while (1) {
    r3 = HEAP32[r2 + 4 >> 2];
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] - 1 | 0;
    __ZdlPv(r2);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r2 = r3;
    }
  }
  r5 = r1 | 0;
  HEAP32[r5 >> 2] = r4;
  return;
}
function __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC2EjjS9_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 12 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 12 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 12 & -1) | 0;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1) {
  __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r6 = r1 | 0;
  HEAP32[r6 >> 2] = r3;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r1 = __Znwj(12);
  r7 = r1;
  r8 = r1;
  HEAP32[r8 >> 2] = 0;
  r9 = r1 + 8 | 0;
  if ((r9 | 0) != 0) {
    HEAP32[r9 >> 2] = HEAP32[r4 + 8 >> 2];
  }
  HEAP32[r6 >> 2] = r7;
  r6 = HEAP32[r4 + 4 >> 2];
  L1971 : do {
    if ((r6 | 0) == (r5 | 0)) {
      r10 = r7;
      r11 = 1;
    } else {
      r4 = r7;
      r9 = 1;
      r1 = r6;
      while (1) {
        r12 = __Znwj(12);
        r13 = r12 + 8 | 0;
        if ((r13 | 0) != 0) {
          HEAP32[r13 >> 2] = HEAP32[r1 + 8 >> 2];
        }
        r13 = r4 + 4 | 0;
        HEAP32[r13 >> 2] = r12;
        HEAP32[r12 >> 2] = r4;
        r12 = HEAP32[r1 + 4 >> 2];
        r14 = HEAP32[r13 >> 2];
        r13 = r9 + 1 | 0;
        if ((r12 | 0) == (r5 | 0)) {
          r10 = r14;
          r11 = r13;
          break L1971;
        } else {
          r4 = r14;
          r9 = r13;
          r1 = r12;
        }
      }
    }
  } while (0);
  r5 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r7;
  HEAP32[r8 >> 2] = HEAP32[r5];
  HEAP32[r5] = r10;
  HEAP32[r10 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + r11 | 0;
  return;
}
__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE["X"] = 1;
function __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (((r6 - r7 | 0) / 12 & -1) >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = (r7 - r8 | 0) / 12 & -1;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 357913941) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = (r6 - r8 | 0) / 12 & -1;
  if (r10 >>> 0 > 178956969) {
    r11 = 357913941;
  } else {
    r8 = r10 << 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE(r1, r4);
  __ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r6 = r1 | 0;
  HEAP32[r6 >> 2] = r3;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r1 = __Znwj(12);
  r7 = r1;
  r8 = r1;
  HEAP32[r8 >> 2] = 0;
  r9 = r1 + 8 | 0;
  if ((r9 | 0) != 0) {
    HEAP32[r9 >> 2] = HEAP32[r4 + 8 >> 2];
  }
  HEAP32[r6 >> 2] = r7;
  r6 = HEAP32[r4 + 4 >> 2];
  L2000 : do {
    if ((r6 | 0) == (r5 | 0)) {
      r10 = r7;
      r11 = 1;
    } else {
      r4 = r7;
      r9 = 1;
      r1 = r6;
      while (1) {
        r12 = __Znwj(12);
        r13 = r12 + 8 | 0;
        if ((r13 | 0) != 0) {
          HEAP32[r13 >> 2] = HEAP32[r1 + 8 >> 2];
        }
        r13 = r4 + 4 | 0;
        HEAP32[r13 >> 2] = r12;
        HEAP32[r12 >> 2] = r4;
        r12 = HEAP32[r1 + 4 >> 2];
        r14 = HEAP32[r13 >> 2];
        r13 = r9 + 1 | 0;
        if ((r12 | 0) == (r5 | 0)) {
          r10 = r14;
          r11 = r13;
          break L2000;
        } else {
          r4 = r14;
          r9 = r13;
          r1 = r12;
        }
      }
    }
  } while (0);
  r5 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r7;
  HEAP32[r8 >> 2] = HEAP32[r5];
  HEAP32[r5] = r10;
  HEAP32[r10 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + r11 | 0;
  return;
}
__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC2ERKS6_(r1, r2) {
  var r3, r4;
  r3 = r1;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2;
  r4 = HEAP32[r2 + 4 >> 2];
  if ((r4 | 0) == (r3 | 0)) {
    return;
  }
  r2 = r1;
  r1 = r4;
  while (1) {
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_(r2, r1 + 8 | 0);
    r4 = HEAP32[r1 + 4 >> 2];
    if ((r4 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r4;
    }
  }
  return;
}
function __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC2ERKS6_(r1, r2) {
  var r3, r4, r5;
  r3 = r1;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2;
  r4 = HEAP32[r2 + 4 >> 2];
  if ((r4 | 0) == (r3 | 0)) {
    return;
  } else {
    r5 = r4;
  }
  while (1) {
    __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE9push_backERKS3_(r1, r5 + 8 | 0);
    r4 = HEAP32[r5 + 4 >> 2];
    if ((r4 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r4;
    }
  }
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED1Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r1) {
  __ZN5Avoid17HyperEdgeTreeNodeC2Ev(r1);
  return;
}
function __ZN5Avoid17HyperEdgeTreeNodeC2Ev(r1) {
  var r2, r3;
  r2 = r1 >> 2;
  r3 = r1;
  HEAP32[r2] = r3;
  HEAP32[r2 + 1] = r3;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  __ZN5Avoid5PointC1Ev(r1 + 16 | 0);
  HEAP32[r2 + 10] = 0;
  HEAP32[r2 + 11] = 0;
  return;
}
function __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r1) {
  __ZN5Avoid17HyperEdgeTreeNodeD2Ev(r1);
  return;
}
function __ZN5Avoid17HyperEdgeTreeNodeD2Ev(r1) {
  var r2, r3, r4, r5;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r2;
  r4 = r1 + 40 | 0;
  r5 = HEAP32[r4 >> 2];
  if ((r5 | 0) != 0) {
    HEAP32[r3 >> 2] = r1;
    __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r5 | 0, r3);
    HEAP32[r4 >> 2] = 0;
  }
  __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r1 | 0);
  STACKTOP = r2;
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode24removeOtherJunctionsFromEPNS_17HyperEdgeTreeEdgeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = HEAP32[r1 + 4 >> 2];
  r5 = r1;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  } else {
    r6 = r4;
  }
  while (1) {
    r4 = HEAP32[r6 + 8 >> 2];
    if ((r4 | 0) != (r2 | 0)) {
      __ZN5Avoid17HyperEdgeTreeEdge24removeOtherJunctionsFromEPNS_17HyperEdgeTreeNodeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE(r4, r1, r3);
    }
    r4 = HEAP32[r6 + 4 >> 2];
    if ((r4 | 0) == (r5 | 0)) {
      break;
    } else {
      r6 = r4;
    }
  }
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdge24removeOtherJunctionsFromEPNS_17HyperEdgeTreeNodeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r1 | 0;
  r5 = HEAP32[r4 >> 2];
  do {
    if (!((r5 | 0) == 0 | (r5 | 0) == (r2 | 0))) {
      __ZN5Avoid17HyperEdgeTreeNode24removeOtherJunctionsFromEPNS_17HyperEdgeTreeEdgeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE(r5, r1, r3);
      r6 = HEAP32[r4 >> 2] + 12 | 0;
      if ((HEAP32[r6 >> 2] | 0) == 0) {
        break;
      }
      __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r3 | 0, r6);
    }
  } while (0);
  r4 = r1 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  if ((r5 | 0) == 0 | (r5 | 0) == (r2 | 0)) {
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNode24removeOtherJunctionsFromEPNS_17HyperEdgeTreeEdgeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE(r5, r1, r3);
  r1 = HEAP32[r4 >> 2] + 12 | 0;
  if ((HEAP32[r1 >> 2] | 0) == 0) {
    return;
  }
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r3 | 0, r1);
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(r1, r2, r3) {
  var r4, r5, r6;
  r4 = HEAP32[r1 + 4 >> 2];
  r5 = r1;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  } else {
    r6 = r4;
  }
  while (1) {
    r4 = HEAP32[r6 + 8 >> 2];
    if ((r4 | 0) != (r2 | 0)) {
      __ZN5Avoid17HyperEdgeTreeEdge17writeEdgesToConnsEPNS_17HyperEdgeTreeNodeEj(r4, r1, r3);
    }
    r4 = HEAP32[r6 + 4 >> 2];
    if ((r4 | 0) == (r5 | 0)) {
      break;
    } else {
      r6 = r4;
    }
  }
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = r1 + 12 | 0;
  if ((HEAP32[r5 >> 2] | 0) != 0) {
    __ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE9push_backERKS3_(r3, r5);
  }
  r5 = HEAP32[r1 + 4 >> 2];
  r6 = r1;
  if ((r5 | 0) == (r6 | 0)) {
    return;
  } else {
    r7 = r5;
  }
  while (1) {
    r5 = HEAP32[r7 + 8 >> 2];
    if ((r5 | 0) != (r2 | 0)) {
      __ZN5Avoid17HyperEdgeTreeEdge26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE(r5, r1, r3, r4);
    }
    r5 = HEAP32[r7 + 4 >> 2];
    if ((r5 | 0) == (r6 | 0)) {
      break;
    } else {
      r7 = r5;
    }
  }
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdge17writeEdgesToConnsEPNS_17HyperEdgeTreeNodeEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48;
  r4 = r1 >> 2;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 160 | 0;
  r6 = r5;
  r7 = r5 + 20;
  r8 = r5 + 40;
  r9 = r5 + 60;
  r10 = r5 + 80;
  r11 = r5 + 100;
  r12 = r5 + 120;
  r13 = r5 + 140;
  do {
    if ((r3 | 0) == 0) {
      __ZN5Avoid7Polygon5clearEv(HEAP32[r4 + 2] + 64 | 0);
    } else if ((r3 | 0) == 1) {
      r14 = r1 | 0;
      r15 = (HEAP32[r14 >> 2] | 0) == (r2 | 0);
      r16 = (r1 + 8 | 0) >> 2;
      r17 = HEAP32[r16];
      r18 = __ZNK5Avoid7Polygon5emptyEv(r17 + 64 | 0);
      if (r15) {
        do {
          if (r18) {
            r15 = r17 + 72 | 0;
            r19 = r2 + 16 | 0;
            r20 = (r17 + 76 | 0) >> 2;
            r21 = HEAP32[r20];
            r22 = r17 + 80 | 0;
            r23 = HEAP32[r22 >> 2];
            if (r21 >>> 0 < r23 >>> 0) {
              if ((r21 | 0) == 0) {
                r24 = 0;
              } else {
                r25 = r21 >> 2;
                r26 = r19 >> 2;
                HEAP32[r25] = HEAP32[r26];
                HEAP32[r25 + 1] = HEAP32[r26 + 1];
                HEAP32[r25 + 2] = HEAP32[r26 + 2];
                HEAP32[r25 + 3] = HEAP32[r26 + 3];
                HEAP32[r25 + 4] = HEAP32[r26 + 4];
                HEAP32[r25 + 5] = HEAP32[r26 + 5];
                r24 = HEAP32[r20];
              }
              HEAP32[r20] = r24 + 24 | 0;
              break;
            }
            r20 = HEAP32[r15 >> 2];
            r26 = (r21 - r20 | 0) / 24 & -1;
            r21 = r26 + 1 | 0;
            if (r21 >>> 0 > 178956970) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            }
            r25 = (r23 - r20 | 0) / 24 & -1;
            if (r25 >>> 0 > 89478484) {
              r27 = 178956970;
            } else {
              r20 = r25 << 1;
              r27 = r20 >>> 0 < r21 >>> 0 ? r21 : r20;
            }
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r13, r27, r26, r22);
            r22 = (r13 + 8 | 0) >> 2;
            r26 = HEAP32[r22];
            r20 = r13 + 12 | 0;
            do {
              if ((r26 | 0) == (HEAP32[r20 >> 2] | 0)) {
                r21 = (r13 + 4 | 0) >> 2;
                r25 = HEAP32[r21];
                r23 = r13 | 0;
                r28 = HEAP32[r23 >> 2];
                if (r25 >>> 0 > r28 >>> 0) {
                  r29 = r25;
                  r30 = (((r29 - r28 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                  r31 = r25 + (r30 * 24 & -1) | 0;
                  r32 = r26 - r29 | 0;
                  _memmove(r31, r25, r32, 4, 0);
                  r29 = r25 + ((((r32 | 0) / 24 & -1) + r30) * 24 & -1) | 0;
                  HEAP32[r22] = r29;
                  HEAP32[r21] = r31;
                  r33 = r29;
                  break;
                }
                r29 = ((r26 - r28 | 0) / 24 & -1) << 1;
                r31 = (r29 | 0) == 0 ? 1 : r29;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r12, r31, r31 >>> 2, HEAP32[r13 + 16 >> 2]);
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r12, r25, r26);
                r31 = r12 | 0;
                HEAP32[r23 >> 2] = HEAP32[r31 >> 2];
                HEAP32[r31 >> 2] = r28;
                r28 = r12 + 4 | 0;
                HEAP32[r21] = HEAP32[r28 >> 2];
                HEAP32[r28 >> 2] = r25;
                r25 = r12 + 8 | 0;
                r28 = HEAP32[r25 >> 2];
                HEAP32[r22] = r28;
                HEAP32[r25 >> 2] = r26;
                r25 = r12 + 12 | 0;
                HEAP32[r20 >> 2] = HEAP32[r25 >> 2];
                HEAP32[r25 >> 2] = r26;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r12);
                r33 = r28;
              } else {
                r33 = r26;
              }
            } while (0);
            if ((r33 | 0) != 0) {
              r26 = r33 >> 2;
              r20 = r19 >> 2;
              HEAP32[r26] = HEAP32[r20];
              HEAP32[r26 + 1] = HEAP32[r20 + 1];
              HEAP32[r26 + 2] = HEAP32[r20 + 2];
              HEAP32[r26 + 3] = HEAP32[r20 + 3];
              HEAP32[r26 + 4] = HEAP32[r20 + 4];
              HEAP32[r26 + 5] = HEAP32[r20 + 5];
            }
            HEAP32[r22] = r33 + 24 | 0;
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r15, r13);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r13);
          }
        } while (0);
        r20 = HEAP32[r16];
        r26 = r20 + 72 | 0;
        r28 = HEAP32[r4 + 1] + 16 | 0;
        r25 = (r20 + 76 | 0) >> 2;
        r21 = HEAP32[r25];
        r31 = r20 + 80 | 0;
        r20 = HEAP32[r31 >> 2];
        if (r21 >>> 0 < r20 >>> 0) {
          if ((r21 | 0) == 0) {
            r34 = 0;
          } else {
            r23 = r21 >> 2;
            r29 = r28 >> 2;
            HEAP32[r23] = HEAP32[r29];
            HEAP32[r23 + 1] = HEAP32[r29 + 1];
            HEAP32[r23 + 2] = HEAP32[r29 + 2];
            HEAP32[r23 + 3] = HEAP32[r29 + 3];
            HEAP32[r23 + 4] = HEAP32[r29 + 4];
            HEAP32[r23 + 5] = HEAP32[r29 + 5];
            r34 = HEAP32[r25];
          }
          HEAP32[r25] = r34 + 24 | 0;
          break;
        }
        r25 = HEAP32[r26 >> 2];
        r29 = (r21 - r25 | 0) / 24 & -1;
        r21 = r29 + 1 | 0;
        if (r21 >>> 0 > 178956970) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        }
        r23 = (r20 - r25 | 0) / 24 & -1;
        if (r23 >>> 0 > 89478484) {
          r35 = 178956970;
        } else {
          r25 = r23 << 1;
          r35 = r25 >>> 0 < r21 >>> 0 ? r21 : r25;
        }
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r11, r35, r29, r31);
        r31 = (r11 + 8 | 0) >> 2;
        r29 = HEAP32[r31];
        r25 = r11 + 12 | 0;
        do {
          if ((r29 | 0) == (HEAP32[r25 >> 2] | 0)) {
            r21 = (r11 + 4 | 0) >> 2;
            r23 = HEAP32[r21];
            r20 = r11 | 0;
            r30 = HEAP32[r20 >> 2];
            if (r23 >>> 0 > r30 >>> 0) {
              r32 = r23;
              r36 = (((r32 - r30 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
              r37 = r23 + (r36 * 24 & -1) | 0;
              r38 = r29 - r32 | 0;
              _memmove(r37, r23, r38, 4, 0);
              r32 = r23 + ((((r38 | 0) / 24 & -1) + r36) * 24 & -1) | 0;
              HEAP32[r31] = r32;
              HEAP32[r21] = r37;
              r39 = r32;
              break;
            }
            r32 = ((r29 - r30 | 0) / 24 & -1) << 1;
            r37 = (r32 | 0) == 0 ? 1 : r32;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r10, r37, r37 >>> 2, HEAP32[r11 + 16 >> 2]);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r10, r23, r29);
            r37 = r10 | 0;
            HEAP32[r20 >> 2] = HEAP32[r37 >> 2];
            HEAP32[r37 >> 2] = r30;
            r30 = r10 + 4 | 0;
            HEAP32[r21] = HEAP32[r30 >> 2];
            HEAP32[r30 >> 2] = r23;
            r23 = r10 + 8 | 0;
            r30 = HEAP32[r23 >> 2];
            HEAP32[r31] = r30;
            HEAP32[r23 >> 2] = r29;
            r23 = r10 + 12 | 0;
            HEAP32[r25 >> 2] = HEAP32[r23 >> 2];
            HEAP32[r23 >> 2] = r29;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r10);
            r39 = r30;
          } else {
            r39 = r29;
          }
        } while (0);
        if ((r39 | 0) != 0) {
          r29 = r39 >> 2;
          r25 = r28 >> 2;
          HEAP32[r29] = HEAP32[r25];
          HEAP32[r29 + 1] = HEAP32[r25 + 1];
          HEAP32[r29 + 2] = HEAP32[r25 + 2];
          HEAP32[r29 + 3] = HEAP32[r25 + 3];
          HEAP32[r29 + 4] = HEAP32[r25 + 4];
          HEAP32[r29 + 5] = HEAP32[r25 + 5];
        }
        HEAP32[r31] = r39 + 24 | 0;
        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r26, r11);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r11);
        break;
      } else {
        do {
          if (r18) {
            r25 = r17 + 72 | 0;
            r29 = HEAP32[r4 + 1] + 16 | 0;
            r30 = (r17 + 76 | 0) >> 2;
            r23 = HEAP32[r30];
            r21 = r17 + 80 | 0;
            r37 = HEAP32[r21 >> 2];
            if (r23 >>> 0 < r37 >>> 0) {
              if ((r23 | 0) == 0) {
                r40 = 0;
              } else {
                r20 = r23 >> 2;
                r32 = r29 >> 2;
                HEAP32[r20] = HEAP32[r32];
                HEAP32[r20 + 1] = HEAP32[r32 + 1];
                HEAP32[r20 + 2] = HEAP32[r32 + 2];
                HEAP32[r20 + 3] = HEAP32[r32 + 3];
                HEAP32[r20 + 4] = HEAP32[r32 + 4];
                HEAP32[r20 + 5] = HEAP32[r32 + 5];
                r40 = HEAP32[r30];
              }
              HEAP32[r30] = r40 + 24 | 0;
              break;
            }
            r30 = HEAP32[r25 >> 2];
            r32 = (r23 - r30 | 0) / 24 & -1;
            r23 = r32 + 1 | 0;
            if (r23 >>> 0 > 178956970) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            }
            r20 = (r37 - r30 | 0) / 24 & -1;
            if (r20 >>> 0 > 89478484) {
              r41 = 178956970;
            } else {
              r30 = r20 << 1;
              r41 = r30 >>> 0 < r23 >>> 0 ? r23 : r30;
            }
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r9, r41, r32, r21);
            r21 = (r9 + 8 | 0) >> 2;
            r32 = HEAP32[r21];
            r30 = r9 + 12 | 0;
            do {
              if ((r32 | 0) == (HEAP32[r30 >> 2] | 0)) {
                r23 = (r9 + 4 | 0) >> 2;
                r20 = HEAP32[r23];
                r37 = r9 | 0;
                r36 = HEAP32[r37 >> 2];
                if (r20 >>> 0 > r36 >>> 0) {
                  r38 = r20;
                  r42 = (((r38 - r36 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
                  r43 = r20 + (r42 * 24 & -1) | 0;
                  r44 = r32 - r38 | 0;
                  _memmove(r43, r20, r44, 4, 0);
                  r38 = r20 + ((((r44 | 0) / 24 & -1) + r42) * 24 & -1) | 0;
                  HEAP32[r21] = r38;
                  HEAP32[r23] = r43;
                  r45 = r38;
                  break;
                }
                r38 = ((r32 - r36 | 0) / 24 & -1) << 1;
                r43 = (r38 | 0) == 0 ? 1 : r38;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r8, r43, r43 >>> 2, HEAP32[r9 + 16 >> 2]);
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r8, r20, r32);
                r43 = r8 | 0;
                HEAP32[r37 >> 2] = HEAP32[r43 >> 2];
                HEAP32[r43 >> 2] = r36;
                r36 = r8 + 4 | 0;
                HEAP32[r23] = HEAP32[r36 >> 2];
                HEAP32[r36 >> 2] = r20;
                r20 = r8 + 8 | 0;
                r36 = HEAP32[r20 >> 2];
                HEAP32[r21] = r36;
                HEAP32[r20 >> 2] = r32;
                r20 = r8 + 12 | 0;
                HEAP32[r30 >> 2] = HEAP32[r20 >> 2];
                HEAP32[r20 >> 2] = r32;
                __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r8);
                r45 = r36;
              } else {
                r45 = r32;
              }
            } while (0);
            if ((r45 | 0) != 0) {
              r32 = r45 >> 2;
              r30 = r29 >> 2;
              HEAP32[r32] = HEAP32[r30];
              HEAP32[r32 + 1] = HEAP32[r30 + 1];
              HEAP32[r32 + 2] = HEAP32[r30 + 2];
              HEAP32[r32 + 3] = HEAP32[r30 + 3];
              HEAP32[r32 + 4] = HEAP32[r30 + 4];
              HEAP32[r32 + 5] = HEAP32[r30 + 5];
            }
            HEAP32[r21] = r45 + 24 | 0;
            __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r25, r9);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r9);
          }
        } while (0);
        r17 = HEAP32[r16];
        r18 = r17 + 72 | 0;
        r26 = HEAP32[r14 >> 2] + 16 | 0;
        r31 = (r17 + 76 | 0) >> 2;
        r28 = HEAP32[r31];
        r30 = r17 + 80 | 0;
        r17 = HEAP32[r30 >> 2];
        if (r28 >>> 0 < r17 >>> 0) {
          if ((r28 | 0) == 0) {
            r46 = 0;
          } else {
            r32 = r28 >> 2;
            r15 = r26 >> 2;
            HEAP32[r32] = HEAP32[r15];
            HEAP32[r32 + 1] = HEAP32[r15 + 1];
            HEAP32[r32 + 2] = HEAP32[r15 + 2];
            HEAP32[r32 + 3] = HEAP32[r15 + 3];
            HEAP32[r32 + 4] = HEAP32[r15 + 4];
            HEAP32[r32 + 5] = HEAP32[r15 + 5];
            r46 = HEAP32[r31];
          }
          HEAP32[r31] = r46 + 24 | 0;
          break;
        }
        r31 = HEAP32[r18 >> 2];
        r15 = (r28 - r31 | 0) / 24 & -1;
        r28 = r15 + 1 | 0;
        if (r28 >>> 0 > 178956970) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        }
        r32 = (r17 - r31 | 0) / 24 & -1;
        if (r32 >>> 0 > 89478484) {
          r47 = 178956970;
        } else {
          r31 = r32 << 1;
          r47 = r31 >>> 0 < r28 >>> 0 ? r28 : r31;
        }
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r7, r47, r15, r30);
        r30 = (r7 + 8 | 0) >> 2;
        r15 = HEAP32[r30];
        r31 = r7 + 12 | 0;
        do {
          if ((r15 | 0) == (HEAP32[r31 >> 2] | 0)) {
            r28 = (r7 + 4 | 0) >> 2;
            r32 = HEAP32[r28];
            r17 = r7 | 0;
            r22 = HEAP32[r17 >> 2];
            if (r32 >>> 0 > r22 >>> 0) {
              r19 = r32;
              r36 = (((r19 - r22 | 0) / 24 & -1) + 1 | 0) / -2 & -1;
              r20 = r32 + (r36 * 24 & -1) | 0;
              r23 = r15 - r19 | 0;
              _memmove(r20, r32, r23, 4, 0);
              r19 = r32 + ((((r23 | 0) / 24 & -1) + r36) * 24 & -1) | 0;
              HEAP32[r30] = r19;
              HEAP32[r28] = r20;
              r48 = r19;
              break;
            }
            r19 = ((r15 - r22 | 0) / 24 & -1) << 1;
            r20 = (r19 | 0) == 0 ? 1 : r19;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_(r6, r20, r20 >>> 2, HEAP32[r7 + 16 >> 2]);
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r6, r32, r15);
            r20 = r6 | 0;
            HEAP32[r17 >> 2] = HEAP32[r20 >> 2];
            HEAP32[r20 >> 2] = r22;
            r22 = r6 + 4 | 0;
            HEAP32[r28] = HEAP32[r22 >> 2];
            HEAP32[r22 >> 2] = r32;
            r32 = r6 + 8 | 0;
            r22 = HEAP32[r32 >> 2];
            HEAP32[r30] = r22;
            HEAP32[r32 >> 2] = r15;
            r32 = r6 + 12 | 0;
            HEAP32[r31 >> 2] = HEAP32[r32 >> 2];
            HEAP32[r32 >> 2] = r15;
            __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r6);
            r48 = r22;
          } else {
            r48 = r15;
          }
        } while (0);
        if ((r48 | 0) != 0) {
          r15 = r48 >> 2;
          r31 = r26 >> 2;
          HEAP32[r15] = HEAP32[r31];
          HEAP32[r15 + 1] = HEAP32[r31 + 1];
          HEAP32[r15 + 2] = HEAP32[r31 + 2];
          HEAP32[r15 + 3] = HEAP32[r31 + 3];
          HEAP32[r15 + 4] = HEAP32[r31 + 4];
          HEAP32[r15 + 5] = HEAP32[r31 + 5];
        }
        HEAP32[r30] = r48 + 24 | 0;
        __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(r18, r7);
        __ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev(r7);
        break;
      }
    }
  } while (0);
  r7 = HEAP32[r4];
  if (!((r7 | 0) == 0 | (r7 | 0) == (r2 | 0))) {
    __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(r7, r1, r3);
  }
  r7 = HEAP32[r4 + 1];
  if ((r7 | 0) == 0 | (r7 | 0) == (r2 | 0)) {
    STACKTOP = r5;
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(r7, r1, r3);
  STACKTOP = r5;
  return;
}
__ZN5Avoid17HyperEdgeTreeEdge17writeEdgesToConnsEPNS_17HyperEdgeTreeNodeEj["X"] = 1;
function __ZN5Avoid17HyperEdgeTreeNode8addConnsEPNS_17HyperEdgeTreeEdgeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEES8_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r7 = r6;
  do {
    if ((r5 | 0) == 0) {
      if ((HEAP32[r1 + 12 >> 2] | 0) != 0) {
        break;
      }
      ___assert_func(5248688, 118, 5260680, 5247464);
    }
  } while (0);
  r8 = HEAP32[r1 + 4 >> 2];
  r9 = r1;
  if ((r8 | 0) == (r9 | 0)) {
    STACKTOP = r6;
    return;
  }
  r10 = r1 + 12 | 0;
  r11 = r3;
  r12 = r5;
  r5 = r8;
  while (1) {
    r8 = (r5 + 8 | 0) >> 2;
    r13 = HEAP32[r8];
    if ((r13 | 0) == (r2 | 0)) {
      r14 = r12;
    } else {
      if ((HEAP32[r10 >> 2] | 0) == 0) {
        r15 = r12;
        r16 = r13;
      } else {
        r13 = __Znwj(172);
        r17 = r13;
        __ZN5Avoid7ConnRefC1EPNS_6RouterEj(r17, r3);
        __ZN5Avoid6Router29removeObjectFromQueuedActionsEPKv(r11, r13);
        __ZN5Avoid7ConnRef10makeActiveEv(r17);
        r18 = r13 + 16 | 0;
        HEAP8[r18] = HEAP8[r18] | 16;
        __ZN5Avoid7ConnEndC1EPNS_11JunctionRefE(r7, HEAP32[r10 >> 2]);
        __ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE(r17, 1, r7);
        __ZN5Avoid7ConnEndD1Ev(r7);
        r15 = r17;
        r16 = HEAP32[r8];
      }
      HEAP32[r16 + 8 >> 2] = r15;
      __ZN5Avoid17HyperEdgeTreeEdge8addConnsEPNS_17HyperEdgeTreeNodeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEE(HEAP32[r8], r1, r3, r4);
      r14 = r15;
    }
    r8 = HEAP32[r5 + 4 >> 2];
    if ((r8 | 0) == (r9 | 0)) {
      break;
    } else {
      r12 = r14;
      r5 = r8;
    }
  }
  STACKTOP = r6;
  return;
}
__ZN5Avoid17HyperEdgeTreeNode8addConnsEPNS_17HyperEdgeTreeEdgeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEES8_["X"] = 1;
function __ZN5Avoid17HyperEdgeTreeEdge8addConnsEPNS_17HyperEdgeTreeNodeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 96 | 0;
  r6 = r5;
  r7 = r5 + 48;
  r8 = (r1 + 8 | 0) >> 2;
  if ((HEAP32[r8] | 0) == 0) {
    ___assert_func(5248688, 537, 5260916, 5244440);
  }
  r9 = HEAP32[r1 >> 2];
  if ((r9 | 0) == 0 | (r9 | 0) == (r2 | 0)) {
    r10 = 0;
  } else {
    __ZN5Avoid17HyperEdgeTreeNode8addConnsEPNS_17HyperEdgeTreeEdgeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEES8_(r9, r1, r3, r4, HEAP32[r8]);
    r10 = r9;
  }
  r9 = HEAP32[r1 + 4 >> 2];
  if ((r9 | 0) == 0 | (r9 | 0) == (r2 | 0)) {
    r11 = r10;
  } else {
    __ZN5Avoid17HyperEdgeTreeNode8addConnsEPNS_17HyperEdgeTreeEdgeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEES8_(r9, r1, r3, r4, HEAP32[r8]);
    r11 = r9;
  }
  r9 = r11 + 44 | 0;
  if ((HEAP32[r9 >> 2] | 0) == 0) {
    r3 = HEAP32[r11 + 12 >> 2];
    if ((r3 | 0) == 0) {
      STACKTOP = r5;
      return;
    }
    __ZN5Avoid7ConnEndC1EPNS_11JunctionRefE(r7, r3);
    __ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE(HEAP32[r8], 2, r7);
    __ZN5Avoid7ConnEndD1Ev(r7);
    STACKTOP = r5;
    return;
  }
  __ZN5Avoid7ConnEndC1Ev(r6);
  r7 = r4;
  r3 = 0;
  r11 = r4 + 4 | 0;
  while (1) {
    r4 = HEAP32[r11 >> 2];
    if ((r4 | 0) == (r7 | 0)) {
      r12 = r3;
      break;
    }
    r1 = __ZNK5Avoid7ConnRef27getConnEndForEndpointVertexEPNS_7VertInfERNS_7ConnEndE(HEAP32[r4 + 8 >> 2], HEAP32[r9 >> 2], r6) & 1 | r3;
    if ((r1 & 1) << 24 >> 24 == 0) {
      r3 = r1;
      r11 = r4 + 4 | 0;
    } else {
      r12 = r1;
      break;
    }
  }
  if ((r12 & 1) << 24 >> 24 != 0) {
    __ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE(HEAP32[r8], 2, r6);
  }
  __ZN5Avoid7ConnEndD1Ev(r6);
  STACKTOP = r5;
  return;
}
__ZN5Avoid17HyperEdgeTreeEdge8addConnsEPNS_17HyperEdgeTreeNodeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEE["X"] = 1;
function __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(r1, r2) {
  var r3, r4;
  r3 = HEAP32[r1 >> 2];
  if ((r3 | 0) != (r2 | 0)) {
    r4 = r3;
    return r4;
  }
  r4 = HEAP32[r1 + 4 >> 2];
  return r4;
}
function __ZN5Avoid17HyperEdgeTreeEdge26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9;
  r5 = 0;
  r6 = r4;
  r7 = r1 + 8 | 0;
  r8 = r4 + 4 | 0;
  while (1) {
    r9 = HEAP32[r8 >> 2];
    if ((r9 | 0) == (r6 | 0)) {
      r5 = 1863;
      break;
    }
    if ((HEAP32[r9 + 8 >> 2] | 0) == (HEAP32[r7 >> 2] | 0)) {
      break;
    } else {
      r8 = r9 + 4 | 0;
    }
  }
  if (r5 == 1863) {
    __ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_(r4, r7);
  }
  r7 = HEAP32[r1 >> 2];
  if ((r7 | 0) != (r2 | 0)) {
    __ZN5Avoid17HyperEdgeTreeNode26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE(r7, r1, r3, r4);
    return;
  }
  r7 = HEAP32[r1 + 4 >> 2];
  if ((r7 | 0) == (r2 | 0)) {
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNode26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE(r7, r1, r3, r4);
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode21removeZeroLengthEdgesEPNS_17HyperEdgeTreeEdgeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = 0;
  r4 = HEAP32[r1 + 4 >> 2];
  r5 = r1;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  } else {
    r6 = r1;
    r7 = r4;
    r8 = r5;
  }
  L2268 : while (1) {
    r5 = r6 + 12 | 0;
    r4 = r7;
    L2270 : while (1) {
      r9 = HEAP32[r4 + 8 >> 2];
      if ((r9 | 0) != (r2 | 0)) {
        do {
          if (__ZNK5Avoid17HyperEdgeTreeEdge10zeroLengthEv(HEAP32[r9 >> 2], HEAP32[r9 + 4 >> 2])) {
            r1 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(r9, r6);
            if ((HEAP32[r1 + 12 >> 2] | 0) == 0) {
              r10 = r6;
              r11 = r1;
            } else {
              if ((HEAP32[r5 >> 2] | 0) == 0) {
                r10 = r1;
                r11 = r6;
              } else {
                break;
              }
            }
            if ((r10 | 0) != 0) {
              break L2270;
            }
          }
        } while (0);
        __ZN5Avoid17HyperEdgeTreeEdge21removeZeroLengthEdgesEPNS_17HyperEdgeTreeNodeE(r9, r6);
      }
      r1 = HEAP32[r4 + 4 >> 2];
      if ((r1 | 0) == (r8 | 0)) {
        r3 = 1889;
        break L2268;
      } else {
        r4 = r1;
      }
    }
    __ZN5Avoid17HyperEdgeTreeEdge14disconnectEdgeEv(r9);
    if ((r9 | 0) != 0) {
      __ZdlPv(r9);
    }
    __ZN5Avoid17HyperEdgeTreeNode15spliceEdgesFromEPS0_(r10, r11);
    if ((r11 | 0) != 0) {
      __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r11);
      __ZdlPv(r11);
    }
    r4 = HEAP32[r10 + 4 >> 2];
    r5 = r10;
    if ((r4 | 0) == (r5 | 0)) {
      r3 = 1891;
      break;
    } else {
      r6 = r10;
      r7 = r4;
      r8 = r5;
    }
  }
  if (r3 == 1889) {
    return;
  } else if (r3 == 1891) {
    return;
  }
}
__ZN5Avoid17HyperEdgeTreeNode21removeZeroLengthEdgesEPNS_17HyperEdgeTreeEdgeE["X"] = 1;
function __ZNK5Avoid17HyperEdgeTreeEdge10zeroLengthEv(r1, r2) {
  return __ZNK5Avoid5PointeqERKS0_(r1 + 16 | 0, r2 + 16 | 0);
}
function __ZN5Avoid17HyperEdgeTreeEdge14disconnectEdgeEv(r1) {
  var r2, r3;
  r2 = (r1 | 0) >> 2;
  if ((HEAP32[r2] | 0) == 0) {
    ___assert_func(5248688, 643, 5261120, 5243080);
  }
  r3 = (r1 + 4 | 0) >> 2;
  if ((HEAP32[r3] | 0) == 0) {
    ___assert_func(5248688, 644, 5261120, 5252488);
  }
  __ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE(HEAP32[r2], r1);
  __ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE(HEAP32[r3], r1);
  HEAP32[r2] = 0;
  HEAP32[r3] = 0;
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode15spliceEdgesFromEPS0_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r2 + 4 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r2;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  } else {
    r6 = r4;
  }
  while (1) {
    __ZN5Avoid17HyperEdgeTreeEdge11replaceNodeEPNS_17HyperEdgeTreeNodeES2_(HEAP32[r6 + 8 >> 2], r2, r1);
    r4 = HEAP32[r3 >> 2];
    if ((r4 | 0) == (r5 | 0)) {
      break;
    } else {
      r6 = r4;
    }
  }
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdge21removeZeroLengthEdgesEPNS_17HyperEdgeTreeNodeE(r1, r2) {
  var r3;
  r3 = HEAP32[r1 >> 2];
  if ((r3 | 0) != (r2 | 0)) {
    __ZN5Avoid17HyperEdgeTreeNode21removeZeroLengthEdgesEPNS_17HyperEdgeTreeEdgeE(r3, r1);
  }
  r3 = HEAP32[r1 + 4 >> 2];
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNode21removeZeroLengthEdgesEPNS_17HyperEdgeTreeEdgeE(r3, r1);
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode17deleteEdgesExceptEPNS_17HyperEdgeTreeEdgeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 | 0;
  r4 = HEAP32[r1 + 4 >> 2];
  r5 = r1;
  if ((r4 | 0) == (r5 | 0)) {
    __ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5clearEv(r3);
    return;
  } else {
    r6 = r4;
  }
  while (1) {
    r4 = r6 + 8 | 0;
    r7 = HEAP32[r4 >> 2];
    do {
      if ((r7 | 0) != (r2 | 0)) {
        __ZN5Avoid17HyperEdgeTreeEdge17deleteNodesExceptEPNS_17HyperEdgeTreeNodeE(r7, r1);
        r8 = HEAP32[r4 >> 2];
        if ((r8 | 0) == 0) {
          break;
        }
        __ZdlPv(r8);
      }
    } while (0);
    r4 = HEAP32[r6 + 4 >> 2];
    if ((r4 | 0) == (r5 | 0)) {
      break;
    } else {
      r6 = r4;
    }
  }
  __ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5clearEv(r3);
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdge17deleteNodesExceptEPNS_17HyperEdgeTreeNodeE(r1, r2) {
  var r3, r4, r5;
  r3 = (r1 | 0) >> 2;
  r4 = HEAP32[r3];
  do {
    if (!((r4 | 0) == 0 | (r4 | 0) == (r2 | 0))) {
      __ZN5Avoid17HyperEdgeTreeNode17deleteEdgesExceptEPNS_17HyperEdgeTreeEdgeE(r4, r1);
      r5 = HEAP32[r3];
      if ((r5 | 0) == 0) {
        break;
      }
      __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r5);
      __ZdlPv(r5);
    }
  } while (0);
  HEAP32[r3] = 0;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  if ((r4 | 0) == 0 | (r4 | 0) == (r2 | 0)) {
    HEAP32[r3] = 0;
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNode17deleteEdgesExceptEPNS_17HyperEdgeTreeEdgeE(r4, r1);
  r1 = HEAP32[r3];
  if ((r1 | 0) == 0) {
    HEAP32[r3] = 0;
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r1);
  __ZdlPv(r1);
  HEAP32[r3] = 0;
  return;
}
__ZN5Avoid17HyperEdgeTreeEdge17deleteNodesExceptEPNS_17HyperEdgeTreeNodeE["X"] = 1;
function __ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = r1 | 0;
  r6 = HEAP32[r1 + 4 >> 2];
  r7 = r1;
  if ((r6 | 0) == (r7 | 0)) {
    STACKTOP = r3;
    return;
  }
  r1 = r4 | 0;
  r8 = r6;
  while (1) {
    if ((HEAP32[r8 + 8 >> 2] | 0) == (r2 | 0)) {
      __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r4, r5, r8);
      r9 = HEAP32[r1 >> 2];
    } else {
      r9 = HEAP32[r8 + 4 >> 2];
    }
    if ((r9 | 0) == (r7 | 0)) {
      break;
    } else {
      r8 = r9;
    }
  }
  STACKTOP = r3;
  return;
}
function __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdge11replaceNodeEPNS_17HyperEdgeTreeNodeES2_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = r1 | 0;
  if ((HEAP32[r7 >> 2] | 0) == (r2 | 0)) {
    __ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE(r2, r1);
    HEAP32[r5 >> 2] = r1;
    __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_(r3 | 0, r5);
    HEAP32[r7 >> 2] = r3;
    STACKTOP = r4;
    return;
  }
  r7 = r1 + 4 | 0;
  if ((HEAP32[r7 >> 2] | 0) != (r2 | 0)) {
    STACKTOP = r4;
    return;
  }
  __ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE(r2, r1);
  HEAP32[r6 >> 2] = r1;
  __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_(r3 | 0, r6);
  HEAP32[r7 >> 2] = r3;
  STACKTOP = r4;
  return;
}
function __ZN5Avoid17HyperEdgeTreeNode27moveJunctionAlongCommonEdgeEPS0_(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 224 | 0;
  r4 = r3;
  r5 = r3 + 20;
  r6 = r3 + 40;
  r7 = r3 + 60;
  r8 = r3 + 80;
  r9 = r3 + 100;
  r10 = r3 + 120;
  r11 = r3 + 140;
  r12 = r3 + 160;
  r13 = r3 + 180;
  r14 = r3 + 200;
  r15 = r3 + 212;
  r16 = (r1 + 12 | 0) >> 2;
  if ((HEAP32[r16] | 0) == 0) {
    ___assert_func(5248688, 281, 5260800, 5246424);
  }
  r17 = (r14 | 0) >> 2;
  HEAP32[r17] = 0;
  r18 = (r14 + 4 | 0) >> 2;
  HEAP32[r18] = 0;
  r19 = r14 + 8 | 0;
  r20 = (r19 | 0) >> 2;
  HEAP32[r20] = 0;
  r21 = (r15 | 0) >> 2;
  HEAP32[r21] = 0;
  r22 = (r15 + 4 | 0) >> 2;
  HEAP32[r22] = 0;
  r23 = r15 + 8 | 0;
  r24 = (r23 | 0) >> 2;
  HEAP32[r24] = 0;
  r25 = r1 + 4 | 0;
  r26 = HEAP32[r25 >> 2];
  r27 = r1;
  if ((r26 | 0) == (r27 | 0)) {
    r28 = 0;
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r15);
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r14);
    STACKTOP = r3;
    return r28;
  }
  r29 = r19;
  r19 = (r13 + 8 | 0) >> 2;
  r30 = r13 + 12 | 0;
  r31 = (r13 + 4 | 0) >> 2;
  r32 = r13 | 0;
  r33 = r13 + 16 | 0;
  r34 = r12 | 0;
  r35 = r12 + 4 | 0;
  r36 = r12 + 8 | 0;
  r37 = r12 + 12 | 0;
  r38 = (r9 + 8 | 0) >> 2;
  r39 = r9 + 12 | 0;
  r40 = (r9 + 4 | 0) >> 2;
  r41 = r9 | 0;
  r42 = r9 + 16 | 0;
  r43 = r8 | 0;
  r44 = r8 + 4 | 0;
  r45 = r8 + 8 | 0;
  r46 = r8 + 12 | 0;
  r47 = r23;
  r23 = (r11 + 8 | 0) >> 2;
  r48 = r11 + 12 | 0;
  r49 = (r11 + 4 | 0) >> 2;
  r50 = r11 | 0;
  r51 = r11 + 16 | 0;
  r52 = r10 | 0;
  r53 = r10 + 4 | 0;
  r54 = r10 + 8 | 0;
  r55 = r10 + 12 | 0;
  r56 = r1 + 16 | 0;
  r57 = (r7 + 8 | 0) >> 2;
  r58 = r7 + 12 | 0;
  r59 = (r7 + 4 | 0) >> 2;
  r60 = r7 | 0;
  r61 = r7 + 16 | 0;
  r62 = r6 | 0;
  r63 = r6 + 4 | 0;
  r64 = r6 + 8 | 0;
  r65 = r6 + 12 | 0;
  r66 = (r5 + 8 | 0) >> 2;
  r67 = r5 + 12 | 0;
  r68 = (r5 + 4 | 0) >> 2;
  r69 = r5 | 0;
  r70 = r5 + 16 | 0;
  r71 = r4 | 0;
  r72 = r4 + 4 | 0;
  r73 = r4 + 8 | 0;
  r74 = r4 + 12 | 0;
  r75 = r26;
  r26 = 0;
  r76 = 0;
  L2366 : while (1) {
    r77 = HEAP32[r75 + 8 >> 2];
    r78 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(r77, r1);
    HEAP32[r18] = r26;
    HEAP32[r22] = r76;
    do {
      if ((HEAP32[r78 + 12 >> 2] | 0) == 0) {
        r79 = HEAP32[r20];
        if (r26 >>> 0 < r79 >>> 0) {
          if ((r26 | 0) == 0) {
            r80 = 0;
          } else {
            HEAP32[r26 >> 2] = r77;
            r80 = HEAP32[r18];
          }
          HEAP32[r18] = r80 + 4 | 0;
        } else {
          r81 = r79 - r26 | 0;
          if (r81 >> 2 >>> 0 > 536870910) {
            r82 = 1073741823;
          } else {
            r79 = r81 >> 1;
            r82 = (r79 | 0) == 0 ? 1 : r79;
          }
          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r13, r82, 0, r29);
          r79 = HEAP32[r19];
          do {
            if ((r79 | 0) == (HEAP32[r30 >> 2] | 0)) {
              r81 = HEAP32[r31];
              r83 = HEAP32[r32 >> 2];
              if (r81 >>> 0 > r83 >>> 0) {
                r84 = r81;
                r85 = (r84 - r83 + 4 >> 2 | 0) / -2 & -1;
                r86 = (r85 << 2) + r81 | 0;
                r87 = r79 - r84 | 0;
                _memmove(r86, r81, r87, 4, 0);
                r84 = ((r87 >> 2) + r85 << 2) + r81 | 0;
                HEAP32[r19] = r84;
                HEAP32[r31] = r86;
                r88 = r84;
                break;
              }
              r84 = r79 - r83 >> 1;
              r86 = (r84 | 0) == 0 ? 1 : r84;
              __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r12, r86, r86 >>> 2, HEAP32[r33 >> 2]);
              __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r12, r81, r79);
              HEAP32[r32 >> 2] = HEAP32[r34 >> 2];
              HEAP32[r34 >> 2] = r83;
              HEAP32[r31] = HEAP32[r35 >> 2];
              HEAP32[r35 >> 2] = r81;
              r81 = HEAP32[r36 >> 2];
              HEAP32[r19] = r81;
              HEAP32[r36 >> 2] = r79;
              HEAP32[r30 >> 2] = HEAP32[r37 >> 2];
              HEAP32[r37 >> 2] = r79;
              __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r12);
              r88 = r81;
            } else {
              r88 = r79;
            }
          } while (0);
          if ((r88 | 0) == 0) {
            r89 = 0;
          } else {
            HEAP32[r88 >> 2] = r77;
            r89 = r88;
          }
          HEAP32[r19] = r89 + 4 | 0;
          __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r14, r13);
          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r13);
        }
        r79 = HEAP32[r25 >> 2];
        L2392 : do {
          if ((r79 | 0) != (r27 | 0)) {
            r81 = r78 + 16 | 0;
            r83 = r79;
            while (1) {
              do {
                if ((r75 | 0) != (r83 | 0)) {
                  r86 = HEAP32[r83 + 8 >> 2];
                  r84 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(r86, r1);
                  r85 = r84 + 16 | 0;
                  if (__ZNK5Avoid5PointeqERKS0_(r85, r81)) {
                    if ((HEAP32[r84 + 12 >> 2] | 0) == 0) {
                      r84 = HEAP32[r18];
                      r87 = HEAP32[r20];
                      if (r84 >>> 0 < r87 >>> 0) {
                        if ((r84 | 0) == 0) {
                          r90 = 0;
                        } else {
                          HEAP32[r84 >> 2] = r86;
                          r90 = HEAP32[r18];
                        }
                        HEAP32[r18] = r90 + 4 | 0;
                        break;
                      }
                      r91 = HEAP32[r17];
                      r92 = r84 - r91 + 4 >> 2 | 0;
                      if (r92 >>> 0 > 1073741823) {
                        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                        r93 = HEAP32[r20];
                        r94 = HEAP32[r17];
                      } else {
                        r93 = r87;
                        r94 = r91;
                      }
                      r91 = r94;
                      r87 = r93 - r91 | 0;
                      if (r87 >> 2 >>> 0 > 536870910) {
                        r95 = 1073741823;
                      } else {
                        r84 = r87 >> 1;
                        r95 = r84 >>> 0 < r92 >>> 0 ? r92 : r84;
                      }
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r9, r95, HEAP32[r18] - r91 >> 2, r29);
                      r91 = HEAP32[r38];
                      do {
                        if ((r91 | 0) == (HEAP32[r39 >> 2] | 0)) {
                          r84 = HEAP32[r40];
                          r92 = HEAP32[r41 >> 2];
                          if (r84 >>> 0 > r92 >>> 0) {
                            r87 = r84;
                            r96 = (r87 - r92 + 4 >> 2 | 0) / -2 & -1;
                            r97 = (r96 << 2) + r84 | 0;
                            r98 = r91 - r87 | 0;
                            _memmove(r97, r84, r98, 4, 0);
                            r87 = ((r98 >> 2) + r96 << 2) + r84 | 0;
                            HEAP32[r38] = r87;
                            HEAP32[r40] = r97;
                            r99 = r87;
                            break;
                          }
                          r87 = r91 - r92 >> 1;
                          r97 = (r87 | 0) == 0 ? 1 : r87;
                          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r8, r97, r97 >>> 2, HEAP32[r42 >> 2]);
                          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r8, r84, r91);
                          HEAP32[r41 >> 2] = HEAP32[r43 >> 2];
                          HEAP32[r43 >> 2] = r92;
                          HEAP32[r40] = HEAP32[r44 >> 2];
                          HEAP32[r44 >> 2] = r84;
                          r84 = HEAP32[r45 >> 2];
                          HEAP32[r38] = r84;
                          HEAP32[r45 >> 2] = r91;
                          HEAP32[r39 >> 2] = HEAP32[r46 >> 2];
                          HEAP32[r46 >> 2] = r91;
                          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r8);
                          r99 = r84;
                        } else {
                          r99 = r91;
                        }
                      } while (0);
                      if ((r99 | 0) == 0) {
                        r100 = 0;
                      } else {
                        HEAP32[r99 >> 2] = r86;
                        r100 = r99;
                      }
                      HEAP32[r38] = r100 + 4 | 0;
                      __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r14, r9);
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r9);
                      break;
                    } else {
                      r91 = HEAP32[r22];
                      r84 = HEAP32[r24];
                      if (r91 >>> 0 < r84 >>> 0) {
                        if ((r91 | 0) == 0) {
                          r101 = 0;
                        } else {
                          HEAP32[r91 >> 2] = r86;
                          r101 = HEAP32[r22];
                        }
                        HEAP32[r22] = r101 + 4 | 0;
                        break;
                      }
                      r92 = HEAP32[r21];
                      r97 = r91 - r92 + 4 >> 2 | 0;
                      if (r97 >>> 0 > 1073741823) {
                        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                        r102 = HEAP32[r24];
                        r103 = HEAP32[r21];
                      } else {
                        r102 = r84;
                        r103 = r92;
                      }
                      r92 = r103;
                      r84 = r102 - r92 | 0;
                      if (r84 >> 2 >>> 0 > 536870910) {
                        r104 = 1073741823;
                      } else {
                        r91 = r84 >> 1;
                        r104 = r91 >>> 0 < r97 >>> 0 ? r97 : r91;
                      }
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r11, r104, HEAP32[r22] - r92 >> 2, r47);
                      r92 = HEAP32[r23];
                      do {
                        if ((r92 | 0) == (HEAP32[r48 >> 2] | 0)) {
                          r91 = HEAP32[r49];
                          r97 = HEAP32[r50 >> 2];
                          if (r91 >>> 0 > r97 >>> 0) {
                            r84 = r91;
                            r87 = (r84 - r97 + 4 >> 2 | 0) / -2 & -1;
                            r96 = (r87 << 2) + r91 | 0;
                            r98 = r92 - r84 | 0;
                            _memmove(r96, r91, r98, 4, 0);
                            r84 = ((r98 >> 2) + r87 << 2) + r91 | 0;
                            HEAP32[r23] = r84;
                            HEAP32[r49] = r96;
                            r105 = r84;
                            break;
                          }
                          r84 = r92 - r97 >> 1;
                          r96 = (r84 | 0) == 0 ? 1 : r84;
                          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r10, r96, r96 >>> 2, HEAP32[r51 >> 2]);
                          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r10, r91, r92);
                          HEAP32[r50 >> 2] = HEAP32[r52 >> 2];
                          HEAP32[r52 >> 2] = r97;
                          HEAP32[r49] = HEAP32[r53 >> 2];
                          HEAP32[r53 >> 2] = r91;
                          r91 = HEAP32[r54 >> 2];
                          HEAP32[r23] = r91;
                          HEAP32[r54 >> 2] = r92;
                          HEAP32[r48 >> 2] = HEAP32[r55 >> 2];
                          HEAP32[r55 >> 2] = r92;
                          __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r10);
                          r105 = r91;
                        } else {
                          r105 = r92;
                        }
                      } while (0);
                      if ((r105 | 0) == 0) {
                        r106 = 0;
                      } else {
                        HEAP32[r105 >> 2] = r86;
                        r106 = r105;
                      }
                      HEAP32[r23] = r106 + 4 | 0;
                      __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r15, r11);
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r11);
                      break;
                    }
                  }
                  if (!__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r56, r85, r81, 0)) {
                    r92 = HEAP32[r22];
                    r91 = HEAP32[r24];
                    if (r92 >>> 0 < r91 >>> 0) {
                      if ((r92 | 0) == 0) {
                        r107 = 0;
                      } else {
                        HEAP32[r92 >> 2] = r86;
                        r107 = HEAP32[r22];
                      }
                      HEAP32[r22] = r107 + 4 | 0;
                      break;
                    }
                    r97 = HEAP32[r21];
                    r96 = r92 - r97 + 4 >> 2 | 0;
                    if (r96 >>> 0 > 1073741823) {
                      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                      r108 = HEAP32[r24];
                      r109 = HEAP32[r21];
                    } else {
                      r108 = r91;
                      r109 = r97;
                    }
                    r97 = r109;
                    r91 = r108 - r97 | 0;
                    if (r91 >> 2 >>> 0 > 536870910) {
                      r110 = 1073741823;
                    } else {
                      r92 = r91 >> 1;
                      r110 = r92 >>> 0 < r96 >>> 0 ? r96 : r92;
                    }
                    __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r5, r110, HEAP32[r22] - r97 >> 2, r47);
                    r97 = HEAP32[r66];
                    do {
                      if ((r97 | 0) == (HEAP32[r67 >> 2] | 0)) {
                        r92 = HEAP32[r68];
                        r96 = HEAP32[r69 >> 2];
                        if (r92 >>> 0 > r96 >>> 0) {
                          r91 = r92;
                          r84 = (r91 - r96 + 4 >> 2 | 0) / -2 & -1;
                          r87 = (r84 << 2) + r92 | 0;
                          r98 = r97 - r91 | 0;
                          _memmove(r87, r92, r98, 4, 0);
                          r91 = ((r98 >> 2) + r84 << 2) + r92 | 0;
                          HEAP32[r66] = r91;
                          HEAP32[r68] = r87;
                          r111 = r91;
                          break;
                        }
                        r91 = r97 - r96 >> 1;
                        r87 = (r91 | 0) == 0 ? 1 : r91;
                        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r4, r87, r87 >>> 2, HEAP32[r70 >> 2]);
                        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, r92, r97);
                        HEAP32[r69 >> 2] = HEAP32[r71 >> 2];
                        HEAP32[r71 >> 2] = r96;
                        HEAP32[r68] = HEAP32[r72 >> 2];
                        HEAP32[r72 >> 2] = r92;
                        r92 = HEAP32[r73 >> 2];
                        HEAP32[r66] = r92;
                        HEAP32[r73 >> 2] = r97;
                        HEAP32[r67 >> 2] = HEAP32[r74 >> 2];
                        HEAP32[r74 >> 2] = r97;
                        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r4);
                        r111 = r92;
                      } else {
                        r111 = r97;
                      }
                    } while (0);
                    if ((r111 | 0) == 0) {
                      r112 = 0;
                    } else {
                      HEAP32[r111 >> 2] = r86;
                      r112 = r111;
                    }
                    HEAP32[r66] = r112 + 4 | 0;
                    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r15, r5);
                    __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r5);
                    break;
                  }
                  __ZN5Avoid17HyperEdgeTreeEdge20splitFromNodeAtPointEPNS_17HyperEdgeTreeNodeERKNS_5PointE(r86, r1, r81);
                  r97 = HEAP32[r18];
                  r85 = HEAP32[r20];
                  if (r97 >>> 0 < r85 >>> 0) {
                    if ((r97 | 0) == 0) {
                      r113 = 0;
                    } else {
                      HEAP32[r97 >> 2] = r86;
                      r113 = HEAP32[r18];
                    }
                    HEAP32[r18] = r113 + 4 | 0;
                    break;
                  }
                  r92 = HEAP32[r17];
                  r96 = r97 - r92 + 4 >> 2 | 0;
                  if (r96 >>> 0 > 1073741823) {
                    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                    r114 = HEAP32[r20];
                    r115 = HEAP32[r17];
                  } else {
                    r114 = r85;
                    r115 = r92;
                  }
                  r92 = r115;
                  r85 = r114 - r92 | 0;
                  if (r85 >> 2 >>> 0 > 536870910) {
                    r116 = 1073741823;
                  } else {
                    r97 = r85 >> 1;
                    r116 = r97 >>> 0 < r96 >>> 0 ? r96 : r97;
                  }
                  __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r7, r116, HEAP32[r18] - r92 >> 2, r29);
                  r92 = HEAP32[r57];
                  do {
                    if ((r92 | 0) == (HEAP32[r58 >> 2] | 0)) {
                      r97 = HEAP32[r59];
                      r96 = HEAP32[r60 >> 2];
                      if (r97 >>> 0 > r96 >>> 0) {
                        r85 = r97;
                        r87 = (r85 - r96 + 4 >> 2 | 0) / -2 & -1;
                        r91 = (r87 << 2) + r97 | 0;
                        r84 = r92 - r85 | 0;
                        _memmove(r91, r97, r84, 4, 0);
                        r85 = ((r84 >> 2) + r87 << 2) + r97 | 0;
                        HEAP32[r57] = r85;
                        HEAP32[r59] = r91;
                        r117 = r85;
                        break;
                      }
                      r85 = r92 - r96 >> 1;
                      r91 = (r85 | 0) == 0 ? 1 : r85;
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r6, r91, r91 >>> 2, HEAP32[r61 >> 2]);
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r6, r97, r92);
                      HEAP32[r60 >> 2] = HEAP32[r62 >> 2];
                      HEAP32[r62 >> 2] = r96;
                      HEAP32[r59] = HEAP32[r63 >> 2];
                      HEAP32[r63 >> 2] = r97;
                      r97 = HEAP32[r64 >> 2];
                      HEAP32[r57] = r97;
                      HEAP32[r64 >> 2] = r92;
                      HEAP32[r58 >> 2] = HEAP32[r65 >> 2];
                      HEAP32[r65 >> 2] = r92;
                      __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r6);
                      r117 = r97;
                    } else {
                      r117 = r92;
                    }
                  } while (0);
                  if ((r117 | 0) == 0) {
                    r118 = 0;
                  } else {
                    HEAP32[r117 >> 2] = r86;
                    r118 = r117;
                  }
                  HEAP32[r57] = r118 + 4 | 0;
                  __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r14, r7);
                  __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r7);
                }
              } while (0);
              r92 = HEAP32[r83 + 4 >> 2];
              if ((r92 | 0) == (r27 | 0)) {
                break L2392;
              } else {
                r83 = r92;
              }
            }
          }
        } while (0);
        r119 = HEAP32[r17];
        if (HEAP32[r18] - r119 >> 2 >>> 0 <= 1) {
          r120 = r119;
          break;
        }
        if (HEAP32[r22] - HEAP32[r21] >> 2 >>> 0 < 2) {
          break L2366;
        } else {
          r120 = r119;
        }
      } else {
        r120 = r26;
      }
    } while (0);
    r78 = HEAP32[r75 + 4 >> 2];
    if ((r78 | 0) == (r27 | 0)) {
      r28 = 0;
      r2 = 2096;
      break;
    }
    r75 = r78;
    r26 = r120;
    r76 = HEAP32[r21];
  }
  if (r2 == 2096) {
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r15);
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r14);
    STACKTOP = r3;
    return r28;
  }
  r2 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(HEAP32[r119 >> 2], r1);
  r76 = 1;
  r120 = r119;
  while (1) {
    r119 = HEAP32[r120 + (r76 << 2) >> 2];
    r26 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(r119, r1);
    __ZN5Avoid17HyperEdgeTreeEdge14disconnectEdgeEv(r119);
    __ZN5Avoid17HyperEdgeTreeNode15spliceEdgesFromEPS0_(r2, r26);
    if ((r26 | 0) != 0) {
      __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r26);
      __ZdlPv(r26);
    }
    r26 = HEAP32[r17];
    r119 = HEAP32[r26 + (r76 << 2) >> 2];
    if ((r119 | 0) == 0) {
      r121 = r26;
    } else {
      __ZdlPv(r119);
      r121 = HEAP32[r17];
    }
    r119 = r76 + 1 | 0;
    if (r119 >>> 0 < HEAP32[r18] - r121 >> 2 >>> 0) {
      r76 = r119;
      r120 = r121;
    } else {
      break;
    }
  }
  HEAP32[r2 + 12 >> 2] = HEAP32[r16];
  HEAP32[r16] = 0;
  r16 = HEAP32[r21];
  if ((r16 | 0) != (HEAP32[r22] | 0)) {
    HEAP32[HEAP32[HEAP32[r17] >> 2] + 8 >> 2] = HEAP32[HEAP32[r16 >> 2] + 8 >> 2];
    r28 = r2;
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r15);
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r14);
    STACKTOP = r3;
    return r28;
  }
  __ZN5Avoid17HyperEdgeTreeEdge14disconnectEdgeEv(HEAP32[HEAP32[r17] >> 2]);
  r16 = HEAP32[HEAP32[r17] >> 2];
  if ((r16 | 0) != 0) {
    __ZdlPv(r16);
  }
  if ((r1 | 0) == 0) {
    r28 = r2;
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r15);
    __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r14);
    STACKTOP = r3;
    return r28;
  }
  __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r1);
  __ZdlPv(r1);
  r28 = r2;
  __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r15);
  __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r14);
  STACKTOP = r3;
  return r28;
}
__ZN5Avoid17HyperEdgeTreeNode27moveJunctionAlongCommonEdgeEPS0_["X"] = 1;
function __ZNK5Avoid27MinimumTerminalSpanningTree12rootJunctionEv(r1) {
  return r1;
}
function __ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_(r1, r2) {
  return r1 > r2;
}
function __ZN5Avoid13CmpNodesInDimC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L2546 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L2546;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L2546;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdge20splitFromNodeAtPointEPNS_17HyperEdgeTreeNodeERKNS_5PointE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = (r1 + 4 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = r1 | 0;
  r9 = HEAP32[r8 >> 2];
  do {
    if ((r7 | 0) == (r2 | 0)) {
      HEAP32[r6] = r9;
      HEAP32[r8 >> 2] = r2;
      r10 = r9;
    } else {
      if ((r9 | 0) == (r2 | 0)) {
        r10 = r7;
        break;
      }
      ___assert_func(5248688, 619, 5261016, 5243676);
      r10 = HEAP32[r6];
    }
  } while (0);
  r7 = __Znwj(48);
  r2 = r7;
  __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r2);
  r9 = r7 + 16 | 0;
  r8 = r3;
  HEAP32[r9 >> 2] = HEAP32[r8 >> 2];
  HEAP32[r9 + 4 >> 2] = HEAP32[r8 + 4 >> 2];
  HEAP32[r9 + 8 >> 2] = HEAP32[r8 + 8 >> 2];
  HEAP32[r9 + 12 >> 2] = HEAP32[r8 + 12 >> 2];
  HEAP32[r9 + 16 >> 2] = HEAP32[r8 + 16 >> 2];
  HEAP16[r9 + 20 >> 1] = HEAP16[r8 + 20 >> 1];
  __ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(__Znwj(12), r2, r10, HEAP32[r1 + 8 >> 2]);
  __ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE(r10, r1);
  HEAP32[r6] = r2;
  HEAP32[r5 >> 2] = r1;
  __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_(r7, r5);
  STACKTOP = r4;
  return;
}
function __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(r1, r2, r3, r4) {
  __ZN5Avoid17HyperEdgeTreeEdgeC2EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid17HyperEdgeTreeEdgeC2EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r6 >> 2] = r1;
  __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_(r2 | 0, r6);
  HEAP32[r7 >> 2] = r1;
  __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_(r3 | 0, r7);
  STACKTOP = r5;
  return;
}
function __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZNK5Avoid17HyperEdgeTreeEdge14hasOrientationEj(r1, r2) {
  var r3, r4;
  r3 = __ZN5Avoid5PointixEj(HEAP32[r1 >> 2] + 16 | 0, r2);
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = __ZN5Avoid5PointixEj(HEAP32[r1 + 4 >> 2] + 16 | 0, r2);
  return r4 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
}
function __ZN5Avoid13CmpNodesInDimC1Ej(r1, r2) {
  __ZN5Avoid13CmpNodesInDimC2Ej(r1, r2);
  return;
}
function __ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = r2 + 16 | 0;
  r5 = (r1 | 0) >> 2;
  r1 = __ZNK5Avoid5PointixEj(r4, HEAP32[r5]);
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r1 = r3 + 16 | 0;
  r7 = __ZNK5Avoid5PointixEj(r1, HEAP32[r5]);
  if (r6 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    r7 = __ZNK5Avoid5PointixEj(r4, HEAP32[r5]);
    r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r7 = __ZNK5Avoid5PointixEj(r1, HEAP32[r5]);
    r5 = r4 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    return r5;
  } else {
    r5 = r2 >>> 0 < r3 >>> 0;
    return r5;
  }
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L2605 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L2605;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r7 = r6;
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_(r5, r2, r3, HEAP32[r6 >> 2], r7);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r7 | 0)) {
      if (__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r2 + 12 | 0, HEAP32[r3 >> 2], HEAP32[r6 + 16 >> 2])) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r7;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12;
  L2656 : do {
    if ((r4 | 0) == 0) {
      r6 = r5;
    } else {
      r7 = r2 + 12 | 0;
      r8 = r4;
      r9 = r5;
      while (1) {
        r10 = r8, r11 = r10 >> 2;
        while (1) {
          if (!__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r7, HEAP32[r11 + 4], HEAP32[r3 >> 2])) {
            break;
          }
          r12 = HEAP32[r11 + 1];
          if ((r12 | 0) == 0) {
            r6 = r9;
            break L2656;
          } else {
            r10 = r12, r11 = r10 >> 2;
          }
        }
        r12 = HEAP32[r11];
        if ((r12 | 0) == 0) {
          r6 = r10;
          break L2656;
        } else {
          r8 = r12;
          r9 = r10;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r6;
  return;
}
function __ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r1, r2) {
  var r3;
  r3 = r1 + 60 | 0;
  r1 = r2 + 60 | 0;
  return __ZNK5Avoid7EdgeInf8mtstDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) > __ZNK5Avoid7EdgeInf8mtstDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
}
function __ZN5Avoid27MinimumTerminalSpanningTreeC1EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE(r1, r2, r3, r4) {
  __ZN5Avoid27MinimumTerminalSpanningTreeC2EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTreeC2EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = r1 >> 2;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r7 = r6;
  HEAP32[r5] = r2;
  HEAP8[r1 + 4 | 0] = 1;
  r2 = r1 + 8 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS8_(r2);
  r8 = HEAP32[r3 >> 2];
  r9 = r3 + 4 | 0;
  L2676 : do {
    if ((r8 | 0) != (r9 | 0)) {
      r3 = r1 + 12 | 0;
      r10 = r9;
      r11 = r8;
      while (1) {
        __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r7, r2, r3, r11 + 16 | 0);
        r12 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r11 | 0);
        if ((r12 | 0) == (r10 | 0)) {
          break L2676;
        } else {
          r11 = r12;
        }
      }
    }
  } while (0);
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1 + 20 | 0);
  HEAP32[r5 + 8] = r4;
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_(r1 + 36 | 0);
  HEAP32[r5 + 12] = 0;
  r4 = r1 + 52 | 0;
  HEAPF64[tempDoublePtr >> 3] = 2e3, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 60 | 0;
  r2 = r4;
  HEAP32[r4 >> 2] = r2;
  HEAP32[r5 + 16] = r2;
  HEAP32[r5 + 17] = 0;
  r2 = r1 + 72 | 0;
  r4 = r2;
  HEAP32[r2 >> 2] = r4;
  HEAP32[r5 + 19] = r4;
  HEAP32[r5 + 20] = 0;
  r4 = r1 + 84 | 0;
  r2 = r4;
  HEAP32[r4 >> 2] = r2;
  HEAP32[r5 + 22] = r2;
  HEAP32[r5 + 23] = 0;
  r2 = r1 + 96 | 0;
  r4 = r2;
  HEAP32[r2 >> 2] = r4;
  HEAP32[r5 + 25] = r4;
  HEAP32[r5 + 26] = 0;
  r4 = r1 + 108 | 0;
  r2 = r4;
  HEAP32[r4 >> 2] = r2;
  HEAP32[r5 + 28] = r2;
  HEAP32[r5 + 29] = 0;
  HEAP32[r5 + 30] = 0;
  HEAP32[r5 + 31] = 0;
  HEAP32[r5 + 35] = 0;
  HEAP32[r5 + 36] = 0;
  HEAP32[r5 + 37] = 0;
  HEAP32[r5 + 39] = 0;
  HEAP32[r5 + 40] = 0;
  HEAP32[r5 + 41] = 0;
  __ZN5Avoid6VertIDC1Ejtt(r1 + 172 | 0, 0, 42, 0);
  STACKTOP = r6;
  return;
}
__ZN5Avoid27MinimumTerminalSpanningTreeC2EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEED1Ev(r1) {
  __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED1Ev(r1) {
  __ZNSt3__14listINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1);
  return;
}
function __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev(r1) {
  __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED2Ev(r1);
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTreeD1Ev(r1) {
  __ZN5Avoid27MinimumTerminalSpanningTreeD2Ev(r1);
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTreeD2Ev(r1) {
  var r2, r3;
  r2 = (r1 + 48 | 0) >> 2;
  __ZN5Avoid17HyperEdgeTreeNode17deleteEdgesExceptEPNS_17HyperEdgeTreeEdgeE(HEAP32[r2], 0);
  r3 = HEAP32[r2];
  if ((r3 | 0) != 0) {
    __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r3);
    __ZdlPv(r3);
  }
  HEAP32[r2] = 0;
  __ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev(r1 + 156 | 0);
  __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1 + 140 | 0);
  __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEED1Ev(r1 + 108 | 0);
  __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1 + 96 | 0);
  __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1 + 84 | 0);
  __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev(r1 + 72 | 0);
  __ZNSt3__14listINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED1Ev(r1 + 60 | 0);
  __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev(r1 + 36 | 0);
  __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1 + 20 | 0);
  __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1 + 8 | 0);
  return;
}
__ZN5Avoid27MinimumTerminalSpanningTreeD2Ev["X"] = 1;
function __ZN5Avoid27MinimumTerminalSpanningTree7addNodeEPNS_7VertInfEPNS_17HyperEdgeTreeNodeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r4;
  r6 = r4 + 4, r7 = r6 >> 2;
  HEAP32[r7] = r2;
  r2 = r1 + 36 | 0;
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(r5, r2 | 0, r6);
  r8 = HEAP32[r5 >> 2];
  if ((r8 | 0) == (r1 + 40 | 0)) {
    r5 = __Znwj(48);
    r9 = r5;
    r10 = r5;
    __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r10);
    r11 = r5 + 16 | 0;
    r5 = HEAP32[r7] + 12 | 0;
    HEAP32[r11 >> 2] = HEAP32[r5 >> 2];
    HEAP32[r11 + 4 >> 2] = HEAP32[r5 + 4 >> 2];
    HEAP32[r11 + 8 >> 2] = HEAP32[r5 + 8 >> 2];
    HEAP32[r11 + 12 >> 2] = HEAP32[r5 + 12 >> 2];
    HEAP32[r11 + 16 >> 2] = HEAP32[r5 + 16 >> 2];
    HEAP16[r11 + 20 >> 1] = HEAP16[r5 + 20 >> 1];
    HEAP32[__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r2, r6) >> 2] = r9;
    __ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(__Znwj(12), r3, r10, 0);
    r12 = r9;
    STACKTOP = r4;
    return r12;
  }
  r9 = HEAP32[r8 + 20 >> 2];
  r8 = (r9 + 12 | 0) >> 2;
  if ((HEAP32[r8] | 0) == 0) {
    r10 = __Znwj(148);
    r6 = r1 | 0;
    __ZN5Avoid11JunctionRefC1EPNS_6RouterENS_5PointEj(r10, HEAP32[r6 >> 2], HEAP32[r7] + 12 | 0);
    r7 = r10;
    HEAP32[r8] = r7;
    r10 = r1 + 48 | 0;
    if ((HEAP32[r10 >> 2] | 0) == 0) {
      HEAP32[r10 >> 2] = r9;
      r13 = HEAP32[r8];
    } else {
      r13 = r7;
    }
    __ZN5Avoid6Router29removeObjectFromQueuedActionsEPKv(HEAP32[r6 >> 2], r13);
    __ZN5Avoid8Obstacle10makeActiveEv(HEAP32[r8]);
  }
  __ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(__Znwj(12), r3, r9, 0);
  r12 = 0;
  STACKTOP = r4;
  return r12;
}
__ZN5Avoid27MinimumTerminalSpanningTree7addNodeEPNS_7VertInfEPNS_17HyperEdgeTreeNodeE["X"] = 1;
function __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(r1, r4, r2);
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) != 0) {
    r8 = r7;
    r9 = r8 + 20 | 0;
    STACKTOP = r3;
    return r9;
  }
  __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__construct_nodeERSA_(r5, r1, r2);
  r2 = r5 | 0;
  r5 = HEAP32[r2 >> 2];
  HEAP32[r2 >> 2] = 0;
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(r1 | 0, HEAP32[r4 >> 2], r6, r5 | 0);
  r8 = r5;
  r9 = r8 + 20 | 0;
  STACKTOP = r3;
  return r9;
}
function __ZN5Avoid27MinimumTerminalSpanningTree24buildHyperEdgeTreeToRootEPNS_7VertInfEPNS_17HyperEdgeTreeNodeES2_b(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r5 = 0;
  r6 = STACKTOP;
  if ((r2 | 0) == 0) {
    ___assert_func(5244700, 188, 5259260, 5248668);
    STACKTOP = r6;
    return;
  }
  r7 = r1 + 4 | 0;
  r8 = r1 + 172 | 0;
  r9 = r1 + 120 | 0;
  r10 = r1 + 132 | 0;
  r11 = (r1 + 128 | 0) >> 2;
  r12 = r4;
  r4 = r3;
  r3 = r2;
  while (1) {
    r2 = __ZN5Avoid27MinimumTerminalSpanningTree7addNodeEPNS_7VertInfEPNS_17HyperEdgeTreeNodeE(r1, r3, r4);
    r13 = __ZNK5Avoid7VertInf12hasNeighbourEPS0_b(r12, r3, (HEAP8[r7] & 1) << 24 >> 24 != 0);
    r14 = r13;
    do {
      if ((r13 | 0) == 0) {
        if (!__ZNK5Avoid6VertIDeqERKS0_(r3 + 4 | 0, r8)) {
          r15 = r14;
          break;
        }
        r16 = HEAP32[r3 + 104 >> 2];
        if (__ZNK5Avoid6VertIDeqERKS0_(r12 + 4 | 0, r8)) {
          r17 = HEAP32[r12 + 104 >> 2];
        } else {
          r17 = r12;
        }
        r15 = __ZNK5Avoid7VertInf12hasNeighbourEPS0_b(r17, r16, (HEAP8[r7] & 1) << 24 >> 24 != 0);
      } else {
        r15 = r14;
      }
    } while (0);
    if ((r15 | 0) == 0) {
      ___assert_func(5244700, 210, 5259260, 5247456);
    }
    __ZN5Avoid7EdgeInf19setHyperedgeSegmentEb(r15, 1);
    r14 = HEAP32[r9 >> 2];
    if ((r14 | 0) != 0) {
      r13 = HEAP32[r11];
      r16 = r3 + 12 | 0;
      r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r16 = r3 + 20 | 0;
      r19 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r16 = r4 + 16 | 0;
      r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r16 = r4 + 24 | 0;
      r21 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      _fprintf(r14, 5246344, (tempInt = STACKTOP, STACKTOP = STACKTOP + 44 | 0, HEAP32[tempInt >> 2] = r10, HEAP32[tempInt + 4 >> 2] = r13, HEAPF64[tempDoublePtr >> 3] = r18, HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r19, HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r20, HEAP32[tempInt + 24 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 28 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r21, HEAP32[tempInt + 32 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 36 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAP32[tempInt + 40 >> 2] = 5245600, tempInt));
      HEAP32[r11] = HEAP32[r11] + 1 | 0;
    }
    if ((r2 | 0) == 0) {
      r5 = 2269;
      break;
    }
    r21 = r3 + 100 | 0;
    r20 = HEAP32[r21 >> 2];
    if ((r20 | 0) != 0) {
      r12 = r3;
      r4 = r2;
      r3 = r20;
      continue;
    }
    HEAP32[r2 + 44 >> 2] = r3;
    r20 = HEAP32[r21 >> 2];
    if ((r20 | 0) == 0) {
      r5 = 2267;
      break;
    } else {
      r12 = r3;
      r4 = r2;
      r3 = r20;
    }
  }
  if (r5 == 2267) {
    STACKTOP = r6;
    return;
  } else if (r5 == 2269) {
    STACKTOP = r6;
    return;
  }
}
__ZN5Avoid27MinimumTerminalSpanningTree24buildHyperEdgeTreeToRootEPNS_7VertInfEPNS_17HyperEdgeTreeNodeES2_b["X"] = 1;
function __ZN5Avoid27MinimumTerminalSpanningTree17resetDistsForPathEPNS_7VertInfEPS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r5 = r4;
  r6 = r4 + 8, r7 = r6 >> 2;
  HEAP32[r7] = r2;
  L2737 : do {
    if ((r2 | 0) == 0) {
      ___assert_func(5244700, 246, 5259556, 5248668);
    } else {
      r8 = r3;
      r9 = r1 + 8 | 0;
      r10 = r6;
      r11 = r2;
      while (1) {
        r12 = (r11 + 112 | 0) >> 2;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]) == 0) {
          break;
        }
        HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r12] = HEAP32[tempDoublePtr >> 2], HEAP32[r12 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        __ZN5Avoid7VertInf18setTreeRootPointerEPPS0_(r11, r8);
        __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r5, r9, r10);
        r12 = HEAP32[HEAP32[r7] + 100 >> 2];
        HEAP32[r7] = r12;
        if ((r12 | 0) == 0) {
          break L2737;
        } else {
          r11 = r12;
        }
      }
      __ZN5Avoid27MinimumTerminalSpanningTree22rewriteRestOfHyperedgeEPNS_7VertInfEPS2_(r1, r11, r3);
      STACKTOP = r4;
      return;
    }
  } while (0);
  ___assert_func(5244700, 269, 5259556, 5245776);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTree22rewriteRestOfHyperedgeEPNS_7VertInfEPS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r5 = r4;
  __ZN5Avoid7VertInf18setTreeRootPointerEPPS0_(r2, r3);
  __ZN5Avoid27MinimumTerminalSpanningTree28getOrthogonalEdgesFromVertexEPNS_7VertInfES2_(r5, r1, r2, 0);
  r2 = HEAP32[r5 + 4 >> 2];
  r6 = r5;
  if ((r2 | 0) == (r6 | 0)) {
    __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev(r5);
    STACKTOP = r4;
    return;
  } else {
    r7 = r2;
  }
  while (1) {
    r2 = HEAP32[r7 + 12 >> 2];
    do {
      if ((__ZNK5Avoid7VertInf15treeRootPointerEv(HEAP32[r2 + 108 >> 2]) | 0) != (r3 | 0)) {
        r8 = r2 + 112 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != 0) {
          break;
        }
        __ZN5Avoid27MinimumTerminalSpanningTree22rewriteRestOfHyperedgeEPNS_7VertInfEPS2_(r1, r2, r3);
      }
    } while (0);
    r2 = HEAP32[r7 + 4 >> 2];
    if ((r2 | 0) == (r6 | 0)) {
      break;
    } else {
      r7 = r2;
    }
  }
  __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev(r5);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd(r1, r2, r3) {
  var r4, r5, r6, r7;
  if (r3 == 0) {
    r4 = r1 + 52 | 0;
    r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  } else {
    r5 = r3;
  }
  r3 = r2 + 104 | 0, r4 = r3 >> 2;
  r6 = HEAP32[r4];
  if ((r6 | 0) != 0) {
    r7 = r6;
    return r7;
  }
  r6 = __Znwj(140);
  __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r6, HEAP32[r1 >> 2], r1 + 172 | 0, r2 + 12 | 0, 0);
  HEAP32[r4] = r6;
  HEAP32[r6 + 104 >> 2] = r2;
  __ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEE9push_backERKS3_(r1 + 84 | 0, r3);
  r3 = __Znwj(68);
  __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r3, HEAP32[r4], r2, (HEAP8[r1 + 4 | 0] & 1) << 24 >> 24 != 0);
  __ZN5Avoid7EdgeInf7setDistEd(r3, r5);
  r7 = HEAP32[r4];
  return r7;
}
__ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd["X"] = 1;
function __ZN5Avoid27MinimumTerminalSpanningTree23popInvalidBridgingEdgesEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  r5 = (r1 + 156 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 + 160 | 0) >> 2;
  if ((r6 | 0) == (HEAP32[r7] | 0)) {
    STACKTOP = r3;
    return;
  }
  r8 = r4 | 0;
  r9 = r4 + 4 | 0;
  r10 = r6;
  while (1) {
    r6 = HEAP32[r10 >> 2];
    __ZN5Avoid27MinimumTerminalSpanningTree28realVerticesCountingPartnersEPNS_7EdgeInfE(r4, r1, HEAP32[r6 + 24 >> 2], HEAP32[r6 + 28 >> 2]);
    r6 = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[HEAP32[r8 >> 2] + 108 >> 2]);
    r11 = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[HEAP32[r9 >> 2] + 108 >> 2]);
    if (!((r6 | 0) == (r11 | 0) | (r6 | 0) == 0 | (r11 | 0) == 0)) {
      r2 = 29;
      break;
    }
    r11 = HEAP32[r5];
    r6 = HEAP32[r7];
    r12 = r6 - r11 | 0;
    if ((r12 | 0) > 4) {
      r13 = r6 - 4 | 0;
      r14 = HEAP32[r11 >> 2];
      HEAP32[r11 >> 2] = HEAP32[r13 >> 2];
      HEAP32[r13 >> 2] = r14;
      __ZNSt3__117__push_heap_frontIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r11, (r12 >> 2) - 1 | 0);
      r15 = HEAP32[r7];
      r16 = HEAP32[r5];
    } else {
      r15 = r6;
      r16 = r11;
    }
    r11 = r15 - 4 | 0;
    HEAP32[r7] = r11;
    if ((r16 | 0) == (r11 | 0)) {
      r2 = 31;
      break;
    } else {
      r10 = r16;
    }
  }
  if (r2 == 29) {
    STACKTOP = r3;
    return;
  } else if (r2 == 31) {
    STACKTOP = r3;
    return;
  }
}
__ZN5Avoid27MinimumTerminalSpanningTree23popInvalidBridgingEdgesEv["X"] = 1;
function __ZN5Avoid27MinimumTerminalSpanningTree28realVerticesCountingPartnersEPNS_7EdgeInfE(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = r1 | 0;
  HEAP32[r5 >> 2] = r3;
  r6 = r1 + 4 | 0;
  HEAP32[r6 >> 2] = r4;
  r1 = r2 + 172 | 0;
  if (!__ZNK5Avoid6VertIDneERKS0_(r3 + 4 | 0, r1)) {
    return;
  }
  if (!__ZNK5Avoid6VertIDneERKS0_(r4 + 4 | 0, r1)) {
    return;
  }
  r1 = r3 + 12 | 0;
  r2 = r4 + 12 | 0;
  if (!__ZNK5Avoid5PointneERKS0_(r1, r2)) {
    return;
  }
  r7 = r1 | 0;
  r1 = r2 | 0;
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    return;
  }
  r1 = HEAP32[r3 + 104 >> 2];
  if ((r1 | 0) != 0) {
    HEAP32[r5 >> 2] = r1;
  }
  r1 = HEAP32[r4 + 104 >> 2];
  if ((r1 | 0) == 0) {
    return;
  }
  HEAP32[r6 >> 2] = r1;
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTree28getOrthogonalEdgesFromVertexEPNS_7VertInfES2_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 32 | 0;
  r6 = r5;
  r7 = r5 + 8;
  r8 = r5 + 16;
  r9 = r5 + 24;
  r10 = r1;
  HEAP32[r1 >> 2] = r10;
  HEAP32[r1 + 4 >> 2] = r10;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r3 | 0) == 0) {
    ___assert_func(5244700, 580, 5259132, 5250496);
  }
  __ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd(r2, r3, (r4 | 0) == 0 ? .1 : 0);
  r10 = r2 + 172 | 0;
  r11 = __ZNK5Avoid6VertIDneERKS0_(r3 + 4 | 0, r10);
  if (r11) {
    r12 = r3;
  } else {
    r12 = __ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd(r2, r3, 0);
  }
  if (!__ZNK5Avoid6VertIDneERKS0_(r12 + 4 | 0, r10)) {
    ___assert_func(5244700, 587, 5259132, 5250384);
  }
  r10 = (HEAP8[r2 + 4 | 0] & 1) << 24 >> 24 != 0 ? r12 + 68 | 0 : r12 + 52 | 0;
  r3 = r10;
  r13 = HEAP32[r10 + 4 >> 2];
  if ((r13 | 0) == (r3 | 0)) {
    STACKTOP = r5;
    return;
  }
  r10 = r12;
  r14 = r6 | 0;
  r15 = r6 + 4 | 0;
  r16 = r12 + 20 | 0;
  r17 = r11 ^ 1;
  r18 = r7 | 0;
  r19 = r7 + 4 | 0;
  r20 = r12 + 12 | 0;
  r21 = r8 | 0;
  r22 = r8 + 4 | 0;
  r23 = r9 | 0;
  r24 = r9 + 4 | 0;
  r25 = r13;
  while (1) {
    r13 = (r25 + 8 | 0) >> 2;
    r26 = __ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE(HEAP32[r13], r10);
    r27 = r26;
    do {
      if ((r27 | 0) == (__ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd(r2, r12, 0) | 0)) {
        if (r11) {
          r28 = r27;
        } else {
          r28 = __ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd(r2, r27, 0);
        }
        if ((r28 | 0) == (r4 | 0)) {
          break;
        }
        HEAP32[r14 >> 2] = HEAP32[r13];
        HEAP32[r15 >> 2] = r28;
        __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE9push_backERKS7_(r1, r6);
      } else {
        if (r11) {
          r29 = r27;
        } else {
          r29 = __ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd(r2, r27, 0);
        }
        if ((r29 | 0) == 0) {
          ___assert_func(5244700, 605, 5259132, 5250268);
        }
        r30 = r26 + 20 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r30 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r30 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          if ((r29 | 0) == (r4 | 0) | r17) {
            break;
          }
          HEAP32[r18 >> 2] = HEAP32[r13];
          HEAP32[r19 >> 2] = r29;
          __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE9push_backERKS7_(r1, r7);
          break;
        }
        r30 = r26 + 12 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r30 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r30 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          _puts(5242880);
          HEAP32[r23 >> 2] = HEAP32[r13];
          HEAP32[r24 >> 2] = r27;
          __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE9push_backERKS7_(r1, r9);
          break;
        }
        if (r11 | (r29 | 0) == (r4 | 0)) {
          break;
        }
        HEAP32[r21 >> 2] = HEAP32[r13];
        HEAP32[r22 >> 2] = r29;
        __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE9push_backERKS7_(r1, r8);
      }
    } while (0);
    r13 = HEAP32[r25 + 4 >> 2];
    if ((r13 | 0) == (r3 | 0)) {
      break;
    } else {
      r25 = r13;
    }
  }
  STACKTOP = r5;
  return;
}
__ZN5Avoid27MinimumTerminalSpanningTree28getOrthogonalEdgesFromVertexEPNS_7VertInfES2_["X"] = 1;
function __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE9push_backERKS7_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = __Znwj(16), r4 = r3 >> 2;
  r5 = r3;
  r6 = r3 + 8 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
    HEAP32[r4 + 3] = HEAP32[r2 + 4 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r5;
  HEAP32[r4] = HEAP32[r2];
  HEAP32[r2] = r5;
  HEAP32[r4 + 1] = r1;
  r4 = r1 + 8 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev(r1) {
  __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED2Ev(r1);
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTree20constructInterleavedEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 164 | 0;
  r3 = r2;
  r4 = r2 + 20;
  r5 = r2 + 40;
  r6 = r2 + 44;
  r7 = r2 + 48;
  r8 = r2 + 68;
  r9 = r2 + 88;
  r10 = r2 + 108;
  r11 = r2 + 128;
  r12 = r2 + 132;
  r13 = r2 + 136;
  r14 = r2 + 144;
  r15 = r2 + 148;
  r16 = r2 + 152;
  r17 = (r1 + 128 | 0) >> 2;
  HEAP32[r17] = 1;
  r18 = (r1 | 0) >> 2;
  __ZN5Avoid5Timer8RegisterENS_10TimerIndexEb(HEAP32[r18] + 148 | 0, 13);
  r19 = r1 + 132 | 0;
  tempBigInt = 7630441;
  HEAP8[r19] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r19 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r19 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r19 + 3 | 0] = tempBigInt & 255;
  r19 = r1 + 20 | 0;
  r20 = r1 + 8 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEaSERKS8_(r19, r20);
  r21 = __ZN5Avoid11VertInfList10connsBeginEv(HEAP32[r18] + 100 | 0);
  L100 : do {
    if ((r21 | 0) != 0) {
      r22 = r21, r23 = r22 >> 2;
      while (1) {
        r24 = r22 + 112 | 0;
        HEAPF64[tempDoublePtr >> 3] = 1.7976931348623157e+308, HEAP32[r24 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r24 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        HEAP32[r23 + 25] = 0;
        __ZN5Avoid7VertInf18setTreeRootPointerEPPS0_(r22, 0);
        HEAP32[r23 + 26] = 0;
        r24 = HEAP32[r23 + 10];
        if ((r24 | 0) == 0) {
          break L100;
        } else {
          r22 = r24, r23 = r22 >> 2;
        }
      }
    }
  } while (0);
  r21 = r1 + 108 | 0;
  r22 = r21 | 0;
  if ((HEAP32[r1 + 116 >> 2] | 0) != 0) {
    ___assert_func(5244700, 654, 5259396, 5249856);
  }
  r23 = HEAP32[r20 >> 2];
  r20 = r1 + 12 | 0;
  L108 : do {
    if ((r23 | 0) != (r20 | 0)) {
      r24 = r1 + 140 | 0;
      r25 = (r1 + 144 | 0) >> 2;
      r26 = r1 + 148 | 0;
      r27 = r26 | 0;
      r28 = r24 | 0;
      r29 = r24;
      r24 = r10;
      r30 = r26;
      r26 = (r10 + 8 | 0) >> 2;
      r31 = r10 + 12 | 0;
      r32 = (r10 + 4 | 0) >> 2;
      r33 = r10 | 0;
      r34 = r10 + 16 | 0;
      r35 = r9;
      r36 = r9 | 0;
      r37 = r9 + 4 | 0;
      r38 = r9 + 8 | 0;
      r39 = r9 + 12 | 0;
      r40 = r20;
      r41 = r23;
      while (1) {
        r42 = HEAP32[r41 + 16 >> 2];
        r43 = r42 + 112 | 0;
        HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r43 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r43 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        r43 = r42;
        HEAP32[r11 >> 2] = __ZN5Avoid7VertInf19makeTreeRootPointerEPS0_(r43, r43);
        __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEE9push_backERKS4_(r21, r11);
        r43 = HEAP32[r25];
        r44 = HEAP32[r27 >> 2];
        if (r43 >>> 0 < r44 >>> 0) {
          if ((r43 | 0) == 0) {
            r45 = 0;
          } else {
            HEAP32[r43 >> 2] = r42;
            r45 = HEAP32[r25];
          }
          HEAP32[r25] = r45 + 4 | 0;
        } else {
          r46 = HEAP32[r28 >> 2];
          r47 = r43 - r46 >> 2;
          r43 = r47 + 1 | 0;
          if (r43 >>> 0 > 1073741823) {
            break;
          }
          r48 = r44 - r46 | 0;
          if (r48 >> 2 >>> 0 < 536870911) {
            r46 = r48 >> 1;
            r49 = r46 >>> 0 < r43 >>> 0 ? r43 : r46;
          } else {
            r49 = 1073741823;
          }
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r24, r49, r47, r30);
          r47 = HEAP32[r26];
          do {
            if ((r47 | 0) == (HEAP32[r31 >> 2] | 0)) {
              r46 = HEAP32[r32];
              r43 = HEAP32[r33 >> 2];
              if (r46 >>> 0 > r43 >>> 0) {
                r48 = r46;
                r44 = (r48 - r43 + 4 >> 2 | 0) / -2 & -1;
                r50 = (r44 << 2) + r46 | 0;
                r51 = r47 - r48 | 0;
                _memmove(r50, r46, r51, 4, 0);
                r48 = ((r51 >> 2) + r44 << 2) + r46 | 0;
                HEAP32[r26] = r48;
                HEAP32[r32] = r50;
                r52 = r48;
                break;
              }
              r48 = r47 - r43 >> 1;
              r50 = (r48 | 0) == 0 ? 1 : r48;
              __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r35, r50, r50 >>> 2, HEAP32[r34 >> 2]);
              __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r35, r46, r47);
              HEAP32[r33 >> 2] = HEAP32[r36 >> 2];
              HEAP32[r36 >> 2] = r43;
              HEAP32[r32] = HEAP32[r37 >> 2];
              HEAP32[r37 >> 2] = r46;
              r46 = HEAP32[r38 >> 2];
              HEAP32[r26] = r46;
              HEAP32[r38 >> 2] = r47;
              HEAP32[r31 >> 2] = HEAP32[r39 >> 2];
              HEAP32[r39 >> 2] = r47;
              __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r35);
              r52 = r46;
            } else {
              r52 = r47;
            }
          } while (0);
          if ((r52 | 0) == 0) {
            r53 = 0;
          } else {
            HEAP32[r52 >> 2] = r42;
            r53 = r52;
          }
          HEAP32[r26] = r53 + 4 | 0;
          __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r29, r24);
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r24);
        }
        r47 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r41 | 0);
        if ((r47 | 0) == (r40 | 0)) {
          break L108;
        } else {
          r41 = r47;
        }
      }
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
  } while (0);
  r53 = __ZN5Avoid8EdgeList5beginEv(HEAP32[HEAP32[r18] + 76 >> 2]);
  L136 : do {
    if ((r53 | 0) != 0) {
      r52 = r53;
      while (1) {
        __ZN5Avoid7EdgeInf19setHyperedgeSegmentEb(r52, 0);
        r49 = HEAP32[r52 + 4 >> 2];
        if ((r49 | 0) == 0) {
          break L136;
        } else {
          r52 = r49;
        }
      }
    }
  } while (0);
  r53 = r1 + 140 | 0;
  r52 = (r53 | 0) >> 2;
  r49 = (r1 + 144 | 0) >> 2;
  __ZNSt3__111__make_heapIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_(HEAP32[r52], HEAP32[r49]);
  HEAP32[r12 >> 2] = 1;
  r45 = (r1 + 120 | 0) >> 2;
  r11 = HEAP32[r45];
  do {
    if ((r11 | 0) != 0) {
      _fwrite(5249564, 60, 1, r11);
      r23 = HEAP32[r45];
      if ((r23 | 0) == 0) {
        break;
      }
      HEAP32[r12 >> 2] = 2;
      _fprintf(r23, 5249344, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = 1, tempInt));
    }
  } while (0);
  r11 = HEAP32[r52];
  r23 = HEAP32[r49];
  L145 : do {
    if ((r11 | 0) == (r23 | 0)) {
      r54 = r1 + 28 | 0;
    } else {
      r20 = r1 + 156 | 0;
      r9 = (r20 | 0) >> 2;
      r10 = (r1 + 160 | 0) >> 2;
      r41 = r16 + 4 | 0;
      r40 = r16;
      r24 = r1 + 148 | 0;
      r29 = r24 | 0;
      r26 = r53;
      r35 = r4;
      r39 = r24;
      r24 = (r4 + 8 | 0) >> 2;
      r31 = r4 + 12 | 0;
      r38 = (r4 + 4 | 0) >> 2;
      r37 = r4 | 0;
      r32 = r4 + 16 | 0;
      r36 = r3;
      r33 = r3 | 0;
      r34 = r3 + 4 | 0;
      r30 = r3 + 8 | 0;
      r28 = r3 + 12 | 0;
      r25 = r1 + 164 | 0;
      r27 = r25 | 0;
      r47 = r25;
      r25 = (r8 + 8 | 0) >> 2;
      r46 = r8 + 12 | 0;
      r43 = (r8 + 4 | 0) >> 2;
      r50 = r8 | 0;
      r48 = r8 + 16 | 0;
      r44 = r7 | 0;
      r51 = r7 + 4 | 0;
      r55 = r7 + 8 | 0;
      r56 = r7 + 12 | 0;
      r57 = r13 | 0;
      r58 = r6 | 0;
      r59 = r1 + 24 | 0;
      r60 = r13 + 4 | 0;
      r61 = r5 | 0;
      r62 = r1 + 28 | 0;
      r63 = r11;
      r64 = r23;
      while (1) {
        r65 = HEAP32[r63 >> 2];
        r66 = r64 - r63 | 0;
        if ((r66 | 0) > 4) {
          r67 = r64 - 4 | 0;
          HEAP32[r63 >> 2] = HEAP32[r67 >> 2];
          HEAP32[r67 >> 2] = r65;
          __ZNSt3__117__push_heap_frontIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r63, (r66 >> 2) - 1 | 0);
          r68 = HEAP32[r49];
        } else {
          r68 = r64;
        }
        HEAP32[r49] = r68 - 4 | 0;
        r66 = (r65 + 108 | 0) >> 2;
        L153 : do {
          if ((__ZNK5Avoid7VertInf8treeRootEv(HEAP32[r66]) | 0) != 0) {
            r67 = r65 + 100 | 0;
            do {
              if ((HEAP32[r67 >> 2] | 0) == 0) {
                r69 = r65 + 112 | 0;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r69 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r69 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == 0) {
                  break;
                }
                ___assert_func(5244700, 700, 5259396, 5249068);
              }
            } while (0);
            __ZN5Avoid27MinimumTerminalSpanningTree23popInvalidBridgingEdgesEv(r1);
            r69 = HEAP32[r9];
            r70 = HEAP32[r10];
            do {
              if ((r69 | 0) != (r70 | 0)) {
                r71 = r65 + 112 | 0;
                r72 = HEAP32[r69 >> 2];
                r73 = r72 + 60 | 0;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r71 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r71 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < __ZNK5Avoid7EdgeInf8mtstDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r73 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r73 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) * .5) {
                  break;
                }
                r73 = r70 - r69 | 0;
                if ((r73 | 0) > 4) {
                  r71 = r70 - 4 | 0;
                  HEAP32[r69 >> 2] = HEAP32[r71 >> 2];
                  HEAP32[r71 >> 2] = r72;
                  __ZNSt3__117__push_heap_frontIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r69, (r73 >> 2) - 1 | 0);
                  r74 = HEAP32[r10];
                } else {
                  r74 = r70;
                }
                HEAP32[r10] = r74 - 4 | 0;
                __ZN5Avoid27MinimumTerminalSpanningTree28realVerticesCountingPartnersEPNS_7EdgeInfE(r13, r1, HEAP32[r72 + 24 >> 2], HEAP32[r72 + 28 >> 2]);
                HEAP32[r14 >> 2] = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[HEAP32[r57 >> 2] + 108 >> 2]);
                __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r6, r19, r14);
                if ((HEAP32[r58 >> 2] | 0) == (r59 | 0)) {
                  break L153;
                }
                HEAP32[r15 >> 2] = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[HEAP32[r60 >> 2] + 108 >> 2]);
                __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r5, r19, r15);
                if ((HEAP32[r61 >> 2] | 0) == (r59 | 0)) {
                  break L153;
                }
                r73 = HEAP32[r17];
                __ZN5Avoid27MinimumTerminalSpanningTree20commitToBridgingEdgeEPNS_7EdgeInfERj(r1, r72, r12);
                HEAP32[r17] = r73 + 1 | 0;
                if ((HEAP32[r62 >> 2] | 0) == 1) {
                  r54 = r62;
                  break L145;
                } else {
                  break L153;
                }
              }
            } while (0);
            __ZN5Avoid27MinimumTerminalSpanningTree28getOrthogonalEdgesFromVertexEPNS_7VertInfES2_(r16, r1, r65, HEAP32[r67 >> 2]);
            r70 = HEAP32[r41 >> 2];
            L168 : do {
              if ((r70 | 0) != (r40 | 0)) {
                r69 = (r65 + 112 | 0) >> 2;
                r73 = r65 + 12 | 0;
                r72 = r65 + 20 | 0;
                r71 = r65 + 10 | 0;
                r75 = r70, r76 = r75 >> 2;
                while (1) {
                  r77 = HEAP32[r76 + 3];
                  r78 = HEAP32[r76 + 2];
                  do {
                    if (__ZNK5Avoid6VertID16isDummyPinHelperEv(HEAP16[r77 + 10 >> 1])) {
                      r79 = 1;
                    } else {
                      if (__ZNK5Avoid6VertID16isDummyPinHelperEv(HEAP16[r71 >> 1])) {
                        r79 = 1;
                        break;
                      }
                      r80 = r78 + 52 | 0;
                      r79 = __ZN5Avoid7EdgeInf7getDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r80 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r80 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
                    }
                  } while (0);
                  r80 = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[r66]);
                  r81 = r77;
                  r82 = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[r77 + 108 >> 2]);
                  do {
                    if ((r80 | 0) != (r82 | 0)) {
                      if ((r82 | 0) != 0) {
                        r83 = r77 + 112 | 0;
                        r84 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r83 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r83 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                        r83 = r78 + 52 | 0;
                        __ZN5Avoid7EdgeInf11setMtstDistEd(r78, r84 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r69], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r69 + 1], HEAPF64[tempDoublePtr >> 3]) + __ZN5Avoid7EdgeInf7getDistEv((HEAP32[tempDoublePtr >> 2] = HEAP32[r83 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r83 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])));
                        r83 = HEAP32[r10];
                        r84 = HEAP32[r27 >> 2];
                        if (r83 >>> 0 < r84 >>> 0) {
                          if ((r83 | 0) == 0) {
                            r85 = 0;
                          } else {
                            HEAP32[r83 >> 2] = r78;
                            r85 = HEAP32[r10];
                          }
                          r86 = r85 + 4 | 0;
                          HEAP32[r10] = r86;
                          r87 = r86;
                        } else {
                          r86 = HEAP32[r9];
                          r88 = r83 - r86 + 4 >> 2 | 0;
                          if (r88 >>> 0 > 1073741823) {
                            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                            r89 = HEAP32[r27 >> 2];
                            r90 = HEAP32[r9];
                          } else {
                            r89 = r84;
                            r90 = r86;
                          }
                          r86 = r90;
                          r84 = r89 - r86 | 0;
                          if (r84 >> 2 >>> 0 > 536870910) {
                            r91 = 1073741823;
                          } else {
                            r83 = r84 >> 1;
                            r91 = r83 >>> 0 < r88 >>> 0 ? r88 : r83;
                          }
                          __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC1EjjS6_(r8, r91, HEAP32[r10] - r86 >> 2, r47);
                          r86 = HEAP32[r25];
                          do {
                            if ((r86 | 0) == (HEAP32[r46 >> 2] | 0)) {
                              r83 = HEAP32[r43];
                              r88 = HEAP32[r50 >> 2];
                              if (r83 >>> 0 > r88 >>> 0) {
                                r84 = r83;
                                r92 = (r84 - r88 + 4 >> 2 | 0) / -2 & -1;
                                r93 = (r92 << 2) + r83 | 0;
                                r94 = r86 - r84 | 0;
                                _memmove(r93, r83, r94, 4, 0);
                                r84 = ((r94 >> 2) + r92 << 2) + r83 | 0;
                                HEAP32[r25] = r84;
                                HEAP32[r43] = r93;
                                r95 = r84;
                                break;
                              }
                              r84 = r86 - r88 >> 1;
                              r93 = (r84 | 0) == 0 ? 1 : r84;
                              __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC1EjjS6_(r7, r93, r93 >>> 2, HEAP32[r48 >> 2]);
                              __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r7, r83, r86);
                              HEAP32[r50 >> 2] = HEAP32[r44 >> 2];
                              HEAP32[r44 >> 2] = r88;
                              HEAP32[r43] = HEAP32[r51 >> 2];
                              HEAP32[r51 >> 2] = r83;
                              r83 = HEAP32[r55 >> 2];
                              HEAP32[r25] = r83;
                              HEAP32[r55 >> 2] = r86;
                              HEAP32[r46 >> 2] = HEAP32[r56 >> 2];
                              HEAP32[r56 >> 2] = r86;
                              __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED1Ev(r7);
                              r95 = r83;
                            } else {
                              r95 = r86;
                            }
                          } while (0);
                          if ((r95 | 0) == 0) {
                            r96 = 0;
                          } else {
                            HEAP32[r95 >> 2] = r78;
                            r96 = r95;
                          }
                          HEAP32[r25] = r96 + 4 | 0;
                          __ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r20, r8);
                          __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED1Ev(r8);
                          r87 = HEAP32[r10];
                        }
                        r86 = HEAP32[r9];
                        __ZNSt3__116__push_heap_backIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r86, r87, r87 - r86 >> 2);
                        break;
                      }
                      r86 = r79 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r69], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r69 + 1], HEAPF64[tempDoublePtr >> 3]);
                      r83 = r77 + 112 | 0;
                      HEAPF64[tempDoublePtr >> 3] = r86, HEAP32[r83 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r83 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
                      HEAP32[r77 + 100 >> 2] = r65;
                      __ZN5Avoid7VertInf18setTreeRootPointerEPPS0_(r81, __ZNK5Avoid7VertInf15treeRootPointerEv(HEAP32[r66]));
                      r83 = HEAP32[r49];
                      r86 = HEAP32[r29 >> 2];
                      if (r83 >>> 0 < r86 >>> 0) {
                        if ((r83 | 0) == 0) {
                          r97 = 0;
                        } else {
                          HEAP32[r83 >> 2] = r77;
                          r97 = HEAP32[r49];
                        }
                        r88 = r97 + 4 | 0;
                        HEAP32[r49] = r88;
                        r98 = r88;
                      } else {
                        r88 = HEAP32[r52];
                        r93 = r83 - r88 + 4 >> 2 | 0;
                        if (r93 >>> 0 > 1073741823) {
                          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                          r99 = HEAP32[r29 >> 2];
                          r100 = HEAP32[r52];
                        } else {
                          r99 = r86;
                          r100 = r88;
                        }
                        r88 = r100;
                        r86 = r99 - r88 | 0;
                        if (r86 >> 2 >>> 0 < 536870911) {
                          r83 = r86 >> 1;
                          r101 = r83 >>> 0 < r93 >>> 0 ? r93 : r83;
                        } else {
                          r101 = 1073741823;
                        }
                        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r35, r101, HEAP32[r49] - r88 >> 2, r39);
                        r88 = HEAP32[r24];
                        do {
                          if ((r88 | 0) == (HEAP32[r31 >> 2] | 0)) {
                            r83 = HEAP32[r38];
                            r93 = HEAP32[r37 >> 2];
                            if (r83 >>> 0 > r93 >>> 0) {
                              r86 = r83;
                              r84 = (r86 - r93 + 4 >> 2 | 0) / -2 & -1;
                              r92 = (r84 << 2) + r83 | 0;
                              r94 = r88 - r86 | 0;
                              _memmove(r92, r83, r94, 4, 0);
                              r86 = ((r94 >> 2) + r84 << 2) + r83 | 0;
                              HEAP32[r24] = r86;
                              HEAP32[r38] = r92;
                              r102 = r86;
                              break;
                            }
                            r86 = r88 - r93 >> 1;
                            r92 = (r86 | 0) == 0 ? 1 : r86;
                            __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r36, r92, r92 >>> 2, HEAP32[r32 >> 2]);
                            __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r36, r83, r88);
                            HEAP32[r37 >> 2] = HEAP32[r33 >> 2];
                            HEAP32[r33 >> 2] = r93;
                            HEAP32[r38] = HEAP32[r34 >> 2];
                            HEAP32[r34 >> 2] = r83;
                            r83 = HEAP32[r30 >> 2];
                            HEAP32[r24] = r83;
                            HEAP32[r30 >> 2] = r88;
                            HEAP32[r31 >> 2] = HEAP32[r28 >> 2];
                            HEAP32[r28 >> 2] = r88;
                            __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r36);
                            r102 = r83;
                          } else {
                            r102 = r88;
                          }
                        } while (0);
                        if ((r102 | 0) == 0) {
                          r103 = 0;
                        } else {
                          HEAP32[r102 >> 2] = r77;
                          r103 = r102;
                        }
                        HEAP32[r24] = r103 + 4 | 0;
                        __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r26, r35);
                        __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r35);
                        r98 = HEAP32[r49];
                      }
                      r88 = HEAP32[r52];
                      __ZNSt3__116__push_heap_backIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r88, r98, r98 - r88 >> 2);
                      r88 = HEAP32[r45];
                      if ((r88 | 0) == 0) {
                        break;
                      }
                      r83 = HEAP32[r17];
                      r93 = r77 + 12 | 0;
                      r92 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r93 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r93 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      r93 = r77 + 20 | 0;
                      r86 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r93 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r93 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      r93 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r73 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r73 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      r84 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r72 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r72 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      _fprintf(r88, 5248872, (tempInt = STACKTOP, STACKTOP = STACKTOP + 36 | 0, HEAP32[tempInt >> 2] = r83, HEAPF64[tempDoublePtr >> 3] = r92, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r86, HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r93, HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 24 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r84, HEAP32[tempInt + 28 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 32 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
                      HEAP32[r17] = HEAP32[r17] + 1 | 0;
                    }
                  } while (0);
                  r77 = HEAP32[r76 + 1];
                  if ((r77 | 0) == (r40 | 0)) {
                    break L168;
                  } else {
                    r75 = r77, r76 = r75 >> 2;
                  }
                }
              }
            } while (0);
            __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev(r16);
          }
        } while (0);
        r66 = HEAP32[r52];
        r65 = HEAP32[r49];
        if ((r66 | 0) == (r65 | 0)) {
          r54 = r62;
          break L145;
        } else {
          r63 = r66;
          r64 = r65;
        }
      }
    }
  } while (0);
  if ((HEAP32[r54 >> 2] | 0) != 1) {
    ___assert_func(5244700, 803, 5259396, 5248708);
  }
  r54 = HEAP32[r45];
  if ((r54 | 0) != 0) {
    _fwrite(5248588, 10, 1, r54);
  }
  __ZN5Avoid5Timer4StopEv(HEAP32[r18] + 148 | 0);
  r18 = HEAP32[r1 + 112 >> 2];
  r54 = r21;
  L244 : do {
    if ((r18 | 0) != (r54 | 0)) {
      r21 = r18;
      while (1) {
        r45 = HEAP32[r21 + 8 >> 2];
        if ((r45 | 0) != 0) {
          __ZdlPv(r45);
        }
        r45 = HEAP32[r21 + 4 >> 2];
        if ((r45 | 0) == (r54 | 0)) {
          break L244;
        } else {
          r21 = r45;
        }
      }
    }
  } while (0);
  __ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEE5clearEv(r22);
  r22 = r1 + 84 | 0;
  r54 = r22;
  r18 = HEAP32[r1 + 88 >> 2];
  if ((r18 | 0) == (r54 | 0)) {
    r104 = r22;
    __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r104);
    STACKTOP = r2;
    return;
  } else {
    r105 = r18;
  }
  while (1) {
    __ZN5Avoid13delete_vertexclEPNS_7VertInfE(HEAP32[r105 + 8 >> 2]);
    r18 = HEAP32[r105 + 4 >> 2];
    if ((r18 | 0) == (r54 | 0)) {
      break;
    } else {
      r105 = r18;
    }
  }
  r104 = r22;
  __ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv(r104);
  STACKTOP = r2;
  return;
}
__ZN5Avoid27MinimumTerminalSpanningTree20constructInterleavedEv["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L257 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L257;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L257;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEE9push_backERKS4_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTree10drawForestEPNS_7VertInfES2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 52 | 0;
  r5 = r4;
  r6 = r4 + 40;
  r7 = r5 | 0;
  if ((r3 | 0) == 0) {
    r8 = r5;
    HEAP8[r8] = HEAP8[5248464];
    HEAP8[r8 + 1 | 0] = HEAP8[5248465 | 0];
    HEAP8[r8 + 2 | 0] = HEAP8[5248466 | 0];
    HEAP8[r8 + 3 | 0] = HEAP8[5248467 | 0];
    HEAP8[r8 + 4 | 0] = HEAP8[5248468 | 0];
    HEAP8[r8 + 5 | 0] = HEAP8[5248469 | 0];
    r8 = r2 + 108 | 0;
    r9 = HEAP32[r8 >> 2];
    r10 = r9;
    if ((__ZNK5Avoid7VertInf8treeRootEv(r10) | 0) == 0) {
      HEAP32[r7 >> 2] = 6579570;
    }
    if ((__ZNK5Avoid7VertInf15treeRootPointerEv(r10) | 0) == 0) {
      ___assert_func(5244700, 924, 5259664, 5248360);
      r11 = HEAP32[r8 >> 2];
    } else {
      r11 = r9;
    }
    if ((__ZNK5Avoid7VertInf8treeRootEv(r11) | 0) == 0) {
      ___assert_func(5244700, 925, 5259664, 5248236);
    }
    r11 = HEAP32[r1 + 120 >> 2];
    r9 = r2 + 12 | 0;
    r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r9 = r2 + 20 | 0;
    r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r9 = r2 + 112 | 0;
    r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    _fprintf(r11, 5247976, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r10, HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAP32[tempInt + 24 >> 2] = r5, HEAP32[tempInt + 28 >> 2] = 5247888, tempInt));
  }
  __ZN5Avoid27MinimumTerminalSpanningTree28getOrthogonalEdgesFromVertexEPNS_7VertInfES2_(r6, r1, r2, r3);
  r3 = HEAP32[r6 + 4 >> 2];
  r5 = r6;
  if ((r3 | 0) == (r5 | 0)) {
    __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev(r6);
    STACKTOP = r4;
    return;
  }
  r7 = r1 + 120 | 0;
  r10 = r2 + 12 | 0;
  r8 = r10 | 0;
  r11 = r2 + 20 | 0;
  r9 = r2 + 108 | 0;
  r12 = r3;
  while (1) {
    r3 = HEAP32[r12 + 12 >> 2];
    r13 = r3 + 112 | 0;
    r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    do {
      if (r14 != 0) {
        if ((__ZNK5Avoid7VertInf8treeRootEv(HEAP32[r3 + 108 >> 2]) | 0) != (__ZNK5Avoid7VertInf8treeRootEv(HEAP32[r9 >> 2]) | 0)) {
          break;
        }
        if ((HEAP32[r3 + 100 >> 2] | 0) != (r2 | 0)) {
          break;
        }
        r13 = HEAP32[r7 >> 2];
        do {
          if ((r13 | 0) != 0) {
            r15 = r3 + 12 | 0;
            if (!__ZNK5Avoid5PointneERKS0_(r10, r15)) {
              break;
            }
            r16 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r18 = r15 | 0;
            r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r18 = r3 + 20 | 0;
            r19 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            _fprintf(r13, 5247736, (tempInt = STACKTOP, STACKTOP = STACKTOP + 44 | 0, HEAPF64[tempDoublePtr >> 3] = r16, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r17, HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r19, HEAP32[tempInt + 24 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 28 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[tempInt + 32 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 36 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAP32[tempInt + 40 >> 2] = 5247688, tempInt));
          }
        } while (0);
        __ZN5Avoid27MinimumTerminalSpanningTree10drawForestEPNS_7VertInfES2_(r1, r3, r2);
      }
    } while (0);
    r3 = HEAP32[r12 + 4 >> 2];
    if ((r3 | 0) == (r5 | 0)) {
      break;
    } else {
      r12 = r3;
    }
  }
  __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev(r6);
  STACKTOP = r4;
  return;
}
__ZN5Avoid27MinimumTerminalSpanningTree10drawForestEPNS_7VertInfES2_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1, r2) {
  var r3, r4;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    STACKTOP = r3;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r3 + 4, r1, r2);
  STACKTOP = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__116__push_heap_backIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  if ((r3 | 0) <= 1) {
    return;
  }
  r4 = (r3 - 2 | 0) / 2 & -1;
  r3 = (r4 << 2) + r1 | 0;
  r5 = HEAP32[r3 >> 2];
  r6 = r2 - 4 | 0;
  r2 = HEAP32[r6 >> 2];
  if (__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r5, r2)) {
    r7 = r4;
    r8 = r3;
    r9 = r6;
    r10 = r5;
  } else {
    return;
  }
  while (1) {
    HEAP32[r9 >> 2] = r10;
    if ((r7 | 0) == 0) {
      break;
    }
    r5 = (r7 - 1 | 0) / 2 & -1;
    r6 = (r5 << 2) + r1 | 0;
    r3 = HEAP32[r6 >> 2];
    if (__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r3, r2)) {
      r7 = r5;
      r9 = r8;
      r8 = r6;
      r10 = r3;
    } else {
      break;
    }
  }
  HEAP32[r8 >> 2] = r2;
  return;
}
function __ZNSt3__110__list_impINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r6 + 8 | 0);
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZN5Avoid13delete_vertexclEPNS_7VertInfE(r1) {
  var r2;
  r2 = r1;
  __ZN5Avoid7VertInf15removeFromGraphEb(r2, 0);
  if ((r1 | 0) == 0) {
    return;
  }
  __ZN5Avoid7VertInfD1Ev(r2);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__117__push_heap_frontIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r3 = 0;
  if ((r2 | 0) <= 1) {
    return;
  }
  r4 = r1 + 8 | 0;
  do {
    if ((r2 | 0) == 2) {
      r5 = HEAP32[r1 + 4 >> 2];
      r3 = 285;
      break;
    } else {
      r6 = HEAP32[r4 >> 2];
      r7 = HEAP32[r1 + 4 >> 2];
      if (__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r6, r7)) {
        r5 = r7;
        r3 = 285;
        break;
      } else {
        r8 = 2;
        r9 = r4;
        r10 = r6;
        break;
      }
    }
  } while (0);
  if (r3 == 285) {
    r8 = 1;
    r9 = r1 + 4 | 0;
    r10 = r5;
  }
  r5 = HEAP32[r1 >> 2];
  if (__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r5, r10)) {
    r11 = r8;
    r12 = r9;
    r13 = r1;
    r14 = r10;
  } else {
    return;
  }
  while (1) {
    HEAP32[r13 >> 2] = r14;
    r10 = r11 << 1;
    r9 = r10 + 2 | 0;
    if ((r9 | 0) > (r2 | 0)) {
      break;
    }
    r8 = (r9 << 2) + r1 | 0;
    do {
      if ((r9 | 0) == (r2 | 0)) {
        r4 = r10 | 1;
        r6 = (r4 << 2) + r1 | 0;
        r15 = r4;
        r16 = r6;
        r17 = HEAP32[r6 >> 2];
        r3 = 291;
        break;
      } else {
        r6 = HEAP32[r8 >> 2];
        r4 = r10 | 1;
        r7 = (r4 << 2) + r1 | 0;
        r18 = HEAP32[r7 >> 2];
        if (__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r6, r18)) {
          r15 = r4;
          r16 = r7;
          r17 = r18;
          r3 = 291;
          break;
        } else {
          r19 = r9;
          r20 = r8;
          r21 = r6;
          break;
        }
      }
    } while (0);
    if (r3 == 291) {
      r3 = 0;
      r19 = r15;
      r20 = r16;
      r21 = r17;
    }
    if (__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_(r5, r21)) {
      r11 = r19;
      r13 = r12;
      r12 = r20;
      r14 = r21;
    } else {
      break;
    }
  }
  HEAP32[r12 >> 2] = r5;
  return;
}
__ZNSt3__117__push_heap_frontIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid27MinimumTerminalSpanningTree20commitToBridgingEdgeEPNS_7EdgeInfERj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r4 = r3 >> 2;
  r3 = r1 >> 2;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 64 | 0;
  r7 = r6;
  r8 = r6 + 20;
  r9 = r6 + 40;
  r10 = r6 + 48;
  r11 = r6 + 52, r12 = r11 >> 2;
  r13 = r6 + 56, r14 = r13 >> 2;
  r15 = r6 + 60;
  __ZN5Avoid27MinimumTerminalSpanningTree28realVerticesCountingPartnersEPNS_7EdgeInfE(r9, r1, HEAP32[r2 + 24 >> 2], HEAP32[r2 + 28 >> 2]);
  r16 = HEAP32[r9 >> 2];
  r17 = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[r16 + 108 >> 2]);
  r18 = HEAP32[r9 + 4 >> 2];
  r9 = __ZNK5Avoid7VertInf8treeRootEv(HEAP32[r18 + 108 >> 2]);
  r19 = r9 >>> 0 < r17 >>> 0 ? r9 : r17;
  HEAP32[r10 >> 2] = r17 >>> 0 < r9 >>> 0 ? r9 : r17;
  HEAP32[r12] = r16;
  HEAP32[r14] = r18;
  if ((HEAP32[r3 + 8] | 0) == 0) {
    r20 = 0;
    r21 = 0;
  } else {
    r17 = __Znwj(48);
    r9 = r17;
    r22 = r17;
    __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r22);
    r23 = r17 + 16 | 0;
    r17 = r16 + 12 | 0;
    HEAP32[r23 >> 2] = HEAP32[r17 >> 2];
    HEAP32[r23 + 4 >> 2] = HEAP32[r17 + 4 >> 2];
    HEAP32[r23 + 8 >> 2] = HEAP32[r17 + 8 >> 2];
    HEAP32[r23 + 12 >> 2] = HEAP32[r17 + 12 >> 2];
    HEAP32[r23 + 16 >> 2] = HEAP32[r17 + 16 >> 2];
    HEAP16[r23 + 20 >> 1] = HEAP16[r17 + 20 >> 1];
    r17 = r1 + 36 | 0;
    HEAP32[__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r17, r11) >> 2] = r9;
    r11 = __Znwj(48);
    r23 = r11;
    r16 = r11;
    __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r16);
    r24 = r11 + 16 | 0;
    r11 = r18 + 12 | 0;
    HEAP32[r24 >> 2] = HEAP32[r11 >> 2];
    HEAP32[r24 + 4 >> 2] = HEAP32[r11 + 4 >> 2];
    HEAP32[r24 + 8 >> 2] = HEAP32[r11 + 8 >> 2];
    HEAP32[r24 + 12 >> 2] = HEAP32[r11 + 12 >> 2];
    HEAP32[r24 + 16 >> 2] = HEAP32[r11 + 16 >> 2];
    HEAP16[r24 + 20 >> 1] = HEAP16[r11 + 20 >> 1];
    HEAP32[__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r17, r13) >> 2] = r23;
    __ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(__Znwj(12), r22, r16, 0);
    __ZN5Avoid7EdgeInf19setHyperedgeSegmentEb(r2, 1);
    r20 = r9;
    r21 = r23;
  }
  r23 = (r1 + 120 | 0) >> 2;
  r9 = HEAP32[r23];
  if ((r9 | 0) == 0) {
    r25 = HEAP32[r12];
    r26 = HEAP32[r14];
  } else {
    r2 = HEAP32[r4] - 1 | 0;
    _fprintf(r9, 5247484, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r2, HEAP32[tempInt + 4 >> 2] = r2, tempInt));
    r2 = HEAP32[r23];
    r9 = HEAP32[r12];
    r12 = r9 + 12 | 0;
    r16 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r12 = r9 + 20 | 0;
    r22 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r12 = HEAP32[r14];
    r14 = r12 + 12 | 0;
    r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r14 = r12 + 20 | 0;
    r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    _fprintf(r2, 5247324, (tempInt = STACKTOP, STACKTOP = STACKTOP + 36 | 0, HEAPF64[tempDoublePtr >> 3] = r16, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r22, HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 12 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[tempInt + 16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 20 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAPF64[tempDoublePtr >> 3] = r17, HEAP32[tempInt + 24 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 28 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], HEAP32[tempInt + 32 >> 2] = 5250644, tempInt));
    r25 = r9;
    r26 = r12;
  }
  __ZN5Avoid27MinimumTerminalSpanningTree24buildHyperEdgeTreeToRootEPNS_7VertInfEPNS_17HyperEdgeTreeNodeES2_b(r1, HEAP32[r25 + 100 >> 2], r20, r25);
  __ZN5Avoid27MinimumTerminalSpanningTree24buildHyperEdgeTreeToRootEPNS_7VertInfEPNS_17HyperEdgeTreeNodeES2_b(r1, HEAP32[r26 + 100 >> 2], r21, r26);
  r21 = HEAP32[r23];
  L386 : do {
    if ((r21 | 0) != 0) {
      _fprintf(r21, 5247180, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = HEAP32[r4] - 1 | 0, tempInt));
      r20 = HEAP32[r3 + 2];
      r12 = r1 + 12 | 0;
      if ((r20 | 0) == (r12 | 0)) {
        break;
      }
      r9 = r12;
      r12 = r20;
      while (1) {
        __ZN5Avoid27MinimumTerminalSpanningTree10drawForestEPNS_7VertInfES2_(r1, HEAP32[r12 + 16 >> 2], 0);
        r20 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r12 | 0);
        if ((r20 | 0) == (r9 | 0)) {
          break L386;
        } else {
          r12 = r20;
        }
      }
    }
  } while (0);
  r21 = __ZNK5Avoid7VertInf15treeRootPointerEv(HEAP32[r25 + 108 >> 2]);
  r12 = __ZNK5Avoid7VertInf15treeRootPointerEv(HEAP32[r26 + 108 >> 2]);
  __ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1 + 20 | 0, r10);
  HEAP32[r15 >> 2] = __ZN5Avoid7VertInf19makeTreeRootPointerEPS0_(r25, r19);
  __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEE9push_backERKS4_(r1 + 108 | 0, r15);
  r10 = HEAP32[r15 >> 2];
  __ZN5Avoid7VertInf18setTreeRootPointerEPPS0_(r26, r10);
  if ((r19 | 0) == 0) {
    ___assert_func(5244700, 1049, 5259460, 5247160);
  }
  __ZN5Avoid27MinimumTerminalSpanningTree17resetDistsForPathEPNS_7VertInfEPS2_(r1, r25, r10);
  __ZN5Avoid27MinimumTerminalSpanningTree17resetDistsForPathEPNS_7VertInfEPS2_(r1, r26, r10);
  if ((r21 | 0) == 0) {
    ___assert_func(5244700, 1053, 5259460, 5247036);
  }
  if ((r12 | 0) == 0) {
    ___assert_func(5244700, 1054, 5259460, 5246932);
  }
  HEAP32[r21 >> 2] = 0;
  HEAP32[r12 >> 2] = 0;
  r12 = HEAP32[r23];
  L401 : do {
    if ((r12 | 0) != 0) {
      r21 = HEAP32[r4] - 1 | 0;
      _fprintf(r12, 5246724, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r21, HEAP32[tempInt + 4 >> 2] = r21, tempInt));
      r21 = HEAP32[r3 + 2];
      r10 = r1 + 12 | 0;
      if ((r21 | 0) == (r10 | 0)) {
        break;
      }
      r26 = r10;
      r10 = r21;
      while (1) {
        __ZN5Avoid27MinimumTerminalSpanningTree10drawForestEPNS_7VertInfES2_(r1, HEAP32[r10 + 16 >> 2], 0);
        r21 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r10 | 0);
        if ((r21 | 0) == (r26 | 0)) {
          break L401;
        } else {
          r10 = r21;
        }
      }
    }
  } while (0);
  if ((HEAP32[r3 + 7] | 0) == 1) {
    STACKTOP = r6;
    return;
  }
  r12 = HEAP32[r23];
  if ((r12 | 0) != 0) {
    _fwrite(5252020, 5, 1, r12);
    r12 = HEAP32[r23];
    r23 = HEAP32[r4];
    HEAP32[r4] = r23 + 1 | 0;
    _fprintf(r12, 5249344, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r23, tempInt));
  }
  r23 = HEAP32[r3 + 2];
  r3 = r1 + 12 | 0;
  if ((r23 | 0) == (r3 | 0)) {
    STACKTOP = r6;
    return;
  }
  r12 = r1 + 140 | 0;
  r4 = (r1 + 144 | 0) >> 2;
  r10 = r1 + 148 | 0;
  r1 = r10 | 0;
  r26 = r12 | 0;
  r21 = r12;
  r12 = r8;
  r25 = r10;
  r10 = (r8 + 8 | 0) >> 2;
  r19 = r8 + 12 | 0;
  r15 = (r8 + 4 | 0) >> 2;
  r9 = r8 | 0;
  r20 = r8 + 16 | 0;
  r8 = r7;
  r17 = r7 | 0;
  r13 = r7 + 4 | 0;
  r22 = r7 + 8 | 0;
  r16 = r7 + 12 | 0;
  r7 = r3;
  r3 = r23;
  while (1) {
    r23 = (r3 + 16 | 0) >> 2;
    r2 = HEAP32[r23] + 112 | 0;
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != 0) {
      ___assert_func(5244700, 1088, 5259460, 5246652);
    }
    r2 = HEAP32[r4];
    r14 = HEAP32[r1 >> 2];
    if (r2 >>> 0 < r14 >>> 0) {
      if ((r2 | 0) == 0) {
        r27 = 0;
      } else {
        HEAP32[r2 >> 2] = HEAP32[r23];
        r27 = HEAP32[r4];
      }
      r11 = r27 + 4 | 0;
      HEAP32[r4] = r11;
      r28 = r11;
    } else {
      r11 = HEAP32[r26 >> 2];
      r24 = r2 - r11 >> 2;
      r2 = r24 + 1 | 0;
      if (r2 >>> 0 > 1073741823) {
        r5 = 331;
        break;
      }
      r18 = r14 - r11 | 0;
      if (r18 >> 2 >>> 0 < 536870911) {
        r11 = r18 >> 1;
        r29 = r11 >>> 0 < r2 >>> 0 ? r2 : r11;
      } else {
        r29 = 1073741823;
      }
      __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r12, r29, r24, r25);
      r24 = HEAP32[r10];
      do {
        if ((r24 | 0) == (HEAP32[r19 >> 2] | 0)) {
          r11 = HEAP32[r15];
          r2 = HEAP32[r9 >> 2];
          if (r11 >>> 0 > r2 >>> 0) {
            r18 = r11;
            r14 = (r18 - r2 + 4 >> 2 | 0) / -2 & -1;
            r30 = (r14 << 2) + r11 | 0;
            r31 = r24 - r18 | 0;
            _memmove(r30, r11, r31, 4, 0);
            r18 = ((r31 >> 2) + r14 << 2) + r11 | 0;
            HEAP32[r10] = r18;
            HEAP32[r15] = r30;
            r32 = r18;
            break;
          }
          r18 = r24 - r2 >> 1;
          r30 = (r18 | 0) == 0 ? 1 : r18;
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_(r8, r30, r30 >>> 2, HEAP32[r20 >> 2]);
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r8, r11, r24);
          HEAP32[r9 >> 2] = HEAP32[r17 >> 2];
          HEAP32[r17 >> 2] = r2;
          HEAP32[r15] = HEAP32[r13 >> 2];
          HEAP32[r13 >> 2] = r11;
          r11 = HEAP32[r22 >> 2];
          HEAP32[r10] = r11;
          HEAP32[r22 >> 2] = r24;
          HEAP32[r19 >> 2] = HEAP32[r16 >> 2];
          HEAP32[r16 >> 2] = r24;
          __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r8);
          r32 = r11;
        } else {
          r32 = r24;
        }
      } while (0);
      if ((r32 | 0) == 0) {
        r33 = 0;
      } else {
        HEAP32[r32 >> 2] = HEAP32[r23];
        r33 = r32;
      }
      HEAP32[r10] = r33 + 4 | 0;
      __ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r21, r12);
      __ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev(r12);
      r28 = HEAP32[r4];
    }
    r24 = HEAP32[r26 >> 2];
    __ZNSt3__116__push_heap_backIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r24, r28, r28 - r24 >> 2);
    r24 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r3 | 0);
    if ((r24 | 0) == (r7 | 0)) {
      r5 = 348;
      break;
    } else {
      r3 = r24;
    }
  }
  if (r5 == 331) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else if (r5 == 348) {
    STACKTOP = r6;
    return;
  }
}
__ZN5Avoid27MinimumTerminalSpanningTree20commitToBridgingEdgeEPNS_7EdgeInfERj["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 362;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 366;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 365;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 365) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 366) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  } else if (r4 == 362) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  }
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L475 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L475;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L475;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC2ERKSB_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L486 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L486;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__116__push_heap_backIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  if ((r3 | 0) <= 1) {
    return;
  }
  r4 = (r3 - 2 | 0) / 2 & -1;
  r3 = (r4 << 2) + r1 | 0;
  r5 = HEAP32[r3 >> 2];
  r6 = r2 - 4 | 0;
  r2 = HEAP32[r6 >> 2];
  r7 = r5 + 112 | 0;
  r8 = (r2 + 112 | 0) >> 2;
  if (__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_((HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]))) {
    r9 = r4;
    r10 = r3;
    r11 = r6;
    r12 = r5;
  } else {
    return;
  }
  while (1) {
    HEAP32[r11 >> 2] = r12;
    if ((r9 | 0) == 0) {
      break;
    }
    r5 = (r9 - 1 | 0) / 2 & -1;
    r6 = (r5 << 2) + r1 | 0;
    r3 = HEAP32[r6 >> 2];
    r4 = r3 + 112 | 0;
    if (__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_((HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]))) {
      r9 = r5;
      r11 = r10;
      r10 = r6;
      r12 = r3;
    } else {
      break;
    }
  }
  HEAP32[r10 >> 2] = r2;
  return;
}
function __ZNSt3__117__push_heap_frontIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27;
  r3 = 0;
  if ((r2 | 0) <= 1) {
    return;
  }
  r4 = r1 + 8 | 0;
  do {
    if ((r2 | 0) == 2) {
      r5 = HEAP32[r1 + 4 >> 2];
      r6 = r5 + 112 | 0;
      r7 = r5;
      r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r3 = 415;
      break;
    } else {
      r6 = HEAP32[r4 >> 2];
      r5 = HEAP32[r1 + 4 >> 2];
      r9 = r6 + 112 | 0;
      r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r9 = r5 + 112 | 0;
      r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_(r10, r11)) {
        r7 = r5;
        r8 = r11;
        r3 = 415;
        break;
      } else {
        r12 = 2;
        r13 = r4;
        r14 = r6;
        r15 = r10;
        break;
      }
    }
  } while (0);
  if (r3 == 415) {
    r12 = 1;
    r13 = r1 + 4 | 0;
    r14 = r7;
    r15 = r8;
  }
  r8 = HEAP32[r1 >> 2];
  r7 = (r8 + 112 | 0) >> 2;
  if (__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_((HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]), r15)) {
    r16 = r12;
    r17 = r13;
    r18 = r1;
    r19 = r14;
  } else {
    return;
  }
  while (1) {
    HEAP32[r18 >> 2] = r19;
    r14 = r16 << 1;
    r13 = r14 + 2 | 0;
    if ((r13 | 0) > (r2 | 0)) {
      break;
    }
    r12 = (r13 << 2) + r1 | 0;
    do {
      if ((r13 | 0) == (r2 | 0)) {
        r15 = r14 | 1;
        r4 = (r15 << 2) + r1 | 0;
        r10 = HEAP32[r4 >> 2];
        r6 = r10 + 112 | 0;
        r20 = r15;
        r21 = r4;
        r22 = r10;
        r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r3 = 421;
        break;
      } else {
        r6 = HEAP32[r12 >> 2];
        r10 = r14 | 1;
        r4 = (r10 << 2) + r1 | 0;
        r15 = HEAP32[r4 >> 2];
        r11 = r6 + 112 | 0;
        r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r11 = r15 + 112 | 0;
        r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        if (__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_(r5, r9)) {
          r20 = r10;
          r21 = r4;
          r22 = r15;
          r23 = r9;
          r3 = 421;
          break;
        } else {
          r24 = r13;
          r25 = r12;
          r26 = r6;
          r27 = r5;
          break;
        }
      }
    } while (0);
    if (r3 == 421) {
      r3 = 0;
      r24 = r20;
      r25 = r21;
      r26 = r22;
      r27 = r23;
    }
    if (__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_((HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]), r27)) {
      r16 = r24;
      r18 = r17;
      r17 = r25;
      r19 = r26;
    } else {
      break;
    }
  }
  HEAP32[r17 >> 2] = r8;
  return;
}
__ZNSt3__117__push_heap_frontIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE["X"] = 1;
function __ZNSt3__111__make_heapIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r2 - r1 | 0;
  r2 = r3 >> 2;
  if ((r3 | 0) <= 4) {
    return;
  }
  r3 = 1;
  r4 = r1 + 4 | 0;
  while (1) {
    r5 = r4 + 4 | 0;
    r6 = r3 + 1 | 0;
    __ZNSt3__116__push_heap_backIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE(r1, r5, r6);
    if ((r6 | 0) < (r2 | 0)) {
      r3 = r6;
      r4 = r5;
    } else {
      break;
    }
  }
  return;
}
function __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__construct_nodeERSA_(r1, r2, r3) {
  var r4, r5;
  r4 = __Znwj(24);
  r5 = r4 + 16 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r3 >> 2];
  }
  r3 = r4 + 20 | 0;
  if ((r3 | 0) != 0) {
    HEAP32[r3 >> 2] = 0;
  }
  HEAP32[r1 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  HEAP8[r1 + 9 | 0] = 1;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC2ERKSB_(r1);
  return;
}
function __ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED1Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(r1);
  return;
}
function __ZNSt3__14listINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev(r1) {
  __ZNSt3__110__list_impINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE5clearEv(r1);
  return;
}
function __ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEE5clearEv(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZN5Avoid32generateStaticOrthogonalVisGraphEPNS_6RouterE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 144 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 8;
  r7 = r3 + 56;
  r8 = r3 + 68;
  r9 = r3 + 80;
  r10 = r3 + 92;
  r11 = r3 + 140;
  r12 = HEAP32[r1 + 12 >> 2];
  r13 = r1 + 100 | 0;
  r14 = r13;
  r15 = (r12 << 1) + __ZNK5Avoid11VertInfList9connsSizeEv(HEAP32[r1 + 120 >> 2]) | 0;
  r16 = _llvm_umul_with_overflow_i32(r15, 4);
  r17 = __Znaj(tempRet0 ? -1 : r16);
  r16 = r17 >> 2;
  r18 = r1 + 8 | 0;
  r19 = (r12 | 0) == 0;
  L596 : do {
    if (r19) {
      r20 = 0;
      r21 = r15;
    } else {
      r22 = r6 | 0;
      r23 = r6 + 24 | 0;
      r24 = r6 + 8 | 0;
      r25 = r6 + 32 | 0;
      r26 = 0;
      r27 = 0;
      r28 = r15;
      r29 = r18;
      while (1) {
        r30 = HEAP32[r29 >> 2];
        r31 = HEAP32[r30 + 8 >> 2];
        do {
          if ((r31 | 0) == 0) {
            r2 = 478;
          } else {
            r32 = ___dynamic_cast(r31, 5272672, 5272764);
            if ((r32 | 0) == 0) {
              r2 = 478;
              break;
            }
            if (__ZNK5Avoid11JunctionRef13positionFixedEv(HEAP8[r32 + 144 | 0])) {
              r2 = 478;
              break;
            }
            r33 = r28 - 2 | 0;
            r34 = r27;
            break;
          }
        } while (0);
        if (r2 == 478) {
          r2 = 0;
          __ZNK5Avoid8Obstacle10routingBoxEv(r6, r31);
          r32 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r35 = r32 + ((HEAP32[tempDoublePtr >> 2] = HEAP32[r23 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r23 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r32) * .5;
          r32 = __Znwj(68);
          __ZN5Avoid4NodeC1EPNS_8ObstacleEd(r32, r31, r35);
          r35 = __Znwj(16);
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r35, 1, r32, (HEAP32[tempDoublePtr >> 2] = HEAP32[r24 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r27 << 2 >> 2) + r16] = r35;
          r35 = __Znwj(16);
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r35, 5, r32, (HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r27 + 1 << 2 >> 2) + r16] = r35;
          r33 = r28;
          r34 = r27 + 2 | 0;
        }
        r35 = r26 + 1 | 0;
        if (r35 >>> 0 < r12 >>> 0) {
          r26 = r35;
          r27 = r34;
          r28 = r33;
          r29 = r30 + 4 | 0;
        } else {
          r20 = r34;
          r21 = r33;
          break L596;
        }
      }
    }
  } while (0);
  r33 = __ZN5Avoid11VertInfList10connsBeginEv(r14);
  L609 : do {
    if ((r33 | 0) == 0) {
      r36 = r21;
    } else {
      r34 = r13;
      r6 = r33;
      r15 = r20;
      r29 = r21;
      while (1) {
        if ((r6 | 0) == (__ZN5Avoid11VertInfList11shapesBeginEv(HEAP32[r34 >> 2]) | 0)) {
          r36 = r29;
          break L609;
        }
        if ((HEAP32[r6 + 120 >> 2] | 0) == 0) {
          r37 = r29 - 1 | 0;
          r38 = r15;
        } else {
          r28 = __Znwj(68);
          r27 = r6 + 12 | 0;
          __ZN5Avoid4NodeC1EPNS_7VertInfEd(r28, r6, (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          r27 = __Znwj(16);
          r26 = r6 + 20 | 0;
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r27, 3, r28, (HEAP32[tempDoublePtr >> 2] = HEAP32[r26 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r26 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r15 << 2 >> 2) + r16] = r27;
          r37 = r29;
          r38 = r15 + 1 | 0;
        }
        r27 = HEAP32[r6 + 40 >> 2];
        if ((r27 | 0) == 0) {
          r36 = r37;
          break L609;
        } else {
          r6 = r27;
          r15 = r38;
          r29 = r37;
        }
      }
    }
  } while (0);
  _qsort(r17, r36, 4, 356);
  __ZN5Avoid18SegmentListWrapperC1Ev(r7);
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC1ERKS4_(r8 | 0);
  r37 = (r36 | 0) != 0;
  do {
    if (r37) {
      r38 = HEAP32[r16] + 8 | 0;
      r39 = 0;
      r40 = 0;
      r41 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r38 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r38 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      break;
    } else {
      r39 = 0;
      r40 = 0;
      r41 = 0;
    }
  } while (0);
  while (1) {
    r38 = (r39 | 0) == (r36 | 0);
    do {
      if (r38) {
        r2 = 493;
      } else {
        r21 = HEAP32[(r39 << 2 >> 2) + r16];
        r20 = r21 + 8 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r41) {
          r2 = 493;
          break;
        } else {
          r42 = r41;
          r43 = r40;
          r44 = r21;
          break;
        }
      }
    } while (0);
    if (r2 == 493) {
      r2 = 0;
      L627 : do {
        if (r40 >>> 0 < r39 >>> 0) {
          r21 = r40;
          while (1) {
            __ZN5AvoidL16processEventVertEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r8, r7, HEAP32[(r21 << 2 >> 2) + r16], 2);
            r20 = r21 + 1 | 0;
            if (r20 >>> 0 < r39 >>> 0) {
              r21 = r20;
            } else {
              r45 = r40;
              break;
            }
          }
          while (1) {
            __ZN5AvoidL16processEventVertEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r8, r7, HEAP32[(r45 << 2 >> 2) + r16], 3);
            r21 = r45 + 1 | 0;
            if (r21 >>> 0 < r39 >>> 0) {
              r45 = r21;
            } else {
              break L627;
            }
          }
        }
      } while (0);
      if (r38) {
        break;
      }
      r21 = HEAP32[(r39 << 2 >> 2) + r16];
      r30 = r21 + 8 | 0;
      r42 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r30 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r30 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r43 = r39;
      r44 = r21;
    }
    __ZN5AvoidL16processEventVertEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r8, r7, r44, 1);
    r21 = r39 + 1 | 0;
    if (r21 >>> 0 > r36 >>> 0) {
      break;
    } else {
      r39 = r21;
      r40 = r43;
      r41 = r42;
    }
  }
  r42 = r8 + 8 | 0;
  if ((HEAP32[r42 >> 2] | 0) != 0) {
    ___assert_func(5244520, 1895, 5259068, 5248616);
  }
  r41 = (r36 | 0) == 0;
  L642 : do {
    if (!r41) {
      r43 = 0;
      while (1) {
        r40 = HEAP32[(r43 << 2 >> 2) + r16];
        if ((r40 | 0) != 0) {
          __ZdlPv(r40);
        }
        r40 = r43 + 1 | 0;
        if ((r40 | 0) == (r36 | 0)) {
          break L642;
        } else {
          r43 = r40;
        }
      }
    }
  } while (0);
  r43 = __ZN5Avoid18SegmentListWrapper4listEv(r7);
  r38 = r43 + 4 | 0;
  r40 = r43;
  __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r5, HEAP32[r38 >> 2], r40, HEAP32[r43 + 8 >> 2]);
  __ZN5Avoid18SegmentListWrapperC1Ev(r9);
  L650 : do {
    if (r19) {
      r46 = 0;
    } else {
      r5 = r10 + 8 | 0;
      r39 = r10 + 32 | 0;
      r44 = r10 | 0;
      r45 = r10 + 24 | 0;
      r21 = 0;
      r30 = 0;
      r31 = r18;
      while (1) {
        r20 = HEAP32[r31 >> 2];
        r33 = HEAP32[r20 + 8 >> 2];
        do {
          if ((r33 | 0) == 0) {
            r2 = 523;
          } else {
            r29 = ___dynamic_cast(r33, 5272672, 5272764);
            if ((r29 | 0) == 0) {
              r2 = 523;
              break;
            }
            if (__ZNK5Avoid11JunctionRef13positionFixedEv(HEAP8[r29 + 144 | 0])) {
              r2 = 523;
              break;
            } else {
              r47 = r30;
              break;
            }
          }
        } while (0);
        if (r2 == 523) {
          r2 = 0;
          __ZNK5Avoid8Obstacle10routingBoxEv(r10, r33);
          r29 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r39 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r39 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r6 = __Znwj(68);
          __ZN5Avoid4NodeC1EPNS_8ObstacleEd(r6, r33, r29 + (r15 - r29) * .5);
          r29 = __Znwj(16);
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r29, 1, r6, (HEAP32[tempDoublePtr >> 2] = HEAP32[r44 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r44 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r30 << 2 >> 2) + r16] = r29;
          r29 = __Znwj(16);
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r29, 5, r6, (HEAP32[tempDoublePtr >> 2] = HEAP32[r45 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r45 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r30 + 1 << 2 >> 2) + r16] = r29;
          r47 = r30 + 2 | 0;
        }
        r29 = r21 + 1 | 0;
        if (r29 >>> 0 < r12 >>> 0) {
          r21 = r29;
          r30 = r47;
          r31 = r20 + 4 | 0;
        } else {
          r46 = r47;
          break L650;
        }
      }
    }
  } while (0);
  r47 = __ZN5Avoid11VertInfList10connsBeginEv(r14);
  L666 : do {
    if ((r47 | 0) != 0) {
      r14 = r13;
      r12 = r47;
      r10 = r46;
      while (1) {
        if ((r12 | 0) == (__ZN5Avoid11VertInfList11shapesBeginEv(HEAP32[r14 >> 2]) | 0)) {
          break L666;
        }
        if ((HEAP32[r12 + 120 >> 2] | 0) == 0) {
          r48 = r10;
        } else {
          r18 = __Znwj(68);
          r19 = r12 + 20 | 0;
          __ZN5Avoid4NodeC1EPNS_7VertInfEd(r18, r12, (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          r19 = __Znwj(16);
          r31 = r12 + 12 | 0;
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r19, 3, r18, (HEAP32[tempDoublePtr >> 2] = HEAP32[r31 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r31 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r10 << 2 >> 2) + r16] = r19;
          r48 = r10 + 1 | 0;
        }
        r19 = HEAP32[r12 + 40 >> 2];
        if ((r19 | 0) == 0) {
          break L666;
        } else {
          r12 = r19;
          r10 = r48;
        }
      }
    }
  } while (0);
  _qsort(r17, r36, 4, 356);
  do {
    if (r37) {
      r48 = HEAP32[r16] + 8 | 0;
      r49 = 0;
      r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r48 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r48 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r51 = 0;
      break;
    } else {
      r49 = 0;
      r50 = 0;
      r51 = 0;
    }
  } while (0);
  while (1) {
    r37 = (r51 | 0) == (r36 | 0);
    do {
      if (r37) {
        r2 = 544;
      } else {
        r48 = HEAP32[(r51 << 2 >> 2) + r16];
        r46 = r48 + 8 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r50) {
          r2 = 544;
          break;
        } else {
          r52 = r50;
          r53 = r49;
          r54 = r48;
          break;
        }
      }
    } while (0);
    if (r2 == 544) {
      r2 = 0;
      L686 : do {
        if (r49 >>> 0 < r51 >>> 0) {
          r48 = r49;
          while (1) {
            __ZN5AvoidL16processEventHoriEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r8, r9, HEAP32[(r48 << 2 >> 2) + r16], 2);
            r46 = r48 + 1 | 0;
            if (r46 >>> 0 < r51 >>> 0) {
              r48 = r46;
            } else {
              r55 = r49;
              break;
            }
          }
          while (1) {
            __ZN5AvoidL16processEventHoriEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r8, r9, HEAP32[(r55 << 2 >> 2) + r16], 3);
            r48 = r55 + 1 | 0;
            if (r48 >>> 0 < r51 >>> 0) {
              r55 = r48;
            } else {
              break L686;
            }
          }
        }
      } while (0);
      r48 = __ZN5Avoid18SegmentListWrapper4listEv(r9);
      r20 = r48 + 4 | 0;
      r33 = r48;
      __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r4, HEAP32[r20 >> 2], r33, HEAP32[r48 + 8 >> 2]);
      r46 = HEAP32[r20 >> 2];
      L695 : do {
        if ((r46 | 0) != (r33 | 0)) {
          r20 = r46;
          while (1) {
            __ZN5AvoidL17intersectSegmentsEPNS_6RouterERNSt3__14listINS_11LineSegmentENS2_9allocatorIS4_EEEERS4_(r1, r43, r20 + 8 | 0);
            r47 = HEAP32[r20 + 4 >> 2];
            if ((r47 | 0) == (r33 | 0)) {
              break L695;
            } else {
              r20 = r47;
            }
          }
        }
      } while (0);
      __ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5clearEv(r48 | 0);
      if (r37) {
        break;
      }
      r33 = HEAP32[(r51 << 2 >> 2) + r16];
      r46 = r33 + 8 | 0;
      r52 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r53 = r51;
      r54 = r33;
    }
    __ZN5AvoidL16processEventHoriEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r8, r9, r54, 1);
    r33 = r51 + 1 | 0;
    if (r33 >>> 0 > r36 >>> 0) {
      break;
    } else {
      r49 = r53;
      r50 = r52;
      r51 = r33;
    }
  }
  if ((HEAP32[r42 >> 2] | 0) != 0) {
    ___assert_func(5244520, 1989, 5259068, 5248616);
  }
  L707 : do {
    if (!r41) {
      r42 = 0;
      while (1) {
        r51 = HEAP32[(r42 << 2 >> 2) + r16];
        if ((r51 | 0) != 0) {
          __ZdlPv(r51);
        }
        r51 = r42 + 1 | 0;
        if ((r51 | 0) == (r36 | 0)) {
          break L707;
        } else {
          r42 = r51;
        }
      }
    }
  } while (0);
  if ((r17 | 0) != 0) {
    __ZdaPv(r17);
  }
  r17 = HEAP32[r38 >> 2];
  if ((r17 | 0) == (r40 | 0)) {
    __ZN5Avoid18SegmentListWrapperD1Ev(r9);
    __ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev(r8);
    __ZN5Avoid18SegmentListWrapperD1Ev(r7);
    STACKTOP = r3;
    return;
  }
  r38 = r11 | 0;
  r36 = r17;
  while (1) {
    r17 = r36 + 8 | 0;
    __ZN5Avoid11LineSegment17addEdgeHorizontalEPNS_6RouterE(r17, r1);
    __ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj(r17, r1, 0);
    __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r11, r43, r36);
    r17 = HEAP32[r38 >> 2];
    if ((r17 | 0) == (r40 | 0)) {
      break;
    } else {
      r36 = r17;
    }
  }
  __ZN5Avoid18SegmentListWrapperD1Ev(r9);
  __ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev(r8);
  __ZN5Avoid18SegmentListWrapperD1Ev(r7);
  STACKTOP = r3;
  return;
}
__ZN5Avoid32generateStaticOrthogonalVisGraphEPNS_6RouterE["X"] = 1;
function __ZN5Avoid18SegmentListWrapperC1Ev(r1) {
  __ZN5Avoid18SegmentListWrapperC2Ev(r1);
  return;
}
function __ZN5Avoid18SegmentListWrapper4listEv(r1) {
  return r1 | 0;
}
function __ZN5AvoidL16processEventVertEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64;
  r6 = r4 >> 2;
  r7 = 0;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 636 | 0;
  r9 = r8;
  r10 = r8 + 8;
  r11 = r8 + 16;
  r12 = r8 + 24;
  r13 = r8 + 32;
  r14 = r8 + 36;
  r15 = r8 + 44, r16 = r15 >> 2;
  r17 = r8 + 48, r18 = r17 >> 2;
  r19 = r8 + 56, r20 = r19 >> 2;
  r21 = r8 + 64, r22 = r21 >> 2;
  r23 = r8 + 72, r24 = r23 >> 2;
  r25 = r8 + 80, r26 = r25 >> 2;
  r27 = r8 + 88;
  r28 = r8 + 96;
  r29 = r8 + 104;
  r30 = r8 + 128;
  r31 = r8 + 152;
  r32 = r8 + 204;
  r33 = r8 + 256;
  r34 = r8 + 308;
  r35 = r8 + 360;
  r36 = r8 + 364;
  r37 = r8 + 388;
  r38 = r8 + 440;
  r39 = r8 + 444;
  r40 = r8 + 468;
  r41 = r8 + 476;
  r42 = r8 + 528;
  r43 = r8 + 580;
  r44 = r8 + 632;
  r45 = r4 + 4 | 0;
  r46 = HEAP32[r45 >> 2];
  HEAP32[r16] = r46;
  do {
    if ((r5 | 0) == 2) {
      r47 = HEAP32[r6];
      if ((r47 | 0) == 3) {
        r7 = 586;
        break;
      } else {
        r48 = r46;
        r49 = r47;
        r7 = 594;
        break;
      }
    } else if ((r5 | 0) == 1) {
      if ((HEAP32[r6] | 0) == 1) {
        r7 = 586;
        break;
      }
      STACKTOP = r8;
      return;
    } else {
      r50 = 0;
      r51 = r46, r52 = r51 >> 2;
    }
  } while (0);
  do {
    if (r7 == 586) {
      __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r14, r2 | 0, r15);
      r46 = HEAP32[r14 >> 2];
      r47 = (HEAP8[r14 + 4 | 0] & 1) << 24 >> 24 == 0;
      r53 = HEAP32[r16];
      r54 = (r53 + 64 | 0) >> 2;
      HEAP32[r54] = r46;
      if (r47) {
        ___assert_func(5244520, 1495, 5255588, 5250480);
        r55 = HEAP32[r54];
      } else {
        r55 = r46;
      }
      if ((r55 | 0) == (HEAP32[r2 >> 2] | 0)) {
        r56 = r55;
      } else {
        r46 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r55 | 0) + 16 >> 2];
        HEAP32[r53 + 56 >> 2] = r46;
        HEAP32[r46 + 60 >> 2] = r53;
        r56 = HEAP32[r54];
      }
      r54 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r56 | 0);
      if ((r54 | 0) != (r2 + 4 | 0)) {
        r46 = HEAP32[r54 + 16 >> 2];
        HEAP32[r53 + 60 >> 2] = r46;
        HEAP32[r46 + 56 >> 2] = r53;
      }
      if ((r5 | 0) != 2) {
        r50 = 0;
        r51 = r53, r52 = r51 >> 2;
        break;
      }
      r48 = r53;
      r49 = HEAP32[r6];
      r7 = 594;
      break;
    }
  } while (0);
  do {
    if (r7 == 594) {
      if ((r49 | 0) == 3) {
        r56 = HEAP32[HEAP32[r45 >> 2] + 8 >> 2];
        r55 = r56 + 12 | 0;
        r14 = __ZN5Avoid4Node15firstPointAboveEj(r48, 0);
        r53 = __ZN5Avoid4Node15firstPointBelowEj(r48, 0);
        HEAPF64[tempDoublePtr >> 3] = r53, HEAP32[r40 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r40 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        r46 = __ZN5Avoid4Node13isInsideShapeEj(r48);
        r54 = r56 + 120 | 0;
        r47 = HEAP32[r54 >> 2];
        do {
          if ((r47 & 4 | 0) == 0) {
            r57 = 0;
            r58 = r47;
          } else {
            r59 = r55 | 0;
            if (r14 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r59 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r59 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
              r57 = 0;
              r58 = r47;
              break;
            }
            __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r41, r14, r59, r4 + 8 | 0, 1, 0, r56);
            r59 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r41);
            __ZN5Avoid11LineSegmentD1Ev(r41);
            r57 = r59;
            r58 = HEAP32[r54 >> 2];
          }
        } while (0);
        do {
          if ((r58 & 8 | 0) == 0) {
            r60 = r57;
            r61 = 0;
          } else {
            r54 = r55 | 0;
            r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r54 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r54 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            if (r14 >= r53) {
              r60 = r57;
              r61 = 0;
              break;
            }
            __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r42, r14, r40, r4 + 8 | 0, 1, r56, 0);
            r14 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r42);
            __ZN5Avoid11LineSegmentD1Ev(r42);
            r60 = 0;
            r61 = r14;
          }
        } while (0);
        r53 = (r60 | 0) != 0;
        r14 = (r61 | 0) == 0;
        r54 = r14 & (r53 ^ 1);
        if (r54) {
          __ZN5Avoid11LineSegmentC1ERKdS2_PNS_7VertInfE(r43, r55 | 0, r4 + 8 | 0, r56);
          __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r43);
          __ZN5Avoid11LineSegmentD1Ev(r43);
        }
        if (r46 | r54) {
          r50 = 1;
          r51 = r48, r52 = r51 >> 2;
          break;
        }
        r54 = __Znwj(140);
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r54, r1, 5274184, r55, 1);
        HEAP32[r44 >> 2] = r54;
        if (r53) {
          __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r11, r60 + 28 | 0, r44);
        }
        if (r14) {
          r50 = 1;
          r51 = r48, r52 = r51 >> 2;
          break;
        }
        __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r12, r61 + 28 | 0, r44);
        r50 = 1;
        r51 = r48, r52 = r51 >> 2;
        break;
      } else if (!((r49 | 0) == 1 | (r49 | 0) == 5)) {
        r50 = 1;
        r51 = r48, r52 = r51 >> 2;
        break;
      }
      r14 = (r49 | 0) == 1 ? r48 + 32 | 0 : r48 + 48 | 0;
      r53 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      HEAPF64[tempDoublePtr >> 3] = r53, HEAP32[r18] = HEAP32[tempDoublePtr >> 2], HEAP32[r18 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      r14 = r48 + 24 | 0;
      r54 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      HEAPF64[tempDoublePtr >> 3] = r54, HEAP32[r20] = HEAP32[tempDoublePtr >> 2], HEAP32[r20 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      r14 = r48 + 40 | 0;
      r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      HEAPF64[tempDoublePtr >> 3] = r47, HEAP32[r22] = HEAP32[tempDoublePtr >> 2], HEAP32[r22 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      __ZN5Avoid4Node27findFirstPointAboveAndBelowEjdRdS1_S1_S1_(r48, 0, r53, r23, r25, r27, r28);
      r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r59 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r28 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r28 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r14 < r59) {
        r62 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r24], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 1], HEAPF64[tempDoublePtr >> 3]);
        if (!(r14 <= r62 | r14 < r54)) {
          __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r34, r62, r27, r17, 1, 0, 0);
          r62 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r34);
          __ZN5Avoid11LineSegmentD1Ev(r34);
          r14 = __Znwj(140);
          __ZN5Avoid5PointC1Edd(r36, r54, (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]));
          __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r14, r1, 5274176, r36, 1);
          HEAP32[r35 >> 2] = r14;
          __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r10, r62 + 28 | 0, r35);
        }
        if (r59 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r26], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r26 + 1], HEAPF64[tempDoublePtr >> 3]) | r59 > r47) {
          r50 = 1;
          r51 = r48, r52 = r51 >> 2;
          break;
        }
        __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r37, r59, r25, r17, 1, 0, 0);
        r59 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r37);
        __ZN5Avoid11LineSegmentD1Ev(r37);
        r62 = __Znwj(140);
        __ZN5Avoid5PointC1Edd(r39, r47, (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]));
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r62, r1, 5274176, r39, 1);
        HEAP32[r38 >> 2] = r62;
        __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r9, r59 + 28 | 0, r38);
        r50 = 1;
        r51 = r48, r52 = r51 >> 2;
        break;
      }
      r59 = __Znwj(140);
      r62 = r59;
      __ZN5Avoid5PointC1Edd(r29, r54, r53);
      r14 = r1;
      __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r59, r14, 5274176, r29, 1);
      r59 = __Znwj(140);
      r63 = r59;
      __ZN5Avoid5PointC1Edd(r30, r47, r53);
      __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r59, r14, 5274176, r30, 1);
      r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r24], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 1], HEAPF64[tempDoublePtr >> 3]);
      if (r14 < r54) {
        __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r31, r14, r19, r17, 1, 0, r62);
        __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r31);
        __ZN5Avoid11LineSegmentD1Ev(r31);
        r64 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 1], HEAPF64[tempDoublePtr >> 3]);
      } else {
        r64 = r54;
      }
      __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r32, r64, r21, r17, 1, r62, r63);
      __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r32);
      __ZN5Avoid11LineSegmentD1Ev(r32);
      r62 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 1], HEAPF64[tempDoublePtr >> 3]);
      if (r62 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r26], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r26 + 1], HEAPF64[tempDoublePtr >> 3])) {
        r50 = 1;
        r51 = r48, r52 = r51 >> 2;
        break;
      }
      __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r33, r62, r25, r17, 1, r63, 0);
      __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r33);
      __ZN5Avoid11LineSegmentD1Ev(r33);
      r50 = 1;
      r51 = r48, r52 = r51 >> 2;
    }
  } while (0);
  do {
    if ((r5 | 0) == 3) {
      if ((HEAP32[r6] | 0) == 5) {
        break;
      } else {
        r7 = 645;
        break;
      }
    } else {
      r7 = 645;
    }
  } while (0);
  do {
    if (r7 == 645) {
      if (!r50) {
        STACKTOP = r8;
        return;
      }
      if ((HEAP32[r6] | 0) == 3) {
        break;
      }
      STACKTOP = r8;
      return;
    }
  } while (0);
  r50 = r51 + 56 | 0;
  r7 = HEAP32[r50 >> 2];
  r5 = HEAP32[r52 + 15];
  if ((r7 | 0) != 0) {
    HEAP32[r7 + 60 >> 2] = r5;
  }
  if ((r5 | 0) != 0) {
    HEAP32[r5 + 56 >> 2] = HEAP32[r50 >> 2];
  }
  if ((HEAP32[r6] | 0) == 3) {
    __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r13, r2 | 0, HEAP32[r52 + 16]);
    if ((r51 | 0) == 0) {
      STACKTOP = r8;
      return;
    }
    FUNCTION_TABLE[HEAP32[HEAP32[r52] + 4 >> 2]](r51);
    STACKTOP = r8;
    return;
  }
  if ((__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r2 | 0, r15) | 0) != 1) {
    ___assert_func(5244520, 1655, 5255588, 5250372);
  }
  r15 = HEAP32[r16];
  if ((r15 | 0) == 0) {
    STACKTOP = r8;
    return;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 4 >> 2]](r15);
  STACKTOP = r8;
  return;
}
__ZN5AvoidL16processEventVertEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj["X"] = 1;
function __ZN5AvoidL16processEventHoriEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53;
  r6 = r4 >> 2;
  r7 = 0;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 468 | 0;
  r9 = r8;
  r10 = r8 + 8;
  r11 = r8 + 16;
  r12 = r8 + 24;
  r13 = r8 + 32;
  r14 = r8 + 36;
  r15 = r8 + 44, r16 = r15 >> 2;
  r17 = r8 + 48, r18 = r17 >> 2;
  r19 = r8 + 56;
  r20 = r8 + 64;
  r21 = r8 + 72;
  r22 = r8 + 80;
  r23 = r8 + 88;
  r24 = r8 + 140;
  r25 = r8 + 144;
  r26 = r8 + 168;
  r27 = r8 + 172;
  r28 = r8 + 196;
  r29 = r8 + 248;
  r30 = r8 + 252;
  r31 = r8 + 276;
  r32 = r8 + 328;
  r33 = r8 + 332;
  r34 = r8 + 356;
  r35 = r8 + 364;
  r36 = r8 + 416;
  r37 = r4 + 4 | 0;
  r38 = HEAP32[r37 >> 2];
  HEAP32[r16] = r38;
  do {
    if ((r5 | 0) == 2) {
      r39 = HEAP32[r6];
      if ((r39 | 0) == 3) {
        r7 = 670;
        break;
      } else {
        r40 = r38;
        r41 = r39;
        r7 = 678;
        break;
      }
    } else if ((r5 | 0) == 1) {
      if ((HEAP32[r6] | 0) == 1) {
        r7 = 670;
        break;
      }
      STACKTOP = r8;
      return;
    } else {
      r42 = 0;
      r43 = r38, r44 = r43 >> 2;
    }
  } while (0);
  do {
    if (r7 == 670) {
      __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r14, r2 | 0, r15);
      r38 = HEAP32[r14 >> 2];
      r39 = (HEAP8[r14 + 4 | 0] & 1) << 24 >> 24 == 0;
      r45 = HEAP32[r16];
      r46 = (r45 + 64 | 0) >> 2;
      HEAP32[r46] = r38;
      if (r39) {
        ___assert_func(5244520, 1678, 5255704, 5250480);
        r47 = HEAP32[r46];
      } else {
        r47 = r38;
      }
      if ((r47 | 0) == (HEAP32[r2 >> 2] | 0)) {
        r48 = r47;
      } else {
        r38 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r47 | 0) + 16 >> 2];
        HEAP32[r45 + 56 >> 2] = r38;
        HEAP32[r38 + 60 >> 2] = r45;
        r48 = HEAP32[r46];
      }
      r46 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r48 | 0);
      if ((r46 | 0) != (r2 + 4 | 0)) {
        r38 = HEAP32[r46 + 16 >> 2];
        HEAP32[r45 + 60 >> 2] = r38;
        HEAP32[r38 + 56 >> 2] = r45;
      }
      if ((r5 | 0) != 2) {
        r42 = 0;
        r43 = r45, r44 = r43 >> 2;
        break;
      }
      r40 = r45;
      r41 = HEAP32[r6];
      r7 = 678;
      break;
    }
  } while (0);
  do {
    if (r7 == 678) {
      if ((r41 | 0) == 3) {
        r48 = HEAP32[HEAP32[r37 >> 2] + 8 >> 2];
        r47 = __ZN5Avoid4Node15firstPointAboveEj(r40, 1);
        r14 = __ZN5Avoid4Node15firstPointBelowEj(r40, 1);
        HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r34 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r34 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        r45 = r48 + 120 | 0;
        r38 = HEAP32[r45 >> 2];
        do {
          if ((r38 & 1 | 0) == 0) {
            r49 = r38;
          } else {
            r46 = r48 + 20 | 0;
            if (r47 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
              r49 = r38;
              break;
            }
            __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r35, r47, r46, r4 + 8 | 0, 0, 0, 0);
            __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r35);
            __ZN5Avoid11LineSegmentD1Ev(r35);
            r49 = HEAP32[r45 >> 2];
          }
        } while (0);
        if ((r49 & 2 | 0) == 0) {
          r42 = 1;
          r43 = r40, r44 = r43 >> 2;
          break;
        }
        r45 = r48 + 20 | 0;
        r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r45 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r45 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        if (r47 >= r14) {
          r42 = 1;
          r43 = r40, r44 = r43 >> 2;
          break;
        }
        __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r36, r47, r34, r4 + 8 | 0, 0, 0, 0);
        __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r36);
        __ZN5Avoid11LineSegmentD1Ev(r36);
        r42 = 1;
        r43 = r40, r44 = r43 >> 2;
        break;
      } else if (!((r41 | 0) == 1 | (r41 | 0) == 5)) {
        r42 = 1;
        r43 = r40, r44 = r43 >> 2;
        break;
      }
      r47 = (r41 | 0) == 1 ? r40 + 24 | 0 : r40 + 40 | 0;
      r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r47 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r47 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      HEAPF64[tempDoublePtr >> 3] = r45, HEAP32[r18] = HEAP32[tempDoublePtr >> 2], HEAP32[r18 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      r47 = r40 + 32 | 0;
      r38 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r47 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r47 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r47 = r40 + 48 | 0;
      r46 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r47 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r47 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      __ZN5Avoid4Node27findFirstPointAboveAndBelowEjdRdS1_S1_S1_(r40, 1, r45, r19, r20, r21, r22);
      r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r21 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r21 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r39 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r45 >= r47) {
        __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r23, r39, r20, r17, 0, 0, 0);
        r50 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r23);
        __ZN5Avoid11LineSegmentD1Ev(r23);
        r51 = __Znwj(140);
        r52 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]);
        __ZN5Avoid5PointC1Edd(r25, r52, r38);
        r53 = r1;
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r51, r53, 5274176, r25, 1);
        HEAP32[r24 >> 2] = r51;
        r51 = __Znwj(140);
        __ZN5Avoid5PointC1Edd(r27, r52, r46);
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r51, r53, 5274176, r27, 1);
        HEAP32[r26 >> 2] = r51;
        r51 = r50 + 28 | 0;
        __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r12, r51, r24);
        __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r11, r51, r26);
        r42 = 1;
        r43 = r40, r44 = r43 >> 2;
        break;
      }
      if (!(r45 <= r39 | r45 < r38)) {
        __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r28, r39, r21, r17, 0, 0, 0);
        r39 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r28);
        __ZN5Avoid11LineSegmentD1Ev(r28);
        r45 = __Znwj(140);
        __ZN5Avoid5PointC1Edd(r30, (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]), r38);
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r45, r1, 5274176, r30, 1);
        HEAP32[r29 >> 2] = r45;
        __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r10, r39 + 28 | 0, r29);
      }
      if (r47 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) | r47 > r46) {
        r42 = 1;
        r43 = r40, r44 = r43 >> 2;
        break;
      }
      __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r31, r47, r20, r17, 0, 0, 0);
      r47 = __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r3, r31);
      __ZN5Avoid11LineSegmentD1Ev(r31);
      r39 = __Znwj(140);
      __ZN5Avoid5PointC1Edd(r33, (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]), r46);
      __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r39, r1, 5274176, r33, 1);
      HEAP32[r32 >> 2] = r39;
      __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r9, r47 + 28 | 0, r32);
      r42 = 1;
      r43 = r40, r44 = r43 >> 2;
    }
  } while (0);
  do {
    if ((r5 | 0) == 3) {
      if ((HEAP32[r6] | 0) == 5) {
        break;
      } else {
        r7 = 711;
        break;
      }
    } else {
      r7 = 711;
    }
  } while (0);
  do {
    if (r7 == 711) {
      if (!r42) {
        STACKTOP = r8;
        return;
      }
      if ((HEAP32[r6] | 0) == 3) {
        break;
      }
      STACKTOP = r8;
      return;
    }
  } while (0);
  r42 = r43 + 56 | 0;
  r7 = HEAP32[r42 >> 2];
  r5 = HEAP32[r44 + 15];
  if ((r7 | 0) != 0) {
    HEAP32[r7 + 60 >> 2] = r5;
  }
  if ((r5 | 0) != 0) {
    HEAP32[r5 + 56 >> 2] = HEAP32[r42 >> 2];
  }
  if ((HEAP32[r6] | 0) == 3) {
    __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r13, r2 | 0, HEAP32[r44 + 16]);
    if ((r43 | 0) == 0) {
      STACKTOP = r8;
      return;
    }
    FUNCTION_TABLE[HEAP32[HEAP32[r44] + 4 >> 2]](r43);
    STACKTOP = r8;
    return;
  }
  if ((__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r2 | 0, r15) | 0) != 1) {
    ___assert_func(5244520, 1798, 5255704, 5250372);
  }
  r15 = HEAP32[r16];
  if ((r15 | 0) == 0) {
    STACKTOP = r8;
    return;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 4 >> 2]](r15);
  STACKTOP = r8;
  return;
}
__ZN5AvoidL16processEventHoriEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj["X"] = 1;
function __ZN5AvoidL17intersectSegmentsEPNS_6RouterERNSt3__14listINS_11LineSegmentENS2_9allocatorIS4_EEEERS4_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 12;
  r8 = r4 + 16;
  r9 = r4 + 28;
  if ((HEAP32[r2 + 8 >> 2] | 0) == 0) {
    ___assert_func(5244520, 1401, 5255504, 5249544);
  }
  r10 = HEAP32[r2 + 4 >> 2];
  r11 = r2;
  if ((r10 | 0) == (r11 | 0)) {
    __ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj(r3, r1, 1);
    STACKTOP = r4;
    return;
  }
  r12 = r3 | 0;
  r13 = (r3 + 16 | 0) >> 2;
  r14 = r6 | 0;
  r15 = r7 | 0;
  r16 = r8 | 0;
  r17 = r8 + 4 | 0;
  r18 = r17;
  r19 = r3 + 40 | 0;
  r20 = r3 + 8 | 0;
  r21 = r17;
  r17 = r10;
  while (1) {
    r10 = r17 + 8 | 0;
    r22 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r23 = (r17 + 24 | 0) >> 2;
    r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r23], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r23 + 1], HEAPF64[tempDoublePtr >> 3]);
    if (r22 > r24) {
      r25 = 0;
    } else {
      r25 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) >= r24;
    }
    r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
    r22 = r10 | 0;
    r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    L905 : do {
      if (r24 < r26) {
        r27 = HEAP32[r17 + 4 >> 2];
      } else {
        do {
          if (r24 == r26) {
            if (!r25) {
              break;
            }
            __ZN5Avoid11LineSegment22insertBreakpointsBeginEPNS_6RouterERS0_(r10, r1, r3);
          } else {
            r22 = (r17 + 16 | 0) >> 2;
            r28 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 1], HEAPF64[tempDoublePtr >> 3]);
            if (r24 == r28) {
              if (!r25) {
                break;
              }
              __ZN5Avoid11LineSegment17addEdgeHorizontalEPNS_6RouterE(r10, r1);
              __ZN5Avoid11LineSegment23insertBreakpointsFinishEPNS_6RouterERS0_(r10, r1, r3);
              __ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj(r10, r1, 0);
              __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r6, r2, r17);
              r27 = HEAP32[r14 >> 2];
              break L905;
            }
            if (r24 > r28) {
              __ZN5Avoid11LineSegment17addEdgeHorizontalEPNS_6RouterE(r10, r1);
              __ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj(r10, r1, 0);
              __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r7, r2, r17);
              r27 = HEAP32[r15 >> 2];
              break L905;
            }
            if (r24 > r26) {
              r29 = r24;
              r30 = r28;
            } else {
              ___assert_func(5244520, 1453, 5255504, 5249312);
              r29 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
              r30 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 1], HEAPF64[tempDoublePtr >> 3]);
            }
            if (r29 >= r30) {
              ___assert_func(5244520, 1454, 5255504, 5249036);
            }
            if (!r25) {
              break;
            }
            __ZN5Avoid11LineSegment33addEdgeHorizontalTillIntersectionEPNS_6RouterERS0_(r8, r10, r1, r3);
            r22 = HEAP32[r16 >> 2];
            L926 : do {
              if ((r22 | 0) != (r18 | 0)) {
                r28 = r22;
                while (1) {
                  r31 = HEAP32[r28 + 16 >> 2];
                  __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r9, (HEAP32[tempDoublePtr >> 2] = HEAP32[r23], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r23 + 1], HEAPF64[tempDoublePtr >> 3]), r31, __ZN5AvoidL23getPosVertInfDirectionsEPNS_7VertInfEj(r31, 1));
                  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r5, r19, r9);
                  r31 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r28 | 0);
                  if ((r31 | 0) == (r21 | 0)) {
                    break L926;
                  } else {
                    r28 = r31;
                  }
                }
              }
            } while (0);
            __ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev(r8);
          }
        } while (0);
        r27 = HEAP32[r17 + 4 >> 2];
      }
    } while (0);
    if ((r27 | 0) == (r11 | 0)) {
      break;
    } else {
      r17 = r27;
    }
  }
  __ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj(r3, r1, 1);
  STACKTOP = r4;
  return;
}
__ZN5AvoidL17intersectSegmentsEPNS_6RouterERNSt3__14listINS_11LineSegmentENS2_9allocatorIS4_EEEERS4_["X"] = 1;
function __ZN5Avoid11LineSegment17addEdgeHorizontalEPNS_6RouterE(r1, r2) {
  var r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  __ZN5Avoid11LineSegment15horiCommitBeginEPNS_6RouterEPNS_7VertInfE(r1, r2, 0);
  __ZN5Avoid11LineSegment16horiCommitFinishEPNS_6RouterEPNS_7VertInfE(r1, r2, 0);
  r2 = r1 + 8 | 0;
  __ZN5Avoid11LineSegment15addSegmentsUpToEd(r3, r1, (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  STACKTOP = r3;
  return;
}
function __ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 96 | 0;
  r6 = r5;
  r7 = r5 + 8;
  r8 = r5 + 16;
  r9 = r5 + 40;
  r10 = r5 + 56;
  r11 = r5 + 80;
  r12 = r1 + 40 | 0;
  r13 = r1 + 48 | 0;
  r14 = (HEAP32[r13 >> 2] | 0) == 0;
  do {
    if (r14) {
      r15 = r1 | 0;
      r16 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r4 = 768;
      break;
    } else {
      r15 = HEAP32[r12 >> 2] + 16 | 0;
      r17 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r15 = r1 | 0;
      r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r17 > r18) {
        r16 = r18;
        r4 = 768;
        break;
      } else {
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 768) {
      r18 = (r1 | 0) >> 2;
      if (r16 != -1.7976931348623157e+308) {
        r17 = r1 + 16 | 0;
        r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        __ZN5Avoid5PointC1Edd(r8, r15, r15);
        r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]);
        r17 = __ZN5Avoid5PointixEj(r8, r3);
        HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r17 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r17 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        r17 = __Znwj(140);
        __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r17, r2, 5274184, r8, 1);
        __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r9, (HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]), r17, 0);
        __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r7, r12, r9);
        break;
      }
      if (r14) {
        ___assert_func(5244520, 1163, 5261608, 5250244);
      }
      r17 = HEAP32[r12 >> 2] + 16 | 0;
      r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r17 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r18] = HEAP32[tempDoublePtr >> 2], HEAP32[r18 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    }
  } while (0);
  do {
    if ((HEAP32[r13 >> 2] | 0) == 0) {
      r14 = r1 + 8 | 0;
      r19 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r4 = 778;
      break;
    } else {
      r14 = r1 + 44 | 0;
      r9 = r14;
      r7 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r9) + 16 | 0;
      r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r7 = r1 + 8 | 0;
      r16 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r8 < r16) {
        r19 = r16;
        r4 = 778;
        break;
      } else {
        r20 = r14;
        r21 = r9;
        break;
      }
    }
  } while (0);
  do {
    if (r4 == 778) {
      r13 = (r1 + 8 | 0) >> 2;
      if (r19 == 1.7976931348623157e+308) {
        r9 = r1 + 44 | 0;
        r14 = r9;
        r16 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r14) + 16 | 0;
        r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r13] = HEAP32[tempDoublePtr >> 2], HEAP32[r13 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        r20 = r9;
        r21 = r14;
        break;
      }
      r14 = r1 + 16 | 0;
      r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      __ZN5Avoid5PointC1Edd(r10, r9, r9);
      r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
      r14 = __ZN5Avoid5PointixEj(r10, r3);
      HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r14 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r14 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      r14 = __Znwj(140);
      __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r14, r2, 5274184, r10, 1);
      __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r11, (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]), r14, 0);
      __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r6, r12, r11);
      r14 = r1 + 44 | 0;
      r20 = r14;
      r21 = r14;
    }
  } while (0);
  __ZN5Avoid11LineSegment27setLongRangeVisibilityFlagsEj(r1, r3);
  r1 = r12 | 0;
  r12 = HEAP32[r1 >> 2];
  r11 = r20;
  r20 = r12;
  r6 = r12;
  L959 : while (1) {
    r12 = r6 + 24 | 0;
    r10 = r20;
    while (1) {
      if ((r10 | 0) == (r11 | 0)) {
        break L959;
      }
      r2 = __ZN5Avoid5PointixEj(HEAP32[r12 >> 2] + 12 | 0, r3);
      r19 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r2 = (r10 + 24 | 0) >> 2;
      r14 = __ZN5Avoid5PointixEj(HEAP32[r2] + 12 | 0, r3);
      L964 : do {
        if (r19 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          r13 = r10 + 28 | 0;
          r9 = r6;
          r8 = r12, r16 = r8 >> 2;
          while (1) {
            if ((r10 | 0) == (r9 | 0)) {
              ___assert_func(5244520, 1229, 5261608, 5250144);
            }
            r7 = HEAP32[r2];
            if (__ZNK5Avoid5PointneERKS0_(r7 + 12 | 0, HEAP32[r16] + 12 | 0)) {
              r22 = r7;
            } else {
              ___assert_func(5244520, 1231, 5261608, 525e4);
              r22 = HEAP32[r2];
            }
            L974 : do {
              if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r22 + 10 >> 1])) {
                if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[HEAP32[r16] + 10 >> 1])) {
                  break;
                }
                r7 = r9 + 24 | 0;
                r18 = HEAP32[r7 >> 2];
                L977 : do {
                  if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r18 + 10 >> 1])) {
                    r15 = HEAP32[r1 >> 2];
                    r17 = r9;
                    r23 = r7;
                    r24 = r18;
                    while (1) {
                      if ((r17 | 0) == (r15 | 0)) {
                        r25 = r23;
                        r26 = r24;
                        break L977;
                      }
                      r27 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r17 | 0);
                      r28 = r27 + 24 | 0;
                      r29 = r28;
                      r30 = HEAP32[r28 >> 2];
                      r28 = r30;
                      if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r30 + 10 >> 1])) {
                        r17 = r27;
                        r23 = r29;
                        r24 = r28;
                      } else {
                        r25 = r29;
                        r26 = r28;
                        break L977;
                      }
                    }
                  } else {
                    r25 = r7;
                    r26 = r18;
                  }
                } while (0);
                do {
                  if ((HEAP32[r13 >> 2] & 2 | 0) == 0) {
                    r31 = r10;
                  } else {
                    if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[r26 + 10 >> 1])) {
                      r31 = r10;
                      break;
                    }
                    r18 = __Znwj(68);
                    __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r18, HEAP32[r25 >> 2], HEAP32[r2], 1);
                    r7 = __ZN5Avoid5PointixEj(HEAP32[r2] + 12 | 0, r3);
                    r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                    r7 = __ZN5Avoid5PointixEj(HEAP32[r25 >> 2] + 12 | 0, r3);
                    __ZN5Avoid7EdgeInf7setDistEd(r18, r24 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
                    r31 = r10;
                    break;
                  }
                } while (0);
                while (1) {
                  r32 = (r31 + 24 | 0) >> 2;
                  if (!__ZNK5Avoid6VertID8isConnPtEv(HEAP16[HEAP32[r32] + 10 >> 1])) {
                    break;
                  }
                  r7 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r31 | 0);
                  if ((r7 | 0) == (r21 | 0)) {
                    break L974;
                  }
                  r31 = r7;
                }
                if ((HEAP32[r9 + 28 >> 2] & 1 | 0) == 0) {
                  break;
                }
                r7 = __Znwj(68);
                __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r7, HEAP32[r16], HEAP32[r32], 1);
                r24 = __ZN5Avoid5PointixEj(HEAP32[r32] + 12 | 0, r3);
                r18 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r24 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r24 = __ZN5Avoid5PointixEj(HEAP32[r16] + 12 | 0, r3);
                __ZN5Avoid7EdgeInf7setDistEd(r7, r18 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r24 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
              }
            } while (0);
            do {
              if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[HEAP32[r16] + 10 >> 1])) {
                if ((HEAP32[r9 + 28 >> 2] & 1 | 0) == 0) {
                  break;
                } else {
                  r4 = 812;
                  break;
                }
              } else {
                r4 = 812;
              }
            } while (0);
            do {
              if (r4 == 812) {
                r4 = 0;
                if (__ZNK5Avoid6VertID8isConnPtEv(HEAP16[HEAP32[r2] + 10 >> 1])) {
                  if ((HEAP32[r13 >> 2] & 2 | 0) == 0) {
                    break;
                  }
                }
                r24 = __Znwj(68);
                __ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b(r24, HEAP32[r16], HEAP32[r2], 1);
                r18 = __ZN5Avoid5PointixEj(HEAP32[r2] + 12 | 0, r3);
                r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                r18 = __ZN5Avoid5PointixEj(HEAP32[r16] + 12 | 0, r3);
                __ZN5Avoid7EdgeInf7setDistEd(r24, r7 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
              }
            } while (0);
            r18 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r9 | 0);
            r7 = r18;
            r24 = r18 + 24 | 0;
            r18 = r24;
            r23 = __ZN5Avoid5PointixEj(HEAP32[r24 >> 2] + 12 | 0, r3);
            r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r23 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r23 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            r23 = __ZN5Avoid5PointixEj(HEAP32[r2] + 12 | 0, r3);
            if (r24 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r23 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r23 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
              r9 = r7;
              r8 = r18, r16 = r8 >> 2;
            } else {
              r33 = r7;
              r34 = r18;
              break L964;
            }
          }
        } else {
          r33 = r6;
          r34 = r12;
        }
      } while (0);
      r2 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r10 | 0);
      r14 = r2;
      if ((r2 | 0) == (r21 | 0)) {
        r20 = r14;
        r6 = r33;
        continue L959;
      }
      r19 = __ZN5Avoid5PointixEj(HEAP32[r34 >> 2] + 12 | 0, r3);
      r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r19 = __ZN5Avoid5PointixEj(HEAP32[r2 + 24 >> 2] + 12 | 0, r3);
      if (r8 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r10 = r14;
      } else {
        r20 = r14;
        r6 = r33;
        continue L959;
      }
    }
  }
  STACKTOP = r5;
  return;
}
__ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj["X"] = 1;
function __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZN5Avoid11LineSegmentD1Ev(r3 + 8 | 0);
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZN5Avoid18SegmentListWrapperD1Ev(r1) {
  __ZN5Avoid18SegmentListWrapperD2Ev(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid23improveOrthogonalRoutesEPNS_6RouterE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r3 = r2;
  r4 = r2 + 12;
  r5 = r2 + 24;
  r6 = r2 + 36;
  r7 = r1 + 148 | 0;
  __ZN5Avoid5Timer8RegisterENS_10TimerIndexEb(r7, 9);
  __ZN5AvoidL24simplifyOrthogonalRoutesEPNS_6RouterE(r1);
  __ZN5Avoid34buildConnectorRouteCheckpointCacheEPNS_6RouterE(r1);
  r8 = r1;
  if (__ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r8, 4) == 0) {
    __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC1ERKS9_(r3 | 0);
    r9 = r4 | 0;
    r10 = r4;
    r11 = r4 + 4 | 0;
    r12 = r4 + 8 | 0;
    HEAP32[r9 >> 2] = r10;
    HEAP32[r11 >> 2] = r10;
    HEAP32[r12 >> 2] = 0;
    __ZN5AvoidL30buildOrthogonalNudgingSegmentsEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, 0, r4);
    __ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, 0, r4);
    __ZN5AvoidL21nudgeOrthogonalRoutesEPNS_6RouterEjRNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS2_4listIPNS_12ShiftSegmentENS8_ISH_EEEEb(r1, 0, r3, r4, 1);
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r4);
    HEAP32[r9 >> 2] = r10;
    HEAP32[r11 >> 2] = r10;
    HEAP32[r12 >> 2] = 0;
    __ZN5AvoidL30buildOrthogonalNudgingSegmentsEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, 1, r4);
    __ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, 1, r4);
    __ZN5AvoidL21nudgeOrthogonalRoutesEPNS_6RouterEjRNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS2_4listIPNS_12ShiftSegmentENS8_ISH_EEEEb(r1, 1, r3, r4, 1);
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r4);
    __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED1Ev(r3);
  }
  r3 = r5 | 0;
  r4 = r6 | 0;
  r12 = r6;
  r10 = r6 + 4 | 0;
  r11 = r6 + 8 | 0;
  r9 = 0;
  while (1) {
    __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC1ERKS9_(r3);
    __ZN5AvoidL31buildOrthogonalNudgingOrderInfoEPNS_6RouterERNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEE(r1, r5);
    HEAP32[r4 >> 2] = r12;
    HEAP32[r10 >> 2] = r12;
    HEAP32[r11 >> 2] = 0;
    __ZN5AvoidL30buildOrthogonalNudgingSegmentsEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, r9, r6);
    __ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, r9, r6);
    __ZN5AvoidL21nudgeOrthogonalRoutesEPNS_6RouterEjRNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS2_4listIPNS_12ShiftSegmentENS8_ISH_EEEEb(r1, r9, r5, r6, 0);
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r6);
    __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED1Ev(r5);
    r13 = r9 + 1 | 0;
    if (r13 >>> 0 < 2) {
      r9 = r13;
    } else {
      break;
    }
  }
  __ZN5AvoidL24simplifyOrthogonalRoutesEPNS_6RouterE(r1);
  __ZN5Avoid6Router25improveOrthogonalTopologyEv(r8);
  __ZN5Avoid34clearConnectorRouteCheckpointCacheEPNS_6RouterE(r1);
  __ZN5Avoid5Timer4StopEv(r7);
  STACKTOP = r2;
  return;
}
__ZN5Avoid23improveOrthogonalRoutesEPNS_6RouterE["X"] = 1;
function __ZN5AvoidL24simplifyOrthogonalRoutesEPNS_6RouterE(r1) {
  var r2, r3, r4, r5, r6;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 44 | 0;
  r3 = r2;
  r4 = HEAP32[r1 + 20 >> 2];
  r5 = r1 + 16 | 0;
  if ((r4 | 0) == (r5 | 0)) {
    STACKTOP = r2;
    return;
  } else {
    r6 = r4;
  }
  while (1) {
    r4 = HEAP32[r6 + 8 >> 2];
    r1 = r4;
    if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r4 + 8 >> 2]) | 0) == 2) {
      __ZNK5Avoid7Polygon8simplifyEv(r3, __ZN5Avoid7ConnRef12displayRouteEv(r1));
      __ZN5Avoid7ConnRef9set_routeERKNS_7PolygonE(r1, r3);
      __ZN5Avoid7PolygonD1Ev(r3);
    }
    r1 = HEAP32[r6 + 4 >> 2];
    if ((r1 | 0) == (r5 | 0)) {
      break;
    } else {
      r6 = r1;
    }
  }
  STACKTOP = r2;
  return;
}
function __ZN5AvoidL30buildOrthogonalNudgingSegmentsEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 200 | 0;
  r6 = r5;
  r7 = r5 + 12;
  r8 = r5 + 24;
  r9 = r5 + 72;
  r10 = r5 + 96;
  r11 = r5 + 120;
  r12 = r5 + 144;
  r13 = r5 + 156;
  r14 = r5 + 168;
  r15 = r5 + 180;
  r16 = r5 + 184;
  r17 = r5 + 188;
  r18 = r5 + 192;
  r19 = r5 + 196;
  r20 = r1;
  if (__ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r20, 0) == 0) {
    STACKTOP = r5;
    return;
  }
  r21 = __ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(r20, 0);
  r20 = (r6 | 0) >> 2;
  HEAP32[r20] = 0;
  r22 = r6 + 4 | 0;
  HEAP32[r22 >> 2] = 0;
  HEAP32[r6 + 8 >> 2] = 0;
  L1041 : do {
    if (r21) {
      r23 = HEAP32[r1 + 12 >> 2];
      __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEEC1Ej(r7, r23);
      __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r6, HEAP32[r7 >> 2], HEAP32[r7 + 4 >> 2]);
      __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED1Ev(r7);
      if ((r23 | 0) == 0) {
        break;
      }
      r24 = HEAP32[r20];
      r25 = r9 >> 2;
      r26 = r10;
      r27 = r11;
      r28 = r8;
      r29 = r8 + 24 | 0;
      r30 = 0;
      r31 = r1 + 8 | 0;
      while (1) {
        r32 = HEAP32[r31 >> 2];
        r33 = r32 + 8 | 0;
        r34 = HEAP32[r33 >> 2];
        do {
          if ((r34 | 0) != 0) {
            r35 = ___dynamic_cast(r34, 5272672, 5272660);
            r36 = HEAP32[r33 >> 2];
            if ((r36 | 0) == 0) {
              r37 = 0;
            } else {
              r37 = ___dynamic_cast(r36, 5272672, 5272764);
            }
            if ((r35 | 0) != 0) {
              __ZNK5Avoid16PolygonInterface17offsetBoundingBoxEd(r8, __ZNK5Avoid8ShapeRef7polygonEv(r35) | 0, 0);
              r35 = r24 + (r30 * 48 & -1) | 0;
              HEAP32[r35 >> 2] = HEAP32[r28 >> 2];
              HEAP32[r35 + 4 >> 2] = HEAP32[r28 + 4 >> 2];
              HEAP32[r35 + 8 >> 2] = HEAP32[r28 + 8 >> 2];
              HEAP32[r35 + 12 >> 2] = HEAP32[r28 + 12 >> 2];
              HEAP32[r35 + 16 >> 2] = HEAP32[r28 + 16 >> 2];
              HEAP16[r35 + 20 >> 1] = HEAP16[r28 + 20 >> 1];
              r35 = r24 + (r30 * 48 & -1) + 24 | 0;
              HEAP32[r35 >> 2] = HEAP32[r29 >> 2];
              HEAP32[r35 + 4 >> 2] = HEAP32[r29 + 4 >> 2];
              HEAP32[r35 + 8 >> 2] = HEAP32[r29 + 8 >> 2];
              HEAP32[r35 + 12 >> 2] = HEAP32[r29 + 12 >> 2];
              HEAP32[r35 + 16 >> 2] = HEAP32[r29 + 16 >> 2];
              HEAP16[r35 + 20 >> 1] = HEAP16[r29 + 20 >> 1];
              break;
            }
            if ((r37 | 0) == 0) {
              break;
            }
            FUNCTION_TABLE[HEAP32[HEAP32[r37 >> 2] + 8 >> 2]](r9, r37);
            HEAP32[r26 >> 2] = HEAP32[r25];
            HEAP32[r26 + 4 >> 2] = HEAP32[r25 + 1];
            HEAP32[r26 + 8 >> 2] = HEAP32[r25 + 2];
            HEAP32[r26 + 12 >> 2] = HEAP32[r25 + 3];
            HEAP32[r26 + 16 >> 2] = HEAP32[r25 + 4];
            HEAP32[r26 + 20 >> 2] = HEAP32[r25 + 5];
            HEAP32[r27 >> 2] = HEAP32[r25];
            HEAP32[r27 + 4 >> 2] = HEAP32[r25 + 1];
            HEAP32[r27 + 8 >> 2] = HEAP32[r25 + 2];
            HEAP32[r27 + 12 >> 2] = HEAP32[r25 + 3];
            HEAP32[r27 + 16 >> 2] = HEAP32[r25 + 4];
            HEAP32[r27 + 20 >> 2] = HEAP32[r25 + 5];
            r35 = r24 + (r30 * 48 & -1) | 0;
            HEAP32[r35 >> 2] = HEAP32[r26 >> 2];
            HEAP32[r35 + 4 >> 2] = HEAP32[r26 + 4 >> 2];
            HEAP32[r35 + 8 >> 2] = HEAP32[r26 + 8 >> 2];
            HEAP32[r35 + 12 >> 2] = HEAP32[r26 + 12 >> 2];
            HEAP32[r35 + 16 >> 2] = HEAP32[r26 + 16 >> 2];
            HEAP16[r35 + 20 >> 1] = HEAP16[r26 + 20 >> 1];
            r35 = r24 + (r30 * 48 & -1) + 24 | 0;
            HEAP32[r35 >> 2] = HEAP32[r27 >> 2];
            HEAP32[r35 + 4 >> 2] = HEAP32[r27 + 4 >> 2];
            HEAP32[r35 + 8 >> 2] = HEAP32[r27 + 8 >> 2];
            HEAP32[r35 + 12 >> 2] = HEAP32[r27 + 12 >> 2];
            HEAP32[r35 + 16 >> 2] = HEAP32[r27 + 16 >> 2];
            HEAP16[r35 + 20 >> 1] = HEAP16[r27 + 20 >> 1];
          }
        } while (0);
        r33 = r30 + 1 | 0;
        if (r33 >>> 0 < r23 >>> 0) {
          r30 = r33;
          r31 = r32 + 4 | 0;
        } else {
          break L1041;
        }
      }
    }
  } while (0);
  r37 = r2 & 1 ^ 1;
  r9 = HEAP32[r1 + 20 >> 2];
  r8 = r1 + 16 | 0;
  L1061 : do {
    if ((r9 | 0) != (r8 | 0)) {
      r1 = r13 + 4 | 0;
      r11 = r13 | 0;
      r10 = HEAP32[r22 >> 2];
      r7 = HEAP32[r20];
      r31 = (r10 | 0) == (r7 | 0);
      r30 = (r10 - r7 | 0) / 48 & -1;
      r10 = (r12 + 4 | 0) >> 2;
      r23 = (r12 | 0) >> 2;
      r27 = (r14 + 4 | 0) >> 2;
      r24 = (r14 | 0) >> 2;
      r26 = r9;
      while (1) {
        r25 = (r26 + 8 | 0) >> 2;
        r29 = HEAP32[r25];
        L1065 : do {
          if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r29 + 8 >> 2]) | 0) == 2) {
            r28 = __ZN5Avoid7ConnRef12displayRouteEv(r29);
            r33 = r28 >> 2;
            r34 = (r28 + 8 | 0) >> 2;
            r35 = 1;
            while (1) {
              if (r35 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r33] + 16 >> 2]](r28) >>> 0) {
                break L1065;
              }
              r36 = r35 - 1 | 0;
              r38 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r36 * 24 & -1) | 0, r2);
              r39 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r38 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r38 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r38 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r35 * 24 & -1) | 0, r2);
              do {
                if (r39 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r38 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r38 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                  r40 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r36 * 24 & -1) | 0, r37);
                  r41 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r40 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r35 * 24 & -1) | 0, r37);
                  if (r41 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    break;
                  }
                  r40 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r36 * 24 & -1) | 0, r37);
                  r41 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r40 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r35 * 24 & -1) | 0, r37);
                  r42 = r41 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r40 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r40 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r40 = r42 ? r36 : r35;
                  r41 = r42 ? r35 : r36;
                  r42 = r35 - 2 | 0;
                  __ZNK5Avoid7Polygon19checkpointOnSegmentEj(r12, r28, r42);
                  __ZNK5Avoid7Polygon19checkpointOnSegmentEj(r13, r28, r36);
                  __ZNK5Avoid7Polygon19checkpointOnSegmentEj(r14, r28, r35);
                  L1084 : do {
                    if ((HEAP32[r1 >> 2] | 0) == (HEAP32[r11 >> 2] | 0) | r21) {
                      r43 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r35 * 24 & -1) | 0, r2);
                      r44 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r43 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r43 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                      r43 = (r35 | 0) == 1;
                      do {
                        if (!r43) {
                          r45 = r35 + 1 | 0;
                          if ((r45 | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r33] + 16 >> 2]](r28) | 0)) {
                            break;
                          }
                          r46 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r42 * 24 & -1) | 0, r2);
                          r47 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                          r46 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r45 * 24 & -1) | 0, r2);
                          r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                          r46 = r47 < r44;
                          L1096 : do {
                            if (r46 & r45 > r44) {
                              r48 = r47 > -1e8 ? r47 : -1e8;
                              r49 = r45 < 1e8 ? r45 : 1e8;
                              r50 = HEAP32[r23];
                              L1118 : do {
                                if ((HEAP32[r10] | 0) == (r50 | 0)) {
                                  r51 = r48;
                                } else {
                                  r52 = r48;
                                  r53 = 0;
                                  r54 = r50;
                                  while (1) {
                                    r55 = __ZN5Avoid5PointixEj(r54 + (r53 * 24 & -1) | 0, r2);
                                    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r55 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r55 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < r44) {
                                      r55 = __ZN5Avoid5PointixEj(HEAP32[r23] + (r53 * 24 & -1) | 0, r2);
                                      r56 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r55 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r55 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                                      r57 = r52 < r56 ? r56 : r52;
                                    } else {
                                      r57 = r52;
                                    }
                                    r56 = r53 + 1 | 0;
                                    r55 = HEAP32[r23];
                                    if (r56 >>> 0 < ((HEAP32[r10] - r55 | 0) / 24 & -1) >>> 0) {
                                      r52 = r57;
                                      r53 = r56;
                                      r54 = r55;
                                    } else {
                                      r51 = r57;
                                      break L1118;
                                    }
                                  }
                                }
                              } while (0);
                              r50 = HEAP32[r24];
                              if ((HEAP32[r27] | 0) == (r50 | 0)) {
                                r58 = 1;
                                r59 = 0;
                                r60 = r49;
                                r61 = r51;
                                break;
                              } else {
                                r62 = r49;
                                r63 = 0;
                                r64 = r50;
                              }
                              while (1) {
                                r50 = __ZN5Avoid5PointixEj(r64 + (r63 * 24 & -1) | 0, r2);
                                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r50 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > r44) {
                                  r50 = __ZN5Avoid5PointixEj(HEAP32[r24] + (r63 * 24 & -1) | 0, r2);
                                  r48 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r50 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                                  r65 = r48 < r62 ? r48 : r62;
                                } else {
                                  r65 = r62;
                                }
                                r48 = r63 + 1 | 0;
                                r50 = HEAP32[r24];
                                if (r48 >>> 0 < ((HEAP32[r27] - r50 | 0) / 24 & -1) >>> 0) {
                                  r62 = r65;
                                  r63 = r48;
                                  r64 = r50;
                                } else {
                                  r58 = 1;
                                  r59 = 0;
                                  r60 = r65;
                                  r61 = r51;
                                  break L1096;
                                }
                              }
                            } else {
                              if (!(r47 > r44 & r45 < r44)) {
                                r58 = 0;
                                r59 = 0;
                                r60 = r46 ? 1e8 : r44;
                                r61 = r46 ? r44 : -1e8;
                                break;
                              }
                              r49 = r45 > -1e8 ? r45 : -1e8;
                              r50 = r47 < 1e8 ? r47 : 1e8;
                              r48 = HEAP32[r24];
                              L1101 : do {
                                if ((HEAP32[r27] | 0) == (r48 | 0)) {
                                  r66 = r49;
                                } else {
                                  r54 = r49;
                                  r53 = 0;
                                  r52 = r48;
                                  while (1) {
                                    r55 = __ZN5Avoid5PointixEj(r52 + (r53 * 24 & -1) | 0, r2);
                                    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r55 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r55 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < r44) {
                                      r55 = __ZN5Avoid5PointixEj(HEAP32[r24] + (r53 * 24 & -1) | 0, r2);
                                      r56 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r55 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r55 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                                      r67 = r54 < r56 ? r56 : r54;
                                    } else {
                                      r67 = r54;
                                    }
                                    r56 = r53 + 1 | 0;
                                    r55 = HEAP32[r24];
                                    if (r56 >>> 0 < ((HEAP32[r27] - r55 | 0) / 24 & -1) >>> 0) {
                                      r54 = r67;
                                      r53 = r56;
                                      r52 = r55;
                                    } else {
                                      r66 = r67;
                                      break L1101;
                                    }
                                  }
                                }
                              } while (0);
                              r48 = HEAP32[r23];
                              if ((HEAP32[r10] | 0) == (r48 | 0)) {
                                r58 = 0;
                                r59 = 1;
                                r60 = r50;
                                r61 = r66;
                                break;
                              } else {
                                r68 = r50;
                                r69 = 0;
                                r70 = r48;
                              }
                              while (1) {
                                r48 = __ZN5Avoid5PointixEj(r70 + (r69 * 24 & -1) | 0, r2);
                                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r48 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r48 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > r44) {
                                  r48 = __ZN5Avoid5PointixEj(HEAP32[r23] + (r69 * 24 & -1) | 0, r2);
                                  r49 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r48 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r48 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                                  r71 = r49 < r68 ? r49 : r68;
                                } else {
                                  r71 = r68;
                                }
                                r49 = r69 + 1 | 0;
                                r48 = HEAP32[r23];
                                if (r49 >>> 0 < ((HEAP32[r10] - r48 | 0) / 24 & -1) >>> 0) {
                                  r68 = r71;
                                  r69 = r49;
                                  r70 = r48;
                                } else {
                                  r58 = 0;
                                  r59 = 1;
                                  r60 = r71;
                                  r61 = r66;
                                  break L1096;
                                }
                              }
                            }
                          } while (0);
                          r47 = __Znwj(64);
                          __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjbbjdd(r47, HEAP32[r25], r41, r40, r59, r58, r2, r61, r60);
                          __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r47 + 48 | 0, HEAP32[r11 >> 2], HEAP32[r1 >> 2]);
                          HEAP32[r19 >> 2] = r47;
                          __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r3, r19);
                          break L1084;
                        }
                      } while (0);
                      if (!r21) {
                        r47 = __Znwj(64);
                        __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjj(r47, HEAP32[r25], r41, r40, r2);
                        HEAP32[r18 >> 2] = r47;
                        __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r3, r18);
                        break;
                      }
                      r47 = r35 + 1 | 0;
                      r45 = (r47 | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r33] + 16 >> 2]](r28) | 0);
                      do {
                        if (r43) {
                          r72 = -1e8;
                          r73 = 1e8;
                        } else {
                          r46 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r42 * 24 & -1) | 0, r2);
                          r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r46 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r46 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                          if (r50 < r44) {
                            r72 = r50 > -1e8 ? r50 : -1e8;
                            r73 = 1e8;
                            break;
                          }
                          if (r50 <= r44) {
                            r72 = -1e8;
                            r73 = 1e8;
                            break;
                          }
                          r72 = -1e8;
                          r73 = r50 < 1e8 ? r50 : 1e8;
                        }
                      } while (0);
                      do {
                        if (r45) {
                          r74 = r72;
                          r75 = r73;
                        } else {
                          r43 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r47 * 24 & -1) | 0, r2);
                          r50 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r43 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r43 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                          if (r50 < r44) {
                            r74 = r72 < r50 ? r50 : r72;
                            r75 = r73;
                            break;
                          }
                          if (r50 <= r44) {
                            r74 = r72;
                            r75 = r73;
                            break;
                          }
                          r74 = r72;
                          r75 = r50 < r73 ? r50 : r73;
                        }
                      } while (0);
                      do {
                        if (r31) {
                          r76 = r74;
                          r77 = r75;
                          r4 = 937;
                        } else {
                          r44 = r75;
                          r47 = r74;
                          r45 = 0;
                          r50 = 0;
                          while (1) {
                            r43 = __ZN5Avoid5PointixEj(r7 + (r50 * 48 & -1) | 0, r2);
                            r46 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r43 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r43 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                            r43 = __ZN5Avoid5PointixEj(r7 + (r50 * 48 & -1) + 24 | 0, r2);
                            r48 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r43 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r43 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                            r43 = r7 + (r50 * 48 & -1) | 0;
                            if (__ZN5AvoidL16insideRectBoundsERKNS_5PointERKNSt3__14pairIS0_S0_EE(HEAP32[r34] + (r36 * 24 & -1) | 0, r43)) {
                              r78 = r45 | 1;
                              r79 = r47 < r46 ? r46 : r47;
                              r80 = r48 < r44 ? r48 : r44;
                            } else {
                              r78 = r45;
                              r79 = r47;
                              r80 = r44;
                            }
                            if (__ZN5AvoidL16insideRectBoundsERKNS_5PointERKNSt3__14pairIS0_S0_EE(HEAP32[r34] + (r35 * 24 & -1) | 0, r43)) {
                              r81 = r78 | 16;
                              r82 = r79 < r46 ? r46 : r79;
                              r83 = r48 < r80 ? r48 : r80;
                            } else {
                              r81 = r78;
                              r82 = r79;
                              r83 = r80;
                            }
                            r48 = r50 + 1 | 0;
                            if (r48 >>> 0 < r30 >>> 0) {
                              r44 = r83;
                              r47 = r82;
                              r45 = r81;
                              r50 = r48;
                            } else {
                              break;
                            }
                          }
                          if ((r81 | 0) == 0) {
                            r76 = r82;
                            r77 = r83;
                            r4 = 937;
                            break;
                          } else {
                            r84 = r82;
                            r85 = r83;
                            r86 = r81;
                            break;
                          }
                        }
                      } while (0);
                      if (r4 == 937) {
                        r4 = 0;
                        r50 = __ZN5Avoid5PointixEj(HEAP32[r34] + (r36 * 24 & -1) | 0, r2);
                        r45 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r50 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r50 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                        r50 = r45 - 15;
                        r47 = r45 + 15;
                        r84 = r76 < r50 ? r50 : r76;
                        r85 = r47 < r77 ? r47 : r77;
                        r86 = 0;
                      }
                      if (r84 == r85) {
                        r47 = __Znwj(64);
                        __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjj(r47, HEAP32[r25], r41, r40, r2);
                        HEAP32[r16 >> 2] = r47;
                        __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r3, r16);
                        break;
                      }
                      r47 = __Znwj(64);
                      __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjbbjdd(r47, HEAP32[r25], r41, r40, 0, 0, r2, r84, r85);
                      HEAP8[r47 + 45 | 0] = 1;
                      HEAP8[r47 + 46 | 0] = (r86 | 0) != 0 & 1;
                      if ((FUNCTION_TABLE[HEAP32[HEAP32[r33] + 16 >> 2]](r28) | 0) == 2) {
                        HEAP8[r47 + 47 | 0] = 1;
                      }
                      HEAP32[r17 >> 2] = r47;
                      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r3, r17);
                    } else {
                      r47 = __Znwj(64);
                      __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjj(r47, HEAP32[r25], r41, r40, r2);
                      HEAP32[r15 >> 2] = r47;
                      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r3, r15);
                    }
                  } while (0);
                  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r14);
                  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r13);
                  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r12);
                }
              } while (0);
              r35 = r35 + 1 | 0;
            }
          }
        } while (0);
        r25 = HEAP32[r26 + 4 >> 2];
        if ((r25 | 0) == (r8 | 0)) {
          break L1061;
        } else {
          r26 = r25;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED1Ev(r6);
  STACKTOP = r5;
  return;
}
__ZN5AvoidL30buildOrthogonalNudgingSegmentsEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE["X"] = 1;
function __ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 108 | 0;
  r6 = r5;
  r7 = r5 + 48;
  r8 = r5 + 72;
  r9 = r5 + 96;
  r10 = HEAP32[r3 + 8 >> 2];
  if ((r10 | 0) == 0) {
    STACKTOP = r5;
    return;
  }
  r11 = r2 & 1 ^ 1;
  r12 = HEAP32[r1 + 12 >> 2];
  r13 = r12 + r10 << 1;
  r10 = _llvm_umul_with_overflow_i32(r13, 4);
  r14 = __Znaj(tempRet0 ? -1 : r10);
  r10 = r14 >> 2;
  L1199 : do {
    if ((r12 | 0) == 0) {
      r15 = 0;
      r16 = r13;
    } else {
      r17 = r7 >> 2;
      r18 = r6 >> 2;
      r19 = r8 >> 2;
      r20 = (r6 + 24 | 0) >> 2;
      r21 = 0;
      r22 = 0;
      r23 = r13;
      r24 = r1 + 8 | 0;
      while (1) {
        r25 = HEAP32[r24 >> 2];
        r26 = HEAP32[r25 + 8 >> 2];
        do {
          if ((r26 | 0) == 0) {
            r4 = 1007;
          } else {
            r27 = ___dynamic_cast(r26, 5272672, 5272764);
            if ((r27 | 0) == 0) {
              r4 = 1007;
              break;
            }
            if (__ZNK5Avoid11JunctionRef13positionFixedEv(HEAP8[r27 + 144 | 0])) {
              r4 = 1007;
              break;
            }
            r28 = r23 - 2 | 0;
            r29 = r22;
            break;
          }
        } while (0);
        if (r4 == 1007) {
          r4 = 0;
          __ZNK5Avoid8Obstacle10routingBoxEv(r6, r26);
          HEAP32[r17] = HEAP32[r18];
          HEAP32[r17 + 1] = HEAP32[r18 + 1];
          HEAP32[r17 + 2] = HEAP32[r18 + 2];
          HEAP32[r17 + 3] = HEAP32[r18 + 3];
          HEAP32[r17 + 4] = HEAP32[r18 + 4];
          HEAP32[r17 + 5] = HEAP32[r18 + 5];
          HEAP32[r19] = HEAP32[r20];
          HEAP32[r19 + 1] = HEAP32[r20 + 1];
          HEAP32[r19 + 2] = HEAP32[r20 + 2];
          HEAP32[r19 + 3] = HEAP32[r20 + 3];
          HEAP32[r19 + 4] = HEAP32[r20 + 4];
          HEAP32[r19 + 5] = HEAP32[r20 + 5];
          r27 = __ZN5Avoid5PointixEj(r7, r2);
          r30 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r27 = __ZN5Avoid5PointixEj(r8, r2);
          r31 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r27 = __ZN5Avoid5PointixEj(r7, r2);
          r32 = r30 + (r31 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) * .5;
          r27 = __Znwj(68);
          __ZN5Avoid4NodeC1EPNS_8ObstacleEd(r27, r26, r32);
          r32 = __Znwj(16);
          r31 = __ZN5Avoid5PointixEj(r7, r11);
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r32, 1, r27, (HEAP32[tempDoublePtr >> 2] = HEAP32[r31 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r31 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r22 << 2 >> 2) + r10] = r32;
          r32 = __Znwj(16);
          r31 = __ZN5Avoid5PointixEj(r8, r11);
          __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r32, 5, r27, (HEAP32[tempDoublePtr >> 2] = HEAP32[r31 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r31 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
          HEAP32[(r22 + 1 << 2 >> 2) + r10] = r32;
          r28 = r23;
          r29 = r22 + 2 | 0;
        }
        r32 = r21 + 1 | 0;
        if (r32 >>> 0 < r12 >>> 0) {
          r21 = r32;
          r22 = r29;
          r23 = r28;
          r24 = r25 + 4 | 0;
        } else {
          r15 = r29;
          r16 = r28;
          break L1199;
        }
      }
    }
  } while (0);
  r28 = HEAP32[r3 + 4 >> 2];
  r29 = r3;
  L1214 : do {
    if ((r28 | 0) != (r29 | 0)) {
      r3 = r15;
      r12 = r28;
      while (1) {
        r8 = (r12 + 8 | 0) >> 2;
        r7 = HEAP32[r8];
        r6 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 8 >> 2]](r7);
        r7 = HEAP32[r8];
        r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 12 >> 2]](r7);
        r7 = __ZNK5Avoid5PointixEj(r6, r2);
        r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r7 = __ZNK5Avoid5PointixEj(r1, r2);
        if (r13 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          ___assert_func(5244520, 2482, 5255232, 5250904);
        }
        r7 = __ZNK5Avoid5PointixEj(r6, r11);
        r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r7 = __ZNK5Avoid5PointixEj(r1, r11);
        if (r13 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          ___assert_func(5244520, 2483, 5255232, 5250612);
        }
        r7 = __Znwj(68);
        r13 = HEAP32[r8];
        r8 = __ZNK5Avoid5PointixEj(r6, r2);
        __ZN5Avoid4NodeC1EPNS_12ShiftSegmentEd(r7, r13, (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
        r8 = __Znwj(16);
        r13 = __ZNK5Avoid5PointixEj(r6, r11);
        __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r8, 2, r7, (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
        HEAP32[(r3 << 2 >> 2) + r10] = r8;
        r8 = __Znwj(16);
        r13 = __ZNK5Avoid5PointixEj(r1, r11);
        __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r8, 4, r7, (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
        HEAP32[(r3 + 1 << 2 >> 2) + r10] = r8;
        r8 = HEAP32[r12 + 4 >> 2];
        if ((r8 | 0) == (r29 | 0)) {
          break L1214;
        } else {
          r3 = r3 + 2 | 0;
          r12 = r8;
        }
      }
    }
  } while (0);
  _qsort(r14, r16, 4, 356);
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC1ERKS4_(r9 | 0);
  r29 = (r16 | 0) == 0;
  do {
    if (r29) {
      r33 = 0;
      r34 = 0;
      r35 = 0;
    } else {
      r11 = HEAP32[r10] + 8 | 0;
      r33 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r34 = 0;
      r35 = 0;
      break;
    }
  } while (0);
  while (1) {
    r11 = (r35 | 0) == (r16 | 0);
    do {
      if (r11) {
        r4 = 1031;
      } else {
        r28 = HEAP32[(r35 << 2 >> 2) + r10];
        r15 = r28 + 8 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r33) {
          r4 = 1031;
          break;
        } else {
          r36 = r34;
          r37 = r33;
          r38 = r28;
          break;
        }
      }
    } while (0);
    if (r4 == 1031) {
      r4 = 0;
      L1235 : do {
        if (r34 >>> 0 < r35 >>> 0) {
          r28 = r34;
          while (1) {
            __ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj(r9, HEAP32[(r28 << 2 >> 2) + r10], r2, 2);
            r15 = r28 + 1 | 0;
            if (r15 >>> 0 < r35 >>> 0) {
              r28 = r15;
            } else {
              r39 = r34;
              break;
            }
          }
          while (1) {
            __ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj(r9, HEAP32[(r39 << 2 >> 2) + r10], r2, 3);
            r28 = r39 + 1 | 0;
            if (r28 >>> 0 < r35 >>> 0) {
              r39 = r28;
            } else {
              r40 = r34;
              break;
            }
          }
          while (1) {
            __ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj(r9, HEAP32[(r40 << 2 >> 2) + r10], r2, 4);
            r28 = r40 + 1 | 0;
            if (r28 >>> 0 < r35 >>> 0) {
              r40 = r28;
            } else {
              break L1235;
            }
          }
        }
      } while (0);
      if (r11) {
        break;
      }
      r28 = HEAP32[(r35 << 2 >> 2) + r10];
      r25 = r28 + 8 | 0;
      r36 = r35;
      r37 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r25 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r38 = r28;
    }
    __ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj(r9, r38, r2, 1);
    r28 = r35 + 1 | 0;
    if (r28 >>> 0 > r16 >>> 0) {
      break;
    } else {
      r33 = r37;
      r34 = r36;
      r35 = r28;
    }
  }
  if ((HEAP32[r9 + 8 >> 2] | 0) != 0) {
    ___assert_func(5244520, 2527, 5255232, 5248616);
  }
  L1253 : do {
    if (!r29) {
      r35 = 0;
      while (1) {
        r36 = HEAP32[(r35 << 2 >> 2) + r10];
        if ((r36 | 0) != 0) {
          __ZdlPv(r36);
        }
        r36 = r35 + 1 | 0;
        if ((r36 | 0) == (r16 | 0)) {
          break L1253;
        } else {
          r35 = r36;
        }
      }
    }
  } while (0);
  if ((r14 | 0) != 0) {
    __ZdaPv(r14);
  }
  __ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev(r9);
  STACKTOP = r5;
  return;
}
__ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE["X"] = 1;
function __ZN5AvoidL21nudgeOrthogonalRoutesEPNS_6RouterEjRNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS2_4listIPNS_12ShiftSegmentENS8_ISH_EEEEb(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130, r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142, r143, r144, r145, r146, r147, r148, r149, r150, r151, r152, r153, r154, r155, r156, r157, r158, r159, r160, r161, r162, r163, r164, r165, r166, r167, r168, r169, r170, r171, r172, r173, r174, r175, r176, r177, r178, r179, r180, r181, r182, r183, r184, r185, r186, r187, r188, r189, r190, r191, r192, r193, r194, r195, r196, r197, r198, r199, r200, r201, r202, r203, r204, r205, r206, r207, r208, r209, r210, r211, r212, r213, r214, r215, r216, r217, r218, r219, r220, r221, r222, r223, r224, r225, r226, r227, r228, r229, r230, r231, r232, r233, r234, r235, r236, r237, r238, r239, r240, r241, r242, r243, r244, r245, r246, r247, r248, r249, r250, r251, r252, r253, r254;
  r6 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 552 | 0;
  r8 = r7;
  r9 = r7 + 4;
  r10 = r7 + 24;
  r11 = r7 + 44;
  r12 = r7 + 64;
  r13 = r7 + 84;
  r14 = r7 + 104;
  r15 = r7 + 124;
  r16 = r7 + 144;
  r17 = r7 + 164;
  r18 = r7 + 184;
  r19 = r7 + 204;
  r20 = r7 + 224;
  r21 = r7 + 244;
  r22 = r7 + 264;
  r23 = r7 + 284;
  r24 = r7 + 304;
  r25 = r7 + 324;
  r26 = r7 + 336;
  r27 = r7 + 340;
  r28 = r7 + 344;
  r29 = r7 + 348;
  r30 = r7 + 356;
  r31 = r7 + 368;
  r32 = r7 + 380;
  r33 = r7 + 392;
  r34 = r7 + 404;
  r35 = r7 + 416;
  r36 = r7 + 428;
  r37 = r7 + 440;
  r38 = r7 + 444;
  r39 = r7 + 448;
  r40 = r7 + 452;
  r41 = r7 + 464;
  r42 = r7 + 476;
  r43 = r7 + 488;
  r44 = r7 + 536;
  r45 = r7 + 544;
  r46 = r1;
  r1 = __ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(r46, 0);
  r47 = __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(r46, 7);
  if (r47 < 0) {
    ___assert_func(5244520, 2869, 5255324, 5244748);
  }
  r46 = r25 | 0;
  r48 = r25;
  HEAP32[r25 >> 2] = r48;
  r49 = (r25 + 4 | 0) >> 2;
  HEAP32[r49] = r48;
  r50 = r25 + 8 | 0;
  HEAP32[r50 >> 2] = 0;
  r51 = r4 + 8 | 0;
  if ((HEAP32[r51 >> 2] | 0) == 0) {
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r25);
    STACKTOP = r7;
    return;
  }
  r52 = r4 + 4 | 0, r53 = r52 >> 2;
  r54 = r4;
  r55 = r32 | 0;
  r56 = r32;
  r57 = r32 + 4 | 0;
  r58 = r32 + 8 | 0;
  r59 = (r33 | 0) >> 2;
  r60 = (r33 + 4 | 0) >> 2;
  r61 = r33 + 8 | 0;
  r62 = (r61 | 0) >> 2;
  r63 = (r34 | 0) >> 2;
  r64 = (r34 + 4 | 0) >> 2;
  r65 = r34 + 8 | 0;
  r66 = (r65 | 0) >> 2;
  r67 = (r35 | 0) >> 2;
  r68 = (r35 + 4 | 0) >> 2;
  r69 = r35 + 8 | 0;
  r70 = (r69 | 0) >> 2;
  r71 = r36 | 0;
  r72 = r36;
  r73 = r36 + 4 | 0;
  r74 = r36 + 8 | 0;
  r75 = r40 | 0;
  r76 = r40;
  r77 = (r40 + 4 | 0) >> 2;
  r78 = (r40 + 8 | 0) >> 2;
  r79 = (r42 | 0) >> 2;
  r80 = r42;
  r81 = r42 + 4 | 0;
  r82 = (r42 + 8 | 0) >> 2;
  r83 = r65;
  r65 = (r24 + 8 | 0) >> 2;
  r84 = r24 + 12 | 0;
  r85 = (r24 + 4 | 0) >> 2;
  r86 = r24 | 0;
  r87 = r24 + 16 | 0;
  r88 = r23 | 0;
  r89 = r23 + 4 | 0;
  r90 = r23 + 8 | 0;
  r91 = r23 + 12 | 0;
  r92 = r47 / 10;
  r93 = r44 | 0;
  r94 = r44 + 4 | 0;
  r95 = r45 | 0;
  r96 = r45 + 4 | 0;
  r97 = r32;
  r98 = (r18 + 8 | 0) >> 2;
  r99 = r18 + 12 | 0;
  r100 = (r18 + 4 | 0) >> 2;
  r101 = r18 | 0;
  r102 = r18 + 16 | 0;
  r103 = r17 | 0;
  r104 = r17 + 4 | 0;
  r105 = r17 + 8 | 0;
  r106 = r17 + 12 | 0;
  r107 = r61;
  r61 = (r20 + 8 | 0) >> 2;
  r108 = r20 + 12 | 0;
  r109 = (r20 + 4 | 0) >> 2;
  r110 = r20 | 0;
  r111 = r20 + 16 | 0;
  r112 = r19 | 0;
  r113 = r19 + 4 | 0;
  r114 = r19 + 8 | 0;
  r115 = r19 + 12 | 0;
  r116 = (r10 + 8 | 0) >> 2;
  r117 = r10 + 12 | 0;
  r118 = (r10 + 4 | 0) >> 2;
  r119 = r10 | 0;
  r120 = r10 + 16 | 0;
  r121 = r9 | 0;
  r122 = r9 + 4 | 0;
  r123 = r9 + 8 | 0;
  r124 = r9 + 12 | 0;
  r125 = (r12 + 8 | 0) >> 2;
  r126 = r12 + 12 | 0;
  r127 = (r12 + 4 | 0) >> 2;
  r128 = r12 | 0;
  r129 = r12 + 16 | 0;
  r130 = r11 | 0;
  r131 = r11 + 4 | 0;
  r132 = r11 + 8 | 0;
  r133 = r11 + 12 | 0;
  r134 = r69;
  r69 = (r14 + 8 | 0) >> 2;
  r135 = r14 + 12 | 0;
  r136 = (r14 + 4 | 0) >> 2;
  r137 = r14 | 0;
  r138 = r14 + 16 | 0;
  r139 = r13 | 0;
  r140 = r13 + 4 | 0;
  r141 = r13 + 8 | 0;
  r142 = r13 + 12 | 0;
  r143 = (r16 + 8 | 0) >> 2;
  r144 = r16 + 12 | 0;
  r145 = (r16 + 4 | 0) >> 2;
  r146 = r16 | 0;
  r147 = r16 + 16 | 0;
  r148 = r15 | 0;
  r149 = r15 + 4 | 0;
  r150 = r15 + 8 | 0;
  r151 = r15 + 12 | 0;
  r152 = (r22 + 8 | 0) >> 2;
  r153 = r22 + 12 | 0;
  r154 = (r22 + 4 | 0) >> 2;
  r155 = r22 | 0;
  r156 = r22 + 16 | 0;
  r157 = r21 | 0;
  r158 = r21 + 4 | 0;
  r159 = r21 + 8 | 0;
  r160 = r21 + 12 | 0;
  r161 = r30 + 4 | 0;
  r162 = r30;
  while (1) {
    HEAP32[r26 >> 2] = HEAP32[HEAP32[r53] + 8 >> 2];
    __ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5clearEv(r46);
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r25, r26);
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r27, r4, HEAP32[r53]);
    r163 = HEAP32[r53];
    L1274 : do {
      if ((r163 | 0) != (r54 | 0)) {
        r164 = r163;
        while (1) {
          r165 = HEAP32[r49];
          L1277 : do {
            if ((r165 | 0) == (r48 | 0)) {
              r6 = 1078;
            } else {
              r166 = r164 + 8 | 0;
              r167 = r165;
              while (1) {
                r168 = HEAP32[r166 >> 2];
                if (FUNCTION_TABLE[HEAP32[HEAP32[r168 >> 2] + 24 >> 2]](r168, HEAP32[r167 + 8 >> 2], r2)) {
                  break;
                }
                r168 = HEAP32[r167 + 4 >> 2];
                if ((r168 | 0) == (r48 | 0)) {
                  r6 = 1078;
                  break L1277;
                } else {
                  r167 = r168;
                }
              }
              __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r25, r166);
              __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r28, r4, r164);
              r169 = r52;
              break;
            }
          } while (0);
          if (r6 == 1078) {
            r6 = 0;
            r169 = r164 + 4 | 0;
          }
          r165 = HEAP32[r169 >> 2];
          if ((r165 | 0) == (r54 | 0)) {
            break L1274;
          } else {
            r164 = r165;
          }
        }
      }
    } while (0);
    if (!r5) {
      __ZN5Avoid12CmpLineOrderC1ERNSt3__13mapINS_5PointENS_7PtOrderENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEEj(r29, r3, r2);
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEEC1ERKS6_(r31, r25);
      __ZN5AvoidL8linesortEbNSt3__14listIPNS_12ShiftSegmentENS0_9allocatorIS3_EEEERNS_12CmpLineOrderE(r30, r1, r31, r29);
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE(r25, HEAP32[r161 >> 2], r162);
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r30);
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r31);
    }
    do {
      if ((HEAP32[r50 >> 2] | 0) == 1) {
        r163 = HEAP32[HEAP32[r49] + 8 >> 2];
        if (!(FUNCTION_TABLE[HEAP32[HEAP32[r163 >> 2] + 28 >> 2]](r163) | r5)) {
          r6 = 1094;
          break;
        }
        r163 = HEAP32[HEAP32[r49] + 8 >> 2];
        if ((r163 | 0) == 0) {
          break;
        }
        FUNCTION_TABLE[HEAP32[HEAP32[r163 >> 2] + 4 >> 2]](r163);
        break;
      } else {
        r6 = 1094;
      }
    } while (0);
    if (r6 == 1094) {
      r6 = 0;
      HEAP32[r55 >> 2] = r56;
      HEAP32[r57 >> 2] = r56;
      HEAP32[r58 >> 2] = 0;
      HEAP32[r59] = 0;
      HEAP32[r60] = 0;
      HEAP32[r62] = 0;
      HEAP32[r63] = 0;
      HEAP32[r64] = 0;
      HEAP32[r66] = 0;
      HEAP32[r67] = 0;
      HEAP32[r68] = 0;
      HEAP32[r70] = 0;
      HEAP32[r71 >> 2] = r72;
      HEAP32[r73 >> 2] = r72;
      HEAP32[r74 >> 2] = 0;
      r163 = HEAP32[r49];
      L1302 : do {
        if ((r163 | 0) != (r48 | 0)) {
          r164 = r163;
          while (1) {
            r165 = HEAP32[r164 + 8 >> 2];
            if ((r165 | 0) == 0) {
              r170 = 0;
            } else {
              r170 = ___dynamic_cast(r165, 5272756, 5272736);
            }
            __ZN5Avoid19NudgingShiftSegment20createSolverVariableEb(r170, r5);
            r165 = (r170 + 28 | 0) >> 2;
            r167 = HEAP32[r60];
            r168 = HEAP32[r62];
            if (r167 >>> 0 < r168 >>> 0) {
              if ((r167 | 0) == 0) {
                r171 = 0;
              } else {
                HEAP32[r167 >> 2] = HEAP32[r165];
                r171 = HEAP32[r60];
              }
              r172 = r171 + 4 | 0;
              HEAP32[r60] = r172;
              r173 = r172;
            } else {
              r172 = HEAP32[r59];
              r174 = r167 - r172 + 4 >> 2 | 0;
              if (r174 >>> 0 > 1073741823) {
                __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                r175 = HEAP32[r62];
                r176 = HEAP32[r59];
              } else {
                r175 = r168;
                r176 = r172;
              }
              r172 = r176;
              r168 = r175 - r172 | 0;
              if (r168 >> 2 >>> 0 > 536870910) {
                r177 = 1073741823;
              } else {
                r167 = r168 >> 1;
                r177 = r167 >>> 0 < r174 >>> 0 ? r174 : r167;
              }
              __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r22, r177, HEAP32[r60] - r172 >> 2, r107);
              r172 = HEAP32[r152];
              do {
                if ((r172 | 0) == (HEAP32[r153 >> 2] | 0)) {
                  r167 = HEAP32[r154];
                  r174 = HEAP32[r155 >> 2];
                  if (r167 >>> 0 > r174 >>> 0) {
                    r168 = r167;
                    r178 = (r168 - r174 + 4 >> 2 | 0) / -2 & -1;
                    r179 = (r178 << 2) + r167 | 0;
                    r180 = r172 - r168 | 0;
                    _memmove(r179, r167, r180, 4, 0);
                    r168 = ((r180 >> 2) + r178 << 2) + r167 | 0;
                    HEAP32[r152] = r168;
                    HEAP32[r154] = r179;
                    r181 = r168;
                    break;
                  }
                  r168 = r172 - r174 >> 1;
                  r179 = (r168 | 0) == 0 ? 1 : r168;
                  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r21, r179, r179 >>> 2, HEAP32[r156 >> 2]);
                  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r21, r167, r172);
                  HEAP32[r155 >> 2] = HEAP32[r157 >> 2];
                  HEAP32[r157 >> 2] = r174;
                  HEAP32[r154] = HEAP32[r158 >> 2];
                  HEAP32[r158 >> 2] = r167;
                  r167 = HEAP32[r159 >> 2];
                  HEAP32[r152] = r167;
                  HEAP32[r159 >> 2] = r172;
                  HEAP32[r153 >> 2] = HEAP32[r160 >> 2];
                  HEAP32[r160 >> 2] = r172;
                  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r21);
                  r181 = r167;
                } else {
                  r181 = r172;
                }
              } while (0);
              if ((r181 | 0) == 0) {
                r182 = 0;
              } else {
                HEAP32[r181 >> 2] = HEAP32[r165];
                r182 = r181;
              }
              HEAP32[r152] = r182 + 4 | 0;
              __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r33, r22);
              __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r22);
              r173 = HEAP32[r60];
            }
            r172 = (r173 - HEAP32[r59] >> 2) - 1 | 0;
            HEAP32[r37 >> 2] = r172;
            r167 = r170 + 44 | 0;
            do {
              if ((HEAP8[r167] & 1) << 24 >> 24 == 0) {
                r174 = (r170 + 8 | 0) >> 2;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r174], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r174 + 1], HEAPF64[tempDoublePtr >> 3]) <= -1e8) {
                  break;
                }
                r179 = __Znwj(76);
                __ZN5Avoid8VariableC1Eiddd(r179, 2, (HEAP32[tempDoublePtr >> 2] = HEAP32[r174], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r174 + 1], HEAPF64[tempDoublePtr >> 3]), 1e5);
                r174 = HEAP32[r60];
                r168 = HEAP32[r62];
                if (r174 >>> 0 < r168 >>> 0) {
                  if ((r174 | 0) == 0) {
                    r183 = 0;
                  } else {
                    HEAP32[r174 >> 2] = r179;
                    r183 = HEAP32[r60];
                  }
                  HEAP32[r60] = r183 + 4 | 0;
                } else {
                  r178 = HEAP32[r59];
                  r180 = r174 - r178 + 4 >> 2 | 0;
                  if (r180 >>> 0 > 1073741823) {
                    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                    r184 = HEAP32[r62];
                    r185 = HEAP32[r59];
                  } else {
                    r184 = r168;
                    r185 = r178;
                  }
                  r178 = r185;
                  r168 = r184 - r178 | 0;
                  if (r168 >> 2 >>> 0 > 536870910) {
                    r186 = 1073741823;
                  } else {
                    r174 = r168 >> 1;
                    r186 = r174 >>> 0 < r180 >>> 0 ? r180 : r174;
                  }
                  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r20, r186, HEAP32[r60] - r178 >> 2, r107);
                  r178 = HEAP32[r61];
                  do {
                    if ((r178 | 0) == (HEAP32[r108 >> 2] | 0)) {
                      r174 = HEAP32[r109];
                      r180 = HEAP32[r110 >> 2];
                      if (r174 >>> 0 > r180 >>> 0) {
                        r168 = r174;
                        r187 = (r168 - r180 + 4 >> 2 | 0) / -2 & -1;
                        r188 = (r187 << 2) + r174 | 0;
                        r189 = r178 - r168 | 0;
                        _memmove(r188, r174, r189, 4, 0);
                        r168 = ((r189 >> 2) + r187 << 2) + r174 | 0;
                        HEAP32[r61] = r168;
                        HEAP32[r109] = r188;
                        r190 = r168;
                        break;
                      }
                      r168 = r178 - r180 >> 1;
                      r188 = (r168 | 0) == 0 ? 1 : r168;
                      __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r19, r188, r188 >>> 2, HEAP32[r111 >> 2]);
                      __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r19, r174, r178);
                      HEAP32[r110 >> 2] = HEAP32[r112 >> 2];
                      HEAP32[r112 >> 2] = r180;
                      HEAP32[r109] = HEAP32[r113 >> 2];
                      HEAP32[r113 >> 2] = r174;
                      r174 = HEAP32[r114 >> 2];
                      HEAP32[r61] = r174;
                      HEAP32[r114 >> 2] = r178;
                      HEAP32[r108 >> 2] = HEAP32[r115 >> 2];
                      HEAP32[r115 >> 2] = r178;
                      __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r19);
                      r190 = r174;
                    } else {
                      r190 = r178;
                    }
                  } while (0);
                  if ((r190 | 0) == 0) {
                    r191 = 0;
                  } else {
                    HEAP32[r190 >> 2] = r179;
                    r191 = r190;
                  }
                  HEAP32[r61] = r191 + 4 | 0;
                  __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r33, r20);
                  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r20);
                }
                r178 = __Znwj(32);
                r166 = HEAP32[r59];
                __ZN5Avoid10ConstraintC1EPNS_8VariableES2_db(r178, HEAP32[r166 + ((HEAP32[r60] - r166 >> 2) - 1 << 2) >> 2], HEAP32[r166 + (r172 << 2) >> 2], 0, 0);
                r166 = HEAP32[r64];
                r174 = HEAP32[r66];
                if (r166 >>> 0 < r174 >>> 0) {
                  if ((r166 | 0) == 0) {
                    r192 = 0;
                  } else {
                    HEAP32[r166 >> 2] = r178;
                    r192 = HEAP32[r64];
                  }
                  HEAP32[r64] = r192 + 4 | 0;
                  break;
                }
                r180 = HEAP32[r63];
                r188 = r166 - r180 + 4 >> 2 | 0;
                if (r188 >>> 0 > 1073741823) {
                  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                  r193 = HEAP32[r66];
                  r194 = HEAP32[r63];
                } else {
                  r193 = r174;
                  r194 = r180;
                }
                r180 = r194;
                r174 = r193 - r180 | 0;
                if (r174 >> 2 >>> 0 > 536870910) {
                  r195 = 1073741823;
                } else {
                  r166 = r174 >> 1;
                  r195 = r166 >>> 0 < r188 >>> 0 ? r188 : r166;
                }
                __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r18, r195, HEAP32[r64] - r180 >> 2, r83);
                r180 = HEAP32[r98];
                do {
                  if ((r180 | 0) == (HEAP32[r99 >> 2] | 0)) {
                    r166 = HEAP32[r100];
                    r188 = HEAP32[r101 >> 2];
                    if (r166 >>> 0 > r188 >>> 0) {
                      r174 = r166;
                      r168 = (r174 - r188 + 4 >> 2 | 0) / -2 & -1;
                      r187 = (r168 << 2) + r166 | 0;
                      r189 = r180 - r174 | 0;
                      _memmove(r187, r166, r189, 4, 0);
                      r174 = ((r189 >> 2) + r168 << 2) + r166 | 0;
                      HEAP32[r98] = r174;
                      HEAP32[r100] = r187;
                      r196 = r174;
                      break;
                    }
                    r174 = r180 - r188 >> 1;
                    r187 = (r174 | 0) == 0 ? 1 : r174;
                    __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r17, r187, r187 >>> 2, HEAP32[r102 >> 2]);
                    __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r17, r166, r180);
                    HEAP32[r101 >> 2] = HEAP32[r103 >> 2];
                    HEAP32[r103 >> 2] = r188;
                    HEAP32[r100] = HEAP32[r104 >> 2];
                    HEAP32[r104 >> 2] = r166;
                    r166 = HEAP32[r105 >> 2];
                    HEAP32[r98] = r166;
                    HEAP32[r105 >> 2] = r180;
                    HEAP32[r99 >> 2] = HEAP32[r106 >> 2];
                    HEAP32[r106 >> 2] = r180;
                    __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r17);
                    r196 = r166;
                  } else {
                    r196 = r180;
                  }
                } while (0);
                if ((r196 | 0) == 0) {
                  r197 = 0;
                } else {
                  HEAP32[r196 >> 2] = r178;
                  r197 = r196;
                }
                HEAP32[r98] = r197 + 4 | 0;
                __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r34, r18);
                __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r18);
              }
            } while (0);
            if (r5) {
              r180 = HEAP32[r165] + 20 | 0;
              if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r180 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r180 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == 1e-5) {
                __ZNSt3__14listIjNS_9allocatorIjEEE9push_backERKj(r32, r37);
              }
              HEAP32[r38 >> 2] = r170 | 0;
              __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r36, r38);
            } else {
              r180 = HEAP32[r73 >> 2];
              L1394 : do {
                if ((r180 | 0) != (r72 | 0)) {
                  r179 = r170;
                  r166 = r170 + 24 | 0;
                  r188 = r180;
                  while (1) {
                    r187 = HEAP32[r188 + 8 >> 2];
                    if ((r187 | 0) == 0) {
                      r198 = 0;
                    } else {
                      r198 = ___dynamic_cast(r187, 5272756, 5272736);
                    }
                    r187 = HEAP32[r198 + 28 >> 2];
                    r174 = r198 | 0;
                    do {
                      if (FUNCTION_TABLE[HEAP32[HEAP32[r179 >> 2] + 24 >> 2]](r170, r174, r2)) {
                        if ((HEAP8[r167] & 1) << 24 >> 24 != 0) {
                          if ((HEAP8[r198 + 44 | 0] & 1) << 24 >> 24 != 0) {
                            break;
                          }
                        }
                        if (__ZNK5Avoid19NudgingShiftSegment15shouldAlignWithEPKNS_12ShiftSegmentEj(r170, r174, r2)) {
                          r199 = 1;
                          r200 = 0;
                        } else {
                          r199 = 0;
                          r200 = (HEAP32[r166 >> 2] | 0) == (HEAP32[r198 + 24 >> 2] | 0) ? 0 : r47;
                        }
                        r168 = __Znwj(32);
                        __ZN5Avoid10ConstraintC1EPNS_8VariableES2_db(r168, r187, HEAP32[HEAP32[r59] + (r172 << 2) >> 2], r200, r199);
                        r189 = HEAP32[r64];
                        r201 = HEAP32[r66];
                        if (r189 >>> 0 < r201 >>> 0) {
                          if ((r189 | 0) == 0) {
                            r202 = 0;
                          } else {
                            HEAP32[r189 >> 2] = r168;
                            r202 = HEAP32[r64];
                          }
                          HEAP32[r64] = r202 + 4 | 0;
                        } else {
                          r203 = HEAP32[r63];
                          r204 = r189 - r203 + 4 >> 2 | 0;
                          if (r204 >>> 0 > 1073741823) {
                            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                            r205 = HEAP32[r66];
                            r206 = HEAP32[r63];
                          } else {
                            r205 = r201;
                            r206 = r203;
                          }
                          r203 = r206;
                          r201 = r205 - r203 | 0;
                          if (r201 >> 2 >>> 0 > 536870910) {
                            r207 = 1073741823;
                          } else {
                            r189 = r201 >> 1;
                            r207 = r189 >>> 0 < r204 >>> 0 ? r204 : r189;
                          }
                          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r16, r207, HEAP32[r64] - r203 >> 2, r83);
                          r203 = HEAP32[r143];
                          do {
                            if ((r203 | 0) == (HEAP32[r144 >> 2] | 0)) {
                              r189 = HEAP32[r145];
                              r204 = HEAP32[r146 >> 2];
                              if (r189 >>> 0 > r204 >>> 0) {
                                r201 = r189;
                                r208 = (r201 - r204 + 4 >> 2 | 0) / -2 & -1;
                                r209 = (r208 << 2) + r189 | 0;
                                r210 = r203 - r201 | 0;
                                _memmove(r209, r189, r210, 4, 0);
                                r201 = ((r210 >> 2) + r208 << 2) + r189 | 0;
                                HEAP32[r143] = r201;
                                HEAP32[r145] = r209;
                                r211 = r201;
                                break;
                              }
                              r201 = r203 - r204 >> 1;
                              r209 = (r201 | 0) == 0 ? 1 : r201;
                              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r15, r209, r209 >>> 2, HEAP32[r147 >> 2]);
                              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r15, r189, r203);
                              HEAP32[r146 >> 2] = HEAP32[r148 >> 2];
                              HEAP32[r148 >> 2] = r204;
                              HEAP32[r145] = HEAP32[r149 >> 2];
                              HEAP32[r149 >> 2] = r189;
                              r189 = HEAP32[r150 >> 2];
                              HEAP32[r143] = r189;
                              HEAP32[r150 >> 2] = r203;
                              HEAP32[r144 >> 2] = HEAP32[r151 >> 2];
                              HEAP32[r151 >> 2] = r203;
                              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r15);
                              r211 = r189;
                            } else {
                              r211 = r203;
                            }
                          } while (0);
                          if ((r211 | 0) == 0) {
                            r212 = 0;
                          } else {
                            HEAP32[r211 >> 2] = r168;
                            r212 = r211;
                          }
                          HEAP32[r143] = r212 + 4 | 0;
                          __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r34, r16);
                          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r16);
                        }
                        if (r200 == 0) {
                          break;
                        }
                        r203 = HEAP32[r68];
                        r189 = HEAP32[r70];
                        if (r203 >>> 0 < r189 >>> 0) {
                          if ((r203 | 0) == 0) {
                            r213 = 0;
                          } else {
                            HEAP32[r203 >> 2] = r168;
                            r213 = HEAP32[r68];
                          }
                          HEAP32[r68] = r213 + 4 | 0;
                          break;
                        }
                        r204 = HEAP32[r67];
                        r209 = r203 - r204 + 4 >> 2 | 0;
                        if (r209 >>> 0 > 1073741823) {
                          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                          r214 = HEAP32[r70];
                          r215 = HEAP32[r67];
                        } else {
                          r214 = r189;
                          r215 = r204;
                        }
                        r204 = r215;
                        r189 = r214 - r204 | 0;
                        if (r189 >> 2 >>> 0 > 536870910) {
                          r216 = 1073741823;
                        } else {
                          r203 = r189 >> 1;
                          r216 = r203 >>> 0 < r209 >>> 0 ? r209 : r203;
                        }
                        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r14, r216, HEAP32[r68] - r204 >> 2, r134);
                        r204 = HEAP32[r69];
                        do {
                          if ((r204 | 0) == (HEAP32[r135 >> 2] | 0)) {
                            r203 = HEAP32[r136];
                            r209 = HEAP32[r137 >> 2];
                            if (r203 >>> 0 > r209 >>> 0) {
                              r189 = r203;
                              r201 = (r189 - r209 + 4 >> 2 | 0) / -2 & -1;
                              r208 = (r201 << 2) + r203 | 0;
                              r210 = r204 - r189 | 0;
                              _memmove(r208, r203, r210, 4, 0);
                              r189 = ((r210 >> 2) + r201 << 2) + r203 | 0;
                              HEAP32[r69] = r189;
                              HEAP32[r136] = r208;
                              r217 = r189;
                              break;
                            }
                            r189 = r204 - r209 >> 1;
                            r208 = (r189 | 0) == 0 ? 1 : r189;
                            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r13, r208, r208 >>> 2, HEAP32[r138 >> 2]);
                            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r13, r203, r204);
                            HEAP32[r137 >> 2] = HEAP32[r139 >> 2];
                            HEAP32[r139 >> 2] = r209;
                            HEAP32[r136] = HEAP32[r140 >> 2];
                            HEAP32[r140 >> 2] = r203;
                            r203 = HEAP32[r141 >> 2];
                            HEAP32[r69] = r203;
                            HEAP32[r141 >> 2] = r204;
                            HEAP32[r135 >> 2] = HEAP32[r142 >> 2];
                            HEAP32[r142 >> 2] = r204;
                            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r13);
                            r217 = r203;
                          } else {
                            r217 = r204;
                          }
                        } while (0);
                        if ((r217 | 0) == 0) {
                          r218 = 0;
                        } else {
                          HEAP32[r217 >> 2] = r168;
                          r218 = r217;
                        }
                        HEAP32[r69] = r218 + 4 | 0;
                        __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r35, r14);
                        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r14);
                      }
                    } while (0);
                    r187 = HEAP32[r188 + 4 >> 2];
                    if ((r187 | 0) == (r72 | 0)) {
                      break L1394;
                    } else {
                      r188 = r187;
                    }
                  }
                }
              } while (0);
              do {
                if ((HEAP8[r167] & 1) << 24 >> 24 == 0) {
                  r180 = (r170 + 16 | 0) >> 2;
                  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r180], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r180 + 1], HEAPF64[tempDoublePtr >> 3]) >= 1e8) {
                    break;
                  }
                  r165 = __Znwj(76);
                  __ZN5Avoid8VariableC1Eiddd(r165, 3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r180], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r180 + 1], HEAPF64[tempDoublePtr >> 3]), 1e5);
                  r180 = HEAP32[r60];
                  r188 = HEAP32[r62];
                  if (r180 >>> 0 < r188 >>> 0) {
                    if ((r180 | 0) == 0) {
                      r219 = 0;
                    } else {
                      HEAP32[r180 >> 2] = r165;
                      r219 = HEAP32[r60];
                    }
                    HEAP32[r60] = r219 + 4 | 0;
                  } else {
                    r166 = HEAP32[r59];
                    r179 = r180 - r166 + 4 >> 2 | 0;
                    if (r179 >>> 0 > 1073741823) {
                      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                      r220 = HEAP32[r62];
                      r221 = HEAP32[r59];
                    } else {
                      r220 = r188;
                      r221 = r166;
                    }
                    r166 = r221;
                    r188 = r220 - r166 | 0;
                    if (r188 >> 2 >>> 0 > 536870910) {
                      r222 = 1073741823;
                    } else {
                      r180 = r188 >> 1;
                      r222 = r180 >>> 0 < r179 >>> 0 ? r179 : r180;
                    }
                    __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r12, r222, HEAP32[r60] - r166 >> 2, r107);
                    r166 = HEAP32[r125];
                    do {
                      if ((r166 | 0) == (HEAP32[r126 >> 2] | 0)) {
                        r180 = HEAP32[r127];
                        r179 = HEAP32[r128 >> 2];
                        if (r180 >>> 0 > r179 >>> 0) {
                          r188 = r180;
                          r178 = (r188 - r179 + 4 >> 2 | 0) / -2 & -1;
                          r187 = (r178 << 2) + r180 | 0;
                          r174 = r166 - r188 | 0;
                          _memmove(r187, r180, r174, 4, 0);
                          r188 = ((r174 >> 2) + r178 << 2) + r180 | 0;
                          HEAP32[r125] = r188;
                          HEAP32[r127] = r187;
                          r223 = r188;
                          break;
                        }
                        r188 = r166 - r179 >> 1;
                        r187 = (r188 | 0) == 0 ? 1 : r188;
                        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r11, r187, r187 >>> 2, HEAP32[r129 >> 2]);
                        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r11, r180, r166);
                        HEAP32[r128 >> 2] = HEAP32[r130 >> 2];
                        HEAP32[r130 >> 2] = r179;
                        HEAP32[r127] = HEAP32[r131 >> 2];
                        HEAP32[r131 >> 2] = r180;
                        r180 = HEAP32[r132 >> 2];
                        HEAP32[r125] = r180;
                        HEAP32[r132 >> 2] = r166;
                        HEAP32[r126 >> 2] = HEAP32[r133 >> 2];
                        HEAP32[r133 >> 2] = r166;
                        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r11);
                        r223 = r180;
                      } else {
                        r223 = r166;
                      }
                    } while (0);
                    if ((r223 | 0) == 0) {
                      r224 = 0;
                    } else {
                      HEAP32[r223 >> 2] = r165;
                      r224 = r223;
                    }
                    HEAP32[r125] = r224 + 4 | 0;
                    __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r33, r12);
                    __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r12);
                  }
                  r166 = __Znwj(32);
                  r180 = HEAP32[r59];
                  __ZN5Avoid10ConstraintC1EPNS_8VariableES2_db(r166, HEAP32[r180 + (r172 << 2) >> 2], HEAP32[r180 + ((HEAP32[r60] - r180 >> 2) - 1 << 2) >> 2], 0, 0);
                  r180 = HEAP32[r64];
                  r179 = HEAP32[r66];
                  if (r180 >>> 0 < r179 >>> 0) {
                    if ((r180 | 0) == 0) {
                      r225 = 0;
                    } else {
                      HEAP32[r180 >> 2] = r166;
                      r225 = HEAP32[r64];
                    }
                    HEAP32[r64] = r225 + 4 | 0;
                    break;
                  }
                  r187 = HEAP32[r63];
                  r188 = r180 - r187 + 4 >> 2 | 0;
                  if (r188 >>> 0 > 1073741823) {
                    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                    r226 = HEAP32[r66];
                    r227 = HEAP32[r63];
                  } else {
                    r226 = r179;
                    r227 = r187;
                  }
                  r187 = r227;
                  r179 = r226 - r187 | 0;
                  if (r179 >> 2 >>> 0 > 536870910) {
                    r228 = 1073741823;
                  } else {
                    r180 = r179 >> 1;
                    r228 = r180 >>> 0 < r188 >>> 0 ? r188 : r180;
                  }
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r10, r228, HEAP32[r64] - r187 >> 2, r83);
                  r187 = HEAP32[r116];
                  do {
                    if ((r187 | 0) == (HEAP32[r117 >> 2] | 0)) {
                      r180 = HEAP32[r118];
                      r188 = HEAP32[r119 >> 2];
                      if (r180 >>> 0 > r188 >>> 0) {
                        r179 = r180;
                        r178 = (r179 - r188 + 4 >> 2 | 0) / -2 & -1;
                        r174 = (r178 << 2) + r180 | 0;
                        r204 = r187 - r179 | 0;
                        _memmove(r174, r180, r204, 4, 0);
                        r179 = ((r204 >> 2) + r178 << 2) + r180 | 0;
                        HEAP32[r116] = r179;
                        HEAP32[r118] = r174;
                        r229 = r179;
                        break;
                      }
                      r179 = r187 - r188 >> 1;
                      r174 = (r179 | 0) == 0 ? 1 : r179;
                      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r9, r174, r174 >>> 2, HEAP32[r120 >> 2]);
                      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r9, r180, r187);
                      HEAP32[r119 >> 2] = HEAP32[r121 >> 2];
                      HEAP32[r121 >> 2] = r188;
                      HEAP32[r118] = HEAP32[r122 >> 2];
                      HEAP32[r122 >> 2] = r180;
                      r180 = HEAP32[r123 >> 2];
                      HEAP32[r116] = r180;
                      HEAP32[r123 >> 2] = r187;
                      HEAP32[r117 >> 2] = HEAP32[r124 >> 2];
                      HEAP32[r124 >> 2] = r187;
                      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r9);
                      r229 = r180;
                    } else {
                      r229 = r187;
                    }
                  } while (0);
                  if ((r229 | 0) == 0) {
                    r230 = 0;
                  } else {
                    HEAP32[r229 >> 2] = r166;
                    r230 = r229;
                  }
                  HEAP32[r116] = r230 + 4 | 0;
                  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r34, r10);
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r10);
                }
              } while (0);
              HEAP32[r39 >> 2] = r170 | 0;
              __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r36, r39);
            }
            r172 = HEAP32[r164 + 4 >> 2];
            if ((r172 | 0) == (r48 | 0)) {
              break L1302;
            } else {
              r164 = r172;
            }
          }
        }
      } while (0);
      HEAP32[r75 >> 2] = r76;
      HEAP32[r77] = r76;
      HEAP32[r78] = 0;
      L1529 : do {
        if (r5) {
          r163 = HEAP32[r57 >> 2];
          if ((r163 | 0) == (r56 | 0)) {
            break;
          } else {
            r231 = r163;
          }
          while (1) {
            L1533 : do {
              if ((r231 | 0) != (r56 | 0)) {
                r163 = r231 + 8 | 0;
                r164 = r231;
                while (1) {
                  if ((r231 | 0) != (r164 | 0)) {
                    __ZN5Avoid26PotentialSegmentConstraintC1EjjRKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r41, HEAP32[r163 >> 2], HEAP32[r164 + 8 >> 2], r33);
                    __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9push_backERKS2_(r40, r41);
                  }
                  r172 = HEAP32[r164 + 4 >> 2];
                  if ((r172 | 0) == (r56 | 0)) {
                    break L1533;
                  } else {
                    r164 = r172;
                  }
                }
              }
            } while (0);
            r164 = HEAP32[r231 + 4 >> 2];
            if ((r164 | 0) == (r56 | 0)) {
              break L1529;
            } else {
              r231 = r164;
            }
          }
        }
      } while (0);
      HEAP32[r79] = r80;
      HEAP32[r81 >> 2] = r80;
      HEAP32[r82] = 0;
      r164 = 0;
      r163 = r47;
      while (1) {
        __ZN5Avoid9IncSolverC1ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE(r43, r33, r34);
        __ZN5Avoid9IncSolver5solveEv(r43);
        r166 = HEAP32[r59];
        L1546 : do {
          if ((HEAP32[r60] | 0) == (r166 | 0)) {
            r232 = 1;
          } else {
            r172 = 1;
            r167 = 0;
            r187 = r166;
            while (1) {
              r165 = HEAP32[r187 + (r167 << 2) >> 2];
              r180 = HEAP32[r165 >> 2];
              do {
                if ((r180 | 0) > 0) {
                  r188 = r165 + 12 | 0;
                  r174 = r165 + 4 | 0;
                  if (Math.abs((HEAP32[tempDoublePtr >> 2] = HEAP32[r188 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r188 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r174 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r174 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) <= .01) {
                    r233 = r172;
                    break;
                  }
                  if ((r180 | 0) == 2) {
                    if ((HEAP32[r82] | 0) != 0) {
                      r174 = HEAP32[r79];
                      if ((HEAP32[r174 + 8 >> 2] | 0) == (HEAP32[r174 + 12 >> 2] | 0)) {
                        r233 = 0;
                        break;
                      }
                    }
                    HEAP32[r93 >> 2] = r167;
                    HEAP32[r94 >> 2] = r167;
                    __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9push_backERKS2_(r42, r44);
                    r233 = 0;
                    break;
                  } else if ((r180 | 0) == 3) {
                    if ((HEAP32[r82] | 0) == 0) {
                      ___assert_func(5244520, 3153, 5255324, 5244408);
                    }
                    HEAP32[HEAP32[r79] + 12 >> 2] = r167;
                    r233 = 0;
                    break;
                  } else if ((r180 | 0) == 1) {
                    if ((HEAP32[r82] | 0) == 0) {
                      HEAP32[r95 >> 2] = r167;
                      HEAP32[r96 >> 2] = r167;
                      __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9push_backERKS2_(r42, r45);
                      r233 = 0;
                      break;
                    } else {
                      HEAP32[HEAP32[r79] + 12 >> 2] = r167;
                      r233 = 0;
                      break;
                    }
                  } else {
                    r233 = 0;
                    break;
                  }
                } else {
                  r233 = r172;
                }
              } while (0);
              r180 = r167 + 1 | 0;
              r165 = HEAP32[r59];
              if (r180 >>> 0 < HEAP32[r60] - r165 >> 2 >>> 0) {
                r172 = r233;
                r167 = r180;
                r187 = r165;
              } else {
                r232 = r233;
                break L1546;
              }
            }
          }
        } while (0);
        L1567 : do {
          if (r5) {
            do {
              if ((r164 & 1) << 24 >> 24 != 0) {
                if ((HEAP32[r78] | 0) == 0) {
                  ___assert_func(5244520, 3197, 5255324, 5243620);
                }
                if ((r232 & 1) << 24 >> 24 == 0) {
                  __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9pop_frontEv(r40);
                  r166 = HEAP32[r64];
                  r187 = HEAP32[r166 - 4 >> 2];
                  if ((r187 | 0) == 0) {
                    r234 = r166;
                  } else {
                    __ZdlPv(r187);
                    r234 = HEAP32[r64];
                  }
                  HEAP32[r64] = r234 - 4 | 0;
                  break;
                }
                r187 = HEAP32[r77];
                L1580 : do {
                  if ((r187 | 0) != (r76 | 0)) {
                    r166 = r187 + 8 | 0;
                    r167 = r187 + 12 | 0;
                    r172 = r187;
                    while (1) {
                      __ZN5Avoid26PotentialSegmentConstraint12rewriteIndexEjj(r172 + 8 | 0, HEAP32[r166 >> 2], HEAP32[r167 >> 2]);
                      r165 = HEAP32[r172 + 4 >> 2];
                      if ((r165 | 0) == (r76 | 0)) {
                        break L1580;
                      } else {
                        r172 = r165;
                      }
                    }
                  }
                } while (0);
                __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9pop_frontEv(r40);
              }
            } while (0);
            __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r8, HEAP32[r77], r76, HEAP32[r78]);
            if ((HEAP32[r78] | 0) == 0) {
              r235 = r232;
              r236 = 0;
              r237 = r163;
              break;
            }
            while (1) {
              r187 = HEAP32[r77];
              r238 = r187 + 8 | 0;
              r239 = HEAP32[r238 >> 2];
              r240 = r187 + 12 | 0;
              r241 = HEAP32[r240 >> 2];
              if (__ZNK5Avoid26PotentialSegmentConstraint10stillValidEv(r239, r241)) {
                break;
              }
              __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9pop_frontEv(r40);
              if ((HEAP32[r78] | 0) == 0) {
                r235 = r232;
                r236 = 0;
                r237 = r163;
                break L1567;
              }
            }
            if ((r239 | 0) == (r241 | 0)) {
              ___assert_func(5244520, 3243, 5255324, 5243040);
            }
            r187 = __Znwj(32);
            r172 = HEAP32[r59];
            __ZN5Avoid10ConstraintC1EPNS_8VariableES2_db(r187, HEAP32[r172 + (HEAP32[r238 >> 2] << 2) >> 2], HEAP32[r172 + (HEAP32[r240 >> 2] << 2) >> 2], 0, 1);
            r172 = HEAP32[r64];
            r167 = HEAP32[r66];
            if (r172 >>> 0 < r167 >>> 0) {
              if ((r172 | 0) == 0) {
                r242 = 0;
              } else {
                HEAP32[r172 >> 2] = r187;
                r242 = HEAP32[r64];
              }
              HEAP32[r64] = r242 + 4 | 0;
              r235 = 0;
              r236 = 1;
              r237 = r163;
              break;
            }
            r166 = HEAP32[r63];
            r165 = r172 - r166 + 4 >> 2 | 0;
            if (r165 >>> 0 > 1073741823) {
              __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
              r243 = HEAP32[r66];
              r244 = HEAP32[r63];
            } else {
              r243 = r167;
              r244 = r166;
            }
            r166 = r244;
            r167 = r243 - r166 | 0;
            if (r167 >> 2 >>> 0 > 536870910) {
              r245 = 1073741823;
            } else {
              r172 = r167 >> 1;
              r245 = r172 >>> 0 < r165 >>> 0 ? r165 : r172;
            }
            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r24, r245, HEAP32[r64] - r166 >> 2, r83);
            r166 = HEAP32[r65];
            do {
              if ((r166 | 0) == (HEAP32[r84 >> 2] | 0)) {
                r172 = HEAP32[r85];
                r165 = HEAP32[r86 >> 2];
                if (r172 >>> 0 > r165 >>> 0) {
                  r167 = r172;
                  r180 = (r167 - r165 + 4 >> 2 | 0) / -2 & -1;
                  r174 = (r180 << 2) + r172 | 0;
                  r188 = r166 - r167 | 0;
                  _memmove(r174, r172, r188, 4, 0);
                  r167 = ((r188 >> 2) + r180 << 2) + r172 | 0;
                  HEAP32[r65] = r167;
                  HEAP32[r85] = r174;
                  r246 = r167;
                  break;
                }
                r167 = r166 - r165 >> 1;
                r174 = (r167 | 0) == 0 ? 1 : r167;
                __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r23, r174, r174 >>> 2, HEAP32[r87 >> 2]);
                __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r23, r172, r166);
                HEAP32[r86 >> 2] = HEAP32[r88 >> 2];
                HEAP32[r88 >> 2] = r165;
                HEAP32[r85] = HEAP32[r89 >> 2];
                HEAP32[r89 >> 2] = r172;
                r172 = HEAP32[r90 >> 2];
                HEAP32[r65] = r172;
                HEAP32[r90 >> 2] = r166;
                HEAP32[r84 >> 2] = HEAP32[r91 >> 2];
                HEAP32[r91 >> 2] = r166;
                __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r23);
                r246 = r172;
              } else {
                r246 = r166;
              }
            } while (0);
            if ((r246 | 0) == 0) {
              r247 = 0;
            } else {
              HEAP32[r246 >> 2] = r187;
              r247 = r246;
            }
            HEAP32[r65] = r247 + 4 | 0;
            __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r34, r24);
            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r24);
            r235 = 0;
            r236 = 1;
            r237 = r163;
          } else {
            if ((r232 & 1) << 24 >> 24 != 0) {
              r235 = r232;
              r236 = r164;
              r237 = r163;
              break;
            }
            if ((HEAP32[r82] | 0) == 0) {
              ___assert_func(5244520, 3254, 5255324, 5244408);
            }
            r166 = r163 - r92;
            r172 = HEAP32[r63];
            if ((r172 | 0) == (HEAP32[r64] | 0)) {
              r235 = r232;
              r236 = r164;
              r237 = r166;
              break;
            } else {
              r248 = r172;
              r249 = 0;
            }
            while (1) {
              r172 = HEAP32[r81 >> 2];
              r165 = HEAP32[r248 >> 2];
              r174 = HEAP32[r59];
              r167 = (HEAP32[r165 >> 2] | 0) == (HEAP32[r174 + (HEAP32[r172 + 8 >> 2] << 2) >> 2] | 0) ? 1 : r249;
              do {
                if ((r167 & 1) << 24 >> 24 == 0) {
                  r250 = r174;
                } else {
                  r180 = (r165 + 8 | 0) >> 2;
                  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r180], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r180 + 1], HEAPF64[tempDoublePtr >> 3]) <= 0) {
                    r250 = r174;
                    break;
                  }
                  HEAPF64[tempDoublePtr >> 3] = r166, HEAP32[r180] = HEAP32[tempDoublePtr >> 2], HEAP32[r180 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                  r250 = HEAP32[r59];
                }
              } while (0);
              if ((HEAP32[r165 + 4 >> 2] | 0) == (HEAP32[r250 + (HEAP32[r172 + 12 >> 2] << 2) >> 2] | 0)) {
                __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9pop_frontEv(r42);
                if ((HEAP32[r82] | 0) == 0) {
                  r235 = r232;
                  r236 = r164;
                  r237 = r166;
                  break L1567;
                } else {
                  r251 = 0;
                }
              } else {
                r251 = r167;
              }
              r174 = r248 + 4 | 0;
              if ((r174 | 0) == (HEAP32[r64] | 0)) {
                r235 = r232;
                r236 = r164;
                r237 = r166;
                break L1567;
              } else {
                r248 = r174;
                r249 = r251;
              }
            }
          }
        } while (0);
        __ZN5Avoid9IncSolverD1Ev(r43);
        r252 = (r235 & 1) << 24 >> 24 != 0;
        if (r237 > 1e-4 & (r252 ^ 1)) {
          r164 = r236;
          r163 = r237;
        } else {
          break;
        }
      }
      L1635 : do {
        if (r252) {
          r163 = HEAP32[r49];
          if ((r163 | 0) == (r48 | 0)) {
            break;
          } else {
            r253 = r163;
          }
          while (1) {
            r163 = HEAP32[r253 + 8 >> 2];
            if ((r163 | 0) == 0) {
              r254 = 0;
            } else {
              r254 = ___dynamic_cast(r163, 5272756, 5272736);
            }
            __ZN5Avoid19NudgingShiftSegment25updatePositionsFromSolverEv(r254);
            r163 = HEAP32[r253 + 4 >> 2];
            if ((r163 | 0) == (r48 | 0)) {
              break L1635;
            } else {
              r253 = r163;
            }
          }
        }
      } while (0);
      r163 = HEAP32[r49];
      L1644 : do {
        if ((r163 | 0) != (r48 | 0)) {
          r164 = r163;
          while (1) {
            __ZN5Avoid13delete_objectclINS_12ShiftSegmentEEEvPT_(HEAP32[r164 + 8 >> 2]);
            r166 = HEAP32[r164 + 4 >> 2];
            if ((r166 | 0) == (r48 | 0)) {
              break L1644;
            } else {
              r164 = r166;
            }
          }
        }
      } while (0);
      r163 = HEAP32[r59];
      r164 = HEAP32[r60];
      L1649 : do {
        if ((r163 | 0) != (r164 | 0)) {
          r166 = r163;
          while (1) {
            __ZN5Avoid13delete_objectclINS_8VariableEEEvPT_(HEAP32[r166 >> 2]);
            r187 = r166 + 4 | 0;
            if ((r187 | 0) == (r164 | 0)) {
              break L1649;
            } else {
              r166 = r187;
            }
          }
        }
      } while (0);
      r164 = HEAP32[r63];
      r163 = HEAP32[r64];
      L1653 : do {
        if ((r164 | 0) != (r163 | 0)) {
          r166 = r164;
          while (1) {
            __ZN5Avoid13delete_objectclINS_10ConstraintEEEvPT_(HEAP32[r166 >> 2]);
            r187 = r166 + 4 | 0;
            if ((r187 | 0) == (r163 | 0)) {
              break L1653;
            } else {
              r166 = r187;
            }
          }
        }
      } while (0);
      __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED1Ev(r42);
      __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED1Ev(r40);
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r36);
      __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r35);
      __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r34);
      __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED1Ev(r33);
      __ZNSt3__14listIjNS_9allocatorIjEEED1Ev(r97);
    }
    if ((HEAP32[r51 >> 2] | 0) == 0) {
      break;
    }
  }
  __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r25);
  STACKTOP = r7;
  return;
}
__ZN5AvoidL21nudgeOrthogonalRoutesEPNS_6RouterEjRNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS2_4listIPNS_12ShiftSegmentENS8_ISH_EEEEb["X"] = 1;
function __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC2ERKS9_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED1Ev(r1) {
  __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED2Ev(r1);
  return;
}
function __ZN5AvoidL31buildOrthogonalNudgingOrderInfoEPNS_6RouterERNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 84 | 0;
  r4 = r3;
  r5 = r3 + 12, r6 = r5 >> 2;
  r7 = r3 + 24;
  __ZN5AvoidL24simplifyOrthogonalRoutesEPNS_6RouterE(r1);
  __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1INS_15__list_iteratorIS3_PvEEEET_SB_PNS_9enable_ifIXsr21__is_forward_iteratorISB_EE5valueEvE4typeE(r4, HEAP32[r1 + 20 >> 2], r1 + 16 | 0);
  r1 = HEAP32[r4 + 4 >> 2];
  r8 = HEAP32[r4 >> 2];
  r9 = r1;
  r10 = r9 - r8 >> 2;
  __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEEC1Ej(r5, r10);
  L1664 : do {
    if ((r1 | 0) == (r8 | 0)) {
      r11 = r1;
    } else {
      r12 = HEAP32[r6];
      r13 = 0;
      while (1) {
        __ZN5Avoid7PolygonaSERKS0_(r12 + (r13 * 44 & -1) | 0, __ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r8 + (r13 << 2) >> 2]));
        r14 = r13 + 1 | 0;
        if (r14 >>> 0 < r10 >>> 0) {
          r13 = r14;
        } else {
          r11 = r8;
          break L1664;
        }
      }
    }
  } while (0);
  L1671 : do {
    if ((r1 | 0) == (r11 | 0)) {
      r15 = r1;
    } else {
      r8 = r9 - r11 >> 2;
      r10 = HEAP32[r6];
      r13 = 0;
      while (1) {
        L1675 : do {
          if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[HEAP32[r11 + (r13 << 2) >> 2] + 8 >> 2]) | 0) == 2) {
            r12 = r10 + (r13 * 44 & -1) | 0;
            r14 = 0;
            while (1) {
              do {
                if ((r13 | 0) != (r14 | 0)) {
                  if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[HEAP32[r11 + (r14 << 2) >> 2] + 8 >> 2]) | 0) != 2) {
                    break;
                  }
                  __ZN5Avoid22splitBranchingSegmentsERNS_7PolygonEbS1_d(r10 + (r14 * 44 & -1) | 0, 1, r12, 0);
                }
              } while (0);
              r16 = r14 + 1 | 0;
              if (r16 >>> 0 < r8 >>> 0) {
                r14 = r16;
              } else {
                break L1675;
              }
            }
          }
        } while (0);
        r14 = r13 + 1 | 0;
        if (r14 >>> 0 < r8 >>> 0) {
          r13 = r14;
        } else {
          r15 = r11;
          break L1671;
        }
      }
    }
  } while (0);
  if ((r1 | 0) == (r15 | 0)) {
    __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED1Ev(r5);
    __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r4);
    STACKTOP = r3;
    return;
  }
  r1 = r9 - r15 >> 2;
  r9 = HEAP32[r6];
  r6 = r7;
  r11 = r7 + 36 | 0;
  r7 = 0;
  while (1) {
    r13 = HEAP32[r15 + (r7 << 2) >> 2];
    r8 = r13;
    L1690 : do {
      if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r13 + 8 >> 2]) | 0) == 2) {
        r10 = r9 + (r7 * 44 & -1) | 0;
        r14 = r10;
        r12 = r7;
        L1692 : while (1) {
          r16 = r12 + 1 | 0;
          if (r16 >>> 0 >= r1 >>> 0) {
            break L1690;
          }
          r17 = HEAP32[r15 + (r16 << 2) >> 2];
          if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r17 + 8 >> 2]) | 0) != 2) {
            r12 = r16;
            continue;
          }
          __ZN5Avoid18ConnectorCrossingsC1ERNS_7PolygonEbS2_PNS_7ConnRefES4_(r6, r9 + (r16 * 44 & -1) | 0, 1, r10, r17, r8);
          HEAP32[r11 >> 2] = r2;
          r17 = 1;
          while (1) {
            if (r17 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 16 >> 2]](r10) >>> 0) {
              r12 = r16;
              continue L1692;
            }
            r18 = r17 + 1 | 0;
            __ZN5Avoid18ConnectorCrossings15countForSegmentEjb(r6, r17, (r18 | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 16 >> 2]](r10) | 0));
            r17 = r18;
          }
        }
      }
    } while (0);
    r8 = r7 + 1 | 0;
    if (r8 >>> 0 < r1 >>> 0) {
      r7 = r8;
    } else {
      break;
    }
  }
  __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED1Ev(r5);
  __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
__ZN5AvoidL31buildOrthogonalNudgingOrderInfoEPNS_6RouterERNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEE["X"] = 1;
function __ZN5Avoid22improveHyperedgeRoutesEPNS_6RouterE(r1) {
  var r2, r3;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 56 | 0;
  r3 = r2;
  __ZN5Avoid17ImproveHyperEdgesC1EPNS_6RouterE(r3, r1);
  __ZN5Avoid17ImproveHyperEdges7executeEv(r3);
  __ZN5Avoid17ImproveHyperEdgesD1Ev(r3);
  STACKTOP = r2;
  return;
}
function __ZN5Avoid17ImproveHyperEdgesC1EPNS_6RouterE(r1, r2) {
  __ZN5Avoid17ImproveHyperEdgesC2EPNS_6RouterE(r1, r2);
  return;
}
function __ZN5Avoid17ImproveHyperEdges7executeEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 76 | 0;
  r4 = r3;
  r5 = r3 + 8;
  r6 = r3 + 12;
  r7 = r3 + 16, r8 = r7 >> 2;
  r9 = r3 + 20, r10 = r9 >> 2;
  r11 = r3 + 24;
  r12 = r3 + 48;
  r13 = r3 + 72, r14 = r13 >> 2;
  r15 = (r1 | 0) >> 2;
  r16 = HEAP32[r15];
  r17 = HEAP32[r16 + 20 >> 2];
  r18 = r1 + 4 | 0;
  L1707 : do {
    if ((r17 | 0) == (r16 + 16 | 0)) {
      r19 = r1 + 8 | 0;
      r20 = r19;
      r21 = r19;
    } else {
      r19 = r18 | 0;
      r22 = r6 | 0;
      r23 = r1 + 8 | 0;
      r24 = r23;
      r25 = r5 | 0;
      r26 = r12;
      r27 = r11;
      r28 = r17;
      while (1) {
        r29 = HEAP32[r28 + 8 >> 2];
        HEAP32[r8] = 0;
        HEAP32[r10] = 0;
        r30 = HEAP32[r29 + 140 >> 2];
        if ((r30 | 0) == 0) {
          r31 = 0;
        } else {
          r32 = __ZNK5Avoid7ConnEnd8junctionEv(HEAP32[r30 + 36 >> 2]);
          HEAP32[r8] = r32;
          r31 = r32;
        }
        r32 = HEAP32[r29 + 144 >> 2];
        if ((r32 | 0) == 0) {
          r33 = 0;
        } else {
          r30 = __ZNK5Avoid7ConnEnd8junctionEv(HEAP32[r32 + 36 >> 2]);
          HEAP32[r10] = r30;
          r33 = r30;
        }
        do {
          if ((r31 | 0) == 0) {
            r34 = 0;
          } else {
            if (!__ZNK5Avoid11JunctionRef13positionFixedEv(HEAP8[r31 + 144 | 0])) {
              r34 = r31;
              break;
            }
            HEAP32[r8] = 0;
            r34 = 0;
          }
        } while (0);
        do {
          if ((r33 | 0) == 0) {
            r2 = 1428;
          } else {
            if (!__ZNK5Avoid11JunctionRef13positionFixedEv(HEAP8[r33 + 144 | 0])) {
              r2 = 1430;
              break;
            }
            HEAP32[r10] = 0;
            r2 = 1428;
            break;
          }
        } while (0);
        do {
          if (r2 == 1428) {
            r2 = 0;
            if ((r34 | 0) == 0) {
              break;
            } else {
              r2 = 1430;
              break;
            }
          }
        } while (0);
        L1727 : do {
          if (r2 == 1430) {
            r2 = 0;
            __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(r6, r19, r7);
            r30 = HEAP32[r22 >> 2];
            __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(r5, r19, r9);
            r32 = (HEAP32[r25 >> 2] | 0) == (r24 | 0);
            r35 = HEAP32[r8];
            do {
              if ((r35 | 0) == 0) {
                r36 = __Znwj(48);
                __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r36);
                r37 = r36;
              } else {
                if ((r30 | 0) == (r24 | 0)) {
                  r36 = __Znwj(48);
                  r38 = r36;
                  __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r36);
                  r39 = r36 + 16 | 0;
                  FUNCTION_TABLE[HEAP32[HEAP32[r35 >> 2] + 8 >> 2]](r11, r35);
                  HEAP32[r39 >> 2] = HEAP32[r27 >> 2];
                  HEAP32[r39 + 4 >> 2] = HEAP32[r27 + 4 >> 2];
                  HEAP32[r39 + 8 >> 2] = HEAP32[r27 + 8 >> 2];
                  HEAP32[r39 + 12 >> 2] = HEAP32[r27 + 12 >> 2];
                  HEAP32[r39 + 16 >> 2] = HEAP32[r27 + 16 >> 2];
                  HEAP16[r39 + 20 >> 1] = HEAP16[r27 + 20 >> 1];
                  HEAP32[r36 + 12 >> 2] = r35;
                  HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r18, r7) >> 2] = r38;
                  r37 = r38;
                  break;
                } else {
                  r37 = HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r18, r7) >> 2];
                  break;
                }
              }
            } while (0);
            r35 = HEAP32[r10];
            do {
              if ((r35 | 0) == 0) {
                r30 = __Znwj(48);
                __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r30);
                r40 = r30;
              } else {
                if (r32) {
                  r30 = __Znwj(48);
                  r38 = r30;
                  __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r30);
                  r36 = r30 + 16 | 0;
                  FUNCTION_TABLE[HEAP32[HEAP32[r35 >> 2] + 8 >> 2]](r12, r35);
                  HEAP32[r36 >> 2] = HEAP32[r26 >> 2];
                  HEAP32[r36 + 4 >> 2] = HEAP32[r26 + 4 >> 2];
                  HEAP32[r36 + 8 >> 2] = HEAP32[r26 + 8 >> 2];
                  HEAP32[r36 + 12 >> 2] = HEAP32[r26 + 12 >> 2];
                  HEAP32[r36 + 16 >> 2] = HEAP32[r26 + 16 >> 2];
                  HEAP16[r36 + 20 >> 1] = HEAP16[r26 + 20 >> 1];
                  HEAP32[r30 + 12 >> 2] = r35;
                  HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r18, r9) >> 2] = r38;
                  r40 = r38;
                  break;
                } else {
                  r40 = HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r18, r9) >> 2];
                  break;
                }
              }
            } while (0);
            r35 = r29;
            r32 = __ZN5Avoid7ConnRef12displayRouteEv(r35);
            r38 = r32;
            r30 = r32;
            r36 = r37 + 16 | 0;
            r39 = 0;
            r41 = 1;
            while (1) {
              if (r41 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r38 >> 2] + 16 >> 2]](r32) >>> 0) {
                break L1727;
              }
              r42 = r41 + 1 | 0;
              if ((r42 | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r38 >> 2] + 16 >> 2]](r32) | 0)) {
                r43 = r40;
              } else {
                r44 = __Znwj(48);
                __ZN5Avoid17HyperEdgeTreeNodeC1Ev(r44);
                r43 = r44;
              }
              r44 = r43 + 16 | 0;
              r45 = FUNCTION_TABLE[HEAP32[HEAP32[r30 >> 2] + 24 >> 2]](r32, r41);
              HEAP32[r44 >> 2] = HEAP32[r45 >> 2];
              HEAP32[r44 + 4 >> 2] = HEAP32[r45 + 4 >> 2];
              HEAP32[r44 + 8 >> 2] = HEAP32[r45 + 8 >> 2];
              HEAP32[r44 + 12 >> 2] = HEAP32[r45 + 12 >> 2];
              HEAP32[r44 + 16 >> 2] = HEAP32[r45 + 16 >> 2];
              HEAP16[r44 + 20 >> 1] = HEAP16[r45 + 20 >> 1];
              if ((r41 | 0) == 1) {
                r45 = FUNCTION_TABLE[HEAP32[HEAP32[r30 >> 2] + 24 >> 2]](r32, 0);
                HEAP32[r36 >> 2] = HEAP32[r45 >> 2];
                HEAP32[r36 + 4 >> 2] = HEAP32[r45 + 4 >> 2];
                HEAP32[r36 + 8 >> 2] = HEAP32[r45 + 8 >> 2];
                HEAP32[r36 + 12 >> 2] = HEAP32[r45 + 12 >> 2];
                HEAP32[r36 + 16 >> 2] = HEAP32[r45 + 16 >> 2];
                HEAP16[r36 + 20 >> 1] = HEAP16[r45 + 20 >> 1];
                r46 = r37;
              } else {
                r46 = r39;
              }
              __ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE(__Znwj(12), r46, r43, r35);
              r39 = r43;
              r41 = r42;
            }
          }
        } while (0);
        r29 = HEAP32[r28 + 4 >> 2];
        if ((r29 | 0) == (HEAP32[r15] + 16 | 0)) {
          r20 = r23;
          r21 = r24;
          break L1707;
        } else {
          r28 = r29;
        }
      }
    }
  } while (0);
  r43 = r18 | 0;
  r46 = HEAP32[r43 >> 2];
  L1754 : do {
    if ((r46 | 0) != (r21 | 0)) {
      r37 = r1 + 16 | 0;
      r40 = r20;
      r9 = r46;
      while (1) {
        __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r4, r37, HEAP32[r9 + 20 >> 2] + 12 | 0);
        r12 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r9 | 0);
        if ((r12 | 0) == (r40 | 0)) {
          break L1754;
        } else {
          r9 = r12;
        }
      }
    }
  } while (0);
  r4 = r1 + 16 | 0;
  r46 = (r4 | 0) >> 2;
  r9 = HEAP32[r46];
  r40 = r1 + 20 | 0;
  r37 = r40;
  L1759 : do {
    if ((r9 | 0) == (r37 | 0)) {
      r47 = r40;
    } else {
      r12 = r4;
      r10 = r40;
      r7 = r9;
      while (1) {
        __ZN5Avoid17HyperEdgeTreeNode24removeOtherJunctionsFromEPNS_17HyperEdgeTreeEdgeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE(HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r18, r7 + 16 | 0) >> 2], 0, r12);
        r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r7 | 0);
        if ((r11 | 0) == (r10 | 0)) {
          r47 = r10;
          break L1759;
        } else {
          r7 = r11;
        }
      }
    }
  } while (0);
  __ZN5Avoid5Timer8RegisterENS_10TimerIndexEb(HEAP32[r15] + 148 | 0, 12);
  __ZN5Avoid17ImproveHyperEdges29moveJunctionsAlongCommonEdgesEv(r1);
  HEAP32[r14] = 2;
  r9 = r1 + 40 | 0;
  r40 = r1 + 28 | 0;
  r4 = r9 | 0;
  r7 = r40 | 0;
  r10 = 0;
  while (1) {
    r12 = r10 & 1;
    HEAP32[r14] = (-r12 & 100) + 100 | 0;
    __ZN5Avoid17ImproveHyperEdges22buildHyperEdgeSegmentsEj(r1, r12);
    __ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE(HEAP32[r15], r12, r9);
    __ZN5Avoid17ImproveHyperEdges22nudgeHyperEdgeSegmentsEjRj(r1, r12, r13);
    __ZN5Avoid17ImproveHyperEdges21removeZeroLengthEdgesEv(r1);
    __ZN5Avoid17ImproveHyperEdges29moveJunctionsAlongCommonEdgesEv(r1);
    HEAP32[r14] = HEAP32[r14] + 1 | 0;
    r12 = HEAP32[r46];
    L1767 : do {
      if ((r12 | 0) != (r37 | 0)) {
        r11 = r12;
        while (1) {
          r8 = __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEEixERSD_(r40, r11 + 16 | 0);
          r5 = r8;
          r6 = HEAP32[r8 + 4 >> 2];
          L1770 : do {
            if ((r6 | 0) != (r5 | 0)) {
              r8 = r6;
              while (1) {
                __ZN5Avoid13delete_objectclINS_12ShiftSegmentEEEvPT_(HEAP32[r8 + 8 >> 2]);
                r2 = HEAP32[r8 + 4 >> 2];
                if ((r2 | 0) == (r5 | 0)) {
                  break L1770;
                } else {
                  r8 = r2;
                }
              }
            }
          } while (0);
          r5 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r11 | 0);
          if ((r5 | 0) == (r47 | 0)) {
            break L1767;
          } else {
            r11 = r5;
          }
        }
      }
    } while (0);
    __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE5clearEv(r7);
    __ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5clearEv(r4);
    r12 = r10 + 1 | 0;
    if ((r12 | 0) == 4) {
      break;
    } else {
      r10 = r12;
    }
  }
  r10 = HEAP32[r43 >> 2];
  L1776 : do {
    if ((r10 | 0) != (r21 | 0)) {
      r43 = r20;
      r4 = r10;
      while (1) {
        r7 = HEAP32[r4 + 20 >> 2];
        __ZN5Avoid11JunctionRef22setRecommendedPositionERKNS_5PointE(HEAP32[r7 + 12 >> 2], r7 + 16 | 0);
        r7 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4 | 0);
        if ((r7 | 0) == (r43 | 0)) {
          break L1776;
        } else {
          r4 = r7;
        }
      }
    }
  } while (0);
  __ZN5Avoid17ImproveHyperEdges37writeHyperEdgeSegmentsBackToConnPathsEv(r1);
  r1 = HEAP32[r46];
  if ((r1 | 0) == (r37 | 0)) {
    r48 = HEAP32[r15];
    r49 = r48 + 148 | 0;
    __ZN5Avoid5Timer4StopEv(r49);
    STACKTOP = r3;
    return;
  } else {
    r50 = r1;
  }
  while (1) {
    r1 = HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r18, r50 + 16 | 0) >> 2];
    r37 = r1;
    __ZN5Avoid17HyperEdgeTreeNode17deleteEdgesExceptEPNS_17HyperEdgeTreeEdgeE(r37, 0);
    if ((r1 | 0) != 0) {
      __ZN5Avoid17HyperEdgeTreeNodeD1Ev(r37);
      __ZdlPv(r1);
    }
    r1 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r50 | 0);
    if ((r1 | 0) == (r47 | 0)) {
      break;
    } else {
      r50 = r1;
    }
  }
  r48 = HEAP32[r15];
  r49 = r48 + 148 | 0;
  __ZN5Avoid5Timer4StopEv(r49);
  STACKTOP = r3;
  return;
}
__ZN5Avoid17ImproveHyperEdges7executeEv["X"] = 1;
function __ZN5Avoid17ImproveHyperEdgesD1Ev(r1) {
  __ZN5Avoid17ImproveHyperEdgesD2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC1ERKS9_(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC2ERKS9_(r1);
  return;
}
function __ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZN5Avoid11LineSegmentD1Ev(r6 + 8 | 0);
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZN5Avoid11LineSegmentD1Ev(r1) {
  __ZN5Avoid11LineSegmentD2Ev(r1);
  return;
}
function __ZN5Avoid11LineSegmentD2Ev(r1) {
  __ZNSt3__13setIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r1 + 40 | 0);
  __ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev(r1 + 28 | 0);
  return;
}
function __ZNSt3__13setIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__13setIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__13setIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC2ERKS4_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 1504;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 1508;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1507;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 1507) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 1508) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  } else if (r4 == 1504) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  }
}



function __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  if ((r4 | 0) == 2) {
    r8 = HEAP32[r3 >> 2];
    if (__ZNK5Avoid11LineSegmentltERKS0_(r8 + 8 | 0, r2 + 8 | 0)) {
      r9 = (r8 + 4 | 0) >> 2;
      r10 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r10] + 4 >> 2] = HEAP32[r9];
      HEAP32[HEAP32[r9] >> 2] = HEAP32[r10];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r10] = HEAP32[r11];
      HEAP32[r11] = r8;
      HEAP32[r9] = r2;
      HEAP32[r1 >> 2] = r8;
      STACKTOP = r5;
      return;
    } else {
      HEAP32[r1 >> 2] = r2;
      STACKTOP = r5;
      return;
    }
  } else if ((r4 | 0) == 0 | (r4 | 0) == 1) {
    HEAP32[r1 >> 2] = r2;
    STACKTOP = r5;
    return;
  } else {
    r8 = r4 >>> 1;
    L1849 : do {
      if ((r8 | 0) == 0) {
        r12 = r2;
      } else {
        r9 = r8;
        r11 = r2;
        while (1) {
          r10 = r9 - 1 | 0;
          r13 = HEAP32[r11 + 4 >> 2];
          if ((r10 | 0) > 0) {
            r9 = r10;
            r11 = r13;
          } else {
            r12 = r13;
            break L1849;
          }
        }
      }
    } while (0);
    __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r6, r2, r12, r8);
    r2 = HEAP32[r6 >> 2];
    __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r7, r12, r3, r4 - r8 | 0);
    r8 = HEAP32[r7 >> 2];
    r7 = r2 + 8 | 0;
    if (__ZNK5Avoid11LineSegmentltERKS0_(r8 + 8 | 0, r7)) {
      r4 = HEAP32[r8 + 4 >> 2];
      L1855 : do {
        if ((r4 | 0) == (r3 | 0)) {
          r14 = r3;
        } else {
          r12 = r4;
          while (1) {
            if (!__ZNK5Avoid11LineSegmentltERKS0_(r12 + 8 | 0, r7)) {
              r14 = r12;
              break L1855;
            }
            r6 = HEAP32[r12 + 4 >> 2];
            if ((r6 | 0) == (r3 | 0)) {
              r14 = r3;
              break L1855;
            } else {
              r12 = r6;
            }
          }
        }
      } while (0);
      r7 = HEAP32[r14 >> 2];
      r4 = (r7 + 4 | 0) >> 2;
      r12 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r12] + 4 >> 2] = HEAP32[r4];
      HEAP32[HEAP32[r4] >> 2] = HEAP32[r12];
      r6 = HEAP32[r2 + 4 >> 2];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r12] = HEAP32[r11];
      HEAP32[r11] = r7;
      HEAP32[r4] = r2;
      r15 = r8;
      r16 = r14;
      r17 = r6;
    } else {
      r15 = r2;
      r16 = r8;
      r17 = HEAP32[r2 + 4 >> 2];
    }
    L1862 : do {
      if ((r17 | 0) != (r16 | 0)) {
        r2 = r16;
        r8 = r16;
        r6 = r17;
        while (1) {
          r14 = r2 + 8 | 0;
          r4 = (r2 | 0) == (r3 | 0);
          r7 = r6;
          while (1) {
            if (r4) {
              break L1862;
            }
            if (__ZNK5Avoid11LineSegmentltERKS0_(r14, r7 + 8 | 0)) {
              break;
            }
            r11 = HEAP32[r7 + 4 >> 2];
            if ((r11 | 0) == (r8 | 0)) {
              break L1862;
            } else {
              r7 = r11;
            }
          }
          r14 = HEAP32[r2 + 4 >> 2];
          L1870 : do {
            if ((r14 | 0) == (r3 | 0)) {
              r18 = r3;
            } else {
              r4 = r7 + 8 | 0;
              r11 = r14;
              while (1) {
                if (!__ZNK5Avoid11LineSegmentltERKS0_(r11 + 8 | 0, r4)) {
                  r18 = r11;
                  break L1870;
                }
                r12 = HEAP32[r11 + 4 >> 2];
                if ((r12 | 0) == (r3 | 0)) {
                  r18 = r3;
                  break L1870;
                } else {
                  r11 = r12;
                }
              }
            }
          } while (0);
          r14 = HEAP32[r18 >> 2];
          r11 = (r14 + 4 | 0) >> 2;
          r4 = (r2 | 0) >> 2;
          HEAP32[HEAP32[r4] + 4 >> 2] = HEAP32[r11];
          HEAP32[HEAP32[r11] >> 2] = HEAP32[r4];
          r12 = HEAP32[r7 + 4 >> 2];
          r9 = (r8 | 0) == (r2 | 0) ? r18 : r8;
          r13 = (r7 | 0) >> 2;
          HEAP32[HEAP32[r13] + 4 >> 2] = r2;
          HEAP32[r4] = HEAP32[r13];
          HEAP32[r13] = r14;
          HEAP32[r11] = r7;
          if ((r12 | 0) == (r9 | 0)) {
            break L1862;
          } else {
            r2 = r18;
            r8 = r9;
            r6 = r12;
          }
        }
      }
    } while (0);
    HEAP32[r1 >> 2] = r15;
    STACKTOP = r5;
    return;
  }
}
__ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_["X"] = 1;
function __ZNK5Avoid11LineSegmentltERKS0_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r1 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r5) {
    r6 = r4 < r5;
    return r6;
  }
  r5 = r1 + 16 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = r2 + 16 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r3) {
    r6 = r4 < r3;
    return r6;
  }
  r3 = r1 + 8 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r5) {
    r6 = r4 < r5;
    return r6;
  }
  if (((HEAP8[r2 + 24 | 0] ^ HEAP8[r1 + 24 | 0]) & 1) << 24 >> 24 == 0) {
    r6 = 0;
    return r6;
  }
  ___assert_func(5244520, 824, 5254680, 5247408);
  r6 = 0;
  return r6;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC1ERKS4_(r1) {
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC2ERKS4_(r1);
  return;
}
function __ZN5Avoid17ImproveHyperEdgesD2Ev(r1) {
  __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r1 + 40 | 0);
  __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEED1Ev(r1 + 28 | 0);
  __ZNSt3__13setIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1 + 16 | 0);
  __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev(r1 + 4 | 0);
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEED1Ev(r1) {
  __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEED2Ev(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__13setIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEED1Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZNSt3__14pairIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEEED1Ev(r1 + 16 | 0);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__14pairIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEEED1Ev(r1) {
  __ZNSt3__14pairIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEEED2Ev(r1);
  return;
}
function __ZNSt3__14pairIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEEED2Ev(r1) {
  __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev(r1 + 4 | 0);
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(r1, r4, r2);
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) != 0) {
    r8 = r7;
    r9 = r8 + 20 | 0;
    STACKTOP = r3;
    return r9;
  }
  __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__construct_nodeERSA_(r5, r1, r2);
  r2 = r5 | 0;
  r5 = HEAP32[r2 >> 2];
  HEAP32[r2 >> 2] = 0;
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(r1 | 0, HEAP32[r4 >> 2], r6, r5 | 0);
  r8 = r5;
  r9 = r8 + 20 | 0;
  STACKTOP = r3;
  return r9;
}
function __ZN5Avoid17ImproveHyperEdges29moveJunctionsAlongCommonEdgesEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = r1 + 8 | 0;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r1 = r3;
  r3 = r2;
  while (1) {
    r2 = r3 + 20 | 0;
    r4 = __ZN5Avoid17HyperEdgeTreeNode27moveJunctionAlongCommonEdgeEPS0_(HEAP32[r2 >> 2]);
    L1926 : do {
      if ((r4 | 0) != 0) {
        r5 = r4;
        while (1) {
          HEAP32[r2 >> 2] = r5;
          r6 = __ZN5Avoid17HyperEdgeTreeNode27moveJunctionAlongCommonEdgeEPS0_(r5);
          if ((r6 | 0) == 0) {
            break L1926;
          } else {
            r5 = r6;
          }
        }
      }
    } while (0);
    r2 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r3 | 0);
    if ((r2 | 0) == (r1 | 0)) {
      break;
    } else {
      r3 = r2;
    }
  }
  return;
}
function __ZN5Avoid17ImproveHyperEdges22buildHyperEdgeSegmentsEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = HEAP32[r1 + 16 >> 2];
  r6 = r1 + 20 | 0;
  if ((r5 | 0) == (r6 | 0)) {
    STACKTOP = r3;
    return;
  }
  r7 = r1 + 28 | 0;
  r8 = r1 + 4 | 0;
  r9 = r1 + 40 | 0;
  r10 = r1 + 44 | 0;
  r1 = r6;
  r6 = r5;
  while (1) {
    r5 = r6 + 16 | 0;
    r11 = __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEEixERSD_(r7, r5);
    __ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeNodeEjPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE(HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r8, r5) >> 2], r2, 0, r11);
    __ZN5Avoid17ImproveHyperEdges24mergeOverlappingSegmentsERNSt3__14listIPNS_12ShiftSegmentENS1_9allocatorIS4_EEEE(r11);
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_15__list_iteratorIS3_PvEEEESA_NS_21__list_const_iteratorIS3_S9_EET_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r4, r9, HEAP32[r10 >> 2], HEAP32[r11 + 4 >> 2], r11);
    r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r6 | 0);
    if ((r11 | 0) == (r1 | 0)) {
      break;
    } else {
      r6 = r11;
    }
  }
  STACKTOP = r3;
  return;
}
function __ZN5Avoid17ImproveHyperEdges22nudgeHyperEdgeSegmentsEjRj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r4 = HEAP32[r1 + 16 >> 2];
  r5 = r1 + 20 | 0;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r6 = (r1 + 52 | 0) >> 2;
  r7 = r2 * 1e4 & -1;
  r2 = r1 + 28 | 0;
  r1 = r5;
  r5 = r4;
  while (1) {
    HEAP32[r6] = HEAP32[r6] + 1 | 0;
    HEAP32[r3 >> 2] = r7;
    HEAP32[r3 >> 2] = (HEAP32[r6] * 1e3 & -1) + r7 | 0;
    r4 = __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEEixERSD_(r2, r5 + 16 | 0);
    r8 = r4 + 4 | 0;
    r9 = HEAP32[r8 >> 2];
    r10 = r4;
    if ((r9 | 0) == (r10 | 0)) {
      r11 = r9;
    } else {
      r12 = r9;
      while (1) {
        r9 = HEAP32[r12 + 8 >> 2];
        if ((r9 | 0) == 0) {
          r13 = 0;
        } else {
          r13 = ___dynamic_cast(r9, 5272756, 5272724);
        }
        __ZN5Avoid21HyperEdgeShiftSegment15setBalanceCountEv(r13);
        r9 = HEAP32[r12 + 4 >> 2];
        if ((r9 | 0) == (r10 | 0)) {
          break;
        } else {
          r12 = r9;
        }
      }
      r11 = HEAP32[r8 >> 2];
    }
    L1952 : do {
      if ((r11 | 0) != (r10 | 0)) {
        r12 = 0;
        r9 = r11;
        while (1) {
          r14 = HEAP32[r9 + 8 >> 2];
          if ((r14 | 0) == 0) {
            r15 = 0;
          } else {
            r15 = ___dynamic_cast(r14, 5272756, 5272724);
          }
          if (__ZNK5Avoid21HyperEdgeShiftSegment7settledEv(r15)) {
            r16 = r12;
          } else {
            __ZN5Avoid21HyperEdgeShiftSegment14adjustPositionEv(r15);
            HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
            __ZN5Avoid17ImproveHyperEdges24mergeOverlappingSegmentsERNSt3__14listIPNS_12ShiftSegmentENS1_9allocatorIS4_EEEE(r4);
            r16 = 1;
          }
          r14 = (r16 & 1) << 24 >> 24 == 0;
          r17 = HEAP32[(r14 ? r9 + 4 | 0 : r8) >> 2];
          if ((r17 | 0) == (r10 | 0)) {
            break L1952;
          } else {
            r12 = r14 ? r16 : 0;
            r9 = r17;
          }
        }
      }
    } while (0);
    r10 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r5 | 0);
    if ((r10 | 0) == (r1 | 0)) {
      break;
    } else {
      r5 = r10;
    }
  }
  return;
}
__ZN5Avoid17ImproveHyperEdges22nudgeHyperEdgeSegmentsEjRj["X"] = 1;
function __ZN5Avoid17ImproveHyperEdges21removeZeroLengthEdgesEv(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 16 >> 2];
  r3 = r1 + 20 | 0;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = r1 + 4 | 0;
  r1 = r3;
  r3 = r2;
  while (1) {
    __ZN5Avoid17HyperEdgeTreeNode21removeZeroLengthEdgesEPNS_17HyperEdgeTreeEdgeE(HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r4, r3 + 16 | 0) >> 2], 0);
    r2 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r3 | 0);
    if ((r2 | 0) == (r1 | 0)) {
      break;
    } else {
      r3 = r2;
    }
  }
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEEixERSD_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_(r1, r4, r2);
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) != 0) {
    r8 = r7;
    r9 = r8 + 20 | 0;
    STACKTOP = r3;
    return r9;
  }
  __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEE16__construct_nodeERSD_(r5, r1, r2);
  r2 = r5 | 0;
  r5 = HEAP32[r2 >> 2];
  HEAP32[r2 >> 2] = 0;
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSL_SL_(r1 | 0, HEAP32[r4 >> 2], r6, r5 | 0);
  r8 = r5;
  r9 = r8 + 20 | 0;
  STACKTOP = r3;
  return r9;
}
function __ZN5Avoid17ImproveHyperEdges37writeHyperEdgeSegmentsBackToConnPathsEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = r1 + 16 | 0;
  r3 = r1 + 20 | 0;
  r4 = r3;
  r5 = r1 + 4 | 0;
  r1 = HEAP32[r2 >> 2];
  if ((r1 | 0) == (r4 | 0)) {
    return;
  }
  r6 = r3;
  r3 = r1;
  while (1) {
    __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r5, r3 + 16 | 0) >> 2], 0, 0);
    r1 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r3 | 0);
    if ((r1 | 0) == (r6 | 0)) {
      break;
    } else {
      r3 = r1;
    }
  }
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r7 = r3;
  }
  while (1) {
    __ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj(HEAP32[__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(r5, r7 + 16 | 0) >> 2], 0, 1);
    r3 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r7 | 0);
    if ((r3 | 0) == (r6 | 0)) {
      break;
    } else {
      r7 = r3;
    }
  }
  return;
}
function __ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE5clearEv(r1) {
  var r2, r3;
  r2 = r1 + 4 | 0;
  r3 = r2 | 0;
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(HEAP32[r3 >> 2]);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  HEAP32[r3 >> 2] = 0;
  return;
}
function __ZN5Avoid13delete_objectclINS_12ShiftSegmentEEEvPT_(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 4 >> 2]](r1);
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEE16__construct_nodeERSD_(r1, r2, r3) {
  var r4, r5;
  r4 = __Znwj(32);
  r5 = r4 + 16 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r3 >> 2];
  }
  r3 = r4 + 20 | 0;
  if ((r3 | 0) != 0) {
    r5 = r3;
    HEAP32[r3 >> 2] = r5;
    HEAP32[r4 + 24 >> 2] = r5;
    HEAP32[r4 + 28 >> 2] = 0;
  }
  HEAP32[r1 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  HEAP8[r1 + 9 | 0] = 1;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSL_SL_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid21HyperEdgeShiftSegment15setBalanceCountEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r2 = (r1 + 4 | 0) >> 2;
  r3 = HEAP32[r2] & 1 ^ 1;
  r4 = r1 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = (r1 + 52 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r4] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = r1 + 16 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = (r1 + 60 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r6 = (r1 + 44 | 0) >> 2;
  HEAP32[r6] = 0;
  if ((HEAP8[r1 + 40 | 0] & 1) << 24 >> 24 != 0) {
    HEAP8[r1 + 48 | 0] = 1;
    return;
  }
  r7 = HEAP32[r1 + 24 >> 2];
  r8 = r1 + 28 | 0;
  L2018 : do {
    if ((r7 | 0) != (r8 | 0)) {
      r9 = r8;
      r10 = r7;
      while (1) {
        r11 = r10 + 16 | 0;
        r12 = HEAP32[r11 >> 2];
        r13 = r12 + 16 | 0;
        r14 = HEAP32[r12 + 4 >> 2];
        L2022 : do {
          if ((r14 | 0) != (r12 | 0)) {
            r15 = r14;
            r16 = r12;
            while (1) {
              r17 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(HEAP32[r15 + 8 >> 2], r16) + 16 | 0;
              r18 = __ZNK5Avoid5PointixEj(r13, r3);
              r19 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
              r18 = __ZNK5Avoid5PointixEj(r17, r3);
              do {
                if (r19 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r18 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                  r20 = __ZNK5Avoid5PointixEj(r17, HEAP32[r2]);
                  r21 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r20 = __ZNK5Avoid5PointixEj(r13, HEAP32[r2]);
                  r22 = r21 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r20 = __ZNK5Avoid5PointixEj(r17, HEAP32[r2]) >> 2;
                  if (r22) {
                    r22 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 1], HEAPF64[tempDoublePtr >> 3]);
                    r21 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 1], HEAPF64[tempDoublePtr >> 3]);
                    r23 = r22 < r21 ? r21 : r22;
                    HEAPF64[tempDoublePtr >> 3] = r23, HEAP32[r4] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                    HEAP32[r6] = HEAP32[r6] - 1 | 0;
                    break;
                  }
                  r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 1], HEAPF64[tempDoublePtr >> 3]);
                  r20 = __ZNK5Avoid5PointixEj(r13, HEAP32[r2]);
                  if (r23 <= (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                    break;
                  }
                  r20 = __ZNK5Avoid5PointixEj(r17, HEAP32[r2]);
                  r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r20 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r20 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
                  r22 = r23 < r20 ? r23 : r20;
                  HEAPF64[tempDoublePtr >> 3] = r22, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                  HEAP32[r6] = HEAP32[r6] + 1 | 0;
                }
              } while (0);
              r17 = HEAP32[r15 + 4 >> 2];
              r18 = HEAP32[r11 >> 2];
              if ((r17 | 0) == (r18 | 0)) {
                break L2022;
              } else {
                r15 = r17;
                r16 = r18;
              }
            }
          }
        } while (0);
        r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r10 | 0);
        if ((r11 | 0) == (r9 | 0)) {
          break L2018;
        } else {
          r10 = r11;
        }
      }
    }
  } while (0);
  HEAP8[r1 + 48 | 0] = 1;
  return;
}
__ZN5Avoid21HyperEdgeShiftSegment15setBalanceCountEv["X"] = 1;
function __ZNK5Avoid21HyperEdgeShiftSegment7settledEv(r1) {
  var r2;
  if ((HEAP8[r1 + 40 | 0] & 1) << 24 >> 24 != 0) {
    r2 = 1;
    return r2;
  }
  if ((HEAP8[r1 + 68 | 0] & 1) << 24 >> 24 != 0) {
    r2 = 1;
    return r2;
  }
  r2 = (__ZNK5Avoid21HyperEdgeShiftSegment12balanceCountEv(r1) | 0) == 0;
  return r2;
}
function __ZN5Avoid21HyperEdgeShiftSegment14adjustPositionEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r3 = r2;
  r4 = r2 + 8;
  if ((HEAP8[r1 + 48 | 0] & 1) << 24 >> 24 == 0) {
    ___assert_func(5244520, 163, 5259752, 5246324);
  }
  r5 = r1 + 44 | 0;
  r6 = HEAP32[r5 >> 2];
  if ((r6 | 0) == 0) {
    ___assert_func(5244520, 164, 5259752, 5245576);
    r7 = HEAP32[r5 >> 2];
  } else {
    r7 = r6;
  }
  r6 = (r7 | 0) < 0;
  r7 = r6 ? r1 + 52 | 0 : r1 + 60 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r6 ? r1 + 8 | 0 : r1 + 16 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r1 + 4 | 0;
  r8 = __ZN5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 8 >> 2]](r1), HEAP32[r7 >> 2]);
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r5) {
    HEAP8[r1 + 68 | 0] = 1;
  }
  r8 = r1 + 24 | 0;
  r9 = r8 | 0;
  r10 = r8 | 0;
  r11 = HEAP32[r10 >> 2];
  r12 = r1 + 28 | 0;
  r13 = r12;
  L2053 : do {
    if ((r11 | 0) != (r13 | 0)) {
      r14 = r12;
      r15 = r11;
      while (1) {
        r16 = __ZN5Avoid5PointixEj(HEAP32[r15 + 16 >> 2] + 16 | 0, HEAP32[r7 >> 2]);
        HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r16 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        r16 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r15 | 0);
        if ((r16 | 0) == (r14 | 0)) {
          break L2053;
        } else {
          r15 = r16;
        }
      }
    }
  } while (0);
  if (r5 == r6) {
    HEAP8[r1 + 68 | 0] = 1;
  }
  r1 = HEAP32[r10 >> 2];
  if ((r1 | 0) == (r13 | 0)) {
    STACKTOP = r2;
    return;
  }
  r13 = r12;
  r12 = r1;
  while (1) {
    r1 = r12 + 16 | 0;
    r10 = HEAP32[r1 >> 2];
    r6 = r10 + 16 | 0;
    r5 = HEAP32[r10 + 4 >> 2];
    L2066 : do {
      if ((r5 | 0) != (r10 | 0)) {
        r7 = r5;
        r11 = r10;
        while (1) {
          r15 = __ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE(HEAP32[r7 + 8 >> 2], r11);
          HEAP32[r4 >> 2] = r15;
          if (__ZNK5Avoid5PointeqERKS0_(r6, r15 + 16 | 0)) {
            __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r3, r9, r4);
            HEAP32[HEAP32[r4 >> 2] + 40 >> 2] = r8;
            r17 = HEAP32[r1 >> 2];
          } else {
            r17 = r11;
          }
          r15 = HEAP32[r7 + 4 >> 2];
          if ((r15 | 0) == (r17 | 0)) {
            break L2066;
          } else {
            r7 = r15;
            r11 = r17;
          }
        }
      }
    } while (0);
    r1 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r12 | 0);
    if ((r1 | 0) == (r13 | 0)) {
      break;
    } else {
      r12 = r1;
    }
  }
  STACKTOP = r2;
  return;
}
__ZN5Avoid21HyperEdgeShiftSegment14adjustPositionEv["X"] = 1;
function __ZN5Avoid17ImproveHyperEdges24mergeOverlappingSegmentsERNSt3__14listIPNS_12ShiftSegmentENS1_9allocatorIS4_EEEE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r2;
  r4 = r1 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r1;
  if ((r5 | 0) == (r6 | 0)) {
    STACKTOP = r2;
    return;
  }
  r7 = r3 | 0;
  r8 = r5;
  while (1) {
    r5 = HEAP32[r8 + 8 >> 2];
    if ((r5 | 0) == 0) {
      r9 = 0;
    } else {
      r9 = ___dynamic_cast(r5, 5272756, 5272724);
    }
    r5 = HEAP32[r4 >> 2];
    r10 = r8 + 4 | 0;
    L2083 : do {
      if ((r5 | 0) == (r6 | 0)) {
        r11 = r10;
      } else {
        r12 = r5;
        while (1) {
          do {
            if ((r12 | 0) == (r8 | 0)) {
              r13 = HEAP32[r10 >> 2];
            } else {
              r14 = HEAP32[r12 + 8 >> 2];
              if ((r14 | 0) == 0) {
                r15 = 0;
              } else {
                r15 = ___dynamic_cast(r14, 5272756, 5272724);
              }
              if (!__ZN5Avoid21HyperEdgeShiftSegment10mergesWithEPS0_(r9, r15)) {
                r13 = HEAP32[r12 + 4 >> 2];
                break;
              }
              if ((r15 | 0) != 0) {
                FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 4 >> 2]](r15);
              }
              __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r3, r1, r12);
              r13 = HEAP32[r7 >> 2];
            }
          } while (0);
          if ((r13 | 0) == (r6 | 0)) {
            r11 = r10;
            break L2083;
          } else {
            r12 = r13;
          }
        }
      }
    } while (0);
    r10 = HEAP32[r11 >> 2];
    if ((r10 | 0) == (r6 | 0)) {
      break;
    } else {
      r8 = r10;
    }
  }
  STACKTOP = r2;
  return;
}
__ZN5Avoid17ImproveHyperEdges24mergeOverlappingSegmentsERNSt3__14listIPNS_12ShiftSegmentENS1_9allocatorIS4_EEEE["X"] = 1;
function __ZN5Avoid21HyperEdgeShiftSegment10mergesWithEPS0_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5] & 1 ^ 1;
  r7 = r1;
  r8 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 8 >> 2]](r1);
  r9 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 12 >> 2]](r1);
  r7 = r2;
  r10 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 8 >> 2]](r2);
  r11 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 12 >> 2]](r2);
  r7 = __ZNK5Avoid5PointixEj(r8, HEAP32[r5]);
  r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = __ZNK5Avoid5PointixEj(r10, HEAP32[r5]);
  do {
    if (r12 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r5 = __ZNK5Avoid5PointixEj(r8, r6);
      r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r5 = __ZNK5Avoid5PointixEj(r11, r6);
      if (r13 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      r5 = __ZNK5Avoid5PointixEj(r10, r6);
      r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r5 = __ZNK5Avoid5PointixEj(r9, r6);
      if (r13 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      r5 = r1 + 40 | 0;
      HEAP8[r5] = (HEAP8[r5] | HEAP8[r2 + 40 | 0]) & 1;
      r5 = r1 + 68 | 0;
      HEAP8[r5] = HEAP8[r5] & 1;
      r5 = (r1 + 8 | 0) >> 2;
      r13 = r2 + 8 | 0;
      r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
      r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r13 = r14 < r15 ? r15 : r14;
      HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      r5 = (r1 + 16 | 0) >> 2;
      r13 = r2 + 16 | 0;
      r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
      r15 = r14 < r13 ? r14 : r13;
      HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      r5 = r1 + 24 | 0;
      r15 = r2 + 24 | 0;
      r13 = HEAP32[r15 >> 2];
      r14 = r2 + 28 | 0;
      r16 = r5 | 0;
      r17 = r1 + 28 | 0;
      r18 = r17;
      L2106 : do {
        if ((r13 | 0) != (r14 | 0)) {
          r19 = r14;
          r20 = r13;
          while (1) {
            __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r4, r16, r18, r20 + 16 | 0);
            r21 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r20 | 0);
            if ((r21 | 0) == (r19 | 0)) {
              break L2106;
            } else {
              r20 = r21;
            }
          }
        }
      } while (0);
      __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE5clearEv(r15);
      r16 = HEAP32[r5 >> 2];
      L2111 : do {
        if ((r16 | 0) != (r18 | 0)) {
          r13 = r17;
          r14 = r16;
          while (1) {
            HEAP32[HEAP32[r14 + 16 >> 2] + 40 >> 2] = r5;
            r20 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r14 | 0);
            if ((r20 | 0) == (r13 | 0)) {
              break L2111;
            } else {
              r14 = r20;
            }
          }
        }
      } while (0);
      __ZN5Avoid21HyperEdgeShiftSegment15setBalanceCountEv(r1);
      r22 = 1;
      STACKTOP = r3;
      return r22;
    }
  } while (0);
  __ZN5Avoid21HyperEdgeShiftSegment15setBalanceCountEv(r1);
  r22 = 0;
  STACKTOP = r3;
  return r22;
}
__ZN5Avoid21HyperEdgeShiftSegment10mergesWithEPS0_["X"] = 1;
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r3 + 4 | 0;
  r5 = HEAP32[r4 >> 2];
  r6 = r3 | 0;
  HEAP32[HEAP32[r6 >> 2] + 4 >> 2] = r5;
  HEAP32[HEAP32[r4 >> 2] >> 2] = HEAP32[r6 >> 2];
  r6 = r2 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] - 1 | 0;
  __ZdlPv(r3);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE5clearEv(r1) {
  var r2, r3;
  r2 = r1 + 4 | 0;
  r3 = r2 | 0;
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r3 >> 2]);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  HEAP32[r3 >> 2] = 0;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_(r2, r3, r6, r4);
  r3 = HEAP32[r8 >> 2];
  if ((r3 | 0) != 0) {
    r9 = r3;
    r10 = r1 | 0;
    HEAP32[r10 >> 2] = r9;
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r7, r2, r4);
  r4 = r7 | 0;
  r7 = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = 0;
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r6 >> 2], r8, r7 | 0);
  r9 = r7;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r6 = r1 + 4 | 0;
  do {
    if ((r6 | 0) != (r2 | 0)) {
      r7 = r1 + 12 | 0;
      r8 = r2 + 16 | 0;
      if (__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r7, HEAP32[r4 >> 2], HEAP32[r8 >> 2])) {
        break;
      }
      r9 = r2 | 0;
      if (!__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r7, HEAP32[r8 >> 2], HEAP32[r4 >> 2])) {
        HEAP32[r5] = r9;
        r10 = r3;
        return r10;
      }
      r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r9);
      do {
        if ((r8 | 0) != (r6 | 0)) {
          if (__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r7, HEAP32[r4 >> 2], HEAP32[r8 + 16 >> 2])) {
            break;
          }
          r10 = __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r3, r4);
          return r10;
        }
      } while (0);
      r7 = r2 + 4 | 0;
      if ((HEAP32[r7 >> 2] | 0) == 0) {
        HEAP32[r5] = r9;
        r10 = r7;
        return r10;
      } else {
        HEAP32[r5] = r8;
        r10 = r8 | 0;
        return r10;
      }
    }
  } while (0);
  do {
    if ((HEAP32[r1 >> 2] | 0) == (r2 | 0)) {
      r11 = r2;
    } else {
      r6 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
      if (__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r1 + 12 | 0, HEAP32[r6 + 16 >> 2], HEAP32[r4 >> 2])) {
        r11 = r6;
        break;
      }
      r10 = __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r3, r4);
      return r10;
    }
  } while (0);
  r4 = r2 | 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    HEAP32[r5] = r2 | 0;
    r10 = r4;
    return r10;
  } else {
    HEAP32[r5] = r11 | 0;
    r10 = r11 + 4 | 0;
    return r10;
  }
}
__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r6 = r5 | 0;
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r8 = r6;
    return r8;
  }
  r6 = r1 + 12 | 0;
  r1 = r7;
  while (1) {
    r7 = r1 + 16 | 0;
    if (__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r6, HEAP32[r3 >> 2], HEAP32[r7 >> 2])) {
      r9 = r1 | 0;
      r5 = HEAP32[r9 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 1774;
        break;
      } else {
        r1 = r5;
        continue;
      }
    }
    if (!__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_(r6, HEAP32[r7 >> 2], HEAP32[r3 >> 2])) {
      r4 = 1778;
      break;
    }
    r10 = r1 + 4 | 0;
    r7 = HEAP32[r10 >> 2];
    if ((r7 | 0) == 0) {
      r4 = 1777;
      break;
    } else {
      r1 = r7;
    }
  }
  if (r4 == 1774) {
    HEAP32[r2 >> 2] = r1;
    r8 = r9;
    return r8;
  } else if (r4 == 1777) {
    HEAP32[r2 >> 2] = r1;
    r8 = r10;
    return r8;
  } else if (r4 == 1778) {
    HEAP32[r2 >> 2] = r1;
    r8 = r2;
    return r8;
  }
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNK5Avoid21HyperEdgeShiftSegment12balanceCountEv(r1) {
  if ((HEAP8[r1 + 48 | 0] & 1) << 24 >> 24 == 0) {
    ___assert_func(5244520, 158, 5254300, 5246324);
  }
  return HEAP32[r1 + 44 >> 2];
}
function __ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeNodeEjPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = HEAP32[r1 + 4 >> 2];
  r6 = r1;
  if ((r5 | 0) == (r6 | 0)) {
    return;
  } else {
    r7 = r5;
  }
  while (1) {
    r5 = HEAP32[r7 + 8 >> 2];
    if ((r5 | 0) != (r3 | 0)) {
      __ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeEdgeEjPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE(r5, r2, r1, r4);
    }
    r5 = HEAP32[r7 + 4 >> 2];
    if ((r5 | 0) == (r6 | 0)) {
      break;
    } else {
      r7 = r5;
    }
  }
  return;
}
function __ZN5Avoid12ShiftSegmentD1Ev(r1) {
  return;
}
function __ZN5Avoid12ShiftSegmentC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = 5267604;
  HEAP32[r1 + 4 >> 2] = r2;
  return;
}
function __ZN5Avoid21HyperEdgeShiftSegment8lowPointEv(r1) {
  return HEAP32[HEAP32[r1 + 24 >> 2] + 16 >> 2] + 16 | 0;
}
function __ZNK5Avoid21HyperEdgeShiftSegment8lowPointEv(r1) {
  return HEAP32[HEAP32[r1 + 24 >> 2] + 16 >> 2] + 16 | 0;
}
function __ZNK5Avoid21HyperEdgeShiftSegment9immovableEv(r1) {
  return (HEAP8[r1 + 40 | 0] & 1) << 24 >> 24 != 0;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEEC2ERKS4_(r1, r2) {
  var r3, r4;
  r3 = r1 + 4 | 0;
  HEAP32[r3 >> 2] = 0;
  r4 = HEAP32[r2 >> 2];
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 + 12 >> 2] = r4;
  HEAP32[r1 >> 2] = r3;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 1808;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 1812;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1811;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 1808) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 1812) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  } else if (r4 == 1811) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  }
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (r1 >>> 0 < r6 >>> 0) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 1823;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (r6 >>> 0 >= r1 >>> 0) {
      r4 = 1827;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 1826;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 1826) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  } else if (r4 == 1823) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 1827) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  }
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L2245 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (HEAP32[r10 + 4] >>> 0 >= r6 >>> 0) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L2245;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L2245;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEEC2ERKSF_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeEdgeEjPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  do {
    if (__ZNK5Avoid17HyperEdgeTreeEdge14hasOrientationEj(r1, r2)) {
      r7 = HEAP32[r1 >> 2];
      r8 = r1 + 4 | 0;
      r9 = HEAP32[r8 >> 2];
      if (__ZNK5Avoid17HyperEdgeTreeEdge10zeroLengthEv(r7, r9)) {
        break;
      }
      if ((HEAP32[r7 + 8 >> 2] | 0) == 1) {
        r10 = 1;
      } else {
        r10 = (HEAP32[r9 + 8 >> 2] | 0) == 1;
      }
      r9 = __Znwj(72);
      __ZN5Avoid21HyperEdgeShiftSegmentC1EPNS_17HyperEdgeTreeNodeES2_jb(r9, HEAP32[r1 >> 2], HEAP32[r8 >> 2], r2, r10);
      HEAP32[r6 >> 2] = r9;
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r4, r6);
    }
  } while (0);
  r6 = HEAP32[r1 >> 2];
  if (!((r6 | 0) == 0 | (r6 | 0) == (r3 | 0))) {
    __ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeNodeEjPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE(r6, r2, r1, r4);
  }
  r6 = HEAP32[r1 + 4 >> 2];
  if ((r6 | 0) == 0 | (r6 | 0) == (r3 | 0)) {
    STACKTOP = r5;
    return;
  }
  __ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeNodeEjPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE(r6, r2, r1, r4);
  STACKTOP = r5;
  return;
}
__ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeEdgeEjPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE["X"] = 1;
function __ZN5Avoid21HyperEdgeShiftSegmentC1EPNS_17HyperEdgeTreeNodeES2_jb(r1, r2, r3, r4, r5) {
  __ZN5Avoid21HyperEdgeShiftSegmentC2EPNS_17HyperEdgeTreeNodeES2_jb(r1, r2, r3, r4, r5);
  return;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(12);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r2 >> 2];
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid21HyperEdgeShiftSegmentC2EPNS_17HyperEdgeTreeNodeES2_jb(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 28 | 0;
  r7 = r6 + 16;
  r8 = r6 + 20;
  r9 = r6 + 24;
  HEAP32[r7 >> 2] = r2;
  HEAP32[r8 >> 2] = r3;
  __ZN5Avoid12ShiftSegmentC2Ej(r1 | 0, r4);
  HEAP32[r1 >> 2] = 5267476;
  r3 = r1 + 24 | 0;
  __ZN5Avoid13CmpNodesInDimC1Ej(r9, r4 & 1 ^ 1);
  r4 = r3 | 0;
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEEC1ERKS4_(r4, r9);
  HEAP8[r1 + 40 | 0] = r5 & 1;
  HEAP32[r1 + 44 >> 2] = 0;
  HEAP8[r1 + 48 | 0] = 0;
  HEAP8[r1 + 68 | 0] = 0;
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r6 + 8, r4, r7);
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r6, r4, r8);
  HEAP32[HEAP32[r7 >> 2] + 40 >> 2] = r3;
  HEAP32[HEAP32[r8 >> 2] + 40 >> 2] = r3;
  r3 = r1 + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = -1e8, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r3 = r1 + 16 | 0;
  HEAPF64[tempDoublePtr >> 3] = 1e8, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  STACKTOP = r6;
  return;
}
function __ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid21HyperEdgeShiftSegmentD1Ev(r1) {
  __ZN5Avoid21HyperEdgeShiftSegmentD2Ev(r1);
  return;
}
function __ZN5Avoid21HyperEdgeShiftSegmentD0Ev(r1) {
  __ZN5Avoid21HyperEdgeShiftSegmentD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid21HyperEdgeShiftSegment9highPointEv(r1) {
  return HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r1 + 28 | 0) + 16 >> 2] + 16 | 0;
}
function __ZNK5Avoid21HyperEdgeShiftSegment9highPointEv(r1) {
  return HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r1 + 28 | 0) + 16 >> 2] + 16 | 0;
}
function __ZNK5Avoid21HyperEdgeShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = r3 & 1 ^ 1;
  r3 = r1;
  r5 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r1);
  r6 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r1);
  r3 = r2;
  r7 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r2);
  r8 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r2);
  r3 = __ZNK5Avoid5PointixEj(r5, r4);
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = __ZNK5Avoid5PointixEj(r8, r4);
  do {
    if (r5 <= (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r8 = __ZNK5Avoid5PointixEj(r7, r4);
      r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r8 = __ZNK5Avoid5PointixEj(r6, r4);
      if (r9 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      r8 = r1 + 8 | 0;
      r9 = r2 + 16 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      r9 = r2 + 8 | 0;
      r8 = r1 + 16 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      } else {
        r10 = 1;
      }
      return r10;
    }
  } while (0);
  r10 = 0;
  return r10;
}
function __ZN5Avoid21HyperEdgeShiftSegmentD2Ev(r1) {
  var r2, r3, r4;
  HEAP32[r1 >> 2] = 5267476;
  r2 = r1 + 24 | 0;
  r3 = HEAP32[r2 >> 2];
  r4 = r1 + 28 | 0;
  if ((r3 | 0) == (r4 | 0)) {
    __ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev(r2);
    return;
  }
  r1 = r4;
  r4 = r3;
  while (1) {
    HEAP32[HEAP32[r4 + 16 >> 2] + 40 >> 2] = 0;
    r3 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r4 | 0);
    if ((r3 | 0) == (r1 | 0)) {
      break;
    } else {
      r4 = r3;
    }
  }
  __ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev(r2);
  return;
}
function __ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEEC1ERKS4_(r1, r2) {
  __ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEEC2ERKS4_(r1, r2);
  return;
}
function __ZN5Avoid12ShiftSegmentD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__construct_nodeERSA_(r1, r2, r3) {
  var r4, r5;
  r4 = __Znwj(24);
  r5 = r4 + 16 | 0;
  if ((r5 | 0) != 0) {
    HEAP32[r5 >> 2] = HEAP32[r3 >> 2];
  }
  r3 = r4 + 20 | 0;
  if ((r3 | 0) != 0) {
    HEAP32[r3 >> 2] = 0;
  }
  HEAP32[r1 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  HEAP8[r1 + 9 | 0] = 1;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (HEAP32[r3 >> 2] >>> 0 < HEAP32[r6 + 16 >> 2] >>> 0) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZN5Avoid17ImproveHyperEdgesC2EPNS_6RouterE(r1, r2) {
  var r3;
  HEAP32[r1 >> 2] = r2;
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_(r1 + 4 | 0);
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1 + 16 | 0);
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEEC1ERKSF_(r1 + 28 | 0);
  r2 = r1 + 40 | 0;
  r3 = r2;
  HEAP32[r2 >> 2] = r3;
  HEAP32[r1 + 44 >> 2] = r3;
  HEAP32[r1 + 48 >> 2] = 0;
  HEAP32[r1 + 52 >> 2] = 0;
  return;
}
function __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEEC1ERKSF_(r1) {
  __ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEEC2ERKSF_(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_(r1) {
  __ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1INS_15__list_iteratorIS3_PvEEEET_SB_PNS_9enable_ifIXsr21__is_forward_iteratorISB_EE5valueEvE4typeE(r1, r2, r3) {
  __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC2INS_15__list_iteratorIS3_PvEEEET_SB_PNS_9enable_ifIXsr21__is_forward_iteratorISB_EE5valueEvE4typeE(r1, r2, r3);
  return;
}
function __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEEC1Ej(r1, r2) {
  __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEEC2Ej(r1, r2);
  return;
}
function __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIN5Avoid7PolygonENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_15__list_iteratorIS3_PvEEEESA_NS_21__list_const_iteratorIS3_S9_EET_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r6 = r1 | 0;
  HEAP32[r6 >> 2] = r3;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r1 = __Znwj(12);
  r7 = r1;
  r8 = r1;
  HEAP32[r8 >> 2] = 0;
  r9 = r1 + 8 | 0;
  if ((r9 | 0) != 0) {
    HEAP32[r9 >> 2] = HEAP32[r4 + 8 >> 2];
  }
  HEAP32[r6 >> 2] = r7;
  r6 = HEAP32[r4 + 4 >> 2];
  L2356 : do {
    if ((r6 | 0) == (r5 | 0)) {
      r10 = r7;
      r11 = 1;
    } else {
      r4 = r7;
      r9 = 1;
      r1 = r6;
      while (1) {
        r12 = __Znwj(12);
        r13 = r12 + 8 | 0;
        if ((r13 | 0) != 0) {
          HEAP32[r13 >> 2] = HEAP32[r1 + 8 >> 2];
        }
        r13 = r4 + 4 | 0;
        HEAP32[r13 >> 2] = r12;
        HEAP32[r12 >> 2] = r4;
        r12 = HEAP32[r1 + 4 >> 2];
        r14 = HEAP32[r13 >> 2];
        r13 = r9 + 1 | 0;
        if ((r12 | 0) == (r5 | 0)) {
          r10 = r14;
          r11 = r13;
          break L2356;
        } else {
          r4 = r14;
          r9 = r13;
          r1 = r12;
        }
      }
    }
  } while (0);
  r5 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r7;
  HEAP32[r8 >> 2] = HEAP32[r5];
  HEAP32[r5] = r10;
  HEAP32[r10 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + r11 | 0;
  return;
}
__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_15__list_iteratorIS3_PvEEEESA_NS_21__list_const_iteratorIS3_S9_EET_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE["X"] = 1;
function __ZNK5Avoid26PotentialSegmentConstraint10stillValidEv(r1, r2) {
  return (r1 | 0) != (r2 | 0);
}
function __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEE18__construct_at_endINS_15__list_iteratorIS3_PvEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 + 8 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = HEAP32[r1 + 4 >> 2];
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZN5Avoid26PotentialSegmentConstraint12rewriteIndexEjj(r1, r2, r3) {
  var r4;
  r4 = r1 | 0;
  if ((HEAP32[r4 >> 2] | 0) == (r2 | 0)) {
    HEAP32[r4 >> 2] = r3;
  }
  r4 = r1 + 4 | 0;
  if ((HEAP32[r4 >> 2] | 0) != (r2 | 0)) {
    return;
  }
  HEAP32[r4 >> 2] = r3;
  return;
}
function __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEEC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEE18__construct_at_endEj(r1, r2);
  return;
}
function __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      __ZN5Avoid7PolygonC1Ev(r2);
      r4 = HEAP32[r3];
    }
    r5 = r4 + 44 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC2INS_15__list_iteratorIS3_PvEEEET_SB_PNS_9enable_ifIXsr21__is_forward_iteratorISB_EE5valueEvE4typeE(r1, r2, r3) {
  var r4, r5, r6, r7;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  } else {
    r4 = 0;
    r5 = r2;
  }
  while (1) {
    r6 = r4 + 1 | 0;
    r7 = HEAP32[r5 + 4 >> 2];
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r4 = r6;
      r5 = r7;
    }
  }
  if ((r6 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEE8allocateEj(r1, r6);
  __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEE18__construct_at_endINS_15__list_iteratorIS3_PvEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_(r1, r2, r3);
  return;
}
function __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED1Ev(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED2Ev(r1) {
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(r1);
  return;
}
function __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(HEAP32[r1 >> 2]);
  __ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(HEAP32[r1 + 4 >> 2]);
  __ZNSt3__14pairIN5Avoid5PointENS1_7PtOrderEED1Ev(r1 + 16 | 0);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__14pairIN5Avoid5PointENS1_7PtOrderEED1Ev(r1) {
  __ZNSt3__14pairIN5Avoid5PointENS1_7PtOrderEED2Ev(r1);
  return;
}
function __ZNSt3__14pairIN5Avoid5PointENS1_7PtOrderEED2Ev(r1) {
  __ZN5Avoid7PtOrderD1Ev(r1 + 24 | 0);
  return;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5clearEv(r1);
  return;
}
function __ZN5Avoid12CmpLineOrderC1ERNSt3__13mapINS_5PointENS_7PtOrderENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEEj(r1, r2, r3) {
  __ZN5Avoid12CmpLineOrderC2ERNSt3__13mapINS_5PointENS_7PtOrderENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEEj(r1, r2, r3);
  return;
}
function __ZN5AvoidL8linesortEbNSt3__14listIPNS_12ShiftSegmentENS0_9allocatorIS3_EEEERNS_12CmpLineOrderE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r5 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r7 = r6;
  r8 = r6 + 4;
  r9 = r6 + 8;
  r10 = r6 + 12;
  L2422 : do {
    if (r2) {
      r11 = HEAP32[r3 + 4 >> 2];
      r12 = r3;
      if ((r11 | 0) == (r12 | 0)) {
        break;
      }
      r13 = r4 + 4 | 0;
      r14 = r7 | 0;
      r15 = r11;
      while (1) {
        L2427 : do {
          if ((r15 | 0) != (r12 | 0)) {
            r11 = r15 + 8 | 0;
            r16 = r15;
            while (1) {
              r17 = HEAP32[r11 >> 2];
              if ((r17 | 0) == 0) {
                r18 = 0;
              } else {
                r18 = ___dynamic_cast(r17, 5272756, 5272736);
              }
              r17 = HEAP32[r16 + 8 >> 2];
              do {
                if ((r17 | 0) == 0) {
                  r5 = 2008;
                } else {
                  r19 = ___dynamic_cast(r17, 5272756, 5272736);
                  if ((r15 | 0) == (r16 | 0) | (r18 | 0) == 0 | (r19 | 0) == 0) {
                    r5 = 2008;
                    break;
                  }
                  r20 = r19;
                  if (!__ZNK5Avoid19NudgingShiftSegment15shouldAlignWithEPKNS_12ShiftSegmentEj(r18, r20, HEAP32[r13 >> 2])) {
                    r5 = 2008;
                    break;
                  }
                  __ZN5Avoid19NudgingShiftSegment9mergeWithEPKNS_12ShiftSegmentEj(r18, r20, HEAP32[r13 >> 2]);
                  FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 4 >> 2]](r19);
                  __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE(r7, r3, r16);
                  r21 = HEAP32[r14 >> 2];
                  break;
                }
              } while (0);
              if (r5 == 2008) {
                r5 = 0;
                r21 = HEAP32[r16 + 4 >> 2];
              }
              if ((r21 | 0) == (r12 | 0)) {
                break L2427;
              } else {
                r16 = r21;
              }
            }
          }
        } while (0);
        r16 = HEAP32[r15 + 4 >> 2];
        if ((r16 | 0) == (r12 | 0)) {
          break L2422;
        } else {
          r15 = r16;
        }
      }
    }
  } while (0);
  r21 = r1;
  HEAP32[r1 >> 2] = r21;
  r7 = r1 + 4 | 0;
  HEAP32[r7 >> 2] = r21;
  r18 = r1 + 8 | 0;
  HEAP32[r18 >> 2] = 0;
  r2 = (r3 + 8 | 0) >> 2;
  r15 = HEAP32[r2];
  if ((r15 | 0) == 0) {
    STACKTOP = r6;
    return;
  }
  r12 = r3 + 4 | 0;
  r14 = r15;
  L2446 : while (1) {
    r15 = 0;
    while (1) {
      r13 = HEAP32[HEAP32[r12 >> 2] + 8 >> 2];
      HEAP32[r8 >> 2] = r13;
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9pop_frontEv(r3);
      r16 = 1;
      r11 = r7;
      while (1) {
        r17 = HEAP32[r11 >> 2];
        if ((r17 | 0) == (r21 | 0)) {
          r22 = r16;
          r23 = r21;
          break;
        }
        HEAP8[r9] = 0;
        r19 = __ZNK5Avoid12CmpLineOrderclEPKNS_12ShiftSegmentES3_Pb(r4, r13, HEAP32[r17 + 8 >> 2], r9);
        r20 = HEAP8[r9] & 1;
        r24 = r20 & r16;
        if (r20 << 24 >> 24 == 0 | r19 ^ 1) {
          r16 = r24;
          r11 = r17 + 4 | 0;
        } else {
          r22 = r24;
          r23 = r17;
          break;
        }
      }
      if ((HEAP32[r18 >> 2] | 0) == 0) {
        break;
      }
      if (!((r22 & 1) << 24 >> 24 == 0 & r15 >>> 0 < r14 >>> 0)) {
        break;
      }
      __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r3, r8);
      if ((HEAP32[r2] | 0) == 0) {
        r5 = 2031;
        break L2446;
      } else {
        r15 = r15 + 1 | 0;
      }
    }
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r10, r1, r23, r8);
    r15 = HEAP32[r2];
    if ((r15 | 0) == 0) {
      r5 = 2030;
      break;
    } else {
      r14 = r15;
    }
  }
  if (r5 == 2031) {
    STACKTOP = r6;
    return;
  } else if (r5 == 2030) {
    STACKTOP = r6;
    return;
  }
}
__ZN5AvoidL8linesortEbNSt3__14listIPNS_12ShiftSegmentENS0_9allocatorIS3_EEEERNS_12CmpLineOrderE["X"] = 1;
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEEC1ERKS6_(r1, r2) {
  __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEEC2ERKS6_(r1, r2);
  return;
}
function __ZN5Avoid19NudgingShiftSegment20createSolverVariableEb(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = r1 >> 2;
  r4 = 0;
  r5 = __ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(__ZNK5Avoid7ConnRef6routerEv(HEAP32[HEAP32[r3 + 6] >> 2]), 0);
  r6 = __ZN5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r3] + 8 >> 2]](r1), HEAP32[r3 + 1]);
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r5) {
      if ((HEAP8[r1 + 45 | 0] & 1) << 24 >> 24 == 0) {
        r4 = 2037;
        break;
      }
      if ((HEAP8[r1 + 47 | 0] & 1) << 24 >> 24 == 0) {
        r8 = 0;
        r9 = r7;
        r10 = .001;
        break;
      }
      r8 = 0;
      r9 = r7;
      r10 = r2 ? .001 : 1;
      break;
    } else {
      r4 = 2037;
    }
  } while (0);
  do {
    if (r4 == 2037) {
      if ((HEAP32[r3 + 13] | 0) != (HEAP32[r3 + 12] | 0)) {
        r8 = 0;
        r9 = r7;
        r10 = .001;
        break;
      }
      if (!__ZNK5Avoid19NudgingShiftSegment6zigzagEv(r1)) {
        if ((HEAP8[r1 + 44 | 0] & 1) << 24 >> 24 != 0) {
          r8 = 1;
          r9 = r7;
          r10 = 1e5;
          break;
        }
        r8 = 0;
        r9 = r7;
        r10 = (HEAP8[r1 + 45 | 0] & 1) << 24 >> 24 == 0 ? .001 : 1e-5;
        break;
      }
      r2 = (r1 + 8 | 0) >> 2;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3]) <= -1e8) {
        ___assert_func(5244520, 409, 5259804, 5252440);
      }
      r5 = (r1 + 16 | 0) >> 2;
      r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
      if (r6 < 1e8) {
        r11 = r6;
      } else {
        ___assert_func(5244520, 410, 5259804, 5251992);
        r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
      }
      r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3]);
      r8 = 0;
      r9 = r5 + (r11 - r5) * .5;
      r10 = 1e-5;
    }
  } while (0);
  r11 = __Znwj(76);
  __ZN5Avoid8VariableC1Eiddd(r11, r8, r9, r10);
  HEAP32[r3 + 7] = r11;
  return;
}
__ZN5Avoid19NudgingShiftSegment20createSolverVariableEb["X"] = 1;
function __ZN5Avoid8VariableC1Eiddd(r1, r2, r3, r4) {
  __ZN5Avoid8VariableC2Eiddd(r1, r2, r3, r4);
  return;
}
function __ZNK5Avoid19NudgingShiftSegment15shouldAlignWithEPKNS_12ShiftSegmentEj(r1, r2, r3) {
  var r4, r5, r6;
  if ((r2 | 0) == 0) {
    r4 = 0;
  } else {
    r4 = ___dynamic_cast(r2, 5272756, 5272736);
  }
  do {
    if ((HEAP32[r1 + 24 >> 2] | 0) == (HEAP32[r4 + 24 >> 2] | 0)) {
      if (((HEAP8[r4 + 45 | 0] ^ HEAP8[r1 + 45 | 0]) & 1) << 24 >> 24 != 0) {
        break;
      }
      if (!FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 24 >> 2]](r1, r4 | 0, r3)) {
        break;
      }
      do {
        if ((HEAP8[r1 + 46 | 0] & 1) << 24 >> 24 != 0) {
          if ((HEAP8[r4 + 46 | 0] & 1) << 24 >> 24 == 0) {
            break;
          } else {
            r5 = 1;
          }
          return r5;
        }
      } while (0);
      r2 = __ZNK5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1), r3);
      r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r2 = __ZNK5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 16 >> 2]](r4), r3);
      if (Math.abs(r6 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) < 10) {
        r5 = 1;
      } else {
        break;
      }
      return r5;
    }
  } while (0);
  r5 = 0;
  return r5;
}
__ZNK5Avoid19NudgingShiftSegment15shouldAlignWithEPKNS_12ShiftSegmentEj["X"] = 1;
function __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9push_backERKS2_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = __Znwj(20);
  r4 = r3;
  r5 = r3 + 8 | 0, r6 = r5 >> 2;
  if ((r5 | 0) != 0) {
    r5 = r2 >> 2;
    HEAP32[r6] = HEAP32[r5];
    HEAP32[r6 + 1] = HEAP32[r5 + 1];
    HEAP32[r6 + 2] = HEAP32[r5 + 2];
  }
  r5 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r5];
  HEAP32[r5] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid26PotentialSegmentConstraintC1EjjRKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r1, r2, r3, r4) {
  __ZN5Avoid26PotentialSegmentConstraintC2EjjRKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r1, r2, r3, r4);
  return;
}
function __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9pop_frontEv(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = r2 + 4 | 0;
  r4 = r2 | 0;
  HEAP32[HEAP32[r4 >> 2] + 4 >> 2] = HEAP32[r3 >> 2];
  HEAP32[HEAP32[r3 >> 2] >> 2] = HEAP32[r4 >> 2];
  r4 = r1 + 8 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] - 1 | 0;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9pop_frontEv(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = r2 + 4 | 0;
  r4 = r2 | 0;
  HEAP32[HEAP32[r4 >> 2] + 4 >> 2] = HEAP32[r3 >> 2];
  HEAP32[HEAP32[r3 >> 2] >> 2] = HEAP32[r4 >> 2];
  r4 = r1 + 8 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] - 1 | 0;
  __ZdlPv(r2);
  return;
}
function __ZN5Avoid19NudgingShiftSegment25updatePositionsFromSolverEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9;
  if ((HEAP8[r1 + 44 | 0] & 1) << 24 >> 24 != 0) {
    return;
  }
  r2 = HEAP32[r1 + 28 >> 2] + 12 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 8 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r3 < r4 ? r4 : r3;
  r3 = r1 + 16 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r4 < r2 ? r4 : r2;
  r2 = r1 + 36 | 0;
  r4 = r1 + 32 | 0;
  r5 = HEAP32[r4 >> 2];
  if ((HEAP32[r2 >> 2] | 0) == (r5 | 0)) {
    return;
  }
  r6 = r1 + 24 | 0;
  r7 = r1 + 4 | 0;
  r1 = 0;
  r8 = r5;
  while (1) {
    r5 = HEAP32[r8 + (r1 << 2) >> 2];
    r9 = __ZN5Avoid5PointixEj(HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r6 >> 2]) + 8 >> 2] + (r5 * 24 & -1) | 0, HEAP32[r7 >> 2]);
    HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r9 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    r9 = r1 + 1 | 0;
    r5 = HEAP32[r4 >> 2];
    if (r9 >>> 0 < HEAP32[r2 >> 2] - r5 >> 2 >>> 0) {
      r1 = r9;
      r8 = r5;
    } else {
      break;
    }
  }
  return;
}
function __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid8VariableENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid8VariableENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid10ConstraintENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid10ConstraintENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE5clearEv(r1);
  return;
}
function __ZNSt3__110__list_impIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE5clearEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r1;
  r5 = HEAP32[r1 >> 2] + 4 | 0;
  r1 = r3 | 0;
  HEAP32[HEAP32[r1 >> 2] + 4 >> 2] = HEAP32[r5 >> 2];
  HEAP32[HEAP32[r5 >> 2] >> 2] = HEAP32[r1 >> 2];
  HEAP32[r2 >> 2] = 0;
  if ((r3 | 0) == (r4 | 0)) {
    return;
  } else {
    r6 = r3;
  }
  while (1) {
    r3 = HEAP32[r6 + 4 >> 2];
    __ZdlPv(r6);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r6 = r3;
    }
  }
  return;
}
function __ZN5Avoid13delete_objectclINS_10ConstraintEEEvPT_(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid13delete_objectclINS_8VariableEEEvPT_(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  __ZN5Avoid8VariableD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid8VariableD1Ev(r1) {
  __ZN5Avoid8VariableD2Ev(r1);
  return;
}
function __ZNSt3__113__vector_baseIN5Avoid7PolygonENS_9allocatorIS2_EEED2Ev(r1) {
  var r2, r3, r4, r5;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = r1 + 4 | 0;
  while (1) {
    r1 = HEAP32[r4 >> 2];
    if (r3 >>> 0 >= r1 >>> 0) {
      break;
    }
    r5 = r1 - 44 | 0;
    HEAP32[r4 >> 2] = r5;
    FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] >> 2]](r5);
  }
  __ZdlPv(HEAP32[r2 >> 2]);
  return;
}
function __ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 97612893) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 * 44 & -1);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = r3 + (r2 * 44 & -1) | 0;
    return;
  }
}
function __ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 << 2);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = (r2 << 2) + r3 | 0;
    return;
  }
}
function __ZN5Avoid8VariableD2Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1 + 64 | 0);
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1 + 52 | 0);
  return;
}
function __ZN5Avoid26PotentialSegmentConstraintC2EjjRKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r1, r2, r3, r4) {
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r1 + 8 >> 2] = r4;
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNK5Avoid19NudgingShiftSegment6zigzagEv(r1) {
  var r2;
  if ((HEAP8[r1 + 60 | 0] & 1) << 24 >> 24 != 0) {
    r2 = 1;
    return r2;
  }
  r2 = (HEAP8[r1 + 61 | 0] & 1) << 24 >> 24 != 0;
  return r2;
}
function __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  if ((r4 | 0) == 0 | (r4 | 0) == 1) {
    HEAP32[r1 >> 2] = r2;
    STACKTOP = r5;
    return;
  } else if ((r4 | 0) == 2) {
    r8 = HEAP32[r3 >> 2];
    if (__ZNK5Avoid26PotentialSegmentConstraintltES0_(r8 + 8 | 0, HEAP32[r2 + 8 >> 2], HEAP32[r2 + 12 >> 2], HEAP32[r2 + 16 >> 2])) {
      r9 = (r8 + 4 | 0) >> 2;
      r10 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r10] + 4 >> 2] = HEAP32[r9];
      HEAP32[HEAP32[r9] >> 2] = HEAP32[r10];
      r11 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r11] + 4 >> 2] = r8;
      HEAP32[r10] = HEAP32[r11];
      HEAP32[r11] = r8;
      HEAP32[r9] = r2;
      HEAP32[r1 >> 2] = r8;
      STACKTOP = r5;
      return;
    } else {
      HEAP32[r1 >> 2] = r2;
      STACKTOP = r5;
      return;
    }
  } else {
    r8 = r4 >>> 1;
    L31 : do {
      if ((r8 | 0) == 0) {
        r12 = r2;
      } else {
        r9 = r8;
        r11 = r2;
        while (1) {
          r10 = r9 - 1 | 0;
          r13 = HEAP32[r11 + 4 >> 2];
          if ((r10 | 0) > 0) {
            r9 = r10;
            r11 = r13;
          } else {
            r12 = r13;
            break L31;
          }
        }
      }
    } while (0);
    __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r6, r2, r12, r8);
    r2 = HEAP32[r6 >> 2], r6 = r2 >> 2;
    __ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_(r7, r12, r3, r4 - r8 | 0);
    r8 = HEAP32[r7 >> 2];
    r7 = HEAP32[r6 + 2];
    r4 = HEAP32[r6 + 3];
    r12 = HEAP32[r6 + 4];
    if (__ZNK5Avoid26PotentialSegmentConstraintltES0_(r8 + 8 | 0, r7, r4, r12)) {
      r11 = HEAP32[r8 + 4 >> 2];
      L37 : do {
        if ((r11 | 0) == (r3 | 0)) {
          r14 = r3;
        } else {
          r9 = r11;
          while (1) {
            if (!__ZNK5Avoid26PotentialSegmentConstraintltES0_(r9 + 8 | 0, r7, r4, r12)) {
              r14 = r9;
              break L37;
            }
            r13 = HEAP32[r9 + 4 >> 2];
            if ((r13 | 0) == (r3 | 0)) {
              r14 = r3;
              break L37;
            } else {
              r9 = r13;
            }
          }
        }
      } while (0);
      r12 = HEAP32[r14 >> 2];
      r4 = (r12 + 4 | 0) >> 2;
      r7 = (r8 | 0) >> 2;
      HEAP32[HEAP32[r7] + 4 >> 2] = HEAP32[r4];
      HEAP32[HEAP32[r4] >> 2] = HEAP32[r7];
      r11 = HEAP32[r6 + 1];
      r9 = (r2 | 0) >> 2;
      HEAP32[HEAP32[r9] + 4 >> 2] = r8;
      HEAP32[r7] = HEAP32[r9];
      HEAP32[r9] = r12;
      HEAP32[r4] = r2;
      r15 = r8;
      r16 = r14;
      r17 = r11;
    } else {
      r15 = r2;
      r16 = r8;
      r17 = HEAP32[r6 + 1];
    }
    L44 : do {
      if ((r17 | 0) != (r16 | 0)) {
        r6 = r16;
        r8 = r16;
        r2 = r17;
        while (1) {
          r11 = r6 + 8 | 0;
          r14 = (r6 | 0) == (r3 | 0);
          r4 = r2, r12 = r4 >> 2;
          while (1) {
            if (r14) {
              break L44;
            }
            r18 = HEAP32[r12 + 2];
            r19 = HEAP32[r12 + 3];
            r20 = HEAP32[r12 + 4];
            if (__ZNK5Avoid26PotentialSegmentConstraintltES0_(r11, r18, r19, r20)) {
              break;
            }
            r9 = HEAP32[r12 + 1];
            if ((r9 | 0) == (r8 | 0)) {
              break L44;
            } else {
              r4 = r9, r12 = r4 >> 2;
            }
          }
          r11 = HEAP32[r6 + 4 >> 2];
          L52 : do {
            if ((r11 | 0) == (r3 | 0)) {
              r21 = r3;
            } else {
              r14 = r11;
              while (1) {
                if (!__ZNK5Avoid26PotentialSegmentConstraintltES0_(r14 + 8 | 0, r18, r19, r20)) {
                  r21 = r14;
                  break L52;
                }
                r9 = HEAP32[r14 + 4 >> 2];
                if ((r9 | 0) == (r3 | 0)) {
                  r21 = r3;
                  break L52;
                } else {
                  r14 = r9;
                }
              }
            }
          } while (0);
          r11 = HEAP32[r21 >> 2];
          r14 = (r11 + 4 | 0) >> 2;
          r9 = (r6 | 0) >> 2;
          HEAP32[HEAP32[r9] + 4 >> 2] = HEAP32[r14];
          HEAP32[HEAP32[r14] >> 2] = HEAP32[r9];
          r7 = HEAP32[r12 + 1];
          r13 = (r8 | 0) == (r6 | 0) ? r21 : r8;
          r10 = (r4 | 0) >> 2;
          HEAP32[HEAP32[r10] + 4 >> 2] = r6;
          HEAP32[r9] = HEAP32[r10];
          HEAP32[r10] = r11;
          HEAP32[r14] = r4;
          if ((r7 | 0) == (r13 | 0)) {
            break L44;
          } else {
            r6 = r21;
            r8 = r13;
            r2 = r7;
          }
        }
      }
    } while (0);
    HEAP32[r1 >> 2] = r15;
    STACKTOP = r5;
    return;
  }
}
__ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_["X"] = 1;
function __ZNK5Avoid26PotentialSegmentConstraintltES0_(r1, r2, r3, r4) {
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r3 = __ZNK5Avoid26PotentialSegmentConstraint11sepDistanceEv(r1) < __ZNK5Avoid26PotentialSegmentConstraint11sepDistanceEv(r4);
  STACKTOP = r4;
  return r3;
}
function __ZNK5Avoid26PotentialSegmentConstraint11sepDistanceEv(r1) {
  var r2, r3, r4, r5;
  r2 = HEAP32[r1 >> 2];
  r3 = HEAP32[r1 + 4 >> 2];
  if (!__ZNK5Avoid26PotentialSegmentConstraint10stillValidEv(r2, r3)) {
    r4 = 0;
    return r4;
  }
  r5 = HEAP32[HEAP32[r1 + 8 >> 2] >> 2];
  r1 = HEAP32[r5 + (r2 << 2) >> 2] + 12 | 0;
  r2 = HEAP32[r5 + (r3 << 2) >> 2] + 12 | 0;
  r4 = Math.abs((HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  return r4;
}
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L73 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L73;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZN5Avoid8VariableC2Eiddd(r1, r2, r3, r4) {
  HEAP32[r1 >> 2] = r2;
  r2 = r1 + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r1 + 20 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r1 + 28 | 0;
  HEAPF64[tempDoublePtr >> 3] = 1, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r1 + 36 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r2 + 4 >> 2] = 0;
  HEAP32[r2 + 8 >> 2] = 0;
  HEAP16[r2 + 12 >> 1] = 0;
  r2 = (r1 + 52 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L101 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L101;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEEC2ERKS6_(r1, r2) {
  var r3, r4, r5;
  r3 = r1;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r1 + 4 >> 2] = r3;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2;
  r4 = HEAP32[r2 + 4 >> 2];
  if ((r4 | 0) == (r3 | 0)) {
    return;
  } else {
    r5 = r4;
  }
  while (1) {
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_(r1, r5 + 8 | 0);
    r4 = HEAP32[r5 + 4 >> 2];
    if ((r4 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r4;
    }
  }
  return;
}
function __ZN5Avoid19NudgingShiftSegment9mergeWithEPKNS_12ShiftSegmentEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = (r1 + 8 | 0) >> 2;
  r8 = r2 + 8 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]);
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = r9 < r10 ? r10 : r9;
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r8 = (r1 + 16 | 0) >> 2;
  r9 = r2 + 16 | 0;
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
  r11 = r10 < r9 ? r10 : r9;
  HEAPF64[tempDoublePtr >> 3] = r11, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r11 = (r1 + 4 | 0) >> 2;
  r9 = __ZN5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 8 >> 2]](r1), HEAP32[r11]);
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r9 = __ZNK5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 16 >> 2]](r2), HEAP32[r11]);
  r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r12 < r10) {
      r13 = r10 - (r10 - r12) * .5;
    } else {
      if (r12 <= r10) {
        r13 = r10;
        break;
      }
      r13 = r10 + (r12 - r10) * .5;
    }
  } while (0);
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]);
  r7 = r10 < r13 ? r13 : r10;
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
  r8 = r7 < r10 ? r7 : r10;
  r10 = ___dynamic_cast(r2, 5272756, 5272736);
  r2 = r1 + 32 | 0;
  r7 = (r1 + 36 | 0) >> 2;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueENS5_IPjEEE4typeES8_SA_SA_(r6, r2, HEAP32[r7], HEAP32[r10 + 32 >> 2], HEAP32[r10 + 36 >> 2]);
  r10 = r1 + 24 | 0;
  __ZN5Avoid10CmpIndexesC1EPNS_7ConnRefEj(r5, HEAP32[r10 >> 2], r3 & 1 ^ 1);
  r3 = (r2 | 0) >> 2;
  __ZNSt3__16__sortIRN5Avoid10CmpIndexesEPjEEvT0_S5_T_(HEAP32[r3], HEAP32[r7], r5);
  r5 = HEAP32[r3];
  if ((HEAP32[r7] | 0) == (r5 | 0)) {
    STACKTOP = r4;
    return;
  } else {
    r14 = 0;
    r15 = r5;
  }
  while (1) {
    r5 = HEAP32[r15 + (r14 << 2) >> 2];
    r2 = __ZN5Avoid5PointixEj(HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r10 >> 2]) + 8 >> 2] + (r5 * 24 & -1) | 0, HEAP32[r11]);
    HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    r2 = r14 + 1 | 0;
    r5 = HEAP32[r3];
    if (r2 >>> 0 < HEAP32[r7] - r5 >> 2 >>> 0) {
      r14 = r2;
      r15 = r5;
    } else {
      break;
    }
  }
  STACKTOP = r4;
  return;
}
__ZN5Avoid19NudgingShiftSegment9mergeWithEPKNS_12ShiftSegmentEj["X"] = 1;
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9pop_frontEv(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 4 >> 2];
  r3 = r2 + 4 | 0;
  r4 = r2 | 0;
  HEAP32[HEAP32[r4 >> 2] + 4 >> 2] = HEAP32[r3 >> 2];
  HEAP32[HEAP32[r3 >> 2] >> 2] = HEAP32[r4 >> 2];
  r4 = r1 + 8 | 0;
  HEAP32[r4 >> 2] = HEAP32[r4 >> 2] - 1 | 0;
  __ZdlPv(r2);
  return;
}
function __ZNK5Avoid12CmpLineOrderclEPKNS_12ShiftSegmentES3_Pb(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 52 | 0;
  r6 = r5;
  r7 = r5 + 24;
  r8 = r5 + 48;
  if ((r2 | 0) == 0) {
    r9 = 0;
  } else {
    r9 = ___dynamic_cast(r2, 5272756, 5272736);
  }
  if ((r3 | 0) == 0) {
    r10 = 0;
  } else {
    r10 = ___dynamic_cast(r3, 5272756, 5272736);
  }
  r3 = (r4 | 0) != 0;
  if (r3) {
    HEAP8[r4] = 1;
  }
  r2 = r9;
  r11 = r6 >> 2;
  r12 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 16 >> 2]](r9) >> 2;
  HEAP32[r11] = HEAP32[r12];
  HEAP32[r11 + 1] = HEAP32[r12 + 1];
  HEAP32[r11 + 2] = HEAP32[r12 + 2];
  HEAP32[r11 + 3] = HEAP32[r12 + 3];
  HEAP32[r11 + 4] = HEAP32[r12 + 4];
  HEAP32[r11 + 5] = HEAP32[r12 + 5];
  r12 = r10;
  r11 = r7 >> 2;
  r13 = FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 16 >> 2]](r10) >> 2;
  HEAP32[r11] = HEAP32[r13];
  HEAP32[r11 + 1] = HEAP32[r13 + 1];
  HEAP32[r11 + 2] = HEAP32[r13 + 2];
  HEAP32[r11 + 3] = HEAP32[r13 + 3];
  HEAP32[r11 + 4] = HEAP32[r13 + 4];
  HEAP32[r11 + 5] = HEAP32[r13 + 5];
  r13 = (r1 + 4 | 0) >> 2;
  r11 = HEAP32[r13] & 1 ^ 1;
  r14 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 20 >> 2]](r9);
  r2 = FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 20 >> 2]](r10);
  r12 = __ZN5Avoid5PointixEj(r6, HEAP32[r13]);
  r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r12 = __ZNK5Avoid5PointixEj(r14, HEAP32[r13]);
  if (r15 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    ___assert_func(5244520, 2662, 5254568, 5251788);
  }
  r12 = __ZN5Avoid5PointixEj(r7, HEAP32[r13]);
  r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r12 = __ZNK5Avoid5PointixEj(r2, HEAP32[r13]);
  if (r15 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    ___assert_func(5244520, 2663, 5254568, 5251312);
  }
  r12 = __ZN5Avoid5PointixEj(r6, HEAP32[r13]);
  r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r12 = __ZN5Avoid5PointixEj(r7, HEAP32[r13]);
  if (r15 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
    r12 = __ZN5Avoid5PointixEj(r6, HEAP32[r13]);
    r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r12 = __ZN5Avoid5PointixEj(r7, HEAP32[r13]);
    r16 = r15 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    STACKTOP = r5;
    return r16;
  }
  HEAP8[r8] = 0;
  r12 = __ZNK5Avoid19NudgingShiftSegment10fixedOrderERb(r9, r8);
  r15 = __ZNK5Avoid19NudgingShiftSegment10fixedOrderERb(r10, r8);
  if (!((HEAP8[r8] & 1) << 24 >> 24 == 0 | (r12 | 0) == (r15 | 0))) {
    r16 = (r12 | 0) < (r15 | 0);
    STACKTOP = r5;
    return r16;
  }
  r15 = __ZNK5Avoid19NudgingShiftSegment5orderEv(r9);
  r12 = __ZNK5Avoid19NudgingShiftSegment5orderEv(r10);
  if ((r15 | 0) != (r12 | 0)) {
    r16 = (r15 | 0) < (r12 | 0);
    STACKTOP = r5;
    return r16;
  }
  r12 = __ZN5Avoid5PointixEj(r6, r11);
  r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r12 = __ZN5Avoid5PointixEj(r7, r11);
  r8 = __ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(HEAP32[r1 >> 2], r15 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) ? r6 : r7);
  r12 = __ZN5Avoid7PtOrder11positionForEjPKNS_7ConnRefE(r8, HEAP32[r13], HEAP32[r9 + 24 >> 2]);
  r9 = __ZN5Avoid7PtOrder11positionForEjPKNS_7ConnRefE(r8, HEAP32[r13], HEAP32[r10 + 24 >> 2]);
  if (!((r12 | 0) == -1 | (r9 | 0) == -1)) {
    r16 = (r12 | 0) < (r9 | 0);
    STACKTOP = r5;
    return r16;
  }
  if (r3) {
    HEAP8[r4] = 0;
  }
  r4 = __ZN5Avoid5PointixEj(r6, r11);
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = __ZN5Avoid5PointixEj(r7, r11);
  r16 = r6 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  STACKTOP = r5;
  return r16;
}
__ZNK5Avoid12CmpLineOrderclEPKNS_12ShiftSegmentES3_Pb["X"] = 1;
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8;
  r5 = __Znwj(12);
  r6 = r5;
  r7 = r5;
  HEAP32[r7 >> 2] = 0;
  r8 = r5 + 8 | 0;
  if ((r8 | 0) != 0) {
    HEAP32[r8 >> 2] = HEAP32[r4 >> 2];
  }
  r4 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r4] + 4 >> 2] = r6;
  HEAP32[r7 >> 2] = HEAP32[r4];
  HEAP32[r4] = r6;
  HEAP32[r5 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  HEAP32[r1 >> 2] = r6;
  return;
}
function __ZNK5Avoid19NudgingShiftSegment10fixedOrderERb(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = __ZNK5Avoid19NudgingShiftSegment13nudgeDistanceEv(HEAP32[r1 + 24 >> 2]);
  r4 = __ZNK5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1), HEAP32[r1 + 4 >> 2]);
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r1 + 16 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - r5 < r3;
  do {
    if ((HEAP8[r1 + 44 | 0] & 1) << 24 >> 24 == 0) {
      r4 = r1 + 8 | 0;
      r7 = r5 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < r3;
      if (r7 & r6) {
        break;
      }
      if (r7) {
        r8 = 1;
        return r8;
      }
      r8 = r6 << 31 >> 31;
      return r8;
    }
  } while (0);
  HEAP8[r2] = 1;
  r8 = 0;
  return r8;
}
function __ZNK5Avoid19NudgingShiftSegment5orderEv(r1) {
  var r2;
  if (__ZNK5Avoid19NudgingShiftSegment4lowCEv(r1)) {
    r2 = -1;
    return r2;
  }
  r2 = __ZNK5Avoid19NudgingShiftSegment5highCEv(r1) & 1;
  return r2;
}
function __ZNK5Avoid19NudgingShiftSegment4lowCEv(r1) {
  var r2, r3, r4;
  do {
    if ((HEAP8[r1 + 45 | 0] & 1) << 24 >> 24 == 0) {
      if (__ZNK5Avoid19NudgingShiftSegment6zigzagEv(r1)) {
        break;
      }
      if ((HEAP8[r1 + 44 | 0] & 1) << 24 >> 24 != 0) {
        break;
      }
      r2 = r1 + 8 | 0;
      r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r2 = __ZNK5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1), HEAP32[r1 + 4 >> 2]);
      if (r3 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r4 = 1;
      } else {
        break;
      }
      return r4;
    }
  } while (0);
  r4 = 0;
  return r4;
}
function __ZNK5Avoid19NudgingShiftSegment5highCEv(r1) {
  var r2, r3, r4;
  do {
    if ((HEAP8[r1 + 45 | 0] & 1) << 24 >> 24 == 0) {
      if (__ZNK5Avoid19NudgingShiftSegment6zigzagEv(r1)) {
        break;
      }
      if ((HEAP8[r1 + 44 | 0] & 1) << 24 >> 24 != 0) {
        break;
      }
      r2 = r1 + 16 | 0;
      r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r2 = __ZNK5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 16 >> 2]](r1), HEAP32[r1 + 4 >> 2]);
      if (r3 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r4 = 1;
      } else {
        break;
      }
      return r4;
    }
  } while (0);
  r4 = 0;
  return r4;
}
function __ZNK5Avoid19NudgingShiftSegment13nudgeDistanceEv(r1) {
  return __ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(__ZNK5Avoid7ConnRef6routerEv(HEAP32[r1 >> 2]), 7);
}
function __ZN5Avoid10CmpIndexesC1EPNS_7ConnRefEj(r1, r2, r3) {
  __ZN5Avoid10CmpIndexesC2EPNS_7ConnRefEj(r1, r2, r3);
  return;
}
function __ZNSt3__16__sortIRN5Avoid10CmpIndexesEPjEEvT0_S5_T_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44;
  r4 = 0;
  r5 = r1;
  r1 = r2;
  L219 : while (1) {
    r2 = r1;
    r6 = r1 - 4 | 0, r7 = r6 >> 2;
    r8 = r5, r9 = r8 >> 2;
    L221 : while (1) {
      r10 = r8;
      r11 = r2 - r10 | 0;
      r12 = r11 >> 2;
      if ((r12 | 0) == 2) {
        r4 = 184;
        break L219;
      } else if ((r12 | 0) == 4) {
        r4 = 187;
        break L219;
      } else if ((r12 | 0) == 5) {
        r4 = 188;
        break L219;
      } else if ((r12 | 0) == 3) {
        r4 = 186;
        break L219;
      } else if ((r12 | 0) == 0 | (r12 | 0) == 1) {
        r4 = 225;
        break L219;
      }
      if ((r11 | 0) < 124) {
        r4 = 190;
        break L219;
      }
      r13 = (r12 | 0) / 2 & -1;
      r14 = (r13 << 2) + r8 | 0;
      if ((r11 | 0) > 3996) {
        r11 = (r12 | 0) / 4 & -1;
        r15 = __ZNSt3__17__sort5IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_S5_T_(r8, (r11 << 2) + r8 | 0, r14, (r11 + r13 << 2) + r8 | 0, r6, r3);
      } else {
        r15 = __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r8, r14, r6, r3);
      }
      do {
        if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r9], HEAP32[r14 >> 2])) {
          r16 = r6;
          r17 = r15;
        } else {
          r13 = r6;
          while (1) {
            r18 = r13 - 4 | 0, r19 = r18 >> 2;
            if ((r8 | 0) == (r18 | 0)) {
              break;
            }
            if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r19], HEAP32[r14 >> 2])) {
              r4 = 207;
              break;
            } else {
              r13 = r18;
            }
          }
          if (r4 == 207) {
            r4 = 0;
            r13 = HEAP32[r9];
            HEAP32[r9] = HEAP32[r19];
            HEAP32[r19] = r13;
            r16 = r18;
            r17 = r15 + 1 | 0;
            break;
          }
          r13 = r8 + 4 | 0;
          if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r9], HEAP32[r7])) {
            r20 = r13;
          } else {
            r11 = r13, r13 = r11 >> 2;
            while (1) {
              if ((r11 | 0) == (r6 | 0)) {
                r4 = 231;
                break L219;
              }
              r21 = r11 + 4 | 0;
              if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r9], HEAP32[r13])) {
                break;
              } else {
                r11 = r21, r13 = r11 >> 2;
              }
            }
            r11 = HEAP32[r13];
            HEAP32[r13] = HEAP32[r7];
            HEAP32[r7] = r11;
            r20 = r21;
          }
          if ((r20 | 0) == (r6 | 0)) {
            r4 = 232;
            break L219;
          } else {
            r22 = r6;
            r23 = r20;
          }
          while (1) {
            r11 = r23, r12 = r11 >> 2;
            while (1) {
              r24 = r11 + 4 | 0;
              if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r9], HEAP32[r12])) {
                r25 = r22;
                break;
              } else {
                r11 = r24, r12 = r11 >> 2;
              }
            }
            while (1) {
              r26 = r25 - 4 | 0, r27 = r26 >> 2;
              if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r9], HEAP32[r27])) {
                r25 = r26;
              } else {
                break;
              }
            }
            if (r11 >>> 0 >= r26 >>> 0) {
              r8 = r11, r9 = r8 >> 2;
              continue L221;
            }
            r28 = HEAP32[r12];
            HEAP32[r12] = HEAP32[r27];
            HEAP32[r27] = r28;
            r22 = r26;
            r23 = r24;
          }
        }
      } while (0);
      r13 = r8 + 4 | 0;
      L251 : do {
        if (r13 >>> 0 < r16 >>> 0) {
          r28 = r16;
          r29 = r13;
          r30 = r17;
          r31 = r14;
          while (1) {
            r32 = r29, r33 = r32 >> 2;
            while (1) {
              r34 = r32 + 4 | 0;
              if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r33], HEAP32[r31 >> 2])) {
                r32 = r34, r33 = r32 >> 2;
              } else {
                r35 = r28;
                break;
              }
            }
            while (1) {
              r36 = r35 - 4 | 0, r37 = r36 >> 2;
              if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r37], HEAP32[r31 >> 2])) {
                break;
              } else {
                r35 = r36;
              }
            }
            if (r32 >>> 0 > r36 >>> 0) {
              r38 = r32, r39 = r38 >> 2;
              r40 = r30;
              r41 = r31, r42 = r41 >> 2;
              break L251;
            }
            r12 = HEAP32[r33];
            HEAP32[r33] = HEAP32[r37];
            HEAP32[r37] = r12;
            r28 = r36;
            r29 = r34;
            r30 = r30 + 1 | 0;
            r31 = (r31 | 0) == (r32 | 0) ? r36 : r31;
          }
        } else {
          r38 = r13, r39 = r38 >> 2;
          r40 = r17;
          r41 = r14, r42 = r41 >> 2;
        }
      } while (0);
      do {
        if ((r38 | 0) == (r41 | 0)) {
          r43 = r40;
        } else {
          if (!__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r42], HEAP32[r39])) {
            r43 = r40;
            break;
          }
          r14 = HEAP32[r39];
          HEAP32[r39] = HEAP32[r42];
          HEAP32[r42] = r14;
          r43 = r40 + 1 | 0;
        }
      } while (0);
      if ((r43 | 0) == 0) {
        r44 = __ZNSt3__127__insertion_sort_incompleteIRN5Avoid10CmpIndexesEPjEEbT0_S5_T_(r8, r38, r3);
        r14 = r38 + 4 | 0;
        if (__ZNSt3__127__insertion_sort_incompleteIRN5Avoid10CmpIndexesEPjEEbT0_S5_T_(r14, r1, r3)) {
          r4 = 219;
          break;
        }
        if (r44) {
          r8 = r14, r9 = r8 >> 2;
          continue;
        }
      }
      r14 = r38;
      if ((r14 - r10 | 0) >= (r2 - r14 | 0)) {
        r4 = 223;
        break;
      }
      __ZNSt3__16__sortIRN5Avoid10CmpIndexesEPjEEvT0_S5_T_(r8, r38, r3);
      r8 = r38 + 4 | 0, r9 = r8 >> 2;
    }
    if (r4 == 223) {
      r4 = 0;
      __ZNSt3__16__sortIRN5Avoid10CmpIndexesEPjEEvT0_S5_T_(r38 + 4 | 0, r1, r3);
      r5 = r8;
      r1 = r38;
      continue;
    } else if (r4 == 219) {
      r4 = 0;
      if (r44) {
        r4 = 234;
        break;
      } else {
        r5 = r8;
        r1 = r38;
        continue;
      }
    }
  }
  if (r4 == 184) {
    if (!__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r7], HEAP32[r9])) {
      return;
    }
    r38 = HEAP32[r9];
    HEAP32[r9] = HEAP32[r7];
    HEAP32[r7] = r38;
    return;
  } else if (r4 == 187) {
    __ZNSt3__17__sort4IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_T_(r8, r8 + 4 | 0, r8 + 8 | 0, r6, r3);
    return;
  } else if (r4 == 188) {
    __ZNSt3__17__sort5IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_S5_T_(r8, r8 + 4 | 0, r8 + 8 | 0, r8 + 12 | 0, r6, r3);
    return;
  } else if (r4 == 190) {
    __ZNSt3__118__insertion_sort_3IRN5Avoid10CmpIndexesEPjEEvT0_S5_T_(r8, r1, r3);
    return;
  } else if (r4 == 186) {
    __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r8, r8 + 4 | 0, r6, r3);
    return;
  } else if (r4 == 225) {
    return;
  } else if (r4 == 231) {
    return;
  } else if (r4 == 232) {
    return;
  } else if (r4 == 234) {
    return;
  }
}
__ZNSt3__16__sortIRN5Avoid10CmpIndexesEPjEEvT0_S5_T_["X"] = 1;
function __ZN5Avoid10CmpIndexesclEjj(r1, r2, r3) {
  var r4, r5;
  r4 = r1 | 0;
  r5 = r1 + 4 | 0;
  r1 = __ZN5Avoid5PointixEj(HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r4 >> 2]) + 8 >> 2] + (r2 * 24 & -1) | 0, HEAP32[r5 >> 2]);
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r1 = __ZN5Avoid5PointixEj(HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r4 >> 2]) + 8 >> 2] + (r3 * 24 & -1) | 0, HEAP32[r5 >> 2]);
  return r2 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
}
function __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = r3 >> 2;
  r3 = r2 >> 2;
  r2 = r1 >> 2;
  r1 = __ZN5Avoid10CmpIndexesclEjj(r4, HEAP32[r3], HEAP32[r2]);
  r6 = __ZN5Avoid10CmpIndexesclEjj(r4, HEAP32[r5], HEAP32[r3]);
  if (!r1) {
    if (!r6) {
      r7 = 0;
      return r7;
    }
    r1 = HEAP32[r3];
    HEAP32[r3] = HEAP32[r5];
    HEAP32[r5] = r1;
    if (!__ZN5Avoid10CmpIndexesclEjj(r4, HEAP32[r3], HEAP32[r2])) {
      r7 = 1;
      return r7;
    }
    r1 = HEAP32[r2];
    HEAP32[r2] = HEAP32[r3];
    HEAP32[r3] = r1;
    r7 = 2;
    return r7;
  }
  r1 = HEAP32[r2];
  if (r6) {
    HEAP32[r2] = HEAP32[r5];
    HEAP32[r5] = r1;
    r7 = 1;
    return r7;
  }
  HEAP32[r2] = HEAP32[r3];
  HEAP32[r3] = r1;
  if (!__ZN5Avoid10CmpIndexesclEjj(r4, HEAP32[r5], r1)) {
    r7 = 1;
    return r7;
  }
  r1 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r5];
  HEAP32[r5] = r1;
  r7 = 2;
  return r7;
}
function __ZNSt3__17__sort4IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_T_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9;
  r6 = r3 >> 2;
  r7 = r2 >> 2;
  r8 = __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r1, r2, r3, r5);
  if (!__ZN5Avoid10CmpIndexesclEjj(r5, HEAP32[r4 >> 2], HEAP32[r6])) {
    r9 = r8;
    return r9;
  }
  r3 = HEAP32[r6];
  HEAP32[r6] = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = r3;
  if (!__ZN5Avoid10CmpIndexesclEjj(r5, HEAP32[r6], HEAP32[r7])) {
    r9 = r8 + 1 | 0;
    return r9;
  }
  r3 = HEAP32[r7];
  HEAP32[r7] = HEAP32[r6];
  HEAP32[r6] = r3;
  if (!__ZN5Avoid10CmpIndexesclEjj(r5, HEAP32[r7], HEAP32[r1 >> 2])) {
    r9 = r8 + 2 | 0;
    return r9;
  }
  r5 = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = HEAP32[r7];
  HEAP32[r7] = r5;
  r9 = r8 + 3 | 0;
  return r9;
}
function __ZNSt3__17__sort5IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_S5_T_(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11;
  r7 = r4 >> 2;
  r8 = r3 >> 2;
  r9 = r2 >> 2;
  r10 = __ZNSt3__17__sort4IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_T_(r1, r2, r3, r4, r6);
  if (!__ZN5Avoid10CmpIndexesclEjj(r6, HEAP32[r5 >> 2], HEAP32[r7])) {
    r11 = r10;
    return r11;
  }
  r4 = HEAP32[r7];
  HEAP32[r7] = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = r4;
  if (!__ZN5Avoid10CmpIndexesclEjj(r6, HEAP32[r7], HEAP32[r8])) {
    r11 = r10 + 1 | 0;
    return r11;
  }
  r4 = HEAP32[r8];
  HEAP32[r8] = HEAP32[r7];
  HEAP32[r7] = r4;
  if (!__ZN5Avoid10CmpIndexesclEjj(r6, HEAP32[r8], HEAP32[r9])) {
    r11 = r10 + 2 | 0;
    return r11;
  }
  r4 = HEAP32[r9];
  HEAP32[r9] = HEAP32[r8];
  HEAP32[r8] = r4;
  if (!__ZN5Avoid10CmpIndexesclEjj(r6, HEAP32[r9], HEAP32[r1 >> 2])) {
    r11 = r10 + 3 | 0;
    return r11;
  }
  r6 = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = HEAP32[r9];
  HEAP32[r9] = r6;
  r11 = r10 + 4 | 0;
  return r11;
}
function __ZNSt3__118__insertion_sort_3IRN5Avoid10CmpIndexesEPjEEvT0_S5_T_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = r1 + 8 | 0;
  __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r1, r1 + 4 | 0, r4, r3);
  r5 = r1 + 12 | 0;
  if ((r5 | 0) == (r2 | 0)) {
    return;
  } else {
    r6 = r4;
    r7 = r5;
  }
  while (1) {
    if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r7 >> 2], HEAP32[r6 >> 2])) {
      r5 = HEAP32[r7 >> 2];
      r4 = r6;
      r8 = r7;
      while (1) {
        HEAP32[r8 >> 2] = HEAP32[r4 >> 2];
        if ((r4 | 0) == (r1 | 0)) {
          r9 = r1;
          break;
        }
        r10 = r4 - 4 | 0;
        if (__ZN5Avoid10CmpIndexesclEjj(r3, r5, HEAP32[r10 >> 2])) {
          r8 = r4;
          r4 = r10;
        } else {
          r9 = r4;
          break;
        }
      }
      HEAP32[r9 >> 2] = r5;
    }
    r4 = r7 + 4 | 0;
    if ((r4 | 0) == (r2 | 0)) {
      break;
    } else {
      r6 = r7;
      r7 = r4;
    }
  }
  return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueENS5_IPjEEE4typeES8_SA_SA_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r7 = r6;
  r8 = HEAP32[r2 >> 2];
  r9 = r8;
  r10 = r3 - r9 >> 2;
  r3 = (r10 << 2) + r8 | 0;
  r11 = r5 - r4 | 0;
  r12 = r11 >> 2;
  if ((r11 | 0) <= 0) {
    r13 = r3;
    r14 = r1 | 0, r15 = r14 >> 2;
    HEAP32[r15] = r13;
    STACKTOP = r6;
    return;
  }
  r11 = r2 + 8 | 0;
  r16 = HEAP32[r2 + 4 >> 2];
  r17 = HEAP32[r11 >> 2];
  r18 = r16;
  if ((r12 | 0) > (r17 - r18 >> 2 | 0)) {
    r19 = (r18 - r9 >> 2) + r12 | 0;
    if (r19 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
    r20 = r17 - r9 | 0;
    if (r20 >> 2 >>> 0 > 536870910) {
      r21 = 1073741823;
    } else {
      r9 = r20 >> 1;
      r21 = r9 >>> 0 < r19 >>> 0 ? r19 : r9;
    }
    __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r7, r21, r10, r11);
    __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r7, r4, r5);
    r11 = __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EEPj(r2, r7, r3);
    __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r7);
    r13 = r11;
    r14 = r1 | 0, r15 = r14 >> 2;
    HEAP32[r15] = r13;
    STACKTOP = r6;
    return;
  }
  r11 = r18 - r3 >> 2;
  if ((r12 | 0) > (r11 | 0)) {
    r18 = (r11 << 2) + r4 | 0;
    __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r2, r18, r5);
    r22 = r11;
    r23 = r18;
  } else {
    r22 = r12;
    r23 = r5;
  }
  if ((r22 | 0) <= 0) {
    r13 = r3;
    r14 = r1 | 0, r15 = r14 >> 2;
    HEAP32[r15] = r13;
    STACKTOP = r6;
    return;
  }
  __ZNSt3__16vectorIjNS_9allocatorIjEEE12__move_rangeEPjS4_S4_(r2, r3, r16, (r12 + r10 << 2) + r8 | 0);
  if ((r23 | 0) == (r4 | 0)) {
    r13 = r3;
    r14 = r1 | 0, r15 = r14 >> 2;
    HEAP32[r15] = r13;
    STACKTOP = r6;
    return;
  } else {
    r24 = r4;
    r25 = r3;
  }
  while (1) {
    HEAP32[r25 >> 2] = HEAP32[r24 >> 2];
    r4 = r24 + 4 | 0;
    if ((r4 | 0) == (r23 | 0)) {
      r13 = r3;
      break;
    } else {
      r24 = r4;
      r25 = r25 + 4 | 0;
    }
  }
  r14 = r1 | 0, r15 = r14 >> 2;
  HEAP32[r15] = r13;
  STACKTOP = r6;
  return;
}
__ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueENS5_IPjEEE4typeES8_SA_SA_["X"] = 1;
function __ZN5Avoid10CmpIndexesC2EPNS_7ConnRefEj(r1, r2, r3) {
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZN5Avoid12CmpLineOrderC2ERNSt3__13mapINS_5PointENS_7PtOrderENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEEj(r1, r2, r3) {
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  return;
}
function __ZNSt3__127__insertion_sort_incompleteIRN5Avoid10CmpIndexesEPjEEbT0_S5_T_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = 0;
  r5 = r2 - r1 >> 2;
  if ((r5 | 0) == 4) {
    __ZNSt3__17__sort4IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_T_(r1, r1 + 4 | 0, r1 + 8 | 0, r2 - 4 | 0, r3);
    r6 = 1;
    return r6;
  } else if ((r5 | 0) == 5) {
    __ZNSt3__17__sort5IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_S5_T_(r1, r1 + 4 | 0, r1 + 8 | 0, r1 + 12 | 0, r2 - 4 | 0, r3);
    r6 = 1;
    return r6;
  } else if ((r5 | 0) == 0 | (r5 | 0) == 1) {
    r6 = 1;
    return r6;
  } else if ((r5 | 0) == 2) {
    r7 = (r2 - 4 | 0) >> 2;
    if (!__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r7], HEAP32[r1 >> 2])) {
      r6 = 1;
      return r6;
    }
    r8 = HEAP32[r1 >> 2];
    HEAP32[r1 >> 2] = HEAP32[r7];
    HEAP32[r7] = r8;
    r6 = 1;
    return r6;
  } else if ((r5 | 0) == 3) {
    __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r1, r1 + 4 | 0, r2 - 4 | 0, r3);
    r6 = 1;
    return r6;
  } else {
    r5 = r1 + 8 | 0;
    __ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_(r1, r1 + 4 | 0, r5, r3);
    r8 = r1 + 12 | 0;
    if ((r8 | 0) == (r2 | 0)) {
      r6 = 1;
      return r6;
    } else {
      r9 = r5;
      r10 = 0;
      r11 = r8;
    }
    while (1) {
      if (__ZN5Avoid10CmpIndexesclEjj(r3, HEAP32[r11 >> 2], HEAP32[r9 >> 2])) {
        r8 = HEAP32[r11 >> 2];
        r5 = r9;
        r7 = r11;
        while (1) {
          HEAP32[r7 >> 2] = HEAP32[r5 >> 2];
          if ((r5 | 0) == (r1 | 0)) {
            r12 = r1;
            break;
          }
          r13 = r5 - 4 | 0;
          if (__ZN5Avoid10CmpIndexesclEjj(r3, r8, HEAP32[r13 >> 2])) {
            r7 = r5;
            r5 = r13;
          } else {
            r12 = r5;
            break;
          }
        }
        HEAP32[r12 >> 2] = r8;
        r5 = r10 + 1 | 0;
        if ((r5 | 0) == 8) {
          break;
        } else {
          r14 = r5;
        }
      } else {
        r14 = r10;
      }
      r5 = r11 + 4 | 0;
      if ((r5 | 0) == (r2 | 0)) {
        r6 = 1;
        r4 = 347;
        break;
      } else {
        r9 = r11;
        r10 = r14;
        r11 = r5;
      }
    }
    if (r4 == 347) {
      return r6;
    }
    r6 = (r11 + 4 | 0) == (r2 | 0);
    return r6;
  }
}
__ZNSt3__127__insertion_sort_incompleteIRN5Avoid10CmpIndexesEPjEEbT0_S5_T_["X"] = 1;
function __ZNSt3__16vectorIjNS_9allocatorIjEEE12__move_rangeEPjS4_S4_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r5];
  r6 = r1 - r4 | 0;
  r4 = r6 >> 2;
  r7 = (r4 << 2) + r2 | 0;
  L438 : do {
    if (r7 >>> 0 < r3 >>> 0) {
      r8 = r7;
      r9 = r1;
      while (1) {
        if ((r9 | 0) == 0) {
          r10 = 0;
        } else {
          HEAP32[r9 >> 2] = HEAP32[r8 >> 2];
          r10 = HEAP32[r5];
        }
        r11 = r8 + 4 | 0;
        r12 = r10 + 4 | 0;
        HEAP32[r5] = r12;
        if (r11 >>> 0 < r3 >>> 0) {
          r8 = r11;
          r9 = r12;
        } else {
          break L438;
        }
      }
    }
  } while (0);
  _memmove((-r4 << 2) + r1 | 0, r2, r6, 4, 0);
  return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EEPj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = (r2 + 4 | 0) >> 2;
  r7 = HEAP32[r6];
  r8 = (r1 | 0) >> 2;
  r9 = HEAP32[r8];
  L447 : do {
    if (r9 >>> 0 < r3 >>> 0) {
      r10 = r3;
      while (1) {
        r11 = r10 - 4 | 0;
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE10push_frontERKj(r2, r11);
        r12 = HEAP32[r8];
        if (r12 >>> 0 < r11 >>> 0) {
          r10 = r11;
        } else {
          r13 = r12;
          break L447;
        }
      }
    } else {
      r13 = r9;
    }
  } while (0);
  r9 = (r1 + 4 | 0) >> 2;
  r10 = (r2 + 8 | 0) >> 2;
  r12 = (r2 + 12 | 0) >> 2;
  r11 = (r2 | 0) >> 2;
  if (HEAP32[r9] >>> 0 <= r3 >>> 0) {
    r14 = r13;
    r15 = HEAP32[r6];
    HEAP32[r8] = r15;
    HEAP32[r6] = r14;
    r16 = HEAP32[r9];
    r17 = HEAP32[r10];
    HEAP32[r9] = r17;
    HEAP32[r10] = r16;
    r18 = r1 + 8 | 0, r19 = r18 >> 2;
    r20 = HEAP32[r19];
    r21 = HEAP32[r12];
    HEAP32[r19] = r21;
    HEAP32[r12] = r20;
    r22 = HEAP32[r6];
    HEAP32[r11] = r22;
    STACKTOP = r4;
    return r7;
  }
  r13 = r2 + 16 | 0;
  r2 = r5 | 0;
  r23 = r5 + 4 | 0;
  r24 = r5 + 8 | 0;
  r25 = r5 + 12 | 0;
  r26 = r3;
  r3 = HEAP32[r10];
  while (1) {
    do {
      if ((r3 | 0) == (HEAP32[r12] | 0)) {
        r27 = HEAP32[r6];
        r28 = HEAP32[r11];
        if (r27 >>> 0 > r28 >>> 0) {
          r29 = r27;
          r30 = (r29 - r28 + 4 >> 2 | 0) / -2 & -1;
          r31 = r3 - r29 | 0;
          _memmove((r30 << 2) + r27 | 0, r27, r31, 4, 0);
          r29 = ((r31 >> 2) + r30 << 2) + r27 | 0;
          HEAP32[r10] = r29;
          HEAP32[r6] = (r30 << 2) + HEAP32[r6] | 0;
          r32 = r29;
          break;
        } else {
          r29 = r3 - r28 >> 1;
          r28 = (r29 | 0) == 0 ? 1 : r29;
          __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r5, r28, r28 >>> 2, HEAP32[r13 >> 2]);
          __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r5, HEAP32[r6], HEAP32[r10]);
          r28 = HEAP32[r11];
          HEAP32[r11] = HEAP32[r2 >> 2];
          HEAP32[r2 >> 2] = r28;
          r28 = HEAP32[r6];
          HEAP32[r6] = HEAP32[r23 >> 2];
          HEAP32[r23 >> 2] = r28;
          r28 = HEAP32[r10];
          HEAP32[r10] = HEAP32[r24 >> 2];
          HEAP32[r24 >> 2] = r28;
          r28 = HEAP32[r12];
          HEAP32[r12] = HEAP32[r25 >> 2];
          HEAP32[r25 >> 2] = r28;
          __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r5);
          r32 = HEAP32[r10];
          break;
        }
      } else {
        r32 = r3;
      }
    } while (0);
    if ((r32 | 0) == 0) {
      r33 = 0;
    } else {
      HEAP32[r32 >> 2] = HEAP32[r26 >> 2];
      r33 = HEAP32[r10];
    }
    r28 = r33 + 4 | 0;
    HEAP32[r10] = r28;
    r29 = r26 + 4 | 0;
    if (r29 >>> 0 < HEAP32[r9] >>> 0) {
      r26 = r29;
      r3 = r28;
    } else {
      break;
    }
  }
  r14 = HEAP32[r8];
  r15 = HEAP32[r6];
  HEAP32[r8] = r15;
  HEAP32[r6] = r14;
  r16 = HEAP32[r9];
  r17 = HEAP32[r10];
  HEAP32[r9] = r17;
  HEAP32[r10] = r16;
  r18 = r1 + 8 | 0, r19 = r18 >> 2;
  r20 = HEAP32[r19];
  r21 = HEAP32[r12];
  HEAP32[r19] = r21;
  HEAP32[r12] = r20;
  r22 = HEAP32[r6];
  HEAP32[r11] = r22;
  STACKTOP = r4;
  return r7;
}
__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EEPj["X"] = 1;
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r1) {
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE10push_frontERKj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE10push_frontERKj["X"] = 1;
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = r1;
  r9 = HEAP32[r1 + 4 >> 2];
  r10 = (r9 | 0) == (r8 | 0);
  do {
    if ((r2 | 0) == (r3 | 0) | r10) {
      if (r10) {
        r11 = r2;
        r4 = 394;
        break;
      } else {
        r12 = r9;
        r4 = 395;
        break;
      }
    } else {
      r13 = r9;
      r14 = r2;
      while (1) {
        HEAP32[r13 + 8 >> 2] = HEAP32[r14 + 8 >> 2];
        r15 = HEAP32[r14 + 4 >> 2];
        r16 = HEAP32[r13 + 4 >> 2];
        r17 = (r16 | 0) == (r8 | 0);
        if ((r15 | 0) == (r3 | 0) | r17) {
          break;
        } else {
          r13 = r16;
          r14 = r15;
        }
      }
      if (r17) {
        r11 = r15;
        r4 = 394;
        break;
      } else {
        r12 = r16;
        r4 = 395;
        break;
      }
    }
  } while (0);
  if (r4 == 395) {
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_(r7, r1, r12, r8);
    STACKTOP = r5;
    return;
  } else if (r4 == 394) {
    __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r6, r1, r8, r11, r3);
    STACKTOP = r5;
    return;
  }
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_(r1, r2, r3, r4) {
  var r5, r6, r7;
  if ((r4 | 0) == (r3 | 0)) {
    r5 = r1 | 0;
    HEAP32[r5 >> 2] = r4;
    return;
  }
  r6 = HEAP32[r4 >> 2] + 4 | 0;
  r7 = r3 | 0;
  HEAP32[HEAP32[r7 >> 2] + 4 >> 2] = HEAP32[r6 >> 2];
  HEAP32[HEAP32[r6 >> 2] >> 2] = HEAP32[r7 >> 2];
  r7 = r2 + 8 | 0;
  r2 = r3;
  while (1) {
    r3 = HEAP32[r2 + 4 >> 2];
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] - 1 | 0;
    __ZdlPv(r2);
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r2 = r3;
    }
  }
  r5 = r1 | 0;
  HEAP32[r5 >> 2] = r4;
  return;
}
function __ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r5 = r2 >> 2;
  r2 = 0;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r7 = r6;
  r8 = r6 + 8, r9 = r8 >> 2;
  r10 = HEAP32[r5 + 1];
  HEAP32[r9] = r10;
  do {
    if ((r4 | 0) == 1) {
      if ((HEAP32[r5] - 4 | 0) >>> 0 < 2) {
        r2 = 415;
        break;
      }
      STACKTOP = r6;
      return;
    } else if ((r4 | 0) == 3) {
      if ((HEAP32[r5] - 1 | 0) >>> 0 >= 2) {
        STACKTOP = r6;
        return;
      }
      __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r7, r1 | 0, r8);
      r11 = HEAP32[r7 >> 2];
      r12 = (HEAP8[r7 + 4 | 0] & 1) << 24 >> 24 == 0;
      r13 = HEAP32[r9];
      r14 = (r13 + 64 | 0) >> 2;
      HEAP32[r14] = r11;
      if (r12) {
        ___assert_func(5244520, 2038, 5255424, 5250480);
        r15 = HEAP32[r14];
      } else {
        r15 = r11;
      }
      if ((r15 | 0) == (HEAP32[r1 >> 2] | 0)) {
        r16 = r15;
      } else {
        r11 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r15 | 0) + 16 >> 2];
        HEAP32[r13 + 56 >> 2] = r11;
        HEAP32[r11 + 60 >> 2] = r13;
        r16 = HEAP32[r14];
      }
      r14 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r16 | 0);
      if ((r14 | 0) == (r1 + 4 | 0)) {
        STACKTOP = r6;
        return;
      }
      r11 = HEAP32[r14 + 16 >> 2];
      HEAP32[r13 + 60 >> 2] = r11;
      HEAP32[r11 + 56 >> 2] = r13;
      STACKTOP = r6;
      return;
    } else if ((r4 | 0) == 4) {
      if ((HEAP32[r5] - 1 | 0) >>> 0 < 2) {
        r2 = 415;
        break;
      }
      STACKTOP = r6;
      return;
    } else if ((r4 | 0) != 2) {
      STACKTOP = r6;
      return;
    }
  } while (0);
  do {
    if (r2 == 415) {
      r16 = r10 + 12 | 0;
      r15 = HEAP32[r16 >> 2];
      if ((r15 | 0) == 0) {
        __ZN5Avoid4Node22markShiftSegmentsAboveEj(r10, r3);
        __ZN5Avoid4Node22markShiftSegmentsBelowEj(r10, r3);
      } else {
        r7 = __ZN5Avoid4Node18firstObstacleAboveEj(r10, r3);
        r13 = __ZN5Avoid4Node18firstObstacleBelowEj(r10, r3);
        r11 = (r15 + 8 | 0) >> 2;
        r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 1], HEAPF64[tempDoublePtr >> 3]);
        r14 = r7 < r15 ? r15 : r7;
        HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r11] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        r11 = (HEAP32[r16 >> 2] + 16 | 0) >> 2;
        r16 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 1], HEAPF64[tempDoublePtr >> 3]);
        r14 = r16 < r13 ? r16 : r13;
        HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r11] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      }
      if ((r4 | 0) == 2) {
        break;
      }
      STACKTOP = r6;
      return;
    }
  } while (0);
  if ((HEAP32[r5] - 4 | 0) >>> 0 >= 2) {
    STACKTOP = r6;
    return;
  }
  r5 = r10 + 56 | 0;
  r4 = HEAP32[r5 >> 2];
  r3 = HEAP32[r10 + 60 >> 2];
  if ((r4 | 0) != 0) {
    HEAP32[r4 + 60 >> 2] = r3;
  }
  if ((r3 | 0) != 0) {
    HEAP32[r3 + 56 >> 2] = HEAP32[r5 >> 2];
  }
  if ((__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1 | 0, r8) | 0) != 1) {
    ___assert_func(5244520, 2096, 5255424, 5250372);
  }
  r8 = HEAP32[r9];
  if ((r8 | 0) == 0) {
    STACKTOP = r6;
    return;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 4 >> 2]](r8);
  STACKTOP = r6;
  return;
}
__ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r4, r1, r2);
  r2 = HEAP32[r4 >> 2];
  if ((r2 | 0) == (r1 + 4 | 0)) {
    r5 = 0;
    STACKTOP = r3;
    return r5;
  }
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r3 + 4, r1, r2);
  r5 = 1;
  STACKTOP = r3;
  return r5;
}
function __ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r6 = r1 | 0;
  HEAP32[r6 >> 2] = r3;
  if ((r4 | 0) == (r5 | 0)) {
    return;
  }
  r1 = __Znwj(12);
  r7 = r1;
  r8 = r1;
  HEAP32[r8 >> 2] = 0;
  r9 = r1 + 8 | 0;
  if ((r9 | 0) != 0) {
    HEAP32[r9 >> 2] = HEAP32[r4 + 8 >> 2];
  }
  HEAP32[r6 >> 2] = r7;
  r6 = HEAP32[r4 + 4 >> 2];
  L563 : do {
    if ((r6 | 0) == (r5 | 0)) {
      r10 = r7;
      r11 = 1;
    } else {
      r4 = r7;
      r9 = 1;
      r1 = r6;
      while (1) {
        r12 = __Znwj(12);
        r13 = r12 + 8 | 0;
        if ((r13 | 0) != 0) {
          HEAP32[r13 >> 2] = HEAP32[r1 + 8 >> 2];
        }
        r13 = r4 + 4 | 0;
        HEAP32[r13 >> 2] = r12;
        HEAP32[r12 >> 2] = r4;
        r12 = HEAP32[r1 + 4 >> 2];
        r14 = HEAP32[r13 >> 2];
        r13 = r9 + 1 | 0;
        if ((r12 | 0) == (r5 | 0)) {
          r10 = r14;
          r11 = r13;
          break L563;
        } else {
          r4 = r14;
          r9 = r13;
          r1 = r12;
        }
      }
    }
  } while (0);
  r5 = (r3 | 0) >> 2;
  HEAP32[HEAP32[r5] + 4 >> 2] = r7;
  HEAP32[r8 >> 2] = HEAP32[r5];
  HEAP32[r5] = r10;
  HEAP32[r10 + 4 >> 2] = r3;
  r3 = r2 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + r11 | 0;
  return;
}
__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  r6 = r2 + 4 | 0;
  r2 = r6;
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_(r5, r3, HEAP32[r6 >> 2], r2);
  r6 = HEAP32[r5 >> 2];
  do {
    if ((r6 | 0) != (r2 | 0)) {
      if (__ZNK5Avoid10CmpNodePosclEPKNS_4NodeES3_(HEAP32[r3 >> 2], HEAP32[r6 + 16 >> 2])) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      STACKTOP = r4;
      return;
    }
  } while (0);
  HEAP32[r1 >> 2] = r2;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  L584 : do {
    if ((r3 | 0) == 0) {
      r5 = r4;
    } else {
      r6 = HEAP32[r2 >> 2];
      r7 = r3;
      r8 = r4;
      while (1) {
        r9 = r7, r10 = r9 >> 2;
        while (1) {
          if (!__ZNK5Avoid10CmpNodePosclEPKNS_4NodeES3_(HEAP32[r10 + 4], r6)) {
            break;
          }
          r11 = HEAP32[r10 + 1];
          if ((r11 | 0) == 0) {
            r5 = r8;
            break L584;
          } else {
            r9 = r11, r10 = r9 >> 2;
          }
        }
        r11 = HEAP32[r10];
        if ((r11 | 0) == 0) {
          r5 = r9;
          break L584;
        } else {
          r7 = r11;
          r8 = r9;
        }
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  }
  r1 = HEAP32[r3 >> 2];
  r3 = r6;
  while (1) {
    r6 = HEAP32[r3 + 16 >> 2];
    if (__ZNK5Avoid10CmpNodePosclEPKNS_4NodeES3_(r1, r6)) {
      r8 = r3 | 0;
      r5 = HEAP32[r8 >> 2];
      if ((r5 | 0) == 0) {
        r4 = 487;
        break;
      } else {
        r3 = r5;
        continue;
      }
    }
    if (!__ZNK5Avoid10CmpNodePosclEPKNS_4NodeES3_(r6, r1)) {
      r4 = 491;
      break;
    }
    r9 = r3 + 4 | 0;
    r6 = HEAP32[r9 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 490;
      break;
    } else {
      r3 = r6;
    }
  }
  if (r4 == 491) {
    HEAP32[r2 >> 2] = r3;
    r7 = r2;
    return r7;
  } else if (r4 == 487) {
    HEAP32[r2 >> 2] = r3;
    r7 = r8;
    return r7;
  } else if (r4 == 490) {
    HEAP32[r2 >> 2] = r3;
    r7 = r9;
    return r7;
  }
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEEC1Ej(r1, r2) {
  __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEEC2Ej(r1, r2);
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED1Ev(r1) {
  __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED2Ev(r1);
  return;
}
function __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjj(r1, r2, r3, r4, r5) {
  __ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjj(r1, r2, r3, r4, r5);
  return;
}
function __ZN5AvoidL16insideRectBoundsERKNS_5PointERKNSt3__14pairIS0_S0_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r5 = r4;
  __ZN5Avoid5PointC1Edd(r5, 0, 0);
  r6 = r2 | 0;
  r7 = r2 + 24 | 0;
  do {
    if (__ZNK5Avoid5PointeqERKS0_(r6, r5)) {
      if (__ZNK5Avoid5PointeqERKS0_(r7, r5)) {
        r8 = 0;
      } else {
        r9 = 0;
        break;
      }
      STACKTOP = r4;
      return r8;
    } else {
      r9 = 0;
    }
  } while (0);
  while (1) {
    if (r9 >>> 0 >= 2) {
      r8 = 1;
      r3 = 516;
      break;
    }
    r5 = __ZNK5Avoid5PointixEj(r1, r9);
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = __ZNK5Avoid5PointixEj(r6, r9);
    if (r2 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r8 = 0;
      r3 = 513;
      break;
    }
    r5 = __ZNK5Avoid5PointixEj(r1, r9);
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r5 = __ZNK5Avoid5PointixEj(r7, r9);
    if (r2 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r8 = 0;
      r3 = 514;
      break;
    } else {
      r9 = r9 + 1 | 0;
    }
  }
  if (r3 == 513) {
    STACKTOP = r4;
    return r8;
  } else if (r3 == 516) {
    STACKTOP = r4;
    return r8;
  } else if (r3 == 514) {
    STACKTOP = r4;
    return r8;
  }
}
function __ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjbbjdd(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  __ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjbbjdd(r1, r2, r3, r4, r5, r6, r7, r8, r9);
  return;
}
function __ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjbbjdd(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  var r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38;
  r10 = STACKTOP;
  STACKTOP = STACKTOP + 80 | 0;
  r11 = r10;
  r12 = r10 + 20;
  r13 = r10 + 40;
  r14 = r10 + 60;
  __ZN5Avoid12ShiftSegmentC2Ej(r1 | 0, r7);
  HEAP32[r1 >> 2] = 5267520;
  HEAP32[r1 + 24 >> 2] = r2;
  r2 = r1 + 32 | 0;
  r7 = r2 | 0;
  r15 = (r1 + 36 | 0) >> 2;
  r16 = r1 + 40 | 0;
  r17 = r16 | 0;
  r18 = (r1 + 28 | 0) >> 2;
  HEAP32[r18] = 0;
  HEAP32[r18 + 1] = 0;
  HEAP32[r18 + 2] = 0;
  HEAP32[r18 + 3] = 0;
  HEAP32[r18 + 4] = 0;
  HEAP32[r18 + 5] = 0;
  HEAP32[r18 + 6] = 0;
  HEAP32[r18 + 7] = 0;
  HEAP8[r1 + 60 | 0] = r5 & 1;
  HEAP8[r1 + 61 | 0] = r6 & 1;
  r6 = r16;
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r14, 1, 0, r6);
  r16 = (r14 + 8 | 0) >> 2;
  r5 = HEAP32[r16];
  r18 = r14 + 12 | 0;
  do {
    if ((r5 | 0) == (HEAP32[r18 >> 2] | 0)) {
      r19 = (r14 + 4 | 0) >> 2;
      r20 = HEAP32[r19];
      r21 = r14 | 0;
      r22 = HEAP32[r21 >> 2];
      if (r20 >>> 0 > r22 >>> 0) {
        r23 = r20;
        r24 = (r23 - r22 + 4 >> 2 | 0) / -2 & -1;
        r25 = (r24 << 2) + r20 | 0;
        r26 = r5 - r23 | 0;
        _memmove(r25, r20, r26, 4, 0);
        r23 = ((r26 >> 2) + r24 << 2) + r20 | 0;
        HEAP32[r16] = r23;
        HEAP32[r19] = r25;
        r27 = r23;
        break;
      }
      r23 = r5 - r22 >> 1;
      r25 = (r23 | 0) == 0 ? 1 : r23;
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r13, r25, r25 >>> 2, HEAP32[r14 + 16 >> 2]);
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r13, r20, r5);
      r25 = r13 | 0;
      HEAP32[r21 >> 2] = HEAP32[r25 >> 2];
      HEAP32[r25 >> 2] = r22;
      r22 = r13 + 4 | 0;
      HEAP32[r19] = HEAP32[r22 >> 2];
      HEAP32[r22 >> 2] = r20;
      r20 = r13 + 8 | 0;
      r22 = HEAP32[r20 >> 2];
      HEAP32[r16] = r22;
      HEAP32[r20 >> 2] = r5;
      r20 = r13 + 12 | 0;
      HEAP32[r18 >> 2] = HEAP32[r20 >> 2];
      HEAP32[r20 >> 2] = r5;
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r13);
      r27 = r22;
    } else {
      r27 = r5;
    }
  } while (0);
  if ((r27 | 0) == 0) {
    r28 = 0;
  } else {
    HEAP32[r27 >> 2] = r3;
    r28 = r27;
  }
  HEAP32[r16] = r28 + 4 | 0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE(r2, r14);
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r14);
  r14 = HEAP32[r15];
  r28 = HEAP32[r17 >> 2];
  if (r14 >>> 0 < r28 >>> 0) {
    if ((r14 | 0) == 0) {
      r29 = 0;
    } else {
      HEAP32[r14 >> 2] = r4;
      r29 = HEAP32[r15];
    }
    HEAP32[r15] = r29 + 4 | 0;
    r30 = r1 + 8 | 0, r31 = r30 >> 2;
    HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r31] = HEAP32[tempDoublePtr >> 2], HEAP32[r31 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    r32 = r1 + 16 | 0, r33 = r32 >> 2;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r33] = HEAP32[tempDoublePtr >> 2], HEAP32[r33 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
    STACKTOP = r10;
    return;
  }
  r29 = HEAP32[r7 >> 2];
  r16 = r14 - r29 + 4 >> 2 | 0;
  if (r16 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    r34 = HEAP32[r17 >> 2];
    r35 = HEAP32[r7 >> 2];
  } else {
    r34 = r28;
    r35 = r29;
  }
  r29 = r35;
  r35 = r34 - r29 | 0;
  if (r35 >> 2 >>> 0 > 536870910) {
    r36 = 1073741823;
  } else {
    r34 = r35 >> 1;
    r36 = r34 >>> 0 < r16 >>> 0 ? r16 : r34;
  }
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r12, r36, HEAP32[r15] - r29 >> 2, r6);
  r6 = (r12 + 8 | 0) >> 2;
  r29 = HEAP32[r6];
  r15 = r12 + 12 | 0;
  do {
    if ((r29 | 0) == (HEAP32[r15 >> 2] | 0)) {
      r36 = (r12 + 4 | 0) >> 2;
      r34 = HEAP32[r36];
      r16 = r12 | 0;
      r35 = HEAP32[r16 >> 2];
      if (r34 >>> 0 > r35 >>> 0) {
        r28 = r34;
        r7 = (r28 - r35 + 4 >> 2 | 0) / -2 & -1;
        r17 = (r7 << 2) + r34 | 0;
        r14 = r29 - r28 | 0;
        _memmove(r17, r34, r14, 4, 0);
        r28 = ((r14 >> 2) + r7 << 2) + r34 | 0;
        HEAP32[r6] = r28;
        HEAP32[r36] = r17;
        r37 = r28;
        break;
      }
      r28 = r29 - r35 >> 1;
      r17 = (r28 | 0) == 0 ? 1 : r28;
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r11, r17, r17 >>> 2, HEAP32[r12 + 16 >> 2]);
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r11, r34, r29);
      r17 = r11 | 0;
      HEAP32[r16 >> 2] = HEAP32[r17 >> 2];
      HEAP32[r17 >> 2] = r35;
      r35 = r11 + 4 | 0;
      HEAP32[r36] = HEAP32[r35 >> 2];
      HEAP32[r35 >> 2] = r34;
      r34 = r11 + 8 | 0;
      r35 = HEAP32[r34 >> 2];
      HEAP32[r6] = r35;
      HEAP32[r34 >> 2] = r29;
      r34 = r11 + 12 | 0;
      HEAP32[r15 >> 2] = HEAP32[r34 >> 2];
      HEAP32[r34 >> 2] = r29;
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r11);
      r37 = r35;
    } else {
      r37 = r29;
    }
  } while (0);
  if ((r37 | 0) == 0) {
    r38 = 0;
  } else {
    HEAP32[r37 >> 2] = r4;
    r38 = r37;
  }
  HEAP32[r6] = r38 + 4 | 0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE(r2, r12);
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r12);
  r30 = r1 + 8 | 0, r31 = r30 >> 2;
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r31] = HEAP32[tempDoublePtr >> 2], HEAP32[r31 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r32 = r1 + 16 | 0, r33 = r32 >> 2;
  HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r33] = HEAP32[tempDoublePtr >> 2], HEAP32[r33 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  STACKTOP = r10;
  return;
}
__ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjbbjdd["X"] = 1;
function __ZNSt3__16vectorIjNS_9allocatorIjEEED1Ev(r1) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEED2Ev(r1);
  return;
}
function __ZN5Avoid19NudgingShiftSegmentD1Ev(r1) {
  __ZN5Avoid19NudgingShiftSegmentD2Ev(r1);
  return;
}
function __ZN5Avoid19NudgingShiftSegmentD0Ev(r1) {
  __ZN5Avoid19NudgingShiftSegmentD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid19NudgingShiftSegment8lowPointEv(r1) {
  return HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r1 + 24 >> 2]) + 8 >> 2] + (HEAP32[HEAP32[r1 + 32 >> 2] >> 2] * 24 & -1) | 0;
}
function __ZN5Avoid19NudgingShiftSegment9highPointEv(r1) {
  return HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r1 + 24 >> 2]) + 8 >> 2] + (HEAP32[HEAP32[r1 + 36 >> 2] - 4 >> 2] * 24 & -1) | 0;
}
function __ZNK5Avoid19NudgingShiftSegment8lowPointEv(r1) {
  return HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r1 + 24 >> 2]) + 8 >> 2] + (HEAP32[HEAP32[r1 + 32 >> 2] >> 2] * 24 & -1) | 0;
}
function __ZNK5Avoid19NudgingShiftSegment9highPointEv(r1) {
  return HEAP32[__ZN5Avoid7ConnRef12displayRouteEv(HEAP32[r1 + 24 >> 2]) + 8 >> 2] + (HEAP32[HEAP32[r1 + 36 >> 2] - 4 >> 2] * 24 & -1) | 0;
}
function __ZNK5Avoid19NudgingShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r4 = 0;
  if ((r2 | 0) == 0) {
    r5 = 0;
  } else {
    r5 = ___dynamic_cast(r2, 5272756, 5272736);
  }
  r2 = r3 & 1 ^ 1;
  r3 = r1;
  r6 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r1);
  r7 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r1);
  r3 = r5;
  r8 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r5);
  r9 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r5);
  r3 = __ZNK5Avoid5PointixEj(r6, r2);
  r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = __ZNK5Avoid5PointixEj(r9, r2);
  do {
    if (r10 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r11 = __ZNK5Avoid5PointixEj(r8, r2);
      r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r11 = __ZNK5Avoid5PointixEj(r7, r2);
      if (r12 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r4 = 566;
        break;
      }
      r11 = r1 + 8 | 0;
      r12 = r5 + 16 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      r12 = r5 + 8 | 0;
      r11 = r1 + 16 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      } else {
        r13 = 1;
      }
      return r13;
    } else {
      r4 = 566;
    }
  } while (0);
  do {
    if (r4 == 566) {
      r3 = __ZNK5Avoid5PointixEj(r6, r2);
      r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r3 = __ZNK5Avoid5PointixEj(r9, r2);
      if (r10 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r3 = __ZNK5Avoid5PointixEj(r8, r2);
        r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        r3 = __ZNK5Avoid5PointixEj(r7, r2);
        if (r10 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          break;
        }
      }
      r3 = (r1 + 24 | 0) >> 2;
      r10 = __ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE(__ZNK5Avoid7ConnRef6routerEv(HEAP32[HEAP32[r3] >> 2]), 3);
      r11 = r1 + 8 | 0;
      r12 = r5 + 16 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      r12 = r5 + 8 | 0;
      r11 = r1 + 16 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r12 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) > (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      }
      if (__ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE(__ZNK5Avoid7ConnRef6routerEv(HEAP32[HEAP32[r3] >> 2]), 4) > 0) {
        r13 = 1;
        return r13;
      }
      do {
        if ((HEAP8[r5 + 60 | 0] & 1) << 24 >> 24 != 0) {
          if ((HEAP8[r1 + 60 | 0] & 1) << 24 >> 24 == 0) {
            break;
          } else {
            r13 = r10;
          }
          return r13;
        }
      } while (0);
      do {
        if ((HEAP8[r5 + 61 | 0] & 1) << 24 >> 24 != 0) {
          if ((HEAP8[r1 + 61 | 0] & 1) << 24 >> 24 == 0) {
            break;
          } else {
            r13 = r10;
          }
          return r13;
        }
      } while (0);
      if ((HEAP8[r5 + 45 | 0] & 1) << 24 >> 24 == 0) {
        break;
      }
      if ((HEAP8[r1 + 45 | 0] & 1) << 24 >> 24 == 0) {
        break;
      }
      if ((HEAP32[r5 + 24 >> 2] | 0) == (HEAP32[r3] | 0)) {
        r13 = r10;
      } else {
        break;
      }
      return r13;
    }
  } while (0);
  r13 = 0;
  return r13;
}
__ZNK5Avoid19NudgingShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj["X"] = 1;
function __ZNK5Avoid19NudgingShiftSegment9immovableEv(r1) {
  return __ZNK5Avoid19NudgingShiftSegment6zigzagEv(r1) ^ 1;
}
function __ZN5Avoid19NudgingShiftSegmentD2Ev(r1) {
  HEAP32[r1 >> 2] = 5267520;
  __ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev(r1 + 48 | 0);
  __ZNSt3__16vectorIjNS_9allocatorIjEEED1Ev(r1 + 32 | 0);
  return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEED2Ev(r1) {
  __ZNSt3__113__vector_baseIjNS_9allocatorIjEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L727 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE10push_frontERKj(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L727;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNK5Avoid6VertID15isOrthShapeEdgeEv(r1) {
  return (r1 & 2) << 16 >> 16 != 0;
}
function __ZN5Avoid10PosVertInfC2EdPNS_7VertInfEj(r1, r2, r3, r4) {
  var r5;
  r5 = r1 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 8 >> 2] = r3;
  HEAP32[r1 + 12 >> 2] = r4;
  return;
}
function __ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjj(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 80 | 0;
  r7 = r6;
  r8 = r6 + 20;
  r9 = r6 + 40;
  r10 = r6 + 60;
  __ZN5Avoid12ShiftSegmentC2Ej(r1 | 0, r5);
  HEAP32[r1 >> 2] = 5267520;
  HEAP32[r1 + 24 >> 2] = r2;
  r2 = r1 + 32 | 0;
  r11 = r2 | 0;
  r12 = (r1 + 36 | 0) >> 2;
  r13 = r1 + 40 | 0;
  r14 = r13 | 0;
  r15 = (r1 + 28 | 0) >> 2;
  HEAP32[r15] = 0;
  HEAP32[r15 + 1] = 0;
  HEAP32[r15 + 2] = 0;
  HEAP32[r15 + 3] = 0;
  HEAP8[r1 + 44 | 0] = 1;
  r15 = r1 + 45 | 0;
  for (r16 = r15, r17 = r16 + 17; r16 < r17; r16++) {
    HEAP8[r16] = 0;
  }
  r15 = r13;
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r10, 1, 0, r15);
  r13 = (r10 + 8 | 0) >> 2;
  r16 = HEAP32[r13];
  r17 = r10 + 12 | 0;
  do {
    if ((r16 | 0) == (HEAP32[r17 >> 2] | 0)) {
      r18 = (r10 + 4 | 0) >> 2;
      r19 = HEAP32[r18];
      r20 = r10 | 0;
      r21 = HEAP32[r20 >> 2];
      if (r19 >>> 0 > r21 >>> 0) {
        r22 = r19;
        r23 = (r22 - r21 + 4 >> 2 | 0) / -2 & -1;
        r24 = (r23 << 2) + r19 | 0;
        r25 = r16 - r22 | 0;
        _memmove(r24, r19, r25, 4, 0);
        r22 = ((r25 >> 2) + r23 << 2) + r19 | 0;
        HEAP32[r13] = r22;
        HEAP32[r18] = r24;
        r26 = r22;
        break;
      }
      r22 = r16 - r21 >> 1;
      r24 = (r22 | 0) == 0 ? 1 : r22;
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r9, r24, r24 >>> 2, HEAP32[r10 + 16 >> 2]);
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r9, r19, r16);
      r24 = r9 | 0;
      HEAP32[r20 >> 2] = HEAP32[r24 >> 2];
      HEAP32[r24 >> 2] = r21;
      r21 = r9 + 4 | 0;
      HEAP32[r18] = HEAP32[r21 >> 2];
      HEAP32[r21 >> 2] = r19;
      r19 = r9 + 8 | 0;
      r21 = HEAP32[r19 >> 2];
      HEAP32[r13] = r21;
      HEAP32[r19 >> 2] = r16;
      r19 = r9 + 12 | 0;
      HEAP32[r17 >> 2] = HEAP32[r19 >> 2];
      HEAP32[r19 >> 2] = r16;
      __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r9);
      r26 = r21;
    } else {
      r26 = r16;
    }
  } while (0);
  if ((r26 | 0) == 0) {
    r27 = 0;
  } else {
    HEAP32[r26 >> 2] = r3;
    r27 = r26;
  }
  HEAP32[r13] = r27 + 4 | 0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE(r2, r10);
  __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r10);
  r10 = HEAP32[r12];
  r27 = HEAP32[r14 >> 2];
  if (r10 >>> 0 < r27 >>> 0) {
    if ((r10 | 0) == 0) {
      r28 = 0;
    } else {
      HEAP32[r10 >> 2] = r4;
      r28 = HEAP32[r12];
    }
    HEAP32[r12] = r28 + 4 | 0;
  } else {
    r28 = HEAP32[r11 >> 2];
    r13 = r10 - r28 + 4 >> 2 | 0;
    if (r13 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      r29 = HEAP32[r14 >> 2];
      r30 = HEAP32[r11 >> 2];
    } else {
      r29 = r27;
      r30 = r28;
    }
    r28 = r30;
    r30 = r29 - r28 | 0;
    if (r30 >> 2 >>> 0 > 536870910) {
      r31 = 1073741823;
    } else {
      r29 = r30 >> 1;
      r31 = r29 >>> 0 < r13 >>> 0 ? r13 : r29;
    }
    __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r8, r31, HEAP32[r12] - r28 >> 2, r15);
    r15 = (r8 + 8 | 0) >> 2;
    r28 = HEAP32[r15];
    r12 = r8 + 12 | 0;
    do {
      if ((r28 | 0) == (HEAP32[r12 >> 2] | 0)) {
        r31 = (r8 + 4 | 0) >> 2;
        r29 = HEAP32[r31];
        r13 = r8 | 0;
        r30 = HEAP32[r13 >> 2];
        if (r29 >>> 0 > r30 >>> 0) {
          r27 = r29;
          r11 = (r27 - r30 + 4 >> 2 | 0) / -2 & -1;
          r14 = (r11 << 2) + r29 | 0;
          r10 = r28 - r27 | 0;
          _memmove(r14, r29, r10, 4, 0);
          r27 = ((r10 >> 2) + r11 << 2) + r29 | 0;
          HEAP32[r15] = r27;
          HEAP32[r31] = r14;
          r32 = r27;
          break;
        }
        r27 = r28 - r30 >> 1;
        r14 = (r27 | 0) == 0 ? 1 : r27;
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_(r7, r14, r14 >>> 2, HEAP32[r8 + 16 >> 2]);
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r7, r29, r28);
        r14 = r7 | 0;
        HEAP32[r13 >> 2] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r30;
        r30 = r7 + 4 | 0;
        HEAP32[r31] = HEAP32[r30 >> 2];
        HEAP32[r30 >> 2] = r29;
        r29 = r7 + 8 | 0;
        r30 = HEAP32[r29 >> 2];
        HEAP32[r15] = r30;
        HEAP32[r29 >> 2] = r28;
        r29 = r7 + 12 | 0;
        HEAP32[r12 >> 2] = HEAP32[r29 >> 2];
        HEAP32[r29 >> 2] = r28;
        __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r7);
        r32 = r30;
      } else {
        r32 = r28;
      }
    } while (0);
    if ((r32 | 0) == 0) {
      r33 = 0;
    } else {
      HEAP32[r32 >> 2] = r4;
      r33 = r32;
    }
    HEAP32[r15] = r33 + 4 | 0;
    __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE(r2, r8);
    __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev(r8);
  }
  r8 = r1;
  r2 = __ZN5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 8 >> 2]](r1), r5);
  r33 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = r33, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = __ZN5Avoid5PointixEj(FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 8 >> 2]](r1), r5);
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 16 | 0;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  STACKTOP = r6;
  return;
}
__ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjj["X"] = 1;
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEEC2Ej(r1, r2) {
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endEj(r1, r2);
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      __ZN5Avoid5PointC1Ev(r2 | 0);
      __ZN5Avoid5PointC1Ev(r2 + 24 | 0);
      r4 = HEAP32[r3];
    }
    r5 = r4 + 48 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      r6 = r2 >> 2;
      r7 = r1 >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r7 = (r2 + 24 | 0) >> 2;
      r6 = (r1 + 24 | 0) >> 2;
      HEAP32[r7] = HEAP32[r6];
      HEAP32[r7 + 1] = HEAP32[r6 + 1];
      HEAP32[r7 + 2] = HEAP32[r6 + 2];
      HEAP32[r7 + 3] = HEAP32[r6 + 3];
      HEAP32[r7 + 4] = HEAP32[r6 + 4];
      HEAP32[r7 + 5] = HEAP32[r6 + 5];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 48 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 48 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE10deallocateEv(r1) {
  var r2, r3, r4;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = r1 + 4 | 0;
  HEAP32[r4 >> 2] = r3;
  __ZdlPv(r3);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r2 >> 2] = 0;
  return;
}
function __ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1);
  return;
}
function __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(r1) {
  if ((r1 | 0) == 0) {
    return;
  } else {
    __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 >> 2]);
    __ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(HEAP32[r1 + 4 >> 2]);
    __ZdlPv(r1);
    return;
  }
}
function __ZN5Avoid18SegmentListWrapperD2Ev(r1) {
  __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEED1Ev(r1 | 0);
  return;
}
function __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEED1Ev(r1) {
  __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEED2Ev(r1);
  return;
}
function __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEED2Ev(r1) {
  __ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5clearEv(r1);
  return;
}
function __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r1, r2, r3, r4) {
  __ZN5Avoid10PosVertInfC2EdPNS_7VertInfEj(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid11LineSegment27setLongRangeVisibilityFlagsEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r3 = (r1 + 40 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = r1 + 44 | 0;
  r1 = r5;
  if ((r4 | 0) == (r1 | 0)) {
    r6 = r4;
  } else {
    r7 = (r2 | 0) == 0;
    r8 = r5;
    r5 = r4;
    r4 = 0;
    r9 = 0;
    while (1) {
      r10 = (r4 & 1) << 24 >> 24 != 0;
      do {
        if (r7) {
          r11 = r10 ? 2 : 0;
          if ((r9 & 1) << 24 >> 24 == 0) {
            r12 = r11;
            break;
          }
          r12 = r11 | 1;
        } else {
          r11 = r10 ? 32 : 0;
          if ((r9 & 1) << 24 >> 24 == 0) {
            r12 = r11;
            break;
          }
          r12 = r11 | 16;
        }
      } while (0);
      r10 = r5 + 24 | 0;
      r11 = HEAP32[r10 >> 2] + 136 | 0;
      HEAP32[r11 >> 2] = HEAP32[r11 >> 2] | r12 & 65535;
      r11 = HEAP16[HEAP32[r10 >> 2] + 10 >> 1];
      r10 = __ZNK5Avoid6VertID8isConnPtEv(r11) ? 1 : r4;
      r13 = __ZNK5Avoid6VertID15isOrthShapeEdgeEv(r11) ? 1 : r9;
      r11 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r5 | 0);
      if ((r11 | 0) == (r8 | 0)) {
        break;
      } else {
        r5 = r11;
        r4 = r10;
        r9 = r13;
      }
    }
    r6 = HEAP32[r3];
  }
  if ((r1 | 0) == (r6 | 0)) {
    return;
  }
  if ((r2 | 0) == 0) {
    r2 = r1;
    r6 = 0;
    r9 = 0;
    while (1) {
      r4 = (r6 & 1) << 24 >> 24 != 0 ? 8 : 0;
      r5 = r2 | 0;
      r8 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r5) + 24 >> 2] + 136 | 0;
      HEAP32[r8 >> 2] = HEAP32[r8 >> 2] | ((r9 & 1) << 24 >> 24 == 0 ? r4 : r4 | 4) & 65535;
      r4 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r5);
      r5 = HEAP16[HEAP32[r4 + 24 >> 2] + 10 >> 1];
      r8 = __ZNK5Avoid6VertID8isConnPtEv(r5) ? 1 : r6;
      r12 = __ZNK5Avoid6VertID15isOrthShapeEdgeEv(r5) ? 1 : r9;
      r5 = r4;
      if ((r5 | 0) == (HEAP32[r3] | 0)) {
        break;
      } else {
        r2 = r5;
        r6 = r8;
        r9 = r12;
      }
    }
    return;
  } else {
    r9 = r1;
    r1 = 0;
    r6 = 0;
    while (1) {
      r2 = (r1 & 1) << 24 >> 24 != 0 ? 128 : 0;
      r12 = r9 | 0;
      r8 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r12) + 24 >> 2] + 136 | 0;
      HEAP32[r8 >> 2] = HEAP32[r8 >> 2] | ((r6 & 1) << 24 >> 24 == 0 ? r2 : r2 | 64) & 65535;
      r2 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r12);
      r12 = HEAP16[HEAP32[r2 + 24 >> 2] + 10 >> 1];
      r8 = __ZNK5Avoid6VertID8isConnPtEv(r12) ? 1 : r1;
      r5 = __ZNK5Avoid6VertID15isOrthShapeEdgeEv(r12) ? 1 : r6;
      r12 = r2;
      if ((r12 | 0) == (HEAP32[r3] | 0)) {
        break;
      } else {
        r9 = r12;
        r1 = r8;
        r6 = r5;
      }
    }
    return;
  }
}
__ZN5Avoid11LineSegment27setLongRangeVisibilityFlagsEj["X"] = 1;
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid10PosVertInfltERKS0_(r3, r6)) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 701;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid10PosVertInfltERKS0_(r6, r3)) {
      r4 = 705;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 704;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 705) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 704) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  } else if (r4 == 701) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  }
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(32);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0, r8 = r6 >> 2;
  if ((r6 | 0) != 0) {
    r6 = r3 >> 2;
    HEAP32[r8] = HEAP32[r6];
    HEAP32[r8 + 1] = HEAP32[r6 + 1];
    HEAP32[r8 + 2] = HEAP32[r6 + 2];
    HEAP32[r8 + 3] = HEAP32[r6 + 3];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 89478485) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 * 48 & -1);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = r3 + (r2 * 48 & -1) | 0;
    return;
  }
}
function __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = r2;
  r5 = (r3 - r4 | 0) / 48 & -1;
  r6 = r1 + 8 | 0;
  r7 = r1 | 0;
  r8 = HEAP32[r7 >> 2];
  r9 = r8;
  if (r5 >>> 0 > ((HEAP32[r6 >> 2] - r9 | 0) / 48 & -1) >>> 0) {
    __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE10deallocateEv(r1);
    if (r5 >>> 0 > 89478485) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
    r10 = (HEAP32[r6 >> 2] - HEAP32[r7 >> 2] | 0) / 48 & -1;
    if (r10 >>> 0 > 44739241) {
      r11 = 89478485;
    } else {
      r7 = r10 << 1;
      r11 = r7 >>> 0 < r5 >>> 0 ? r5 : r7;
    }
    __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE8allocateEj(r1, r11);
    __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r2, r3);
    return;
  }
  r11 = r1 + 4 | 0;
  r7 = (HEAP32[r11 >> 2] - r9 | 0) / 48 & -1;
  if (r5 >>> 0 > r7 >>> 0) {
    r12 = 1;
    r13 = r2 + (r7 * 48 & -1) | 0;
  } else {
    r12 = 0;
    r13 = r3;
  }
  if ((r13 | 0) == (r2 | 0)) {
    r14 = r8;
  } else {
    r7 = Math.floor(((r13 - 48 + -r4 | 0) >>> 0) / 48) + 1 | 0;
    r4 = r8;
    r5 = r2;
    while (1) {
      r2 = r4;
      r9 = r5;
      HEAP32[r2 >> 2] = HEAP32[r9 >> 2];
      HEAP32[r2 + 4 >> 2] = HEAP32[r9 + 4 >> 2];
      HEAP32[r2 + 8 >> 2] = HEAP32[r9 + 8 >> 2];
      HEAP32[r2 + 12 >> 2] = HEAP32[r9 + 12 >> 2];
      HEAP32[r2 + 16 >> 2] = HEAP32[r9 + 16 >> 2];
      HEAP16[r2 + 20 >> 1] = HEAP16[r9 + 20 >> 1];
      r9 = r4 + 24 | 0;
      r2 = r5 + 24 | 0;
      HEAP32[r9 >> 2] = HEAP32[r2 >> 2];
      HEAP32[r9 + 4 >> 2] = HEAP32[r2 + 4 >> 2];
      HEAP32[r9 + 8 >> 2] = HEAP32[r2 + 8 >> 2];
      HEAP32[r9 + 12 >> 2] = HEAP32[r2 + 12 >> 2];
      HEAP32[r9 + 16 >> 2] = HEAP32[r2 + 16 >> 2];
      HEAP16[r9 + 20 >> 1] = HEAP16[r2 + 20 >> 1];
      r2 = r5 + 48 | 0;
      if ((r2 | 0) == (r13 | 0)) {
        break;
      } else {
        r4 = r4 + 48 | 0;
        r5 = r2;
      }
    }
    r14 = r8 + (r7 * 48 & -1) | 0;
  }
  if (r12) {
    __ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r1, r13, r3);
    return;
  } else {
    HEAP32[r11 >> 2] = r14;
    return;
  }
}
__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_["X"] = 1;
function __ZN5AvoidL23getPosVertInfDirectionsEPNS_7VertInfEj(r1, r2) {
  var r3, r4, r5;
  r3 = 0;
  do {
    if ((r2 | 0) == 0) {
      r4 = HEAP32[r1 + 120 >> 2] & 12;
      if ((r4 | 0) == 4) {
        r5 = 2;
        break;
      } else if ((r4 | 0) == 12) {
        r5 = 3;
        break;
      } else if ((r4 | 0) == 8) {
        r5 = 1;
        break;
      } else {
        r3 = 747;
        break;
      }
    } else if ((r2 | 0) == 1) {
      r4 = HEAP32[r1 + 120 >> 2] & 3;
      if ((r4 | 0) == 1) {
        r5 = 2;
        break;
      } else if ((r4 | 0) == 3) {
        r5 = 3;
        break;
      } else if ((r4 | 0) == 2) {
        r5 = 1;
        break;
      } else {
        r3 = 747;
        break;
      }
    } else {
      r3 = 747;
    }
  } while (0);
  if (r3 == 747) {
    r5 = 0;
  }
  return r5;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC2ERKS4_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNK5Avoid10PosVertInfltERKS0_(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r1 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r5) {
    r6 = r4 < r5;
    return r6;
  }
  r5 = HEAP32[r1 + 8 >> 2] + 4 | 0;
  r4 = HEAP32[r2 + 8 >> 2] + 4 | 0;
  do {
    if (__ZNK5Avoid6VertIDeqERKS0_(r5, r4)) {
      if (__ZNK5Avoid6VertIDeqERKS0_(r5, 5274184)) {
        r6 = 0;
      } else {
        break;
      }
      return r6;
    }
  } while (0);
  if (__ZNK5Avoid6VertIDneERKS0_(r5, r4)) {
    r6 = __ZNK5Avoid6VertIDltERKS0_(r5, r4);
    return r6;
  } else {
    r6 = HEAP32[r1 + 12 >> 2] >>> 0 < HEAP32[r2 + 12 >> 2] >>> 0;
    return r6;
  }
}
function __ZN5Avoid11LineSegment15horiCommitBeginEPNS_6RouterEPNS_7VertInfE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r5 = r4;
  r6 = r4 + 16;
  r7 = r4 + 20;
  r8 = r4 + 44;
  HEAP32[r6 >> 2] = r3;
  r9 = r1 + 28 | 0;
  if ((r3 | 0) != 0) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r4 + 8, r9, r6);
  }
  do {
    if ((HEAP32[r1 + 36 >> 2] | 0) == 0) {
      r6 = r1 | 0;
      r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    } else {
      r6 = HEAP32[HEAP32[r9 >> 2] + 16 >> 2] + 12 | 0;
      r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r6 = r1 | 0;
      r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r3 != r11) {
        r10 = r11;
        break;
      }
      STACKTOP = r4;
      return;
    }
  } while (0);
  if (r10 == -1.7976931348623157e+308) {
    STACKTOP = r4;
    return;
  }
  r10 = r1 | 0;
  r11 = __Znwj(140);
  r3 = r1 + 16 | 0;
  __ZN5Avoid5PointC1Edd(r7, (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r11, r2, 5274184, r7, 1);
  HEAP32[r8 >> 2] = r11;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r5, r9, r8);
  STACKTOP = r4;
  return;
}
function __ZN5Avoid11LineSegment16horiCommitFinishEPNS_6RouterEPNS_7VertInfE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r5 = r4;
  r6 = r4 + 16;
  r7 = r4 + 20;
  r8 = r4 + 44;
  HEAP32[r6 >> 2] = r3;
  r9 = r1 + 28 | 0;
  if ((r3 | 0) != 0) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r4 + 8, r9, r6);
  }
  do {
    if ((HEAP32[r1 + 36 >> 2] | 0) == 0) {
      r6 = r1 + 8 | 0;
      r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    } else {
      r6 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r1 + 32 | 0) + 16 >> 2] + 12 | 0;
      r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r6 = r1 + 8 | 0;
      r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r3 != r11) {
        r10 = r11;
        break;
      }
      STACKTOP = r4;
      return;
    }
  } while (0);
  if (r10 == 1.7976931348623157e+308) {
    STACKTOP = r4;
    return;
  }
  r10 = r1 + 8 | 0;
  r11 = __Znwj(140);
  r3 = r1 + 16 | 0;
  __ZN5Avoid5PointC1Edd(r7, (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r11, r2, 5274184, r7, 1);
  HEAP32[r8 >> 2] = r11;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r5, r9, r8);
  STACKTOP = r4;
  return;
}
__ZN5Avoid11LineSegment16horiCommitFinishEPNS_6RouterEPNS_7VertInfE["X"] = 1;
function __ZN5Avoid11LineSegment15addSegmentsUpToEd(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r6 = r5;
  r7 = r5 + 8;
  r8 = r2 + 32 | 0;
  r9 = r8;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  r1 = HEAP32[r2 + 28 >> 2];
  if ((r1 | 0) == (r9 | 0)) {
    STACKTOP = r5;
    return;
  }
  r11 = r2 + 40 | 0;
  r2 = r8;
  r8 = r1;
  r1 = r9;
  while (1) {
    r12 = r8 + 16 | 0;
    r13 = HEAP32[r12 >> 2];
    r14 = r13 + 12 | 0;
    r15 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    if (r15 > r3) {
      r4 = 798;
      break;
    }
    __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r7, r15, r13, __ZN5AvoidL23getPosVertInfDirectionsEPNS_7VertInfEj(r13, 0));
    __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r6, r11, r7);
    do {
      if ((r1 | 0) == (r9 | 0)) {
        r13 = HEAP32[r12 >> 2] + 12 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r3) {
          r16 = r9;
          break;
        }
        HEAP32[r10 >> 2] = r8;
        r16 = r8;
      } else {
        r16 = r1;
      }
    } while (0);
    r12 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r8 | 0);
    if ((r12 | 0) == (r2 | 0)) {
      r4 = 796;
      break;
    } else {
      r8 = r12;
      r1 = r16;
    }
  }
  if (r4 == 796) {
    STACKTOP = r5;
    return;
  } else if (r4 == 798) {
    STACKTOP = r5;
    return;
  }
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r2, r5, r3);
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == 0) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r6, r2, r3);
    r3 = r6 | 0;
    r6 = HEAP32[r3 >> 2];
    HEAP32[r3 >> 2] = 0;
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r5 >> 2], r7, r6 | 0);
    r9 = r6;
    r10 = 1;
  } else {
    r9 = r8;
    r10 = 0;
  }
  HEAP32[r1 >> 2] = r9;
  HEAP8[r1 + 4 | 0] = r10;
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = 0;
  r5 = r1 + 4 | 0;
  r1 = r5 | 0;
  r6 = HEAP32[r1 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r2 >> 2] = r5;
    r7 = r1;
    return r7;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = r8 + 16 | 0;
    if (__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(HEAP32[r3 >> 2], HEAP32[r6 >> 2])) {
      r9 = r8 | 0;
      r1 = HEAP32[r9 >> 2];
      if ((r1 | 0) == 0) {
        r4 = 805;
        break;
      } else {
        r8 = r1;
        continue;
      }
    }
    if (!__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(HEAP32[r6 >> 2], HEAP32[r3 >> 2])) {
      r4 = 809;
      break;
    }
    r10 = r8 + 4 | 0;
    r6 = HEAP32[r10 >> 2];
    if ((r6 | 0) == 0) {
      r4 = 808;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 805) {
    HEAP32[r2 >> 2] = r8;
    r7 = r9;
    return r7;
  } else if (r4 == 809) {
    HEAP32[r2 >> 2] = r8;
    r7 = r2;
    return r7;
  } else if (r4 == 808) {
    HEAP32[r2 >> 2] = r8;
    r7 = r10;
    return r7;
  }
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = __Znwj(20);
  r6 = r4 + 4 | 0;
  r7 = r4 | 0;
  HEAP8[r7] = HEAP8[r6];
  HEAP8[r7 + 1 | 0] = HEAP8[r6 + 1 | 0];
  HEAP8[r7 + 2 | 0] = HEAP8[r6 + 2 | 0];
  r6 = r5 + 16 | 0;
  if ((r6 | 0) != 0) {
    HEAP32[r6 >> 2] = HEAP32[r3 >> 2];
  }
  HEAP32[r1 >> 2] = r5;
  HEAP32[r1 + 4 >> 2] = r2 + 4 | 0;
  HEAP8[r1 + 8 | 0] = 1;
  r2 = r1 + 9 | 0;
  HEAP8[r2] = HEAP8[r7];
  HEAP8[r2 + 1 | 0] = HEAP8[r7 + 1 | 0];
  HEAP8[r2 + 2 | 0] = HEAP8[r7 + 2 | 0];
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r1, r2, r3, r4) {
  var r5, r6;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r4 + 4 >> 2] = 0;
  HEAP32[r4 + 8 >> 2] = r2;
  HEAP32[r3 >> 2] = r4;
  r2 = r1 | 0;
  r5 = HEAP32[HEAP32[r2 >> 2] >> 2];
  if ((r5 | 0) == 0) {
    r6 = r4;
  } else {
    HEAP32[r2 >> 2] = r5;
    r6 = HEAP32[r3 >> 2];
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r1 + 4 >> 2], r6);
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
  return;
}
function __ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = (r1 + 12 | 0) >> 2;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 1], HEAPF64[tempDoublePtr >> 3]);
  r5 = (r2 + 12 | 0) >> 2;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r4 == r6) {
      r7 = r4;
      r8 = r6;
    } else {
      r9 = r1 + 20 | 0;
      r10 = r2 + 20 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r7 = r4;
        r8 = r6;
        break;
      }
      ___assert_func(5244520, 754, 5254752, 5249796);
      r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 1], HEAPF64[tempDoublePtr >> 3]);
      r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
    }
  } while (0);
  if (r7 != r8) {
    r11 = r7 < r8;
    return r11;
  }
  r8 = r1 + 20 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = r2 + 20 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r7 != r5) {
    r11 = r7 < r5;
    return r11;
  } else {
    r11 = r1 >>> 0 < r2 >>> 0;
    return r11;
  }
}
function __ZN5Avoid11LineSegment22insertBreakpointsBeginEPNS_6RouterERS0_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r6 = r5;
  r7 = r5 + 8;
  r8 = (r1 + 16 | 0) >> 2;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
  r10 = r3 | 0;
  do {
    if (r9 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r11 = __ZNK5Avoid11LineSegment12beginVertInfEv(r3);
      if ((r11 | 0) == 0) {
        r4 = 836;
        break;
      } else {
        r12 = r11;
        break;
      }
    } else {
      r4 = 836;
    }
  } while (0);
  do {
    if (r4 == 836) {
      r10 = r3 + 8 | 0;
      if (r9 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r12 = 0;
        break;
      }
      r12 = __ZNK5Avoid11LineSegment13finishVertInfEv(r3);
    }
  } while (0);
  __ZN5Avoid11LineSegment15horiCommitBeginEPNS_6RouterEPNS_7VertInfE(r1, r2, r12);
  r12 = HEAP32[r1 + 28 >> 2];
  r2 = r1 + 32 | 0;
  if ((r12 | 0) == (r2 | 0)) {
    STACKTOP = r5;
    return;
  }
  r9 = r1 | 0;
  r1 = r3 + 40 | 0;
  r3 = r2;
  r2 = r12;
  while (1) {
    r12 = HEAP32[r2 + 16 >> 2];
    r4 = r12 + 12 | 0;
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r7, (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]), r12, __ZN5AvoidL23getPosVertInfDirectionsEPNS_7VertInfEj(r12, 1));
      __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r6, r1, r7);
    }
    r12 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
    if ((r12 | 0) == (r3 | 0)) {
      break;
    }
    r2 = r12;
  }
  STACKTOP = r5;
  return;
}
function __ZN5Avoid11LineSegment23insertBreakpointsFinishEPNS_6RouterERS0_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = 0;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r6 = r5;
  r7 = r5 + 8;
  r8 = (r1 + 16 | 0) >> 2;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
  r10 = r3 | 0;
  do {
    if (r9 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      r11 = __ZNK5Avoid11LineSegment12beginVertInfEv(r3);
      if ((r11 | 0) == 0) {
        r4 = 849;
        break;
      } else {
        r12 = r11;
        break;
      }
    } else {
      r4 = 849;
    }
  } while (0);
  do {
    if (r4 == 849) {
      r10 = r3 + 8 | 0;
      if (r9 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r12 = 0;
        break;
      }
      r12 = __ZNK5Avoid11LineSegment13finishVertInfEv(r3);
    }
  } while (0);
  __ZN5Avoid11LineSegment16horiCommitFinishEPNS_6RouterEPNS_7VertInfE(r1, r2, r12);
  r12 = HEAP32[r1 + 28 >> 2];
  r2 = r1 + 32 | 0;
  if ((r12 | 0) == (r2 | 0)) {
    STACKTOP = r5;
    return;
  }
  r9 = r1 + 8 | 0;
  r1 = r3 + 40 | 0;
  r3 = r2;
  r2 = r12;
  while (1) {
    r12 = HEAP32[r2 + 16 >> 2];
    r4 = r12 + 12 | 0;
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
      __ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj(r7, (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]), r12, __ZN5AvoidL23getPosVertInfDirectionsEPNS_7VertInfEj(r12, 1));
      __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(r6, r1, r7);
    }
    r12 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
    if ((r12 | 0) == (r3 | 0)) {
      break;
    }
    r2 = r12;
  }
  STACKTOP = r5;
  return;
}
function __ZN5Avoid11LineSegment33addEdgeHorizontalTillIntersectionEPNS_6RouterERS0_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = r5 + 8;
  r9 = r1 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS4_(r9);
  __ZN5Avoid11LineSegment15horiCommitBeginEPNS_6RouterEPNS_7VertInfE(r2, r3, 0);
  r10 = (r4 + 16 | 0) >> 2;
  __ZN5Avoid11LineSegment15commitPositionXEPNS_6RouterEd(r2, r3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]));
  __ZN5Avoid11LineSegment15addSegmentsUpToEd(r8, r2, (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]));
  r3 = r8 | 0;
  r8 = HEAP32[r3 >> 2];
  r4 = r2 + 28 | 0;
  r11 = r2 + 32 | 0;
  L1054 : do {
    if ((r8 | 0) == (r11 | 0)) {
      r12 = r8;
    } else {
      r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]);
      r14 = r11;
      r15 = r8;
      while (1) {
        r16 = HEAP32[r15 + 16 >> 2] + 12 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) != r13) {
          r12 = r15;
          break L1054;
        }
        r16 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r15 | 0);
        r17 = r16;
        if ((r16 | 0) == (r14 | 0)) {
          r12 = r17;
          break L1054;
        } else {
          r15 = r17;
        }
      }
    }
  } while (0);
  r11 = r1 + 4 | 0;
  if ((r8 | 0) == (r12 | 0)) {
    r18 = r8;
  } else {
    r1 = r8;
    while (1) {
      __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r6, r9, r11, r1 + 16 | 0);
      r8 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r1 | 0);
      if ((r8 | 0) == (r12 | 0)) {
        break;
      } else {
        r1 = r8;
      }
    }
    r18 = HEAP32[r3 >> 2];
  }
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]);
  r10 = r2 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r10 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEESE_(r7, r4, HEAP32[r4 >> 2], r18);
  STACKTOP = r5;
  return;
}
__ZN5Avoid11LineSegment33addEdgeHorizontalTillIntersectionEPNS_6RouterERS0_["X"] = 1;
function __ZN5Avoid11LineSegment15commitPositionXEPNS_6RouterEd(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 36 | 0;
  r5 = r4;
  r6 = r4 + 8, r7 = r6 >> 2;
  r8 = r4 + 12;
  HEAP32[r7] = 0;
  r9 = r1 + 28 | 0;
  r10 = HEAP32[r9 >> 2];
  r11 = r1 + 32 | 0;
  L1067 : do {
    if ((r10 | 0) != (r11 | 0)) {
      r12 = r11;
      r13 = r10;
      while (1) {
        r14 = HEAP32[r13 + 16 >> 2];
        r15 = r14 + 12 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r3) {
          break;
        }
        r15 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r13 | 0);
        if ((r15 | 0) == (r12 | 0)) {
          break L1067;
        } else {
          r13 = r15;
        }
      }
      HEAP32[r7] = r14;
      if ((r14 | 0) == 0) {
        break;
      }
      STACKTOP = r4;
      return;
    }
  } while (0);
  r14 = __Znwj(140);
  r10 = r1 + 16 | 0;
  __ZN5Avoid5PointC1Edd(r8, r3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  __ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb(r14, r2, 5274184, r8, 1);
  HEAP32[r7] = r14;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r5, r9, r6);
  STACKTOP = r4;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEESE_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  if ((r4 | 0) == (r3 | 0)) {
    r7 = r1 | 0;
    HEAP32[r7 >> 2] = r4;
    STACKTOP = r5;
    return;
  }
  r8 = r6 | 0;
  r9 = r3;
  while (1) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r6, r2, r9);
    r3 = HEAP32[r8 >> 2];
    if ((r3 | 0) == (r4 | 0)) {
      break;
    } else {
      r9 = r3;
    }
  }
  r7 = r1 | 0;
  HEAP32[r7 >> 2] = r4;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE(r1, r2, r3) {
  var r4, r5;
  r4 = r3 | 0;
  r5 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(r4);
  HEAP32[r1 >> 2] = r5;
  r1 = r2 | 0;
  if ((HEAP32[r1 >> 2] | 0) == (r3 | 0)) {
    HEAP32[r1 >> 2] = r5;
  }
  r5 = r2 + 8 | 0;
  HEAP32[r5 >> 2] = HEAP32[r5 >> 2] - 1 | 0;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[r2 + 4 >> 2], r4);
  __ZdlPv(r3);
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_(r2, r3, r6, r4);
  r3 = HEAP32[r8 >> 2];
  if ((r3 | 0) != 0) {
    r9 = r3;
    r10 = r1 | 0;
    HEAP32[r10 >> 2] = r9;
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__construct_nodeERKS3_(r7, r2, r4);
  r4 = r7 | 0;
  r7 = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r6 >> 2], r8, r7 | 0);
  r9 = r7;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r6 = r1 + 4 | 0;
  do {
    if ((r6 | 0) != (r2 | 0)) {
      r7 = r2 + 16 | 0;
      if (__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(HEAP32[r4 >> 2], HEAP32[r7 >> 2])) {
        break;
      }
      r8 = r2 | 0;
      if (!__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(HEAP32[r7 >> 2], HEAP32[r4 >> 2])) {
        HEAP32[r5] = r8;
        r9 = r3;
        return r9;
      }
      r7 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r8);
      do {
        if ((r7 | 0) != (r6 | 0)) {
          if (__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(HEAP32[r4 >> 2], HEAP32[r7 + 16 >> 2])) {
            break;
          }
          r9 = __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r3, r4);
          return r9;
        }
      } while (0);
      r10 = r2 + 4 | 0;
      if ((HEAP32[r10 >> 2] | 0) == 0) {
        HEAP32[r5] = r8;
        r9 = r10;
        return r9;
      } else {
        HEAP32[r5] = r7;
        r9 = r7 | 0;
        return r9;
      }
    }
  } while (0);
  do {
    if ((HEAP32[r1 >> 2] | 0) == (r2 | 0)) {
      r11 = r2;
    } else {
      r6 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
      if (__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_(HEAP32[r6 + 16 >> 2], HEAP32[r4 >> 2])) {
        r11 = r6;
        break;
      }
      r9 = __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r3, r4);
      return r9;
    }
  } while (0);
  r4 = r2 | 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    HEAP32[r5] = r2 | 0;
    r9 = r4;
    return r9;
  } else {
    HEAP32[r5] = r11 | 0;
    r9 = r11 + 4 | 0;
    return r9;
  }
}
__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS4_(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC2ERKS4_(r1);
  return;
}
function __ZN5Avoid4NodeD1Ev(r1) {
  return;
}
function __ZNK5Avoid11LineSegment12beginVertInfEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  if ((HEAP32[r1 + 36 >> 2] | 0) == 0) {
    r2 = 0;
    return r2;
  }
  r3 = HEAP32[HEAP32[r1 + 28 >> 2] + 16 >> 2];
  r4 = r3 + 20 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r1 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r3 + 12 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r5 == r6) {
      r4 = r1 + 16 | 0;
      if (r7 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r2 = r3;
      } else {
        break;
      }
      return r2;
    }
  } while (0);
  do {
    if (r7 == r6) {
      r4 = r1 + 16 | 0;
      if (r5 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r2 = r3;
      } else {
        break;
      }
      return r2;
    }
  } while (0);
  r2 = 0;
  return r2;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNK5Avoid11LineSegment8overlapsERKS0_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r1 + 16 | 0;
  r6 = r2 + 16 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r4 == r5 & r7) {
      r6 = r1 + 8 | 0;
      r3 = r2 + 8 | 0;
      if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r8 = 1;
      } else {
        break;
      }
      return r8;
    }
  } while (0);
  do {
    if (r7) {
      do {
        if (r4 >= r5) {
          r3 = r2 + 8 | 0;
          if (r4 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
            break;
          } else {
            r8 = 1;
          }
          return r8;
        }
      } while (0);
      if (r5 < r4) {
        break;
      }
      r3 = r1 + 8 | 0;
      if (r5 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        break;
      } else {
        r8 = 1;
      }
      return r8;
    }
  } while (0);
  r8 = 0;
  return r8;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS7_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC2ERKS7_(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 >> 2] = r2;
  return;
}
function __ZN5Avoid18SegmentListWrapperC2Ev(r1) {
  var r2;
  r2 = r1;
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r2;
  HEAP32[r1 + 8 >> 2] = 0;
  return;
}
function __ZNK5Avoid10CmpNodePosclEPKNS_4NodeES3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 + 16 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 + 16 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r5) {
    r6 = r4 < r5;
    return r6;
  }
  r5 = HEAP32[r1 + 4 >> 2];
  do {
    if ((r5 | 0) == 0) {
      r4 = HEAP32[r1 + 8 >> 2];
      if ((r4 | 0) == 0) {
        r7 = HEAP32[r1 + 12 >> 2];
        break;
      } else {
        r7 = r4;
        break;
      }
    } else {
      r7 = r5;
    }
  } while (0);
  r5 = HEAP32[r2 + 4 >> 2];
  do {
    if ((r5 | 0) == 0) {
      r1 = HEAP32[r2 + 8 >> 2];
      if ((r1 | 0) == 0) {
        r8 = HEAP32[r2 + 12 >> 2];
        break;
      } else {
        r8 = r1;
        break;
      }
    } else {
      r8 = r5;
    }
  } while (0);
  r6 = r7 >>> 0 < r8 >>> 0;
  return r6;
}
function __ZN5Avoid4NodeC2EPNS_7VertInfEd(r1, r2, r3) {
  var r4, r5;
  r4 = r1 >> 2;
  HEAP32[r4] = 5267420;
  HEAP32[r4 + 1] = 0;
  HEAP32[r4 + 2] = r2;
  HEAP32[r4 + 3] = 0;
  r5 = r1 + 16 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r4 + 14] = 0;
  HEAP32[r4 + 15] = 0;
  r4 = r2 + 12 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r1 + 40 | 0;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 24 | 0;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r2 + 20 | 0;
  r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r1 + 48 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r4 = r1 + 32 | 0;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r4 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
function __ZN5Avoid4Node18firstObstacleAboveEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = 0;
  r4 = HEAP32[r1 + 56 >> 2];
  if ((r4 | 0) == 0) {
    r5 = -1.7976931348623157e+308;
    return r5;
  }
  r6 = r1 + 16 | 0;
  r1 = r4;
  while (1) {
    if ((HEAP32[r1 + 12 >> 2] | 0) == 0) {
      r4 = (r2 << 3) + r1 + 40 | 0;
      r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r7 <= (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r5 = r7;
        r3 = 977;
        break;
      }
    }
    r7 = HEAP32[r1 + 56 >> 2];
    if ((r7 | 0) == 0) {
      r5 = -1.7976931348623157e+308;
      r3 = 978;
      break;
    } else {
      r1 = r7;
    }
  }
  if (r3 == 978) {
    return r5;
  } else if (r3 == 977) {
    return r5;
  }
}
function __ZN5Avoid4Node18firstObstacleBelowEj(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = 0;
  r4 = HEAP32[r1 + 60 >> 2];
  if ((r4 | 0) == 0) {
    r5 = 1.7976931348623157e+308;
    return r5;
  }
  r6 = r1 + 16 | 0;
  r1 = r4;
  while (1) {
    if ((HEAP32[r1 + 12 >> 2] | 0) == 0) {
      r4 = (r2 << 3) + r1 + 24 | 0;
      r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      if (r7 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r5 = r7;
        r3 = 987;
        break;
      }
    }
    r7 = HEAP32[r1 + 60 >> 2];
    if ((r7 | 0) == 0) {
      r5 = 1.7976931348623157e+308;
      r3 = 988;
      break;
    } else {
      r1 = r7;
    }
  }
  if (r3 == 988) {
    return r5;
  } else if (r3 == 987) {
    return r5;
  }
}
function __ZN5Avoid4Node22markShiftSegmentsAboveEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = 0;
  r4 = HEAP32[r1 + 56 >> 2];
  if ((r4 | 0) == 0) {
    return;
  }
  r5 = (r2 << 3) + r1 + 24 | 0;
  r1 = r4;
  L1205 : while (1) {
    r4 = HEAP32[r1 + 12 >> 2];
    r2 = r1 + 16 | 0;
    r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    do {
      if ((r4 | 0) == 0) {
        if (r6 <= r2) {
          r3 = 997;
          break L1205;
        }
      } else {
        if (r6 > r2) {
          break;
        }
        r7 = r4 + 16 | 0, r8 = r7 >> 2;
        r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]) < r2 ? r7 : r5;
        r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      }
    } while (0);
    r2 = HEAP32[r1 + 56 >> 2];
    if ((r2 | 0) == 0) {
      r3 = 999;
      break;
    } else {
      r1 = r2;
    }
  }
  if (r3 == 999) {
    return;
  } else if (r3 == 997) {
    return;
  }
}
function __ZNK5Avoid11LineSegment13finishVertInfEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  if ((HEAP32[r1 + 36 >> 2] | 0) == 0) {
    r2 = 0;
    return r2;
  }
  r3 = HEAP32[__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r1 + 32 | 0) + 16 >> 2];
  r4 = r3 + 20 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r1 + 8 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r3 + 12 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  do {
    if (r5 == r6) {
      r4 = r1 + 16 | 0;
      if (r7 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r2 = r3;
      } else {
        break;
      }
      return r2;
    }
  } while (0);
  do {
    if (r7 == r6) {
      r4 = r1 + 16 | 0;
      if (r5 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r2 = r3;
      } else {
        break;
      }
      return r2;
    }
  } while (0);
  r2 = 0;
  return r2;
}
function __ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = r1 | 0;
  r6 = r1;
  r7 = HEAP32[r1 + 4 >> 2];
  do {
    if ((r7 | 0) != (r6 | 0)) {
      r8 = r6;
      r9 = r7;
      while (1) {
        r10 = r9 + 8 | 0;
        do {
          if (__ZNK5Avoid11LineSegment8overlapsERKS0_(r10, r2)) {
            if ((r8 | 0) == (r6 | 0)) {
              __ZN5Avoid11LineSegment13mergeVertInfsERKS0_(r10, r2);
              r11 = r9;
              break;
            } else {
              __ZN5Avoid11LineSegment13mergeVertInfsERKS0_(r10, r8 + 8 | 0);
              __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE(r4, r5, r8);
              r11 = r9;
              break;
            }
          } else {
            r11 = r8;
          }
        } while (0);
        r10 = HEAP32[r9 + 4 >> 2];
        if ((r10 | 0) == (r6 | 0)) {
          break;
        } else {
          r8 = r11;
          r9 = r10;
        }
      }
      if ((r11 | 0) == (r6 | 0)) {
        break;
      } else {
        r12 = r11;
      }
      r13 = r12 + 8 | 0;
      STACKTOP = r3;
      return r13;
    }
  } while (0);
  __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE9push_backERKS2_(r5, r2);
  r12 = HEAP32[r1 >> 2];
  r13 = r12 + 8 | 0;
  STACKTOP = r3;
  return r13;
}
function __ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_(r1, r2, r3, r4, r5, r6, r7) {
  __ZN5Avoid11LineSegmentC2ERKdS2_S2_bPNS_7VertInfES4_(r1, r2, r3, r4, r5, r6, r7);
  return;
}
function __ZN5Avoid11LineSegmentC2ERKdS2_S2_bPNS_7VertInfES4_(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r9 = r8;
  r10 = r8 + 8;
  r11 = r8 + 16;
  r12 = r8 + 20;
  HEAP32[r11 >> 2] = r6;
  HEAP32[r12 >> 2] = r7;
  r13 = (r1 | 0) >> 2;
  HEAPF64[tempDoublePtr >> 3] = r2, HEAP32[r13] = HEAP32[tempDoublePtr >> 2], HEAP32[r13 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = (r1 + 8 | 0) >> 2;
  r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r14 = r1 + 16 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r14 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r14 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP8[r1 + 24 | 0] = r5 & 1;
  r5 = r1 + 28 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS4_(r5);
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_(r1 + 40 | 0);
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]) >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3])) {
    ___assert_func(5244520, 786, 5261484, 5248856);
  }
  if ((r6 | 0) != 0) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r10, r5, r11);
  }
  if ((r7 | 0) == 0) {
    STACKTOP = r8;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r9, r5, r12);
  STACKTOP = r8;
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_(r1) {
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_(r1);
  return;
}
function __ZN5Avoid11LineSegment13mergeVertInfsERKS0_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  r5 = (r1 | 0) >> 2;
  r6 = r2 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
  r8 = r7 < r6 ? r7 : r6;
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = (r1 + 8 | 0) >> 2;
  r8 = r2 + 8 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]);
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = r6 < r7 ? r7 : r6;
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = HEAP32[r2 + 28 >> 2];
  r8 = r2 + 32 | 0;
  r2 = r1 + 28 | 0;
  r6 = r1 + 32 | 0;
  if ((r5 | 0) == (r8 | 0)) {
    STACKTOP = r3;
    return;
  }
  r1 = r8;
  r8 = r5;
  while (1) {
    __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r4, r2, r6, r8 + 16 | 0);
    r5 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r8 | 0);
    if ((r5 | 0) == (r1 | 0)) {
      break;
    } else {
      r8 = r5;
    }
  }
  STACKTOP = r3;
  return;
}
function __ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE9push_backERKS2_(r1, r2) {
  var r3, r4, r5;
  r3 = __Znwj(60);
  r4 = r3;
  r5 = r3 + 8 | 0;
  if ((r5 | 0) != 0) {
    __ZN5Avoid11LineSegmentC1ERKS0_(r5, r2);
  }
  r2 = (r1 | 0) >> 2;
  HEAP32[HEAP32[r2] + 4 >> 2] = r4;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r2] = r4;
  HEAP32[r3 + 4 >> 2] = r1;
  r3 = r1 + 8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] + 1 | 0;
  return;
}
function __ZN5Avoid11LineSegmentC1ERKS0_(r1, r2) {
  __ZN5Avoid11LineSegmentC2ERKS0_(r1, r2);
  return;
}
function __ZN5Avoid11LineSegmentC2ERKS0_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r1 | 0;
  r7 = r2 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r6 = r1 + 8 | 0;
  r8 = r2 + 8 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r6 = r1 + 16 | 0;
  r7 = r2 + 16 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP8[r1 + 24 | 0] = HEAP8[r2 + 24 | 0] & 1;
  r6 = r1 + 28 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS7_(r6);
  r8 = HEAP32[r2 + 28 >> 2];
  r7 = r2 + 32 | 0;
  r9 = r1 + 32 | 0;
  L1268 : do {
    if ((r8 | 0) != (r7 | 0)) {
      r10 = r7;
      r11 = r8;
      while (1) {
        __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_(r5, r6, r9, r11 + 16 | 0);
        r12 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r11 | 0);
        if ((r12 | 0) == (r10 | 0)) {
          break L1268;
        } else {
          r11 = r12;
        }
      }
    }
  } while (0);
  r9 = r1 + 40 | 0;
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS7_(r9);
  r6 = HEAP32[r2 + 40 >> 2];
  r5 = r2 + 44 | 0;
  r2 = r1 + 44 | 0;
  if ((r6 | 0) == (r5 | 0)) {
    STACKTOP = r3;
    return;
  }
  r1 = r5;
  r5 = r6;
  while (1) {
    __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_PvEEiEERKS2_(r4, r9, r2, r5 + 16 | 0);
    r6 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r5 | 0);
    if ((r6 | 0) == (r1 | 0)) {
      break;
    } else {
      r5 = r6;
    }
  }
  STACKTOP = r3;
  return;
}
__ZN5Avoid11LineSegmentC2ERKS0_["X"] = 1;
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS7_(r1) {
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS7_(r1);
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_PvEEiEERKS2_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r6 = r5;
  r7 = r5 + 4;
  r8 = __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_SA_EEiEESD_RKT_(r2, r3, r6, r4);
  r3 = HEAP32[r8 >> 2];
  if ((r3 | 0) != 0) {
    r9 = r3;
    r10 = r1 | 0;
    HEAP32[r10 >> 2] = r9;
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_(r7, r2, r4);
  r4 = r7 | 0;
  r7 = HEAP32[r4 >> 2];
  HEAP32[r4 >> 2] = 0;
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(r2, HEAP32[r6 >> 2], r8, r7 | 0);
  r9 = r7;
  r10 = r1 | 0;
  HEAP32[r10 >> 2] = r9;
  STACKTOP = r5;
  return;
}
function __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_SA_EEiEESD_RKT_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r6 = r1 + 4 | 0;
  do {
    if ((r6 | 0) != (r2 | 0)) {
      r7 = r2 + 16 | 0;
      if (__ZNK5Avoid10PosVertInfltERKS0_(r4, r7)) {
        break;
      }
      r8 = r2 | 0;
      if (!__ZNK5Avoid10PosVertInfltERKS0_(r7, r4)) {
        HEAP32[r5] = r8;
        r9 = r3;
        return r9;
      }
      r7 = __ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_(r8);
      do {
        if ((r7 | 0) != (r6 | 0)) {
          if (__ZNK5Avoid10PosVertInfltERKS0_(r4, r7 + 16 | 0)) {
            break;
          }
          r9 = __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r3, r4);
          return r9;
        }
      } while (0);
      r10 = r2 + 4 | 0;
      if ((HEAP32[r10 >> 2] | 0) == 0) {
        HEAP32[r5] = r8;
        r9 = r10;
        return r9;
      } else {
        HEAP32[r5] = r7;
        r9 = r7 | 0;
        return r9;
      }
    }
  } while (0);
  do {
    if ((HEAP32[r1 >> 2] | 0) == (r2 | 0)) {
      r11 = r2;
    } else {
      r6 = __ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_(r2 | 0);
      if (__ZNK5Avoid10PosVertInfltERKS0_(r6 + 16 | 0, r4)) {
        r11 = r6;
        break;
      }
      r9 = __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(r1, r3, r4);
      return r9;
    }
  } while (0);
  r4 = r2 | 0;
  if ((HEAP32[r4 >> 2] | 0) == 0) {
    HEAP32[r5] = r2 | 0;
    r9 = r4;
    return r9;
  } else {
    HEAP32[r5] = r11 | 0;
    r9 = r11 + 4 | 0;
    return r9;
  }
}
__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_SA_EEiEESD_RKT_["X"] = 1;
function __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS7_(r1) {
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC2ERKS7_(r1);
  return;
}
function __ZN5Avoid11LineSegmentC1ERKdS2_PNS_7VertInfE(r1, r2, r3, r4) {
  __ZN5Avoid11LineSegmentC2ERKdS2_PNS_7VertInfE(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid11LineSegmentC2ERKdS2_PNS_7VertInfE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r6 = r5;
  r7 = r5 + 8;
  HEAP32[r7 >> 2] = r4;
  r8 = r1 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r8 = r1 + 8 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r8 = r1 + 16 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP8[r1 + 24 | 0] = 0;
  r8 = r1 + 28 | 0;
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS4_(r8);
  __ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_(r1 + 40 | 0);
  if ((r4 | 0) == 0) {
    STACKTOP = r5;
    return;
  }
  __ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_(r6, r8, r7);
  STACKTOP = r5;
  return;
}
function __ZN5Avoid4NodeC1EPNS_8ObstacleEd(r1, r2, r3) {
  __ZN5Avoid4NodeC2EPNS_8ObstacleEd(r1, r2, r3);
  return;
}
function __ZN5Avoid4NodeC2EPNS_8ObstacleEd(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = r1 >> 2;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r6 = r5;
  HEAP32[r4] = 5267420;
  HEAP32[r4 + 1] = r2;
  HEAP32[r4 + 2] = 0;
  HEAP32[r4 + 3] = 0;
  r7 = r1 + 16 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r4 + 14] = 0;
  HEAP32[r4 + 15] = 0;
  __ZNK5Avoid8Obstacle10routingBoxEv(r6, r2);
  r2 = r6 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 24 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r6 + 8 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 32 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r6 + 24 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 40 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r6 + 32 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 48 | 0;
  HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  STACKTOP = r5;
  return;
}
function __ZN5Avoid4NodeC1EPNS_7VertInfEd(r1, r2, r3) {
  __ZN5Avoid4NodeC2EPNS_7VertInfEd(r1, r2, r3);
  return;
}
function __ZN5Avoid4NodeC1EPNS_12ShiftSegmentEd(r1, r2, r3) {
  __ZN5Avoid4NodeC2EPNS_12ShiftSegmentEd(r1, r2, r3);
  return;
}
function __ZN5Avoid4NodeC2EPNS_12ShiftSegmentEd(r1, r2, r3) {
  HEAP32[r1 >> 2] = 5267420;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 + 12 >> 2] = r2;
  r2 = r1 + 16 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = r1 + 24 | 0;
  for (r1 = r2 >> 2, r3 = r1 + 10; r1 < r3; r1++) {
    HEAP32[r1] = 0;
  }
  return;
}
function __ZN5Avoid4NodeD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZN5Avoid4Node22markShiftSegmentsBelowEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = 0;
  r4 = HEAP32[r1 + 60 >> 2];
  if ((r4 | 0) == 0) {
    return;
  }
  r5 = (r2 << 3) + r1 + 40 | 0;
  r1 = r4;
  L1333 : while (1) {
    r4 = HEAP32[r1 + 12 >> 2];
    r2 = r1 + 16 | 0;
    r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    do {
      if ((r4 | 0) == 0) {
        if (r6 >= r2) {
          r3 = 1112;
          break L1333;
        }
      } else {
        if (r6 < r2) {
          break;
        }
        r7 = r4 + 8 | 0, r8 = r7 >> 2;
        r9 = r2 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]) ? r7 : r5;
        r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
        HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
      }
    } while (0);
    r2 = HEAP32[r1 + 60 >> 2];
    if ((r2 | 0) == 0) {
      r3 = 1113;
      break;
    } else {
      r1 = r2;
    }
  }
  if (r3 == 1112) {
    return;
  } else if (r3 == 1113) {
    return;
  }
}
function __ZN5Avoid4Node27findFirstPointAboveAndBelowEjdRdS1_S1_S1_(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30;
  r8 = r7 >> 2;
  r7 = r6 >> 2;
  r9 = r5 >> 2;
  r10 = r4 >> 2;
  r11 = 0;
  HEAPF64[tempDoublePtr >> 3] = -1.7976931348623157e+308, HEAP32[r10] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAPF64[tempDoublePtr >> 3] = 1.7976931348623157e+308, HEAP32[r9] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r12 = ((r2 << 3) + r1 + 40 | 0) >> 2;
  r13 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r13 = ((r2 << 3) + r1 + 24 | 0) >> 2;
  r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r14, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r14 = r1 + 56 | 0;
  r15 = r1 + 60 | 0;
  r16 = (r2 | 0) == 0 & 1;
  r17 = ((r16 << 3) + r1 + 40 | 0) >> 2;
  r18 = ((r16 << 3) + r1 + 24 | 0) >> 2;
  r1 = 0;
  while (1) {
    r19 = (r1 | 0) == 0;
    r20 = HEAP32[(r19 ? r14 : r15) >> 2];
    L1346 : do {
      if ((r20 | 0) != 0) {
        if (r19) {
          r21 = r20;
          while (1) {
            do {
              if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]) == r3) {
                r22 = (r16 << 3) + r21 + 40 | 0;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r3) {
                  r23 = 1;
                  break;
                } else {
                  r11 = 1120;
                  break;
                }
              } else {
                r11 = 1120;
              }
            } while (0);
            do {
              if (r11 == 1120) {
                r11 = 0;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]) != r3) {
                  r23 = 0;
                  break;
                }
                r22 = (r16 << 3) + r21 + 24 | 0;
                r23 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r3;
              }
            } while (0);
            r22 = (r2 << 3) + r21 + 40 | 0, r24 = r22 >> 2;
            r25 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r24], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 1], HEAPF64[tempDoublePtr >> 3]);
            do {
              if (r25 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3])) {
                r26 = (r2 << 3) + r21 + 24 | 0;
                r27 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r26 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r26 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                if (r27 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3])) {
                  r28 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 1], HEAPF64[tempDoublePtr >> 3]) < r27 ? r5 : r26;
                  r29 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r28 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r28 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  HEAPF64[tempDoublePtr >> 3] = r29, HEAP32[r9] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                  break;
                }
                if (r23) {
                  break;
                }
                r29 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]) < r27 ? r6 : r26;
                r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r29 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r29 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                HEAPF64[tempDoublePtr >> 3] = r26, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r24], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r24 + 1], HEAPF64[tempDoublePtr >> 3]);
                r29 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
                r27 = r26 < r29 ? r29 : r26;
                HEAPF64[tempDoublePtr >> 3] = r27, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              } else {
                r27 = r25 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]) ? r4 : r22;
                r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                HEAPF64[tempDoublePtr >> 3] = r26, HEAP32[r10] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              }
            } while (0);
            r22 = HEAP32[r21 + 56 >> 2];
            if ((r22 | 0) == 0) {
              break L1346;
            } else {
              r21 = r22;
            }
          }
        } else {
          r21 = r20;
          while (1) {
            do {
              if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r17], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 1], HEAPF64[tempDoublePtr >> 3]) == r3) {
                r22 = (r16 << 3) + r21 + 40 | 0;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r3) {
                  r30 = 1;
                  break;
                } else {
                  r11 = 1131;
                  break;
                }
              } else {
                r11 = 1131;
              }
            } while (0);
            do {
              if (r11 == 1131) {
                r11 = 0;
                if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r18], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r18 + 1], HEAPF64[tempDoublePtr >> 3]) != r3) {
                  r30 = 0;
                  break;
                }
                r22 = (r16 << 3) + r21 + 24 | 0;
                r30 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r22 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r22 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) == r3;
              }
            } while (0);
            r22 = (r2 << 3) + r21 + 40 | 0, r25 = r22 >> 2;
            r24 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r25], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 1], HEAPF64[tempDoublePtr >> 3]);
            do {
              if (r24 > (HEAP32[tempDoublePtr >> 2] = HEAP32[r13], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 1], HEAPF64[tempDoublePtr >> 3])) {
                r26 = (r2 << 3) + r21 + 24 | 0;
                r27 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r26 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r26 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                if (r27 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r12], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r12 + 1], HEAPF64[tempDoublePtr >> 3])) {
                  r29 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 1], HEAPF64[tempDoublePtr >> 3]) < r27 ? r5 : r26;
                  r28 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r29 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r29 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                  HEAPF64[tempDoublePtr >> 3] = r28, HEAP32[r9] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                  break;
                }
                if (r30) {
                  break;
                }
                r28 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 1], HEAPF64[tempDoublePtr >> 3]) < r27 ? r6 : r26;
                r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r28 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r28 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                HEAPF64[tempDoublePtr >> 3] = r26, HEAP32[r7] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
                r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r25], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r25 + 1], HEAPF64[tempDoublePtr >> 3]);
                r28 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r8], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 1], HEAPF64[tempDoublePtr >> 3]);
                r27 = r26 < r28 ? r28 : r26;
                HEAPF64[tempDoublePtr >> 3] = r27, HEAP32[r8] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              } else {
                r27 = r24 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r10], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 1], HEAPF64[tempDoublePtr >> 3]) ? r4 : r22;
                r26 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r27 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r27 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
                HEAPF64[tempDoublePtr >> 3] = r26, HEAP32[r10] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
              }
            } while (0);
            r22 = HEAP32[r21 + 60 >> 2];
            if ((r22 | 0) == 0) {
              break L1346;
            } else {
              r21 = r22;
            }
          }
        }
      }
    } while (0);
    r20 = r1 + 1 | 0;
    if ((r20 | 0) == 2) {
      break;
    } else {
      r1 = r20;
    }
  }
  return;
}
__ZN5Avoid4Node27findFirstPointAboveAndBelowEjdRdS1_S1_S1_["X"] = 1;
function __ZN5Avoid4Node15firstPointAboveEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = 0;
  r4 = r2 & 1 ^ 1;
  r5 = HEAP32[r1 + 56 >> 2];
  if ((r5 | 0) == 0) {
    r6 = -1.7976931348623157e+308;
    return r6;
  }
  r7 = (r4 << 3) + r1 + 24 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r1 + 16 | 0;
  r1 = -1.7976931348623157e+308;
  r9 = r5;
  L1387 : while (1) {
    r5 = r9;
    L1389 : while (1) {
      r10 = (r4 << 3) + r5 + 24 | 0;
      do {
        if (r8 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          r11 = (r4 << 3) + r5 + 40 | 0;
          if (r8 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
            break;
          }
          r11 = (r2 << 3) + r5 + 40 | 0;
          r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          if (r12 <= (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
            break L1389;
          }
        }
      } while (0);
      r10 = HEAP32[r5 + 56 >> 2];
      if ((r10 | 0) == 0) {
        r6 = r1;
        r3 = 1153;
        break L1387;
      } else {
        r5 = r10;
      }
    }
    r10 = r12 < r1 ? r1 : r12;
    r11 = HEAP32[r5 + 56 >> 2];
    if ((r11 | 0) == 0) {
      r6 = r10;
      r3 = 1152;
      break;
    } else {
      r1 = r10;
      r9 = r11;
    }
  }
  if (r3 == 1152) {
    return r6;
  } else if (r3 == 1153) {
    return r6;
  }
}
function __ZN5Avoid4Node15firstPointBelowEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = 0;
  r4 = r2 & 1 ^ 1;
  r5 = HEAP32[r1 + 60 >> 2];
  if ((r5 | 0) == 0) {
    r6 = 1.7976931348623157e+308;
    return r6;
  }
  r7 = (r4 << 3) + r1 + 24 | 0;
  r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r7 = r1 + 16 | 0;
  r1 = 1.7976931348623157e+308;
  r9 = r5;
  L1403 : while (1) {
    r5 = r9;
    L1405 : while (1) {
      r10 = (r4 << 3) + r5 + 24 | 0;
      do {
        if (r8 != (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          r11 = (r4 << 3) + r5 + 40 | 0;
          if (r8 == (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
            break;
          }
          r11 = (r2 << 3) + r5 + 24 | 0;
          r12 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r11 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r11 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          if (r12 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
            break L1405;
          }
        }
      } while (0);
      r10 = HEAP32[r5 + 60 >> 2];
      if ((r10 | 0) == 0) {
        r6 = r1;
        r3 = 1165;
        break L1403;
      } else {
        r5 = r10;
      }
    }
    r10 = r1 < r12 ? r1 : r12;
    r11 = HEAP32[r5 + 60 >> 2];
    if ((r11 | 0) == 0) {
      r6 = r10;
      r3 = 1163;
      break;
    } else {
      r1 = r10;
      r9 = r11;
    }
  }
  if (r3 == 1163) {
    return r6;
  } else if (r3 == 1165) {
    return r6;
  }
}
function __ZN5Avoid4Node13isInsideShapeEj(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = 0;
  r3 = HEAP32[r1 + 60 >> 2];
  L1416 : do {
    if ((r3 | 0) != 0) {
      r4 = r1 + 16 | 0;
      r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
      r4 = r3;
      while (1) {
        r6 = r4 + 24 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < r5) {
          r6 = r4 + 40 | 0;
          if (r5 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
            r7 = 1;
            break;
          }
        }
        r6 = HEAP32[r4 + 60 >> 2];
        if ((r6 | 0) == 0) {
          break L1416;
        } else {
          r4 = r6;
        }
      }
      return r7;
    }
  } while (0);
  r3 = HEAP32[r1 + 56 >> 2];
  if ((r3 | 0) == 0) {
    r7 = 0;
    return r7;
  }
  r4 = r1 + 16 | 0;
  r1 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r3;
  while (1) {
    r3 = r4 + 24 | 0;
    if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < r1) {
      r3 = r4 + 40 | 0;
      if (r1 < (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
        r7 = 1;
        r2 = 1179;
        break;
      }
    }
    r3 = HEAP32[r4 + 56 >> 2];
    if ((r3 | 0) == 0) {
      r7 = 0;
      r2 = 1180;
      break;
    } else {
      r4 = r3;
    }
  }
  if (r2 == 1180) {
    return r7;
  } else if (r2 == 1179) {
    return r7;
  }
}
function __ZN5Avoid5EventC2ENS_9EventTypeEPNS_4NodeEd(r1, r2, r3, r4) {
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  r3 = r1 + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
function __ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd(r1, r2, r3, r4) {
  __ZN5Avoid5EventC2ENS_9EventTypeEPNS_4NodeEd(r1, r2, r3, r4);
  return;
}
function __ZN5Avoid14compare_eventsEPKvS1_(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = HEAP32[r1 >> 2];
  r1 = HEAP32[r2 >> 2];
  r2 = r3 + 8 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 8 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r4 != r5) {
    r6 = r4 < r5 ? -1 : 1;
    return r6;
  }
  r5 = HEAP32[r3 >> 2];
  r4 = HEAP32[r1 >> 2];
  if ((r5 | 0) != (r4 | 0)) {
    r6 = r5 - r4 | 0;
    return r6;
  }
  r4 = r3 + 4 | 0;
  r3 = HEAP32[r4 >> 2];
  r5 = r1 + 4 | 0;
  r1 = HEAP32[r5 >> 2];
  if ((r3 | 0) == (r1 | 0)) {
    ___assert_func(5244380, 304, 5261304, 5248572);
    r7 = HEAP32[r4 >> 2];
    r8 = HEAP32[r5 >> 2];
  } else {
    r7 = r3;
    r8 = r1;
  }
  r6 = (r7 - r8 | 0) / 68 & -1;
  return r6;
}
function __ZN5Avoid34buildConnectorRouteCheckpointCacheEPNS_6RouterE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 176 | 0;
  r4 = r3 + 24;
  r5 = r3 + 44;
  r6 = r3 + 64;
  r7 = r3 + 84;
  r8 = r3 + 104;
  r9 = r3 + 116;
  r10 = HEAP32[r1 + 20 >> 2];
  r11 = r1 + 16 | 0;
  if ((r10 | 0) == (r11 | 0)) {
    STACKTOP = r3;
    return;
  }
  r1 = r8;
  r12 = r9 | 0;
  r13 = r9 + 4 | 0;
  r14 = r9 + 8 | 0;
  r15 = (r8 + 4 | 0) >> 2;
  r16 = (r8 | 0) >> 2;
  r8 = r3 + 128 >> 2;
  r17 = (r5 + 8 | 0) >> 2;
  r18 = r5 + 12 | 0;
  r19 = (r5 + 4 | 0) >> 2;
  r20 = r5 | 0;
  r21 = r5 + 16 | 0;
  r22 = r4 | 0;
  r23 = r4 + 4 | 0;
  r24 = r4 + 8 | 0;
  r25 = r4 + 12 | 0;
  r26 = r3, r27 = r26 >> 2;
  r28 = r3 + 152 >> 2;
  r29 = (r7 + 8 | 0) >> 2;
  r30 = r7 + 12 | 0;
  r31 = (r7 + 4 | 0) >> 2;
  r32 = r7 | 0;
  r33 = r7 + 16 | 0;
  r34 = r6 | 0;
  r35 = r6 + 4 | 0;
  r36 = r6 + 8 | 0;
  r37 = r6 + 12 | 0;
  r38 = r10;
  while (1) {
    r10 = HEAP32[r38 + 8 >> 2];
    r39 = r10;
    if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r10 + 8 >> 2]) | 0) == 2) {
      r10 = __ZN5Avoid7ConnRef12displayRouteEv(r39);
      __ZNK5Avoid7ConnRef18routingCheckpointsEv(r1, r39);
      r39 = r10 + 32 | 0;
      HEAP32[r12 >> 2] = 0;
      HEAP32[r13 >> 2] = 0;
      HEAP32[r14 >> 2] = 0;
      if ((r39 | 0) != (r9 | 0)) {
        __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_(r39, 0, 0);
      }
      __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED1Ev(r9);
      r40 = r10;
      r41 = r10 + 8 | 0;
      r42 = (r10 + 36 | 0) >> 2;
      r43 = r10 + 40 | 0;
      r44 = (r43 | 0) >> 2;
      r45 = r43;
      r43 = (r39 | 0) >> 2;
      r46 = 0;
      while (1) {
        if (r46 >>> 0 >= FUNCTION_TABLE[HEAP32[HEAP32[r40 >> 2] + 16 >> 2]](r10) >>> 0) {
          break;
        }
        r47 = HEAP32[r15];
        r48 = HEAP32[r16];
        L1466 : do {
          if ((r46 | 0) == 0) {
            r49 = r47;
            r50 = r48;
            r2 = 1237;
          } else {
            if ((r47 | 0) == (r48 | 0)) {
              break;
            }
            r51 = r46 - 1 | 0;
            r52 = (r46 << 1) - 1 | 0;
            r53 = 0;
            r54 = r48;
            while (1) {
              r55 = HEAP32[r41 >> 2];
              do {
                if (__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d(r55 + (r51 * 24 & -1) | 0, r55 + (r46 * 24 & -1) | 0, (r53 << 5) + r54 | 0, 0)) {
                  r56 = ((r53 << 5) + HEAP32[r16] | 0) >> 2;
                  HEAP32[r8] = HEAP32[r56];
                  HEAP32[r8 + 1] = HEAP32[r56 + 1];
                  HEAP32[r8 + 2] = HEAP32[r56 + 2];
                  HEAP32[r8 + 3] = HEAP32[r56 + 3];
                  HEAP32[r8 + 4] = HEAP32[r56 + 4];
                  HEAP32[r8 + 5] = HEAP32[r56 + 5];
                  r56 = HEAP32[r42];
                  r57 = HEAP32[r44];
                  if (r56 >>> 0 < r57 >>> 0) {
                    if ((r56 | 0) == 0) {
                      r58 = 0;
                    } else {
                      HEAP32[r56 >> 2] = r52;
                      r59 = (r56 + 4 | 0) >> 2;
                      HEAP32[r59] = HEAP32[r8];
                      HEAP32[r59 + 1] = HEAP32[r8 + 1];
                      HEAP32[r59 + 2] = HEAP32[r8 + 2];
                      HEAP32[r59 + 3] = HEAP32[r8 + 3];
                      HEAP32[r59 + 4] = HEAP32[r8 + 4];
                      HEAP32[r59 + 5] = HEAP32[r8 + 5];
                      r58 = HEAP32[r42];
                    }
                    HEAP32[r42] = r58 + 28 | 0;
                    break;
                  }
                  r59 = HEAP32[r43];
                  r60 = ((r56 - r59 | 0) / 28 & -1) + 1 | 0;
                  if (r60 >>> 0 > 153391689) {
                    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                    r61 = HEAP32[r44];
                    r62 = HEAP32[r43];
                  } else {
                    r61 = r57;
                    r62 = r59;
                  }
                  r59 = r62;
                  r57 = (r61 - r59 | 0) / 28 & -1;
                  if (r57 >>> 0 > 76695843) {
                    r63 = 153391689;
                  } else {
                    r56 = r57 << 1;
                    r63 = r56 >>> 0 < r60 >>> 0 ? r60 : r56;
                  }
                  __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_(r5, r63, (HEAP32[r42] - r59 | 0) / 28 & -1, r45);
                  r59 = HEAP32[r17];
                  do {
                    if ((r59 | 0) == (HEAP32[r18 >> 2] | 0)) {
                      r56 = HEAP32[r19];
                      r60 = r56;
                      r57 = HEAP32[r20 >> 2];
                      if (r56 >>> 0 <= r57 >>> 0) {
                        r64 = ((r59 - r57 | 0) / 28 & -1) << 1;
                        r65 = (r64 | 0) == 0 ? 1 : r64;
                        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_(r4, r65, r65 >>> 2, HEAP32[r21 >> 2]);
                        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_(r4, r56, r59);
                        HEAP32[r20 >> 2] = HEAP32[r22 >> 2];
                        HEAP32[r22 >> 2] = r57;
                        HEAP32[r19] = HEAP32[r23 >> 2];
                        HEAP32[r23 >> 2] = r56;
                        r65 = HEAP32[r24 >> 2];
                        HEAP32[r17] = r65;
                        HEAP32[r24 >> 2] = r59;
                        HEAP32[r18 >> 2] = HEAP32[r25 >> 2];
                        HEAP32[r25 >> 2] = r59;
                        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev(r4);
                        r66 = r65;
                        break;
                      }
                      r65 = (((r60 - r57 | 0) / 28 & -1) + 1 | 0) / -2 & -1;
                      r57 = r56 + (r65 * 28 & -1) | 0;
                      if ((r56 | 0) == (r59 | 0)) {
                        r67 = r57;
                        r68 = r59;
                      } else {
                        r64 = r65 + Math.floor(((r59 - 28 + -r60 | 0) >>> 0) / 28) | 0;
                        r60 = r57;
                        r57 = r56;
                        while (1) {
                          HEAP32[r60 >> 2] = HEAP32[r57 >> 2];
                          r69 = r60 + 4 | 0;
                          r70 = r57 + 4 | 0;
                          HEAP32[r69 >> 2] = HEAP32[r70 >> 2];
                          HEAP32[r69 + 4 >> 2] = HEAP32[r70 + 4 >> 2];
                          HEAP32[r69 + 8 >> 2] = HEAP32[r70 + 8 >> 2];
                          HEAP32[r69 + 12 >> 2] = HEAP32[r70 + 12 >> 2];
                          HEAP32[r69 + 16 >> 2] = HEAP32[r70 + 16 >> 2];
                          HEAP16[r69 + 20 >> 1] = HEAP16[r70 + 20 >> 1];
                          r70 = r57 + 28 | 0;
                          if ((r70 | 0) == (r59 | 0)) {
                            break;
                          } else {
                            r60 = r60 + 28 | 0;
                            r57 = r70;
                          }
                        }
                        r67 = r56 + ((r64 + 1) * 28 & -1) | 0;
                        r68 = HEAP32[r19];
                      }
                      HEAP32[r17] = r67;
                      HEAP32[r19] = r68 + (r65 * 28 & -1) | 0;
                      r66 = r67;
                    } else {
                      r66 = r59;
                    }
                  } while (0);
                  if ((r66 | 0) == 0) {
                    r71 = 0;
                  } else {
                    HEAP32[r66 >> 2] = r52;
                    r59 = (r66 + 4 | 0) >> 2;
                    HEAP32[r59] = HEAP32[r8];
                    HEAP32[r59 + 1] = HEAP32[r8 + 1];
                    HEAP32[r59 + 2] = HEAP32[r8 + 2];
                    HEAP32[r59 + 3] = HEAP32[r8 + 3];
                    HEAP32[r59 + 4] = HEAP32[r8 + 4];
                    HEAP32[r59 + 5] = HEAP32[r8 + 5];
                    r71 = HEAP32[r17];
                  }
                  HEAP32[r17] = r71 + 28 | 0;
                  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE(r39, r5);
                  __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev(r5);
                }
              } while (0);
              r55 = r53 + 1 | 0;
              r59 = HEAP32[r15];
              r57 = HEAP32[r16];
              if (r55 >>> 0 < r59 - r57 >> 5 >>> 0) {
                r53 = r55;
                r54 = r57;
              } else {
                r49 = r59;
                r50 = r57;
                r2 = 1237;
                break L1466;
              }
            }
          }
        } while (0);
        L1506 : do {
          if (r2 == 1237) {
            r2 = 0;
            if ((r49 | 0) == (r50 | 0)) {
              break;
            }
            r48 = r46 << 1;
            r47 = 0;
            r54 = r50;
            r53 = r49;
            while (1) {
              r52 = (r47 << 5) + r54 | 0;
              do {
                if (__ZNK5Avoid5Point6equalsERKS0_d(HEAP32[r41 >> 2] + (r46 * 24 & -1) | 0, r52)) {
                  _memmove(r26, r52, 24, 4, 0);
                  HEAP32[r28] = HEAP32[r27];
                  HEAP32[r28 + 1] = HEAP32[r27 + 1];
                  HEAP32[r28 + 2] = HEAP32[r27 + 2];
                  HEAP32[r28 + 3] = HEAP32[r27 + 3];
                  HEAP32[r28 + 4] = HEAP32[r27 + 4];
                  HEAP32[r28 + 5] = HEAP32[r27 + 5];
                  r51 = HEAP32[r42];
                  r57 = HEAP32[r44];
                  if (r51 >>> 0 < r57 >>> 0) {
                    if ((r51 | 0) == 0) {
                      r72 = 0;
                    } else {
                      HEAP32[r51 >> 2] = r48;
                      r59 = (r51 + 4 | 0) >> 2;
                      HEAP32[r59] = HEAP32[r28];
                      HEAP32[r59 + 1] = HEAP32[r28 + 1];
                      HEAP32[r59 + 2] = HEAP32[r28 + 2];
                      HEAP32[r59 + 3] = HEAP32[r28 + 3];
                      HEAP32[r59 + 4] = HEAP32[r28 + 4];
                      HEAP32[r59 + 5] = HEAP32[r28 + 5];
                      r72 = HEAP32[r42];
                    }
                    HEAP32[r42] = r72 + 28 | 0;
                    r73 = r53;
                    r74 = r54;
                    break;
                  }
                  r59 = HEAP32[r43];
                  r55 = ((r51 - r59 | 0) / 28 & -1) + 1 | 0;
                  if (r55 >>> 0 > 153391689) {
                    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                    r75 = HEAP32[r44];
                    r76 = HEAP32[r43];
                  } else {
                    r75 = r57;
                    r76 = r59;
                  }
                  r59 = r76;
                  r57 = (r75 - r59 | 0) / 28 & -1;
                  if (r57 >>> 0 > 76695843) {
                    r77 = 153391689;
                  } else {
                    r51 = r57 << 1;
                    r77 = r51 >>> 0 < r55 >>> 0 ? r55 : r51;
                  }
                  __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_(r7, r77, (HEAP32[r42] - r59 | 0) / 28 & -1, r45);
                  r59 = HEAP32[r29];
                  do {
                    if ((r59 | 0) == (HEAP32[r30 >> 2] | 0)) {
                      r51 = HEAP32[r31];
                      r55 = r51;
                      r57 = HEAP32[r32 >> 2];
                      if (r51 >>> 0 <= r57 >>> 0) {
                        r60 = ((r59 - r57 | 0) / 28 & -1) << 1;
                        r70 = (r60 | 0) == 0 ? 1 : r60;
                        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_(r6, r70, r70 >>> 2, HEAP32[r33 >> 2]);
                        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_(r6, r51, r59);
                        HEAP32[r32 >> 2] = HEAP32[r34 >> 2];
                        HEAP32[r34 >> 2] = r57;
                        HEAP32[r31] = HEAP32[r35 >> 2];
                        HEAP32[r35 >> 2] = r51;
                        r70 = HEAP32[r36 >> 2];
                        HEAP32[r29] = r70;
                        HEAP32[r36 >> 2] = r59;
                        HEAP32[r30 >> 2] = HEAP32[r37 >> 2];
                        HEAP32[r37 >> 2] = r59;
                        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev(r6);
                        r78 = r70;
                        break;
                      }
                      r70 = (((r55 - r57 | 0) / 28 & -1) + 1 | 0) / -2 & -1;
                      r57 = r51 + (r70 * 28 & -1) | 0;
                      if ((r51 | 0) == (r59 | 0)) {
                        r79 = r57;
                        r80 = r59;
                      } else {
                        r60 = r70 + Math.floor(((r59 - 28 + -r55 | 0) >>> 0) / 28) | 0;
                        r55 = r57;
                        r57 = r51;
                        while (1) {
                          HEAP32[r55 >> 2] = HEAP32[r57 >> 2];
                          r69 = r55 + 4 | 0;
                          r81 = r57 + 4 | 0;
                          HEAP32[r69 >> 2] = HEAP32[r81 >> 2];
                          HEAP32[r69 + 4 >> 2] = HEAP32[r81 + 4 >> 2];
                          HEAP32[r69 + 8 >> 2] = HEAP32[r81 + 8 >> 2];
                          HEAP32[r69 + 12 >> 2] = HEAP32[r81 + 12 >> 2];
                          HEAP32[r69 + 16 >> 2] = HEAP32[r81 + 16 >> 2];
                          HEAP16[r69 + 20 >> 1] = HEAP16[r81 + 20 >> 1];
                          r81 = r57 + 28 | 0;
                          if ((r81 | 0) == (r59 | 0)) {
                            break;
                          } else {
                            r55 = r55 + 28 | 0;
                            r57 = r81;
                          }
                        }
                        r79 = r51 + ((r60 + 1) * 28 & -1) | 0;
                        r80 = HEAP32[r31];
                      }
                      HEAP32[r29] = r79;
                      HEAP32[r31] = r80 + (r70 * 28 & -1) | 0;
                      r78 = r79;
                    } else {
                      r78 = r59;
                    }
                  } while (0);
                  if ((r78 | 0) == 0) {
                    r82 = 0;
                  } else {
                    HEAP32[r78 >> 2] = r48;
                    r59 = (r78 + 4 | 0) >> 2;
                    HEAP32[r59] = HEAP32[r28];
                    HEAP32[r59 + 1] = HEAP32[r28 + 1];
                    HEAP32[r59 + 2] = HEAP32[r28 + 2];
                    HEAP32[r59 + 3] = HEAP32[r28 + 3];
                    HEAP32[r59 + 4] = HEAP32[r28 + 4];
                    HEAP32[r59 + 5] = HEAP32[r28 + 5];
                    r82 = HEAP32[r29];
                  }
                  HEAP32[r29] = r82 + 28 | 0;
                  __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE(r39, r7);
                  __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev(r7);
                  r73 = HEAP32[r15];
                  r74 = HEAP32[r16];
                } else {
                  r73 = r53;
                  r74 = r54;
                }
              } while (0);
              r52 = r47 + 1 | 0;
              if (r52 >>> 0 < r73 - r74 >> 5 >>> 0) {
                r47 = r52;
                r54 = r74;
                r53 = r73;
              } else {
                break L1506;
              }
            }
          }
        } while (0);
        r46 = r46 + 1 | 0;
      }
      __ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED1Ev(r1);
    }
    r46 = HEAP32[r38 + 4 >> 2];
    if ((r46 | 0) == (r11 | 0)) {
      break;
    } else {
      r38 = r46;
    }
  }
  STACKTOP = r3;
  return;
}
__ZN5Avoid34buildConnectorRouteCheckpointCacheEPNS_6RouterE["X"] = 1;
function __ZN5Avoid34clearConnectorRouteCheckpointCacheEPNS_6RouterE(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 20 >> 2];
  r3 = r1 + 16 | 0;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  } else {
    r4 = r2;
  }
  while (1) {
    r2 = HEAP32[r4 + 8 >> 2];
    if ((__ZNK5Avoid7ConnRef11routingTypeEv(HEAP32[r2 + 8 >> 2]) | 0) == 2) {
      r1 = __ZN5Avoid7ConnRef12displayRouteEv(r2);
      HEAP32[r1 + 36 >> 2] = HEAP32[r1 + 32 >> 2];
    }
    r1 = HEAP32[r4 + 4 >> 2];
    if ((r1 | 0) == (r3 | 0)) {
      break;
    } else {
      r4 = r1;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC2EjjS7_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L1560 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 28 | 0;
        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE10push_frontERKS4_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L1560;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE10push_frontERKS4_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = r6;
  r8 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r8] | 0)) {
      r9 = (r1 + 8 | 0) >> 2;
      r10 = HEAP32[r9];
      r11 = (r1 + 12 | 0) >> 2;
      r12 = HEAP32[r11];
      r13 = r12;
      if (r10 >>> 0 >= r12 >>> 0) {
        r12 = ((r13 - r7 | 0) / 28 & -1) << 1;
        r14 = (r12 | 0) == 0 ? 1 : r12;
        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_(r4, r14, (r14 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_(r4, HEAP32[r5], HEAP32[r9]);
        r14 = r4 | 0;
        r12 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 4 | 0;
        r14 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        r14 = r4 + 8 | 0;
        r12 = HEAP32[r9];
        HEAP32[r9] = HEAP32[r14 >> 2];
        HEAP32[r14 >> 2] = r12;
        r12 = r4 + 12 | 0;
        r14 = HEAP32[r11];
        HEAP32[r11] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r14;
        __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
      r14 = (((r13 - r10 | 0) / 28 & -1) + 1 | 0) / 2 & -1;
      r13 = r10 + (r14 * 28 & -1) | 0;
      if ((r6 | 0) == (r10 | 0)) {
        r16 = r13;
        r17 = r6;
      } else {
        r12 = r14 - 1 - Math.floor(((r10 - 28 + -r7 | 0) >>> 0) / 28) | 0;
        r11 = r13;
        r13 = r10;
        while (1) {
          r18 = r11 - 28 | 0;
          r19 = r13 - 28 | 0;
          HEAP32[r18 >> 2] = HEAP32[r19 >> 2];
          r20 = r11 - 28 + 4 | 0;
          r21 = r13 - 28 + 4 | 0;
          HEAP32[r20 >> 2] = HEAP32[r21 >> 2];
          HEAP32[r20 + 4 >> 2] = HEAP32[r21 + 4 >> 2];
          HEAP32[r20 + 8 >> 2] = HEAP32[r21 + 8 >> 2];
          HEAP32[r20 + 12 >> 2] = HEAP32[r21 + 12 >> 2];
          HEAP32[r20 + 16 >> 2] = HEAP32[r21 + 16 >> 2];
          HEAP16[r20 + 20 >> 1] = HEAP16[r21 + 20 >> 1];
          if ((r6 | 0) == (r19 | 0)) {
            break;
          } else {
            r11 = r18;
            r13 = r19;
          }
        }
        r16 = r10 + (r12 * 28 & -1) | 0;
        r17 = HEAP32[r9];
      }
      HEAP32[r5] = r16;
      HEAP32[r9] = r17 + (r14 * 28 & -1) | 0;
      r15 = r16;
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 28 | 0;
  if ((r6 | 0) == 0) {
    r22 = r15;
    r23 = r22 - 28 | 0;
    HEAP32[r5] = r23;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r6 = (r15 - 28 + 4 | 0) >> 2;
  r15 = (r2 + 4 | 0) >> 2;
  HEAP32[r6] = HEAP32[r15];
  HEAP32[r6 + 1] = HEAP32[r15 + 1];
  HEAP32[r6 + 2] = HEAP32[r15 + 2];
  HEAP32[r6 + 3] = HEAP32[r15 + 3];
  HEAP32[r6 + 4] = HEAP32[r15 + 4];
  HEAP32[r6 + 5] = HEAP32[r15 + 5];
  r22 = HEAP32[r5];
  r23 = r22 - 28 | 0;
  HEAP32[r5] = r23;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE10push_frontERKS4_["X"] = 1;
function __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r6 = (r2 + 4 | 0) >> 2;
      r7 = (r1 + 4 | 0) >> 2;
      HEAP32[r6] = HEAP32[r7];
      HEAP32[r6 + 1] = HEAP32[r7 + 1];
      HEAP32[r6 + 2] = HEAP32[r7 + 2];
      HEAP32[r6 + 3] = HEAP32[r7 + 3];
      HEAP32[r6 + 4] = HEAP32[r7 + 4];
      HEAP32[r6 + 5] = HEAP32[r7 + 5];
      r5 = HEAP32[r4];
    }
    r7 = r5 + 28 | 0;
    HEAP32[r4] = r7;
    r6 = r1 + 28 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r6;
      r2 = r7;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC2EjjS7_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 * 28 & -1);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = r6 + (r3 * 28 & -1) | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = r6 + (r2 * 28 & -1) | 0;
  return;
}
function __ZN5Avoid9IncSolverC1ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE(r1, r2, r3) {
  __ZN5Avoid9IncSolverC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE(r1, r2, r3);
  return;
}
function __ZNK5Avoid8Variable8positionEv(r1, r2, r3, r4) {
  return (r4 * r3 + r2) / r1;
}
function __ZNK5Avoid6Blocks4sizeEv(r1, r2) {
  return r2 - r1 >> 2;
}
function __ZNK5Avoid6Blocks2atEj(r1, r2) {
  return HEAP32[r1 + (r2 << 2) >> 2];
}
function __ZN5Avoid9IncSolverC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 80 | 0;
  r5 = r4;
  r6 = r4 + 20;
  r7 = r4 + 40;
  r8 = r4 + 60;
  r9 = (r1 + 8 | 0) >> 2;
  r10 = r3 + 4 | 0;
  r11 = (r3 | 0) >> 2;
  r12 = HEAP32[r10 >> 2] - HEAP32[r11] >> 2;
  HEAP32[r9] = r12;
  HEAP32[r1 + 12 >> 2] = r3;
  r13 = r1 + 16 | 0;
  r14 = (r2 | 0) >> 2;
  r15 = HEAP32[r2 + 4 >> 2] - HEAP32[r14] >> 2;
  HEAP32[r13 >> 2] = r15;
  HEAP32[r1 + 20 >> 2] = r2;
  r16 = r1 + 24 | 0;
  r17 = r16 | 0;
  r18 = r1 + 28 | 0;
  r19 = r16 >> 2;
  HEAP32[r19] = 0;
  HEAP32[r19 + 1] = 0;
  HEAP32[r19 + 2] = 0;
  HEAP32[r19 + 3] = 0;
  HEAP32[r19 + 4] = 0;
  HEAP32[r19 + 5] = 0;
  if ((r15 | 0) == 0) {
    r20 = r12;
  } else {
    r12 = 0;
    while (1) {
      r15 = HEAP32[HEAP32[r14] + (r12 << 2) >> 2];
      HEAP32[r15 + 56 >> 2] = HEAP32[r15 + 52 >> 2];
      r15 = HEAP32[HEAP32[r14] + (r12 << 2) >> 2];
      HEAP32[r15 + 68 >> 2] = HEAP32[r15 + 64 >> 2];
      r15 = r12 + 1 | 0;
      if (r15 >>> 0 < HEAP32[r13 >> 2] >>> 0) {
        r12 = r15;
      } else {
        break;
      }
    }
    r20 = HEAP32[r9];
  }
  L1611 : do {
    if ((r20 | 0) != 0) {
      r12 = (r8 + 8 | 0) >> 2;
      r13 = r8 + 12 | 0;
      r14 = (r8 + 4 | 0) >> 2;
      r15 = r8 | 0;
      r19 = r8 + 16 | 0;
      r21 = r7 | 0;
      r22 = r7 + 4 | 0;
      r23 = r7 + 8 | 0;
      r24 = r7 + 12 | 0;
      r25 = (r6 + 8 | 0) >> 2;
      r26 = r6 + 12 | 0;
      r27 = (r6 + 4 | 0) >> 2;
      r28 = r6 | 0;
      r29 = r6 + 16 | 0;
      r30 = r5 | 0;
      r31 = r5 + 4 | 0;
      r32 = r5 + 8 | 0;
      r33 = r5 + 12 | 0;
      r34 = 0;
      while (1) {
        r35 = HEAP32[HEAP32[r11] + (r34 << 2) >> 2];
        r36 = HEAP32[r35 >> 2];
        r37 = r36 + 64 | 0;
        r38 = (r36 + 68 | 0) >> 2;
        r39 = HEAP32[r38];
        r40 = r36 + 72 | 0;
        r36 = r40 | 0;
        r41 = HEAP32[r36 >> 2];
        if (r39 >>> 0 < r41 >>> 0) {
          if ((r39 | 0) == 0) {
            r42 = 0;
          } else {
            HEAP32[r39 >> 2] = r35;
            r42 = HEAP32[r38];
          }
          HEAP32[r38] = r42 + 4 | 0;
        } else {
          r43 = r37 | 0;
          r44 = HEAP32[r43 >> 2];
          r45 = r39 - r44 + 4 >> 2 | 0;
          if (r45 >>> 0 > 1073741823) {
            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            r46 = HEAP32[r36 >> 2];
            r47 = HEAP32[r43 >> 2];
          } else {
            r46 = r41;
            r47 = r44;
          }
          r44 = r47;
          r41 = r46 - r44 | 0;
          if (r41 >> 2 >>> 0 > 536870910) {
            r48 = 1073741823;
          } else {
            r43 = r41 >> 1;
            r48 = r43 >>> 0 < r45 >>> 0 ? r45 : r43;
          }
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r6, r48, HEAP32[r38] - r44 >> 2, r40);
          r40 = HEAP32[r25];
          do {
            if ((r40 | 0) == (HEAP32[r26 >> 2] | 0)) {
              r44 = HEAP32[r27];
              r38 = HEAP32[r28 >> 2];
              if (r44 >>> 0 > r38 >>> 0) {
                r43 = r44;
                r45 = (r43 - r38 + 4 >> 2 | 0) / -2 & -1;
                r41 = (r45 << 2) + r44 | 0;
                r36 = r40 - r43 | 0;
                _memmove(r41, r44, r36, 4, 0);
                r43 = ((r36 >> 2) + r45 << 2) + r44 | 0;
                HEAP32[r25] = r43;
                HEAP32[r27] = r41;
                r49 = r43;
                break;
              }
              r43 = r40 - r38 >> 1;
              r41 = (r43 | 0) == 0 ? 1 : r43;
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r5, r41, r41 >>> 2, HEAP32[r29 >> 2]);
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r5, r44, r40);
              HEAP32[r28 >> 2] = HEAP32[r30 >> 2];
              HEAP32[r30 >> 2] = r38;
              HEAP32[r27] = HEAP32[r31 >> 2];
              HEAP32[r31 >> 2] = r44;
              r44 = HEAP32[r32 >> 2];
              HEAP32[r25] = r44;
              HEAP32[r32 >> 2] = r40;
              HEAP32[r26 >> 2] = HEAP32[r33 >> 2];
              HEAP32[r33 >> 2] = r40;
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r5);
              r49 = r44;
            } else {
              r49 = r40;
            }
          } while (0);
          if ((r49 | 0) == 0) {
            r50 = 0;
          } else {
            HEAP32[r49 >> 2] = r35;
            r50 = r49;
          }
          HEAP32[r25] = r50 + 4 | 0;
          __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r37, r6);
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r6);
        }
        r40 = HEAP32[r35 + 4 >> 2];
        r44 = r40 + 52 | 0;
        r38 = (r40 + 56 | 0) >> 2;
        r41 = HEAP32[r38];
        r43 = r40 + 60 | 0;
        r40 = r43 | 0;
        r45 = HEAP32[r40 >> 2];
        if (r41 >>> 0 < r45 >>> 0) {
          if ((r41 | 0) == 0) {
            r51 = 0;
          } else {
            HEAP32[r41 >> 2] = r35;
            r51 = HEAP32[r38];
          }
          HEAP32[r38] = r51 + 4 | 0;
        } else {
          r36 = r44 | 0;
          r39 = HEAP32[r36 >> 2];
          r52 = r41 - r39 + 4 >> 2 | 0;
          if (r52 >>> 0 > 1073741823) {
            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            r53 = HEAP32[r40 >> 2];
            r54 = HEAP32[r36 >> 2];
          } else {
            r53 = r45;
            r54 = r39;
          }
          r39 = r54;
          r45 = r53 - r39 | 0;
          if (r45 >> 2 >>> 0 > 536870910) {
            r55 = 1073741823;
          } else {
            r36 = r45 >> 1;
            r55 = r36 >>> 0 < r52 >>> 0 ? r52 : r36;
          }
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r8, r55, HEAP32[r38] - r39 >> 2, r43);
          r43 = HEAP32[r12];
          do {
            if ((r43 | 0) == (HEAP32[r13 >> 2] | 0)) {
              r39 = HEAP32[r14];
              r38 = HEAP32[r15 >> 2];
              if (r39 >>> 0 > r38 >>> 0) {
                r36 = r39;
                r52 = (r36 - r38 + 4 >> 2 | 0) / -2 & -1;
                r45 = (r52 << 2) + r39 | 0;
                r40 = r43 - r36 | 0;
                _memmove(r45, r39, r40, 4, 0);
                r36 = ((r40 >> 2) + r52 << 2) + r39 | 0;
                HEAP32[r12] = r36;
                HEAP32[r14] = r45;
                r56 = r36;
                break;
              }
              r36 = r43 - r38 >> 1;
              r45 = (r36 | 0) == 0 ? 1 : r36;
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r7, r45, r45 >>> 2, HEAP32[r19 >> 2]);
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r7, r39, r43);
              HEAP32[r15 >> 2] = HEAP32[r21 >> 2];
              HEAP32[r21 >> 2] = r38;
              HEAP32[r14] = HEAP32[r22 >> 2];
              HEAP32[r22 >> 2] = r39;
              r39 = HEAP32[r23 >> 2];
              HEAP32[r12] = r39;
              HEAP32[r23 >> 2] = r43;
              HEAP32[r13 >> 2] = HEAP32[r24 >> 2];
              HEAP32[r24 >> 2] = r43;
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r7);
              r56 = r39;
            } else {
              r56 = r43;
            }
          } while (0);
          if ((r56 | 0) == 0) {
            r57 = 0;
          } else {
            HEAP32[r56 >> 2] = r35;
            r57 = r56;
          }
          HEAP32[r12] = r57 + 4 | 0;
          __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r44, r8);
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r8);
        }
        r43 = r34 + 1 | 0;
        if (r43 >>> 0 < HEAP32[r9] >>> 0) {
          r34 = r43;
        } else {
          break L1611;
        }
      }
    }
  } while (0);
  r9 = __Znwj(24);
  __ZN5Avoid6BlocksC1ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r9, r2);
  HEAP32[r1 + 4 >> 2] = r9;
  if ((r16 | 0) != (r3 | 0)) {
    __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r16, HEAP32[r11], HEAP32[r10 >> 2]);
  }
  r10 = HEAP32[r17 >> 2];
  if ((r10 | 0) == (HEAP32[r18 >> 2] | 0)) {
    STACKTOP = r4;
    return;
  } else {
    r58 = r10;
  }
  while (1) {
    HEAP8[HEAP32[r58 >> 2] + 28 | 0] = 0;
    r10 = r58 + 4 | 0;
    if ((r10 | 0) == (HEAP32[r18 >> 2] | 0)) {
      break;
    } else {
      r58 = r10;
    }
  }
  STACKTOP = r4;
  return;
}
__ZN5Avoid9IncSolverC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE["X"] = 1;
function __ZN5Avoid6BlocksC1ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r1, r2) {
  __ZN5Avoid6BlocksC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r1, r2);
  return;
}
function __ZN5Avoid9IncSolverD1Ev(r1) {
  __ZN5Avoid9IncSolverD2Ev(r1);
  return;
}
function __ZN5Avoid9IncSolverD2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 + 4 >> 2];
  if ((r2 | 0) != 0) {
    __ZN5Avoid6BlocksD1Ev(r2);
    __ZdlPv(r2);
  }
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1 + 36 | 0);
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1 + 24 | 0);
  return;
}
function __ZN5Avoid6BlocksD1Ev(r1) {
  __ZN5Avoid6BlocksD2Ev(r1);
  return;
}
function __ZN5Avoid9IncSolver10copyResultEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8;
  r2 = r1 + 20 | 0;
  r1 = HEAP32[r2 >> 2];
  r3 = HEAP32[r1 >> 2];
  if ((r3 | 0) == (HEAP32[r1 + 4 >> 2] | 0)) {
    return;
  } else {
    r4 = r3;
  }
  while (1) {
    r3 = HEAP32[r4 >> 2];
    r1 = r3 + 28 | 0;
    r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r1 = r3 + 36 | 0;
    r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r1 = HEAP32[r3 + 44 >> 2];
    r7 = r1 + 4 | 0;
    r8 = r1 + 12 | 0;
    r1 = __ZNK5Avoid8Variable8positionEv(r5, r6, (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
    r8 = r3 + 12 | 0;
    HEAPF64[tempDoublePtr >> 3] = r1, HEAP32[r8 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    if (!(!isNaN(r1) & !isNaN(0))) {
      ___assert_func(5244156, 113, 5256220, 5250332);
    }
    r1 = r4 + 4 | 0;
    if ((r1 | 0) == (HEAP32[HEAP32[r2 >> 2] + 4 >> 2] | 0)) {
      break;
    } else {
      r4 = r1;
    }
  }
  return;
}
function __ZN5Avoid9IncSolver5solveEv(r1) {
  var r2, r3, r4, r5;
  __ZN5Avoid9IncSolver7satisfyEv(r1);
  r2 = r1 + 4 | 0;
  r3 = HEAP32[r2 >> 2];
  r4 = __ZN5Avoid6Blocks4costEv(HEAP32[r3 + 4 >> 2], HEAP32[r3 + 8 >> 2]);
  if (Math.abs(1.7976931348623157e+308 - r4) > 1e-4) {
    r5 = r4;
  } else {
    __ZN5Avoid9IncSolver10copyResultEv(r1);
    return;
  }
  while (1) {
    __ZN5Avoid9IncSolver7satisfyEv(r1);
    r4 = HEAP32[r2 >> 2];
    r3 = __ZN5Avoid6Blocks4costEv(HEAP32[r4 + 4 >> 2], HEAP32[r4 + 8 >> 2]);
    if (Math.abs(r5 - r3) > 1e-4) {
      r5 = r3;
    } else {
      break;
    }
  }
  __ZN5Avoid9IncSolver10copyResultEv(r1);
  return;
}
function __ZN5Avoid6Blocks4costEv(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = r2 - r1 >> 2;
  if ((r3 | 0) == 0) {
    r4 = 0;
    return r4;
  } else {
    r5 = 0;
    r6 = 0;
  }
  while (1) {
    r2 = HEAP32[HEAP32[r1 + (r6 << 2) >> 2] >> 2];
    r7 = r5 + __ZN5Avoid5Block4costEv(HEAP32[r2 >> 2], HEAP32[r2 + 4 >> 2]);
    r2 = r6 + 1 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      r4 = r7;
      break;
    } else {
      r5 = r7;
      r6 = r2;
    }
  }
  return r4;
}
function __ZN5Avoid9IncSolver7satisfyEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r5 >> 2;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  STACKTOP = STACKTOP + 20 | 0;
  STACKTOP = STACKTOP + 20 | 0;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r10 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r11 = STACKTOP, r12 = r11 >> 2;
  STACKTOP = STACKTOP + 4 | 0;
  r13 = STACKTOP, r14 = r13 >> 2;
  STACKTOP = STACKTOP + 4 | 0;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r15 = STACKTOP, r16 = r15 >> 2;
  STACKTOP = STACKTOP + 136 | 0;
  r17 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  __ZN5Avoid9IncSolver11splitBlocksEv(r1);
  r18 = r1 + 24 | 0;
  r19 = __ZN5Avoid9IncSolver12mostViolatedERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEE(r18);
  L1707 : do {
    if ((r19 | 0) == 0) {
      r20 = r1 + 4 | 0;
    } else {
      r21 = (r1 + 28 | 0) >> 2;
      r22 = r1 + 32 | 0;
      r23 = (r22 | 0) >> 2;
      r24 = r1 + 4 | 0, r25 = r24 >> 2;
      r26 = r22;
      r22 = (r18 | 0) >> 2;
      r27 = (r8 + 8 | 0) >> 2;
      r28 = r8 + 12 | 0;
      r29 = (r8 + 4 | 0) >> 2;
      r30 = r8 | 0;
      r31 = r8 + 16 | 0;
      r32 = r7 | 0;
      r33 = r7 + 4 | 0;
      r34 = r7 + 8 | 0;
      r35 = r7 + 12 | 0;
      r36 = (r10 + 8 | 0) >> 2;
      r37 = r10 + 12 | 0;
      r38 = (r10 + 4 | 0) >> 2;
      r39 = r10 | 0;
      r40 = r10 + 16 | 0;
      r41 = r9 | 0;
      r42 = r9 + 4 | 0;
      r43 = r9 + 8 | 0;
      r44 = r9 + 12 | 0;
      r45 = r19;
      L1709 : while (1) {
        if ((HEAP8[r45 + 29 | 0] & 1) << 24 >> 24 == 0) {
          if (__ZNK5Avoid10Constraint5slackEv(r45) >= -1e-10) {
            r20 = r24;
            break L1707;
          }
          r46 = HEAP8[r45 + 28 | 0];
          if ((r46 & 1) << 24 >> 24 == 0) {
            r47 = r46;
          } else {
            r20 = r24;
            break L1707;
          }
        } else {
          r47 = HEAP8[r45 + 28 | 0];
        }
        r46 = r45 + 28 | 0;
        if ((r47 & 1) << 24 >> 24 != 0) {
          ___assert_func(5244156, 271, 5256144, 5248504);
        }
        r48 = HEAP32[r45 >> 2];
        r49 = HEAP32[r48 + 44 >> 2];
        HEAP32[r12] = r49;
        r50 = HEAP32[r45 + 4 >> 2];
        r51 = HEAP32[r50 + 44 >> 2];
        HEAP32[r14] = r51;
        do {
          if ((r49 | 0) == (r51 | 0)) {
            if (__ZNK5Avoid5Block27isActiveDirectedPathBetweenEPKNS_8VariableES3_(r49, r50, r48)) {
              HEAP8[r45 + 30 | 0] = 1;
              break;
            }
            r52 = __ZN5Avoid5Block12splitBetweenEPNS_8VariableES2_RPS0_S4_(r49, r48, r50, r11, r13);
            if ((r52 | 0) == 0) {
              HEAP8[r45 + 30 | 0] = 1;
              break;
            }
            if ((HEAP8[r52 + 28 | 0] & 1) << 24 >> 24 != 0) {
              ___assert_func(5244156, 293, 5256144, 5247272);
            }
            r53 = HEAP32[r21];
            r54 = HEAP32[r23];
            if (r53 >>> 0 < r54 >>> 0) {
              if ((r53 | 0) == 0) {
                r55 = 0;
              } else {
                HEAP32[r53 >> 2] = r52;
                r55 = HEAP32[r21];
              }
              HEAP32[r21] = r55 + 4 | 0;
            } else {
              r56 = HEAP32[r22];
              r57 = r53 - r56 + 4 >> 2 | 0;
              if (r57 >>> 0 > 1073741823) {
                __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
                r58 = HEAP32[r23];
                r59 = HEAP32[r22];
              } else {
                r58 = r54;
                r59 = r56;
              }
              r56 = r59;
              r54 = r58 - r56 | 0;
              if (r54 >> 2 >>> 0 > 536870910) {
                r60 = 1073741823;
              } else {
                r53 = r54 >> 1;
                r60 = r53 >>> 0 < r57 >>> 0 ? r57 : r53;
              }
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r10, r60, HEAP32[r21] - r56 >> 2, r26);
              r56 = HEAP32[r36];
              do {
                if ((r56 | 0) == (HEAP32[r37 >> 2] | 0)) {
                  r53 = HEAP32[r38];
                  r57 = HEAP32[r39 >> 2];
                  if (r53 >>> 0 > r57 >>> 0) {
                    r54 = r53;
                    r61 = (r54 - r57 + 4 >> 2 | 0) / -2 & -1;
                    r62 = (r61 << 2) + r53 | 0;
                    r63 = r56 - r54 | 0;
                    _memmove(r62, r53, r63, 4, 0);
                    r54 = ((r63 >> 2) + r61 << 2) + r53 | 0;
                    HEAP32[r36] = r54;
                    HEAP32[r38] = r62;
                    r64 = r54;
                    break;
                  }
                  r54 = r56 - r57 >> 1;
                  r62 = (r54 | 0) == 0 ? 1 : r54;
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r9, r62, r62 >>> 2, HEAP32[r40 >> 2]);
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r9, r53, r56);
                  HEAP32[r39 >> 2] = HEAP32[r41 >> 2];
                  HEAP32[r41 >> 2] = r57;
                  HEAP32[r38] = HEAP32[r42 >> 2];
                  HEAP32[r42 >> 2] = r53;
                  r53 = HEAP32[r43 >> 2];
                  HEAP32[r36] = r53;
                  HEAP32[r43 >> 2] = r56;
                  HEAP32[r37 >> 2] = HEAP32[r44 >> 2];
                  HEAP32[r44 >> 2] = r56;
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r9);
                  r64 = r53;
                } else {
                  r64 = r56;
                }
              } while (0);
              if ((r64 | 0) == 0) {
                r65 = 0;
              } else {
                HEAP32[r64 >> 2] = r52;
                r65 = r64;
              }
              HEAP32[r36] = r65 + 4 | 0;
              __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r18, r10);
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r10);
            }
            if (__ZNK5Avoid10Constraint5slackEv(r45) < 0) {
              __ZN5Avoid6Blocks6insertEPNS_5BlockE(HEAP32[r25], __ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintE(HEAP32[r12], HEAP32[r14], r45));
              r2 = 1488;
              break;
            }
            if ((HEAP8[r46] & 1) << 24 >> 24 != 0) {
              ___assert_func(5244156, 313, 5256144, 5248504);
            }
            r56 = HEAP32[r21];
            r53 = HEAP32[r23];
            if (r56 >>> 0 < r53 >>> 0) {
              if ((r56 | 0) == 0) {
                r66 = 0;
              } else {
                HEAP32[r56 >> 2] = r45;
                r66 = HEAP32[r21];
              }
              HEAP32[r21] = r66 + 4 | 0;
            } else {
              r57 = HEAP32[r22];
              r62 = r56 - r57 >> 2;
              r56 = r62 + 1 | 0;
              if (r56 >>> 0 > 1073741823) {
                break L1709;
              }
              r54 = r53 - r57 | 0;
              if (r54 >> 2 >>> 0 > 536870910) {
                r67 = 1073741823;
              } else {
                r57 = r54 >> 1;
                r67 = r57 >>> 0 < r56 >>> 0 ? r56 : r57;
              }
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r8, r67, r62, r26);
              r62 = HEAP32[r27];
              do {
                if ((r62 | 0) == (HEAP32[r28 >> 2] | 0)) {
                  r57 = HEAP32[r29];
                  r56 = HEAP32[r30 >> 2];
                  if (r57 >>> 0 > r56 >>> 0) {
                    r54 = r57;
                    r53 = (r54 - r56 + 4 >> 2 | 0) / -2 & -1;
                    r61 = (r53 << 2) + r57 | 0;
                    r63 = r62 - r54 | 0;
                    _memmove(r61, r57, r63, 4, 0);
                    r54 = ((r63 >> 2) + r53 << 2) + r57 | 0;
                    HEAP32[r27] = r54;
                    HEAP32[r29] = r61;
                    r68 = r54;
                    break;
                  }
                  r54 = r62 - r56 >> 1;
                  r61 = (r54 | 0) == 0 ? 1 : r54;
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r7, r61, r61 >>> 2, HEAP32[r31 >> 2]);
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r7, r57, r62);
                  HEAP32[r30 >> 2] = HEAP32[r32 >> 2];
                  HEAP32[r32 >> 2] = r56;
                  HEAP32[r29] = HEAP32[r33 >> 2];
                  HEAP32[r33 >> 2] = r57;
                  r57 = HEAP32[r34 >> 2];
                  HEAP32[r27] = r57;
                  HEAP32[r34 >> 2] = r62;
                  HEAP32[r28 >> 2] = HEAP32[r35 >> 2];
                  HEAP32[r35 >> 2] = r62;
                  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r7);
                  r68 = r57;
                } else {
                  r68 = r62;
                }
              } while (0);
              if ((r68 | 0) == 0) {
                r69 = 0;
              } else {
                HEAP32[r68 >> 2] = r45;
                r69 = r68;
              }
              HEAP32[r27] = r69 + 4 | 0;
              __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r18, r8);
              __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r8);
            }
            __ZN5Avoid6Blocks6insertEPNS_5BlockE(HEAP32[r25], HEAP32[r12]);
            __ZN5Avoid6Blocks6insertEPNS_5BlockE(HEAP32[r25], HEAP32[r14]);
            r2 = 1488;
            break;
          } else {
            __ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintE(r49, r51, r45);
            r2 = 1488;
            break;
          }
        } while (0);
        if (r2 == 1488) {
          r2 = 0;
          __ZN5Avoid6Blocks7cleanupEv(HEAP32[r25]);
        }
        r51 = __ZN5Avoid9IncSolver12mostViolatedERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEE(r18);
        if ((r51 | 0) == 0) {
          r20 = r24;
          break L1707;
        } else {
          r45 = r51;
        }
      }
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
  } while (0);
  __ZN5Avoid6Blocks7cleanupEv(HEAP32[r20 >> 2]);
  r20 = HEAP32[r1 + 8 >> 2];
  if ((r20 | 0) == 0) {
    __ZN5Avoid9IncSolver10copyResultEv(r1);
    STACKTOP = r3;
    return;
  }
  r18 = HEAP32[HEAP32[r1 + 12 >> 2] >> 2];
  r14 = 0;
  r12 = 0;
  while (1) {
    r70 = HEAP32[r18 + (r12 << 2) >> 2];
    if (__ZNK5Avoid10Constraint5slackEv(r70) < -1e-10) {
      break;
    }
    r8 = r12 + 1 | 0;
    if (r8 >>> 0 < r20 >>> 0) {
      r14 = (HEAP8[r70 + 28 | 0] & 1) << 24 >> 24 == 0 ? r14 : 1;
      r12 = r8;
    } else {
      r2 = 1519;
      break;
    }
  }
  if (r2 == 1519) {
    __ZN5Avoid9IncSolver10copyResultEv(r1);
    STACKTOP = r3;
    return;
  }
  r3 = r15 | 0;
  r1 = r15 + 4 | 0;
  HEAP32[r3 >> 2] = 5272872;
  HEAP32[r16 + 14] = 5272892;
  r2 = r15 + 56 | 0;
  __ZNSt3__18ios_base4initEPv(r2, r1);
  HEAP32[r16 + 32] = 0;
  __ZNKSt3__18ios_base6getlocEv(r4, r2);
  r2 = HEAP32[r4 >> 2];
  r4 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273668);
  r12 = FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 28 >> 2]](r4, 32);
  __ZNSt3__16localeD1Ev(r2);
  HEAP8[r15 + 132 | 0] = r12;
  HEAP32[r3 >> 2] = 5266080;
  HEAP32[r16 + 14] = 5266100;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5266264;
  r3 = (r15 + 36 | 0) >> 2;
  HEAP32[r3] = 0;
  HEAP32[r3 + 1] = 0;
  HEAP32[r3 + 2] = 0;
  HEAP32[r3 + 3] = 0;
  HEAP32[r16 + 13] = 16;
  HEAP32[r6] = 0;
  HEAP32[r6 + 1] = 0;
  HEAP32[r6 + 2] = 0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(r1, r5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r5);
  __ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_10ConstraintE(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(r15, 5246272), r70);
  r70 = ___cxa_allocate_exception(4);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(r17, r1);
  if ((HEAP8[r17] & 1) << 24 >> 24 == 0) {
    r71 = r17 + 1 | 0;
  } else {
    r71 = HEAP32[r17 + 8 >> 2];
  }
  HEAP32[r70 >> 2] = r71;
  ___cxa_throw(r70, 5271256, 0);
}
__ZN5Avoid9IncSolver7satisfyEv["X"] = 1;
function __ZN5Avoid9IncSolver12mostViolatedERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEE(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20;
  r2 = 0;
  r3 = r1 + 4 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r1 | 0;
  r6 = HEAP32[r5 >> 2];
  if ((r6 | 0) == (r4 | 0)) {
    r7 = 0;
    return r7;
  } else {
    r8 = r6;
    r9 = r4;
    r10 = 0;
    r11 = 1.7976931348623157e+308;
  }
  while (1) {
    r12 = HEAP32[r8 >> 2];
    r13 = __ZNK5Avoid10Constraint5slackEv(r12);
    r14 = HEAP8[r12 + 29 | 0] & 1;
    if (r14 << 24 >> 24 != 0 | r13 < r11) {
      if (r14 << 24 >> 24 == 0) {
        r15 = r13;
        r16 = r12;
        r17 = r8;
      } else {
        r18 = r13;
        r19 = r12;
        r20 = r8;
        break;
      }
    } else {
      r15 = r11;
      r16 = r10;
      r17 = r9;
    }
    r12 = r8 + 4 | 0;
    if ((r12 | 0) == (r4 | 0)) {
      r18 = r15;
      r19 = r16;
      r20 = r17;
      break;
    } else {
      r8 = r12;
      r9 = r17;
      r10 = r16;
      r11 = r15;
    }
  }
  if ((r20 | 0) == (r4 | 0)) {
    r7 = r19;
    return r7;
  }
  do {
    if (r18 < -1e-10) {
      if ((HEAP8[r19 + 28 | 0] & 1) << 24 >> 24 == 0) {
        break;
      } else {
        r2 = 1527;
        break;
      }
    } else {
      r2 = 1527;
    }
  } while (0);
  do {
    if (r2 == 1527) {
      if ((HEAP8[r19 + 29 | 0] & 1) << 24 >> 24 == 0) {
        r7 = r19;
      } else {
        break;
      }
      return r7;
    }
  } while (0);
  HEAP32[r20 >> 2] = HEAP32[r6 + ((r4 - r6 >> 2) - 1 << 2) >> 2];
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6resizeEj(r1, (HEAP32[r3 >> 2] - HEAP32[r5 >> 2] >> 2) - 1 | 0);
  r7 = r19;
  return r7;
}
__ZN5Avoid9IncSolver12mostViolatedERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEE["X"] = 1;
function __ZNK5Avoid10Constraint5slackEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8;
  if ((HEAP8[r1 + 30 | 0] & 1) << 24 >> 24 != 0) {
    r2 = 1.7976931348623157e+308;
    return r2;
  }
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = r3 + 28 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = r3 + 36 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = HEAP32[r3 + 44 >> 2];
  r3 = r4 + 4 | 0;
  r7 = r4 + 12 | 0;
  r4 = r1 + 8 | 0;
  r8 = r5 * __ZNK5Avoid8Variable8positionEv(r5, r6, (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r4 = HEAP32[r1 >> 2];
  r1 = r4 + 28 | 0;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r1 = r4 + 36 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r1 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r1 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r1 = HEAP32[r4 + 44 >> 2];
  r4 = r1 + 4 | 0;
  r6 = r1 + 12 | 0;
  r2 = r8 - r7 * __ZNK5Avoid8Variable8positionEv(r7, r3, (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
  return r2;
}
function __ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = HEAP32[r3 + 4 >> 2];
  r5 = r4 + 36 | 0;
  r6 = HEAP32[r3 >> 2];
  r7 = r6 + 36 | 0;
  r8 = r3 + 8 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r8 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r8 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r8 = HEAP32[r6 + 44 >> 2];
  r6 = HEAP32[r4 + 44 >> 2];
  r4 = HEAP32[r8 >> 2];
  r7 = HEAP32[r6 >> 2];
  if ((HEAP32[r4 + 4 >> 2] - HEAP32[r4 >> 2] | 0) >>> 0 < (HEAP32[r7 + 4 >> 2] - HEAP32[r7 >> 2] | 0) >>> 0) {
    __ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintEd(r6, r8, r3, r9);
    r7 = r2 + 44 | 0;
    r4 = HEAP8[r7];
    r5 = r4 & 1;
    r10 = r5 << 24 >> 24 != 0;
    r11 = r10 ? r1 : r2;
    return r11;
  } else {
    __ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintEd(r8, r6, r3, -r9);
    r7 = r2 + 44 | 0;
    r4 = HEAP8[r7];
    r5 = r4 & 1;
    r10 = r5 << 24 >> 24 != 0;
    r11 = r10 ? r1 : r2;
    return r11;
  }
}
function __ZNK5Avoid5Block27isActiveDirectedPathBetweenEPKNS_8VariableES3_(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  r4 = 0;
  if ((r2 | 0) == (r3 | 0)) {
    r5 = 1;
    return r5;
  }
  r6 = HEAP32[r2 + 64 >> 2];
  r7 = HEAP32[r2 + 68 >> 2];
  if ((r6 | 0) == (r7 | 0)) {
    r5 = 0;
    return r5;
  } else {
    r8 = r6;
  }
  while (1) {
    r6 = HEAP32[r8 >> 2];
    if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r6, 0)) {
      if (__ZNK5Avoid5Block27isActiveDirectedPathBetweenEPKNS_8VariableES3_(r1, HEAP32[r6 + 4 >> 2], r3)) {
        r5 = 1;
        r4 = 1553;
        break;
      }
    }
    r6 = r8 + 4 | 0;
    if ((r6 | 0) == (r7 | 0)) {
      r5 = 0;
      r4 = 1551;
      break;
    } else {
      r8 = r6;
    }
  }
  if (r4 == 1551) {
    return r5;
  } else if (r4 == 1553) {
    return r5;
  }
}
function __ZN5Avoid5Block12splitBetweenEPNS_8VariableES2_RPS0_S4_(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZN5Avoid5Block16findMinLMBetweenEPNS_8VariableES2_(r1, r2, r3);
  if ((r6 | 0) == 0) {
    return r6;
  }
  __ZN5Avoid5Block5splitERPS0_S2_PNS_10ConstraintE(r1, r4, r5, r6);
  HEAP8[r1 + 44 | 0] = 1;
  return r6;
}
function __ZN5Avoid22UnsatisfiableExceptionC1ERKS0_(r1, r2) {
  __ZN5Avoid22UnsatisfiableExceptionC2ERKS0_(r1, r2);
  return;
}
function __ZN5Avoid22UnsatisfiableExceptionD1Ev(r1) {
  __ZN5Avoid22UnsatisfiableExceptionD2Ev(r1);
  return;
}
function __ZN5Avoid6Blocks7cleanupEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r2 = 0;
  r3 = r1 + 4 | 0;
  r4 = r3 | 0;
  r5 = HEAP32[r1 + 8 >> 2] - HEAP32[r4 >> 2] >> 2;
  if ((r5 | 0) == 0) {
    r6 = 0;
    __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE6resizeEj(r3, r6);
    return;
  } else {
    r7 = 0;
    r8 = 0;
  }
  L1866 : while (1) {
    r1 = r7;
    while (1) {
      r9 = HEAP32[r4 >> 2];
      r10 = HEAP32[r9 + (r1 << 2) >> 2];
      if ((HEAP8[r10 + 44 | 0] & 1) << 24 >> 24 == 0) {
        break;
      }
      if ((r10 | 0) != 0) {
        __ZN5Avoid5BlockD1Ev(r10);
        __ZdlPv(r10);
      }
      r11 = r1 + 1 | 0;
      if (r11 >>> 0 < r5 >>> 0) {
        r1 = r11;
      } else {
        r6 = r8;
        r2 = 1574;
        break L1866;
      }
    }
    if (r1 >>> 0 > r8 >>> 0) {
      HEAP32[r9 + (r8 << 2) >> 2] = r10;
    }
    r11 = r8 + 1 | 0;
    r12 = r1 + 1 | 0;
    if (r12 >>> 0 < r5 >>> 0) {
      r7 = r12;
      r8 = r11;
    } else {
      r6 = r11;
      r2 = 1572;
      break;
    }
  }
  if (r2 == 1574) {
    __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE6resizeEj(r3, r6);
    return;
  } else if (r2 == 1572) {
    __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE6resizeEj(r3, r6);
    return;
  }
}
function __ZN5Avoid9IncSolver11splitBlocksEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r4 = r3;
  r5 = r3 + 20;
  r6 = r3 + 40;
  r7 = r3 + 44;
  __ZN5Avoid9IncSolver10moveBlocksEv(r1);
  r8 = (r1 | 0) >> 2;
  HEAP32[r8] = 0;
  r9 = (r1 + 4 | 0) >> 2;
  r10 = HEAP32[r9];
  r11 = HEAP32[r10 + 4 >> 2];
  r12 = __ZNK5Avoid6Blocks4sizeEv(r11, HEAP32[r10 + 8 >> 2]);
  if ((r12 | 0) == 0) {
    r13 = r10;
    __ZN5Avoid6Blocks7cleanupEv(r13);
    STACKTOP = r3;
    return;
  }
  r10 = r1 + 24 | 0;
  r14 = (r1 + 28 | 0) >> 2;
  r15 = r1 + 32 | 0;
  r1 = r15 | 0;
  r16 = r15;
  r15 = r10 | 0;
  r17 = (r5 + 8 | 0) >> 2;
  r18 = r5 + 12 | 0;
  r19 = (r5 + 4 | 0) >> 2;
  r20 = r5 | 0;
  r21 = r5 + 16 | 0;
  r22 = r4 | 0;
  r23 = r4 + 4 | 0;
  r24 = r4 + 8 | 0;
  r25 = r4 + 12 | 0;
  r26 = 0;
  r27 = r11;
  L1885 : while (1) {
    r11 = __ZN5Avoid5Block9findMinLMEv(__ZNK5Avoid6Blocks2atEj(r27, r26));
    do {
      if ((r11 | 0) != 0) {
        r28 = r11 + 16 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r28 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r28 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) >= -1e-4) {
          break;
        }
        if ((HEAP8[r11 + 29 | 0] & 1) << 24 >> 24 != 0) {
          ___assert_func(5244156, 381, 5256180, 5245536);
        }
        HEAP32[r8] = HEAP32[r8] + 1 | 0;
        r28 = HEAP32[HEAP32[r11 >> 2] + 44 >> 2];
        HEAP32[r6 >> 2] = 0;
        HEAP32[r7 >> 2] = 0;
        if ((r28 | 0) != (HEAP32[HEAP32[r11 + 4 >> 2] + 44 >> 2] | 0)) {
          ___assert_func(5244156, 387, 5256180, 5244712);
        }
        __ZN5Avoid5Block5splitERPS0_S2_PNS_10ConstraintE(r28, r6, r7, r11);
        r29 = HEAP32[r6 >> 2];
        __ZN5Avoid5Block22updateWeightedPositionEv(r29);
        r30 = HEAP32[r7 >> 2];
        __ZN5Avoid5Block22updateWeightedPositionEv(r30);
        __ZN5Avoid6Blocks6insertEPNS_5BlockE(HEAP32[r9], r29);
        __ZN5Avoid6Blocks6insertEPNS_5BlockE(HEAP32[r9], r30);
        HEAP8[r28 + 44 | 0] = 1;
        if ((HEAP8[r11 + 28 | 0] & 1) << 24 >> 24 != 0) {
          ___assert_func(5244156, 398, 5256180, 5248504);
        }
        r28 = HEAP32[r14];
        r30 = HEAP32[r1 >> 2];
        if (r28 >>> 0 < r30 >>> 0) {
          if ((r28 | 0) == 0) {
            r31 = 0;
          } else {
            HEAP32[r28 >> 2] = r11;
            r31 = HEAP32[r14];
          }
          HEAP32[r14] = r31 + 4 | 0;
          break;
        }
        r29 = HEAP32[r15 >> 2];
        r32 = r28 - r29 >> 2;
        r28 = r32 + 1 | 0;
        if (r28 >>> 0 > 1073741823) {
          r2 = 1590;
          break L1885;
        }
        r33 = r30 - r29 | 0;
        if (r33 >> 2 >>> 0 > 536870910) {
          r34 = 1073741823;
        } else {
          r29 = r33 >> 1;
          r34 = r29 >>> 0 < r28 >>> 0 ? r28 : r29;
        }
        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r5, r34, r32, r16);
        r32 = HEAP32[r17];
        do {
          if ((r32 | 0) == (HEAP32[r18 >> 2] | 0)) {
            r29 = HEAP32[r19];
            r28 = HEAP32[r20 >> 2];
            if (r29 >>> 0 > r28 >>> 0) {
              r33 = r29;
              r30 = (r33 - r28 + 4 >> 2 | 0) / -2 & -1;
              r35 = (r30 << 2) + r29 | 0;
              r36 = r32 - r33 | 0;
              _memmove(r35, r29, r36, 4, 0);
              r33 = ((r36 >> 2) + r30 << 2) + r29 | 0;
              HEAP32[r17] = r33;
              HEAP32[r19] = r35;
              r37 = r33;
              break;
            }
            r33 = r32 - r28 >> 1;
            r35 = (r33 | 0) == 0 ? 1 : r33;
            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r4, r35, r35 >>> 2, HEAP32[r21 >> 2]);
            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, r29, r32);
            HEAP32[r20 >> 2] = HEAP32[r22 >> 2];
            HEAP32[r22 >> 2] = r28;
            HEAP32[r19] = HEAP32[r23 >> 2];
            HEAP32[r23 >> 2] = r29;
            r29 = HEAP32[r24 >> 2];
            HEAP32[r17] = r29;
            HEAP32[r24 >> 2] = r32;
            HEAP32[r18 >> 2] = HEAP32[r25 >> 2];
            HEAP32[r25 >> 2] = r32;
            __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r4);
            r37 = r29;
          } else {
            r37 = r32;
          }
        } while (0);
        if ((r37 | 0) == 0) {
          r38 = 0;
        } else {
          HEAP32[r37 >> 2] = r11;
          r38 = r37;
        }
        HEAP32[r17] = r38 + 4 | 0;
        __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r10, r5);
        __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r5);
      }
    } while (0);
    r11 = r26 + 1 | 0;
    r32 = HEAP32[r9];
    if (r11 >>> 0 >= r12 >>> 0) {
      r13 = r32;
      r2 = 1607;
      break;
    }
    r26 = r11;
    r27 = HEAP32[r32 + 4 >> 2];
  }
  if (r2 == 1590) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else if (r2 == 1607) {
    __ZN5Avoid6Blocks7cleanupEv(r13);
    STACKTOP = r3;
    return;
  }
}
__ZN5Avoid9IncSolver11splitBlocksEv["X"] = 1;
function __ZN5Avoid6Blocks6insertEPNS_5BlockE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r4 = r3;
  r5 = r3 + 20;
  r6 = r1 + 4 | 0;
  r7 = (r1 + 8 | 0) >> 2;
  r8 = HEAP32[r7];
  r9 = r1 + 12 | 0;
  r1 = HEAP32[r9 >> 2];
  if (r8 >>> 0 < r1 >>> 0) {
    if ((r8 | 0) == 0) {
      r10 = 0;
    } else {
      HEAP32[r8 >> 2] = r2;
      r10 = HEAP32[r7];
    }
    HEAP32[r7] = r10 + 4 | 0;
    STACKTOP = r3;
    return;
  }
  r10 = HEAP32[r6 >> 2];
  r7 = r8 - r10 >> 2;
  r8 = r7 + 1 | 0;
  if (r8 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r11 = r1 - r10 | 0;
  if (r11 >> 2 >>> 0 > 536870910) {
    r12 = 1073741823;
  } else {
    r10 = r11 >> 1;
    r12 = r10 >>> 0 < r8 >>> 0 ? r8 : r10;
  }
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC1EjjS6_(r5, r12, r7, r9);
  r9 = (r5 + 8 | 0) >> 2;
  r7 = HEAP32[r9];
  r12 = r5 + 12 | 0;
  do {
    if ((r7 | 0) == (HEAP32[r12 >> 2] | 0)) {
      r10 = (r5 + 4 | 0) >> 2;
      r8 = HEAP32[r10];
      r11 = r5 | 0;
      r1 = HEAP32[r11 >> 2];
      if (r8 >>> 0 > r1 >>> 0) {
        r13 = r8;
        r14 = (r13 - r1 + 4 >> 2 | 0) / -2 & -1;
        r15 = (r14 << 2) + r8 | 0;
        r16 = r7 - r13 | 0;
        _memmove(r15, r8, r16, 4, 0);
        r13 = ((r16 >> 2) + r14 << 2) + r8 | 0;
        HEAP32[r9] = r13;
        HEAP32[r10] = r15;
        r17 = r13;
        break;
      }
      r13 = r7 - r1 >> 1;
      r15 = (r13 | 0) == 0 ? 1 : r13;
      __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC1EjjS6_(r4, r15, r15 >>> 2, HEAP32[r5 + 16 >> 2]);
      __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, r8, r7);
      r15 = r4 | 0;
      HEAP32[r11 >> 2] = HEAP32[r15 >> 2];
      HEAP32[r15 >> 2] = r1;
      r1 = r4 + 4 | 0;
      HEAP32[r10] = HEAP32[r1 >> 2];
      HEAP32[r1 >> 2] = r8;
      r8 = r4 + 8 | 0;
      r1 = HEAP32[r8 >> 2];
      HEAP32[r9] = r1;
      HEAP32[r8 >> 2] = r7;
      r8 = r4 + 12 | 0;
      HEAP32[r12 >> 2] = HEAP32[r8 >> 2];
      HEAP32[r8 >> 2] = r7;
      __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED1Ev(r4);
      r17 = r1;
    } else {
      r17 = r7;
    }
  } while (0);
  if ((r17 | 0) == 0) {
    r18 = 0;
  } else {
    HEAP32[r17 >> 2] = r2;
    r18 = r17;
  }
  HEAP32[r9] = r18 + 4 | 0;
  __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r6, r5);
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED1Ev(r5);
  STACKTOP = r3;
  return;
}
__ZN5Avoid6Blocks6insertEPNS_5BlockE["X"] = 1;
function __ZN5Avoid13PositionStats11addVariableEPNS_8VariableE(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = r1 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r2 + 28 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r3 = r4 / r5;
  r4 = r2 + 36 | 0;
  r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) / r5;
  r5 = r2 + 20 | 0;
  r4 = r3 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r5 = (r1 + 8 | 0) >> 2;
  r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 1], HEAPF64[tempDoublePtr >> 3]) + r6 * r4;
  HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r5] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r5 = r2 + 4 | 0;
  r2 = (r1 + 16 | 0) >> 2;
  r7 = r4 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) + (HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[r2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  r2 = (r1 + 24 | 0) >> 2;
  r1 = r3 * r4 + (HEAP32[tempDoublePtr >> 2] = HEAP32[r2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 1], HEAPF64[tempDoublePtr >> 3]);
  HEAPF64[tempDoublePtr >> 3] = r1, HEAP32[r2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
  return;
}
function __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1) {
  __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(r1);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(r1 + 56 | 0);
  return;
}
function __ZN5Avoid9IncSolver10moveBlocksEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 4 | 0;
  r1 = HEAP32[r2 >> 2];
  r3 = HEAP32[r1 + 4 >> 2];
  r4 = __ZNK5Avoid6Blocks4sizeEv(r3, HEAP32[r1 + 8 >> 2]);
  if ((r4 | 0) == 0) {
    return;
  } else {
    r5 = 0;
    r6 = r3;
  }
  while (1) {
    __ZN5Avoid5Block22updateWeightedPositionEv(__ZNK5Avoid6Blocks2atEj(r6, r5));
    r3 = r5 + 1 | 0;
    if ((r3 | 0) == (r4 | 0)) {
      break;
    }
    r5 = r3;
    r6 = HEAP32[HEAP32[r2 >> 2] + 4 >> 2];
  }
  return;
}
function __ZN5Avoid5Block22updateWeightedPositionEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r2 = r1 + 12 | 0;
  r3 = r1 + 36 | 0;
  r4 = r1 + 28 | 0;
  r5 = r1 + 20 | 0;
  r6 = r1 | 0;
  r7 = r5 >> 2;
  HEAP32[r7] = 0;
  HEAP32[r7 + 1] = 0;
  HEAP32[r7 + 2] = 0;
  HEAP32[r7 + 3] = 0;
  HEAP32[r7 + 4] = 0;
  HEAP32[r7 + 5] = 0;
  r7 = HEAP32[r6 >> 2];
  r8 = HEAP32[r7 >> 2];
  if ((r8 | 0) == (HEAP32[r7 + 4 >> 2] | 0)) {
    r9 = 0;
    r10 = 0;
    r11 = 0;
  } else {
    r7 = r8;
    while (1) {
      __ZN5Avoid13PositionStats11addVariableEPNS_8VariableE(r2, HEAP32[r7 >> 2]);
      r8 = r7 + 4 | 0;
      if ((r8 | 0) == (HEAP32[HEAP32[r6 >> 2] + 4 >> 2] | 0)) {
        break;
      } else {
        r7 = r8;
      }
    }
    r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r9 = r7;
    r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r11 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  }
  r3 = (r9 - r10) / r11;
  r11 = r1 + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = r3, HEAP32[r11 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  if (!isNaN(r3) & !isNaN(0)) {
    return;
  }
  ___assert_func(5244156, 715, 5258972, 5243008);
  return;
}
function __ZN5Avoid5Block9findMinLMEv(r1) {
  var r2, r3, r4;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r2;
  HEAP32[r3 >> 2] = 0;
  r4 = r1 | 0;
  __ZN5Avoid5Block15reset_active_lmEPNS_8VariableES2_(r1, HEAP32[HEAP32[HEAP32[r4 >> 2] >> 2] >> 2], 0);
  __ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_RPNS_10ConstraintE(r1, HEAP32[HEAP32[HEAP32[r4 >> 2] >> 2] >> 2], 0, r3);
  STACKTOP = r2;
  return HEAP32[r3 >> 2];
}
function __ZN5Avoid5Block5splitERPS0_S2_PNS_10ConstraintE(r1, r2, r3, r4) {
  var r5, r6, r7;
  HEAP8[r4 + 28 | 0] = 0;
  r5 = __Znwj(64);
  r6 = r1 + 60 | 0;
  __ZN5Avoid5BlockC1EPNS_6BlocksEPNS_8VariableE(r5, HEAP32[r6 >> 2], 0);
  HEAP32[r2 >> 2] = r5;
  r2 = r4 | 0;
  r7 = r4 + 4 | 0;
  __ZN5Avoid5Block18populateSplitBlockEPS0_PNS_8VariableEPKS2_(r1, r5, HEAP32[r2 >> 2], HEAP32[r7 >> 2]);
  r5 = __Znwj(64);
  __ZN5Avoid5BlockC1EPNS_6BlocksEPNS_8VariableE(r5, HEAP32[r6 >> 2], 0);
  HEAP32[r3 >> 2] = r5;
  __ZN5Avoid5Block18populateSplitBlockEPS0_PNS_8VariableEPKS2_(r1, r5, HEAP32[r7 >> 2], HEAP32[r2 >> 2]);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6resizeEj(r1, r2) {
  var r3, r4, r5;
  r3 = r1 + 4 | 0;
  r4 = HEAP32[r1 >> 2];
  r5 = HEAP32[r3 >> 2] - r4 >> 2;
  if (r5 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8__appendEj(r1, r2 - r5 | 0);
    return;
  }
  if (r5 >>> 0 <= r2 >>> 0) {
    return;
  }
  HEAP32[r3 >> 2] = (r2 << 2) + r4 | 0;
  return;
}
function __ZN5Avoid6BlocksC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r1 + 4 | 0;
  r4 = r3 | 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r1 + 12 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r2;
  r5 = (r1 + 20 | 0) >> 2;
  r6 = r2 | 0;
  r7 = HEAP32[r2 + 4 >> 2] - HEAP32[r6 >> 2] >> 2;
  HEAP32[r5] = r7;
  HEAP32[r1 >> 2] = 0;
  __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE6resizeEj(r3, r7);
  if ((HEAP32[r5] | 0) > 0) {
    r8 = 0;
  } else {
    return;
  }
  while (1) {
    r7 = __Znwj(64);
    __ZN5Avoid5BlockC1EPNS_6BlocksEPNS_8VariableE(r7, r1, HEAP32[HEAP32[r6 >> 2] + (r8 << 2) >> 2]);
    HEAP32[HEAP32[r4 >> 2] + (r8 << 2) >> 2] = r7;
    r7 = r8 + 1 | 0;
    if ((r7 | 0) < (HEAP32[r5] | 0)) {
      r8 = r7;
    } else {
      break;
    }
  }
  return;
}
__ZN5Avoid6BlocksC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE6resizeEj(r1, r2) {
  var r3, r4, r5;
  r3 = r1 + 4 | 0;
  r4 = HEAP32[r1 >> 2];
  r5 = HEAP32[r3 >> 2] - r4 >> 2;
  if (r5 >>> 0 < r2 >>> 0) {
    __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE8__appendEj(r1, r2 - r5 | 0);
    return;
  }
  if (r5 >>> 0 <= r2 >>> 0) {
    return;
  }
  HEAP32[r3 >> 2] = (r2 << 2) + r4 | 0;
  return;
}
function __ZN5Avoid5BlockC1EPNS_6BlocksEPNS_8VariableE(r1, r2, r3) {
  __ZN5Avoid5BlockC2EPNS_6BlocksEPNS_8VariableE(r1, r2, r3);
  return;
}
function __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZN5Avoid6BlocksD2Ev(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9;
  HEAP32[r1 >> 2] = 0;
  r2 = r1 + 4 | 0;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2 | 0;
  r4 = HEAP32[r1 >> 2];
  r5 = HEAP32[r3] - r4 >> 2;
  if ((r5 | 0) == 0) {
    r6 = r4;
    HEAP32[r3] = r6;
    __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED1Ev(r2);
    return;
  } else {
    r7 = 0;
    r8 = r4;
  }
  while (1) {
    r4 = HEAP32[r8 + (r7 << 2) >> 2];
    if ((r4 | 0) == 0) {
      r9 = r8;
    } else {
      __ZN5Avoid5BlockD1Ev(r4);
      __ZdlPv(r4);
      r9 = HEAP32[r1 >> 2];
    }
    r4 = r7 + 1 | 0;
    if (r4 >>> 0 < r5 >>> 0) {
      r7 = r4;
      r8 = r9;
    } else {
      r6 = r9;
      break;
    }
  }
  HEAP32[r3] = r6;
  __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED1Ev(r2);
  return;
}
function __ZN5Avoid5BlockD1Ev(r1) {
  __ZN5Avoid5BlockD2Ev(r1);
  return;
}
function __ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintEd(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  HEAP8[r3 + 28 | 0] = 1;
  r3 = r2 | 0;
  r5 = HEAP32[r3 >> 2];
  r6 = HEAP32[r5 >> 2];
  L2014 : do {
    if ((r6 | 0) != (HEAP32[r5 + 4 >> 2] | 0)) {
      r7 = r6;
      while (1) {
        r8 = HEAP32[r7 >> 2];
        r9 = (r8 + 36 | 0) >> 2;
        r10 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r9], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 1], HEAPF64[tempDoublePtr >> 3]) + r4;
        HEAPF64[tempDoublePtr >> 3] = r10, HEAP32[r9] = HEAP32[tempDoublePtr >> 2], HEAP32[r9 + 1] = HEAP32[tempDoublePtr + 4 >> 2];
        __ZN5Avoid5Block11addVariableEPNS_8VariableE(r1, r8);
        r8 = r7 + 4 | 0;
        if ((r8 | 0) == (HEAP32[HEAP32[r3 >> 2] + 4 >> 2] | 0)) {
          break L2014;
        } else {
          r7 = r8;
        }
      }
    }
  } while (0);
  r3 = r1 + 28 | 0;
  r4 = r1 + 20 | 0;
  r6 = r1 + 36 | 0;
  r5 = ((HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) / (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r6 = r1 + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = r5, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  if (!isNaN(r5) & !isNaN(0)) {
    r11 = r2 + 44 | 0;
    HEAP8[r11] = 1;
    return;
  }
  ___assert_func(5244156, 803, 5258900, 5243008);
  r11 = r2 + 44 | 0;
  HEAP8[r11] = 1;
  return;
}
function __ZN5Avoid5Block4costEv(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  if ((r1 | 0) == (r2 | 0)) {
    r3 = 0;
    return r3;
  } else {
    r4 = r1;
    r5 = 0;
  }
  while (1) {
    r1 = HEAP32[r4 >> 2];
    r6 = r1 + 28 | 0;
    r7 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r6 = r1 + 36 | 0;
    r8 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r6 = HEAP32[r1 + 44 >> 2];
    r9 = r6 + 4 | 0;
    r10 = r6 + 12 | 0;
    r6 = r1 + 4 | 0;
    r11 = __ZNK5Avoid8Variable8positionEv(r7, r8, (HEAP32[tempDoublePtr >> 2] = HEAP32[r9 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r9 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r6 = r1 + 20 | 0;
    r1 = r5 + r11 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) * r11;
    r11 = r4 + 4 | 0;
    if ((r11 | 0) == (r2 | 0)) {
      r3 = r1;
      break;
    } else {
      r4 = r11;
      r5 = r1;
    }
  }
  return r3;
}
function __ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_10ConstraintE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = r6 >> 2;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r10 = r9 >> 2;
  r11 = STACKTOP, r12 = r11 >> 2;
  STACKTOP = STACKTOP + 136 | 0;
  r13 = STACKTOP, r14 = r13 >> 2;
  STACKTOP = STACKTOP + 136 | 0;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r16 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  if ((r2 | 0) == 0) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(r1, 5250600);
    STACKTOP = r4;
    return;
  }
  r17 = (HEAP8[r2 + 29 | 0] & 1) << 24 >> 24 != 0 ? 5250476 : 5250368;
  r18 = r11 | 0;
  r19 = r11 + 4 | 0;
  HEAP32[r18 >> 2] = 5272872;
  HEAP32[r12 + 14] = 5272892;
  r20 = r11 + 56 | 0;
  __ZNSt3__18ios_base4initEPv(r20, r19);
  HEAP32[r12 + 32] = 0;
  __ZNKSt3__18ios_base6getlocEv(r8, r20);
  r20 = HEAP32[r8 >> 2];
  r8 = __ZNKSt3__16locale9use_facetERNS0_2idE(r20, 5273668);
  r21 = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 28 >> 2]](r8, 32);
  __ZNSt3__16localeD1Ev(r20);
  HEAP8[r11 + 132 | 0] = r21;
  HEAP32[r18 >> 2] = 5266080;
  HEAP32[r12 + 14] = 5266100;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(r19 | 0);
  HEAP32[r19 >> 2] = 5266264;
  r18 = (r11 + 36 | 0) >> 2;
  HEAP32[r18] = 0;
  HEAP32[r18 + 1] = 0;
  HEAP32[r18 + 2] = 0;
  HEAP32[r18 + 3] = 0;
  HEAP32[r12 + 13] = 16;
  HEAP32[r10] = 0;
  HEAP32[r10 + 1] = 0;
  HEAP32[r10 + 2] = 0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(r19, r9);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  r9 = r13 | 0;
  r10 = r13 + 4 | 0;
  HEAP32[r9 >> 2] = 5272872;
  HEAP32[r14 + 14] = 5272892;
  r12 = r13 + 56 | 0;
  __ZNSt3__18ios_base4initEPv(r12, r10);
  HEAP32[r14 + 32] = 0;
  __ZNKSt3__18ios_base6getlocEv(r5, r12);
  r12 = HEAP32[r5 >> 2];
  r5 = __ZNKSt3__16locale9use_facetERNS0_2idE(r12, 5273668);
  r18 = FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] + 28 >> 2]](r5, 32);
  __ZNSt3__16localeD1Ev(r12);
  HEAP8[r13 + 132 | 0] = r18;
  HEAP32[r9 >> 2] = 5266080;
  HEAP32[r14 + 14] = 5266100;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(r10 | 0);
  HEAP32[r10 >> 2] = 5266264;
  r9 = (r13 + 36 | 0) >> 2;
  HEAP32[r9] = 0;
  HEAP32[r9 + 1] = 0;
  HEAP32[r9 + 2] = 0;
  HEAP32[r9 + 3] = 0;
  HEAP32[r14 + 13] = 16;
  HEAP32[r7] = 0;
  HEAP32[r7 + 1] = 0;
  HEAP32[r7 + 2] = 0;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(r10, r6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r6);
  r6 = (r2 | 0) >> 2;
  r7 = HEAP32[r6] + 28 | 0;
  r14 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r14 != 1) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(r11, r14), 5247436);
  }
  r14 = (r2 + 4 | 0) >> 2;
  r7 = HEAP32[r14] + 28 | 0;
  r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  if (r9 != 1) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(r13, r9), 5247436);
  }
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(r15, r19);
  r19 = r2 + 8 | 0;
  r9 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_8VariableE(__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE(r1, r15), HEAP32[r6]), 5250140), (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])), r17);
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(r16, r10);
  __ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_8VariableE(__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE(r9, r16), HEAP32[r14]);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r16);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r15);
  do {
    if ((HEAP32[HEAP32[r6] + 44 >> 2] | 0) == 0) {
      r3 = 1751;
    } else {
      if ((HEAP32[HEAP32[r14] + 44 >> 2] | 0) == 0) {
        r3 = 1751;
        break;
      }
      r15 = r2 + 16 | 0;
      __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(r1, 5249996), __ZNK5Avoid10Constraint5slackEv(r2)), 5249792), (HEAP8[r2 + 28 | 0] & 1) << 24 >> 24 != 0 ? 5249536 : 5244652), 5249028), (HEAP32[tempDoublePtr >> 2] = HEAP32[r15 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r15 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])), 5249792);
      break;
    }
  } while (0);
  if (r3 == 1751) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(r1, 5248832);
  }
  __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r13);
  __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r11);
  STACKTOP = r4;
  return;
}
__ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_10ConstraintE["X"] = 1;
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3;
  r5 = r3 + 8;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(r4, r1);
  do {
    if ((HEAP8[r4 | 0] & 1) << 24 >> 24 != 0) {
      r6 = _strlen(r2);
      r7 = r1;
      r8 = HEAP32[HEAP32[r7 >> 2] - 12 >> 2];
      r9 = r1, r10 = r9 >> 2;
      r11 = r2 + r6 | 0;
      __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r5, HEAP32[(r8 + 24 >> 2) + r10], r2, (HEAP32[(r8 + 4 >> 2) + r10] & 176 | 0) == 32 ? r11 : r2, r11, r9 + r8 | 0, HEAP8[r8 + (r9 + 76) | 0]);
      if ((HEAP32[r5 >> 2] | 0) != 0) {
        break;
      }
      r8 = HEAP32[HEAP32[r7 >> 2] - 12 >> 2];
      __ZNSt3__18ios_base5clearEj(r9 + r8 | 0, HEAP32[(r8 + 16 >> 2) + r10] | 5);
    }
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(r4);
  STACKTOP = r3;
  return r1;
}
__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc["X"] = 1;
function __ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r2, r3) {
  var r4;
  r4 = HEAP32[r2 + 4 >> 2];
  if ((HEAP32[r4 + 44 >> 2] | 0) == (r1 | 0)) {
    return (r4 | 0) != (r3 | 0) & (HEAP8[r2 + 28 | 0] & 1) << 24 >> 24 != 0;
  } else {
    return 0;
  }
}
function __ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r2, r3) {
  var r4;
  r4 = HEAP32[r2 >> 2];
  if ((HEAP32[r4 + 44 >> 2] | 0) == (r1 | 0)) {
    return (r4 | 0) != (r3 | 0) & (HEAP8[r2 + 28 | 0] & 1) << 24 >> 24 != 0;
  } else {
    return 0;
  }
}
function __ZN5Avoid5BlockC2EPNS_6BlocksEPNS_8VariableE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = r1 >> 2;
  r5 = __Znwj(12), r6 = r5 >> 2;
  HEAP32[r6] = 0;
  HEAP32[r6 + 1] = 0;
  HEAP32[r6 + 2] = 0;
  HEAP32[r4] = r5;
  r5 = r1 + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZN5Avoid13PositionStatsC1Ev(r1 + 12 | 0);
  HEAP8[r1 + 44 | 0] = 0;
  HEAP32[r4 + 12] = 0;
  HEAP32[r4 + 13] = 0;
  HEAP32[r4 + 14] = 0;
  HEAP32[r4 + 15] = r2;
  if ((r3 | 0) == 0) {
    return;
  }
  r2 = r3 + 36 | 0;
  HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r2 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZN5Avoid5Block11addVariableEPNS_8VariableE(r1, r3);
  return;
}
function __ZN5Avoid13PositionStatsC1Ev(r1) {
  __ZN5Avoid13PositionStatsC2Ev(r1);
  return;
}
function __ZN5Avoid5BlockD2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) != 0) {
    __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED1Ev(r2);
    __ZdlPv(r2);
  }
  r2 = HEAP32[r1 + 52 >> 2];
  if ((r2 | 0) != 0) {
    __ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED1Ev(r2);
    __ZdlPv(r2);
  }
  r2 = HEAP32[r1 + 56 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED1Ev(r2);
  __ZdlPv(r2);
  return;
}
function __ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED1Ev(r1) {
  __ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED2Ev(r1);
  return;
}
function __ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_RPNS_10ConstraintE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r5 = __ZNK5Avoid8Variable4dfdvEv(r2);
  r6 = HEAP32[r2 + 64 >> 2];
  r7 = r2 + 68 | 0;
  L2105 : do {
    if ((r6 | 0) == (HEAP32[r7 >> 2] | 0)) {
      r8 = r5;
    } else {
      r9 = r6;
      r10 = r5;
      while (1) {
        r11 = HEAP32[r9 >> 2];
        do {
          if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r11, r3)) {
            r12 = __ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_RPNS_10ConstraintE(r1, HEAP32[r11 + 4 >> 2], r2, r4);
            r13 = r11 + 16 | 0;
            HEAPF64[tempDoublePtr >> 3] = r12, HEAP32[r13 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r13 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
            r13 = HEAP32[r11 >> 2] + 28 | 0;
            r14 = r10 + r12 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r13 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r13 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
            if ((HEAP8[r11 + 29 | 0] & 1) << 24 >> 24 != 0) {
              r15 = r14;
              break;
            }
            r13 = HEAP32[r4 >> 2];
            if ((r13 | 0) != 0) {
              r16 = r13 + 16 | 0;
              if (r12 >= (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
                r15 = r14;
                break;
              }
            }
            HEAP32[r4 >> 2] = r11;
            r15 = r14;
          } else {
            r15 = r10;
          }
        } while (0);
        r11 = r9 + 4 | 0;
        if ((r11 | 0) == (HEAP32[r7 >> 2] | 0)) {
          r8 = r15;
          break L2105;
        } else {
          r9 = r11;
          r10 = r15;
        }
      }
    }
  } while (0);
  r15 = HEAP32[r2 + 52 >> 2];
  r7 = r2 + 56 | 0;
  if ((r15 | 0) == (HEAP32[r7 >> 2] | 0)) {
    r17 = r8;
    r18 = r2 + 28 | 0, r19 = r18 >> 2;
    r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
    r21 = r17 / r20;
    return r21;
  } else {
    r22 = r15;
    r23 = r8;
  }
  while (1) {
    r8 = HEAP32[r22 >> 2];
    do {
      if (__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r8, r3)) {
        r15 = -__ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_RPNS_10ConstraintE(r1, HEAP32[r8 >> 2], r2, r4);
        r5 = r8 + 16 | 0;
        HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r5 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r5 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
        r5 = HEAP32[r8 + 4 >> 2] + 28 | 0;
        r6 = r23 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) * r15;
        if ((HEAP8[r8 + 29 | 0] & 1) << 24 >> 24 != 0) {
          r24 = r6;
          break;
        }
        r5 = HEAP32[r4 >> 2];
        if ((r5 | 0) != 0) {
          r10 = r5 + 16 | 0;
          if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r10 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r10 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) <= r15) {
            r24 = r6;
            break;
          }
        }
        HEAP32[r4 >> 2] = r8;
        r24 = r6;
      } else {
        r24 = r23;
      }
    } while (0);
    r8 = r22 + 4 | 0;
    if ((r8 | 0) == (HEAP32[r7 >> 2] | 0)) {
      r17 = r24;
      break;
    } else {
      r22 = r8;
      r23 = r24;
    }
  }
  r18 = r2 + 28 | 0, r19 = r18 >> 2;
  r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
  r21 = r17 / r20;
  return r21;
}
__ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_RPNS_10ConstraintE["X"] = 1;
function __ZNK5Avoid8Variable4dfdvEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = r1 + 20 | 0;
  r3 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) * 2;
  r2 = r1 + 28 | 0;
  r4 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = r1 + 36 | 0;
  r5 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
  r2 = HEAP32[r1 + 44 >> 2];
  r6 = r2 + 4 | 0;
  r7 = r2 + 12 | 0;
  r2 = r1 + 4 | 0;
  return r3 * (__ZNK5Avoid8Variable8positionEv(r4, r5, (HEAP32[tempDoublePtr >> 2] = HEAP32[r6 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]));
}
function __ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r4 = __ZNK5Avoid8Variable4dfdvEv(r2);
  r5 = HEAP32[r2 + 64 >> 2];
  r6 = r2 + 68 | 0;
  r7 = HEAP32[r6 >> 2];
  L2130 : do {
    if ((r5 | 0) == (r7 | 0)) {
      r8 = r4;
    } else {
      r9 = r5;
      r10 = r4;
      r11 = r7;
      while (1) {
        r12 = HEAP32[r9 >> 2];
        if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r12, r3)) {
          r13 = __ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_(r1, HEAP32[r12 + 4 >> 2], r2);
          r14 = r12 + 16 | 0;
          HEAPF64[tempDoublePtr >> 3] = r13, HEAP32[r14 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r14 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
          r14 = HEAP32[r12 >> 2] + 28 | 0;
          r15 = r10 + r13 * (HEAP32[tempDoublePtr >> 2] = HEAP32[r14 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r14 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
          r16 = HEAP32[r6 >> 2];
        } else {
          r15 = r10;
          r16 = r11;
        }
        r14 = r9 + 4 | 0;
        if ((r14 | 0) == (r16 | 0)) {
          r8 = r15;
          break L2130;
        } else {
          r9 = r14;
          r10 = r15;
          r11 = r16;
        }
      }
    }
  } while (0);
  r16 = HEAP32[r2 + 52 >> 2];
  r15 = r2 + 56 | 0;
  r6 = HEAP32[r15 >> 2];
  if ((r16 | 0) == (r6 | 0)) {
    r17 = r8;
    r18 = r2 + 28 | 0, r19 = r18 >> 2;
    r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
    r21 = r17 / r20;
    return r21;
  } else {
    r22 = r16;
    r23 = r8;
    r24 = r6;
  }
  while (1) {
    r6 = HEAP32[r22 >> 2];
    if (__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r6, r3)) {
      r8 = -__ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_(r1, HEAP32[r6 >> 2], r2);
      r16 = r6 + 16 | 0;
      HEAPF64[tempDoublePtr >> 3] = r8, HEAP32[r16 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r16 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      r16 = HEAP32[r6 + 4 >> 2] + 28 | 0;
      r25 = r23 - (HEAP32[tempDoublePtr >> 2] = HEAP32[r16 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r16 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) * r8;
      r26 = HEAP32[r15 >> 2];
    } else {
      r25 = r23;
      r26 = r24;
    }
    r8 = r22 + 4 | 0;
    if ((r8 | 0) == (r26 | 0)) {
      r17 = r25;
      break;
    } else {
      r22 = r8;
      r23 = r25;
      r24 = r26;
    }
  }
  r18 = r2 + 28 | 0, r19 = r18 >> 2;
  r20 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 1], HEAPF64[tempDoublePtr >> 3]);
  r21 = r17 / r20;
  return r21;
}
__ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_["X"] = 1;
function __ZN5Avoid5Block10split_pathEPNS_8VariableES2_S2_RPNS_10ConstraintEb(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r6 = 0;
  r7 = HEAP32[r3 + 52 >> 2];
  r8 = r3 + 56 | 0;
  r9 = HEAP32[r8 >> 2];
  L2146 : do {
    if ((r7 | 0) != (r9 | 0)) {
      r10 = r7;
      r11 = r9;
      while (1) {
        r12 = HEAP32[r10 >> 2];
        if (__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r12, r4)) {
          r13 = HEAP32[r12 >> 2];
          if ((r13 | 0) == (r2 | 0)) {
            r14 = 1;
            r6 = 1846;
            break;
          }
          if (__ZN5Avoid5Block10split_pathEPNS_8VariableES2_S2_RPNS_10ConstraintEb(r1, r2, r13, r3, r5)) {
            r14 = 1;
            r6 = 1845;
            break;
          }
          r15 = HEAP32[r8 >> 2];
        } else {
          r15 = r11;
        }
        r13 = r10 + 4 | 0;
        if ((r13 | 0) == (r15 | 0)) {
          break L2146;
        } else {
          r10 = r13;
          r11 = r15;
        }
      }
      if (r6 == 1845) {
        return r14;
      } else if (r6 == 1846) {
        return r14;
      }
    }
  } while (0);
  r15 = HEAP32[r3 + 64 >> 2];
  r8 = r3 + 68 | 0;
  r9 = HEAP32[r8 >> 2];
  if ((r15 | 0) == (r9 | 0)) {
    r14 = 0;
    return r14;
  } else {
    r16 = r15;
    r17 = r9;
  }
  while (1) {
    r18 = HEAP32[r16 >> 2];
    if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r18, r4)) {
      r9 = HEAP32[r18 + 4 >> 2];
      if ((r9 | 0) == (r2 | 0)) {
        r6 = 1835;
        break;
      }
      if (__ZN5Avoid5Block10split_pathEPNS_8VariableES2_S2_RPNS_10ConstraintEb(r1, r2, r9, r3, r5)) {
        r6 = 1839;
        break;
      }
      r19 = HEAP32[r8 >> 2];
    } else {
      r19 = r17;
    }
    r9 = r16 + 4 | 0;
    if ((r9 | 0) == (r19 | 0)) {
      r14 = 0;
      r6 = 1849;
      break;
    } else {
      r16 = r9;
      r17 = r19;
    }
  }
  if (r6 == 1835) {
    if ((HEAP8[r18 + 29 | 0] & 1) << 24 >> 24 != 0) {
      r14 = 1;
      return r14;
    }
    HEAP32[r5 >> 2] = r18;
    r14 = 1;
    return r14;
  } else if (r6 == 1849) {
    return r14;
  } else if (r6 == 1839) {
    if ((HEAP8[r18 + 29 | 0] & 1) << 24 >> 24 != 0) {
      r14 = 1;
      return r14;
    }
    r6 = HEAP32[r5 >> 2];
    do {
      if ((r6 | 0) != 0) {
        r19 = r18 + 16 | 0;
        r17 = r6 + 16 | 0;
        if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) < (HEAP32[tempDoublePtr >> 2] = HEAP32[r17 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r17 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) {
          break;
        } else {
          r14 = 1;
        }
        return r14;
      }
    } while (0);
    HEAP32[r5 >> 2] = r18;
    r14 = 1;
    return r14;
  }
}
__ZN5Avoid5Block10split_pathEPNS_8VariableES2_S2_RPNS_10ConstraintEb["X"] = 1;
function __ZN5Avoid5Block15reset_active_lmEPNS_8VariableES2_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r4 = HEAP32[r2 + 64 >> 2];
  r5 = r2 + 68 | 0;
  r6 = HEAP32[r5 >> 2];
  L2184 : do {
    if ((r4 | 0) != (r6 | 0)) {
      r7 = r4;
      r8 = r6;
      while (1) {
        r9 = HEAP32[r7 >> 2];
        if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r9, r3)) {
          r10 = r9 + 16 | 0;
          HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r10 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r10 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
          __ZN5Avoid5Block15reset_active_lmEPNS_8VariableES2_(r1, HEAP32[r9 + 4 >> 2], r2);
          r11 = HEAP32[r5 >> 2];
        } else {
          r11 = r8;
        }
        r9 = r7 + 4 | 0;
        if ((r9 | 0) == (r11 | 0)) {
          break L2184;
        } else {
          r7 = r9;
          r8 = r11;
        }
      }
    }
  } while (0);
  r11 = HEAP32[r2 + 52 >> 2];
  r5 = r2 + 56 | 0;
  r6 = HEAP32[r5 >> 2];
  if ((r11 | 0) == (r6 | 0)) {
    return;
  } else {
    r12 = r11;
    r13 = r6;
  }
  while (1) {
    r6 = HEAP32[r12 >> 2];
    if (__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r6, r3)) {
      r11 = r6 + 16 | 0;
      HEAPF64[tempDoublePtr >> 3] = 0, HEAP32[r11 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r11 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
      __ZN5Avoid5Block15reset_active_lmEPNS_8VariableES2_(r1, HEAP32[r6 >> 2], r2);
      r14 = HEAP32[r5 >> 2];
    } else {
      r14 = r13;
    }
    r6 = r12 + 4 | 0;
    if ((r6 | 0) == (r14 | 0)) {
      break;
    } else {
      r12 = r6;
      r13 = r14;
    }
  }
  return;
}
function __ZN5Avoid22UnsatisfiableExceptionC1Ev(r1) {
  __ZN5Avoid22UnsatisfiableExceptionC2Ev(r1);
  return;
}
function __ZN5Avoid5Block11addVariableEPNS_8VariableE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r4 = r3;
  r5 = r3 + 20;
  HEAP32[r2 + 44 >> 2] = r1;
  r6 = HEAP32[r1 >> 2];
  r7 = (r6 + 4 | 0) >> 2;
  r8 = HEAP32[r7];
  r9 = r6 + 8 | 0;
  r10 = HEAP32[r9 >> 2];
  if (r8 >>> 0 < r10 >>> 0) {
    if ((r8 | 0) == 0) {
      r11 = 0;
    } else {
      HEAP32[r8 >> 2] = r2;
      r11 = HEAP32[r7];
    }
    HEAP32[r7] = r11 + 4 | 0;
  } else {
    r11 = HEAP32[r6 >> 2];
    r7 = r8 - r11 >> 2;
    r8 = r7 + 1 | 0;
    if (r8 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    }
    r12 = r10 - r11 | 0;
    if (r12 >> 2 >>> 0 > 536870910) {
      r13 = 1073741823;
    } else {
      r11 = r12 >> 1;
      r13 = r11 >>> 0 < r8 >>> 0 ? r8 : r11;
    }
    __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r5, r13, r7, r9);
    r9 = (r5 + 8 | 0) >> 2;
    r7 = HEAP32[r9];
    r13 = r5 + 12 | 0;
    do {
      if ((r7 | 0) == (HEAP32[r13 >> 2] | 0)) {
        r11 = (r5 + 4 | 0) >> 2;
        r8 = HEAP32[r11];
        r12 = r5 | 0;
        r10 = HEAP32[r12 >> 2];
        if (r8 >>> 0 > r10 >>> 0) {
          r14 = r8;
          r15 = (r14 - r10 + 4 >> 2 | 0) / -2 & -1;
          r16 = (r15 << 2) + r8 | 0;
          r17 = r7 - r14 | 0;
          _memmove(r16, r8, r17, 4, 0);
          r14 = ((r17 >> 2) + r15 << 2) + r8 | 0;
          HEAP32[r9] = r14;
          HEAP32[r11] = r16;
          r18 = r14;
          break;
        }
        r14 = r7 - r10 >> 1;
        r16 = (r14 | 0) == 0 ? 1 : r14;
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_(r4, r16, r16 >>> 2, HEAP32[r5 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, r8, r7);
        r16 = r4 | 0;
        HEAP32[r12 >> 2] = HEAP32[r16 >> 2];
        HEAP32[r16 >> 2] = r10;
        r10 = r4 + 4 | 0;
        HEAP32[r11] = HEAP32[r10 >> 2];
        HEAP32[r10 >> 2] = r8;
        r8 = r4 + 8 | 0;
        r10 = HEAP32[r8 >> 2];
        HEAP32[r9] = r10;
        HEAP32[r8 >> 2] = r7;
        r8 = r4 + 12 | 0;
        HEAP32[r13 >> 2] = HEAP32[r8 >> 2];
        HEAP32[r8 >> 2] = r7;
        __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r4);
        r18 = r10;
      } else {
        r18 = r7;
      }
    } while (0);
    if ((r18 | 0) == 0) {
      r19 = 0;
    } else {
      HEAP32[r18 >> 2] = r2;
      r19 = r18;
    }
    HEAP32[r9] = r19 + 4 | 0;
    __ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r6, r5);
    __ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev(r5);
  }
  r5 = r1 + 12 | 0;
  r6 = (r1 + 36 | 0) >> 2;
  if ((HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]) == 0) {
    r19 = r2 + 28 | 0;
    r9 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r19 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r19 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r19 = r5 | 0;
    HEAPF64[tempDoublePtr >> 3] = r9, HEAP32[r19 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r19 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  }
  __ZN5Avoid13PositionStats11addVariableEPNS_8VariableE(r5, r2);
  r2 = r1 + 28 | 0;
  r5 = r1 + 20 | 0;
  r19 = ((HEAP32[tempDoublePtr >> 2] = HEAP32[r2 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r2 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]) - (HEAP32[tempDoublePtr >> 2] = HEAP32[r5 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r5 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])) / (HEAP32[tempDoublePtr >> 2] = HEAP32[r6], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r6 + 1], HEAPF64[tempDoublePtr >> 3]);
  r6 = r1 + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = r19, HEAP32[r6 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r6 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  if (!isNaN(r19) & !isNaN(0)) {
    STACKTOP = r3;
    return;
  }
  ___assert_func(5244156, 682, 5259016, 5243008);
  STACKTOP = r3;
  return;
}
__ZN5Avoid5Block11addVariableEPNS_8VariableE["X"] = 1;
function __ZN5Avoid5Block16findMinLMBetweenEPNS_8VariableES2_(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r5 = r4;
  r6 = r4 + 4;
  r7 = r1 | 0;
  __ZN5Avoid5Block15reset_active_lmEPNS_8VariableES2_(r1, HEAP32[HEAP32[HEAP32[r7 >> 2] >> 2] >> 2], 0);
  __ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_(r1, HEAP32[HEAP32[HEAP32[r7 >> 2] >> 2] >> 2], 0);
  HEAP32[r5 >> 2] = 0;
  __ZN5Avoid5Block10split_pathEPNS_8VariableES2_S2_RPNS_10ConstraintEb(r1, r3, r2, 0, r5);
  r7 = HEAP32[r5 >> 2];
  if ((r7 | 0) != 0) {
    STACKTOP = r4;
    return r7;
  }
  __ZN5Avoid22UnsatisfiableExceptionC1Ev(r6);
  __ZNK5Avoid5Block20getActivePathBetweenERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEEPKNS_8VariableESB_SB_(r1, r6 | 0, r2, r3, 0);
  r3 = ___cxa_allocate_exception(12);
  __ZN5Avoid22UnsatisfiableExceptionC1ERKS0_(r3, r6);
  ___cxa_throw(r3, 5272708, 204);
}
function __ZN5Avoid10ConstraintC2EPNS_8VariableES2_db(r1, r2, r3, r4, r5) {
  HEAP32[r1 >> 2] = r2;
  HEAP32[r1 + 4 >> 2] = r3;
  r3 = r1 + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = r4, HEAP32[r3 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r3 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  HEAP32[r1 + 24 >> 2] = 0;
  HEAP8[r1 + 28 | 0] = 0;
  HEAP8[r1 + 29 | 0] = r5 & 1;
  HEAP8[r1 + 30 | 0] = 0;
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZN5Avoid5Block18populateSplitBlockEPS0_PNS_8VariableEPKS2_(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  __ZN5Avoid5Block11addVariableEPNS_8VariableE(r2, r3);
  r5 = HEAP32[r3 + 52 >> 2];
  r6 = r3 + 56 | 0;
  r7 = HEAP32[r6 >> 2];
  L2262 : do {
    if ((r5 | 0) != (r7 | 0)) {
      r8 = r5;
      r9 = r7;
      while (1) {
        r10 = HEAP32[r8 >> 2];
        if (__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r10, r4)) {
          __ZN5Avoid5Block18populateSplitBlockEPS0_PNS_8VariableEPKS2_(r1, r2, HEAP32[r10 >> 2], r3);
          r11 = HEAP32[r6 >> 2];
        } else {
          r11 = r9;
        }
        r10 = r8 + 4 | 0;
        if ((r10 | 0) == (r11 | 0)) {
          break L2262;
        } else {
          r8 = r10;
          r9 = r11;
        }
      }
    }
  } while (0);
  r11 = HEAP32[r3 + 64 >> 2];
  r6 = r3 + 68 | 0;
  r7 = HEAP32[r6 >> 2];
  if ((r11 | 0) == (r7 | 0)) {
    return;
  } else {
    r12 = r11;
    r13 = r7;
  }
  while (1) {
    r7 = HEAP32[r12 >> 2];
    if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r7, r4)) {
      __ZN5Avoid5Block18populateSplitBlockEPS0_PNS_8VariableEPKS2_(r1, r2, HEAP32[r7 + 4 >> 2], r3);
      r14 = HEAP32[r6 >> 2];
    } else {
      r14 = r13;
    }
    r7 = r12 + 4 | 0;
    if ((r7 | 0) == (r14 | 0)) {
      break;
    } else {
      r12 = r7;
      r13 = r14;
    }
  }
  return;
}
function __ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_8VariableE(r1, r2) {
  var r3, r4, r5, r6, r7;
  r3 = r2 + 44 | 0;
  r4 = (HEAP32[r3 >> 2] | 0) == 0;
  r5 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(r1, 5249996), HEAP32[r2 >> 2]), 5250476);
  if (r4) {
    r4 = r2 + 4 | 0;
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(r5, (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3])), 5249792);
    return r1;
  } else {
    r4 = r2 + 28 | 0;
    r6 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r4 = r2 + 36 | 0;
    r2 = (HEAP32[tempDoublePtr >> 2] = HEAP32[r4 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r4 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]);
    r4 = HEAP32[r3 >> 2];
    r3 = r4 + 4 | 0;
    r7 = r4 + 12 | 0;
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(r5, __ZNK5Avoid8Variable8positionEv(r6, r2, (HEAP32[tempDoublePtr >> 2] = HEAP32[r3 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r3 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]), (HEAP32[tempDoublePtr >> 2] = HEAP32[r7 >> 2], HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[r7 + 4 >> 2], HEAPF64[tempDoublePtr >> 3]))), 5249792);
    return r1;
  }
}
function __ZN5Avoid10ConstraintC1EPNS_8VariableES2_db(r1, r2, r3, r4, r5) {
  __ZN5Avoid10ConstraintC2EPNS_8VariableES2_db(r1, r2, r3, r4, r5);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10;
  r3 = (r1 + 4 | 0) >> 2;
  r4 = HEAP32[r3];
  r5 = (r1 | 0) >> 2;
  r6 = HEAP32[r5];
  L2286 : do {
    if (r6 >>> 0 < r4 >>> 0) {
      r7 = r4;
      while (1) {
        r8 = r7 - 4 | 0;
        __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE10push_frontERKS3_(r2, r8);
        r9 = HEAP32[r5];
        if (r9 >>> 0 < r8 >>> 0) {
          r7 = r8;
        } else {
          r10 = r9;
          break L2286;
        }
      }
    } else {
      r10 = r6;
    }
  } while (0);
  r6 = (r2 + 4 | 0) >> 2;
  HEAP32[r5] = HEAP32[r6];
  HEAP32[r6] = r10;
  r10 = r2 + 8 | 0;
  r5 = HEAP32[r3];
  HEAP32[r3] = HEAP32[r10 >> 2];
  HEAP32[r10 >> 2] = r5;
  r5 = r1 + 8 | 0;
  r1 = r2 + 12 | 0;
  r10 = HEAP32[r5 >> 2];
  HEAP32[r5 >> 2] = HEAP32[r1 >> 2];
  HEAP32[r1 >> 2] = r10;
  HEAP32[r2 >> 2] = HEAP32[r6];
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  __ZdlPv(r2);
  return;
}
function __ZNK5Avoid5Block20getActivePathBetweenERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEEPKNS_8VariableESB_SB_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40;
  r6 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 80 | 0;
  r8 = r7;
  r9 = r7 + 20;
  r10 = r7 + 40;
  r11 = r7 + 60;
  if ((r3 | 0) == (r4 | 0)) {
    r12 = 1;
    STACKTOP = r7;
    return r12;
  }
  r13 = HEAP32[r3 + 52 >> 2];
  r14 = r3 + 56 | 0;
  r15 = HEAP32[r14 >> 2];
  L2300 : do {
    if ((r13 | 0) != (r15 | 0)) {
      r16 = r13, r17 = r16 >> 2;
      r18 = r15;
      while (1) {
        r19 = HEAP32[r17];
        if (__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE(r1, r19, r5)) {
          if (__ZNK5Avoid5Block20getActivePathBetweenERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEEPKNS_8VariableESB_SB_(r1, r2, HEAP32[r19 >> 2], r4, r3)) {
            break;
          }
          r20 = HEAP32[r14 >> 2];
        } else {
          r20 = r18;
        }
        r19 = r16 + 4 | 0;
        if ((r19 | 0) == (r20 | 0)) {
          break L2300;
        } else {
          r16 = r19, r17 = r16 >> 2;
          r18 = r20;
        }
      }
      r18 = (r2 + 4 | 0) >> 2;
      r16 = HEAP32[r18];
      r19 = r2 + 8 | 0;
      r21 = HEAP32[r19 >> 2];
      if (r16 >>> 0 < r21 >>> 0) {
        if ((r16 | 0) == 0) {
          r22 = 0;
        } else {
          HEAP32[r16 >> 2] = HEAP32[r17];
          r22 = HEAP32[r18];
        }
        HEAP32[r18] = r22 + 4 | 0;
        r12 = 1;
        STACKTOP = r7;
        return r12;
      }
      r18 = HEAP32[r2 >> 2];
      r23 = r16 - r18 >> 2;
      r16 = r23 + 1 | 0;
      if (r16 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      }
      r24 = r21 - r18 | 0;
      if (r24 >> 2 >>> 0 > 536870910) {
        r25 = 1073741823;
      } else {
        r18 = r24 >> 1;
        r25 = r18 >>> 0 < r16 >>> 0 ? r16 : r18;
      }
      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r9, r25, r23, r19);
      r19 = (r9 + 8 | 0) >> 2;
      r23 = HEAP32[r19];
      r18 = r9 + 12 | 0;
      do {
        if ((r23 | 0) == (HEAP32[r18 >> 2] | 0)) {
          r16 = (r9 + 4 | 0) >> 2;
          r24 = HEAP32[r16];
          r21 = r9 | 0;
          r26 = HEAP32[r21 >> 2];
          if (r24 >>> 0 > r26 >>> 0) {
            r27 = r24;
            r28 = (r27 - r26 + 4 >> 2 | 0) / -2 & -1;
            r29 = (r28 << 2) + r24 | 0;
            r30 = r23 - r27 | 0;
            _memmove(r29, r24, r30, 4, 0);
            r27 = ((r30 >> 2) + r28 << 2) + r24 | 0;
            HEAP32[r19] = r27;
            HEAP32[r16] = r29;
            r31 = r27;
            break;
          }
          r27 = r23 - r26 >> 1;
          r29 = (r27 | 0) == 0 ? 1 : r27;
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r8, r29, r29 >>> 2, HEAP32[r9 + 16 >> 2]);
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r8, r24, r23);
          r29 = r8 | 0;
          HEAP32[r21 >> 2] = HEAP32[r29 >> 2];
          HEAP32[r29 >> 2] = r26;
          r26 = r8 + 4 | 0;
          HEAP32[r16] = HEAP32[r26 >> 2];
          HEAP32[r26 >> 2] = r24;
          r24 = r8 + 8 | 0;
          r26 = HEAP32[r24 >> 2];
          HEAP32[r19] = r26;
          HEAP32[r24 >> 2] = r23;
          r24 = r8 + 12 | 0;
          HEAP32[r18 >> 2] = HEAP32[r24 >> 2];
          HEAP32[r24 >> 2] = r23;
          __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r8);
          r31 = r26;
        } else {
          r31 = r23;
        }
      } while (0);
      if ((r31 | 0) == 0) {
        r32 = 0;
      } else {
        HEAP32[r31 >> 2] = HEAP32[r17];
        r32 = r31;
      }
      HEAP32[r19] = r32 + 4 | 0;
      __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r2, r9);
      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r9);
      r12 = 1;
      STACKTOP = r7;
      return r12;
    }
  } while (0);
  r9 = HEAP32[r3 + 64 >> 2];
  r32 = r3 + 68 | 0;
  r31 = HEAP32[r32 >> 2];
  if ((r9 | 0) == (r31 | 0)) {
    r12 = 0;
    STACKTOP = r7;
    return r12;
  } else {
    r33 = r9, r34 = r33 >> 2;
    r35 = r31;
  }
  while (1) {
    r31 = HEAP32[r34];
    if (__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE(r1, r31, r5)) {
      if (__ZNK5Avoid5Block20getActivePathBetweenERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEEPKNS_8VariableESB_SB_(r1, r2, HEAP32[r31 + 4 >> 2], r4, r3)) {
        break;
      }
      r36 = HEAP32[r32 >> 2];
    } else {
      r36 = r35;
    }
    r31 = r33 + 4 | 0;
    if ((r31 | 0) == (r36 | 0)) {
      r12 = 0;
      r6 = 1997;
      break;
    } else {
      r33 = r31, r34 = r33 >> 2;
      r35 = r36;
    }
  }
  if (r6 == 1997) {
    STACKTOP = r7;
    return r12;
  }
  r6 = (r2 + 4 | 0) >> 2;
  r36 = HEAP32[r6];
  r35 = r2 + 8 | 0;
  r33 = HEAP32[r35 >> 2];
  if (r36 >>> 0 < r33 >>> 0) {
    if ((r36 | 0) == 0) {
      r37 = 0;
    } else {
      HEAP32[r36 >> 2] = HEAP32[r34];
      r37 = HEAP32[r6];
    }
    HEAP32[r6] = r37 + 4 | 0;
    r12 = 1;
    STACKTOP = r7;
    return r12;
  }
  r37 = HEAP32[r2 >> 2];
  r6 = r36 - r37 >> 2;
  r36 = r6 + 1 | 0;
  if (r36 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r32 = r33 - r37 | 0;
  if (r32 >> 2 >>> 0 > 536870910) {
    r38 = 1073741823;
  } else {
    r37 = r32 >> 1;
    r38 = r37 >>> 0 < r36 >>> 0 ? r36 : r37;
  }
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r11, r38, r6, r35);
  r35 = (r11 + 8 | 0) >> 2;
  r6 = HEAP32[r35];
  r38 = r11 + 12 | 0;
  do {
    if ((r6 | 0) == (HEAP32[r38 >> 2] | 0)) {
      r37 = (r11 + 4 | 0) >> 2;
      r36 = HEAP32[r37];
      r32 = r11 | 0;
      r33 = HEAP32[r32 >> 2];
      if (r36 >>> 0 > r33 >>> 0) {
        r3 = r36;
        r4 = (r3 - r33 + 4 >> 2 | 0) / -2 & -1;
        r1 = (r4 << 2) + r36 | 0;
        r5 = r6 - r3 | 0;
        _memmove(r1, r36, r5, 4, 0);
        r3 = ((r5 >> 2) + r4 << 2) + r36 | 0;
        HEAP32[r35] = r3;
        HEAP32[r37] = r1;
        r39 = r3;
        break;
      }
      r3 = r6 - r33 >> 1;
      r1 = (r3 | 0) == 0 ? 1 : r3;
      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r10, r1, r1 >>> 2, HEAP32[r11 + 16 >> 2]);
      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r10, r36, r6);
      r1 = r10 | 0;
      HEAP32[r32 >> 2] = HEAP32[r1 >> 2];
      HEAP32[r1 >> 2] = r33;
      r33 = r10 + 4 | 0;
      HEAP32[r37] = HEAP32[r33 >> 2];
      HEAP32[r33 >> 2] = r36;
      r36 = r10 + 8 | 0;
      r33 = HEAP32[r36 >> 2];
      HEAP32[r35] = r33;
      HEAP32[r36 >> 2] = r6;
      r36 = r10 + 12 | 0;
      HEAP32[r38 >> 2] = HEAP32[r36 >> 2];
      HEAP32[r36 >> 2] = r6;
      __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r10);
      r39 = r33;
    } else {
      r39 = r6;
    }
  } while (0);
  if ((r39 | 0) == 0) {
    r40 = 0;
  } else {
    HEAP32[r39 >> 2] = HEAP32[r34];
    r40 = r39;
  }
  HEAP32[r35] = r40 + 4 | 0;
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r2, r11);
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r11);
  r12 = 1;
  STACKTOP = r7;
  return r12;
}
__ZNK5Avoid5Block20getActivePathBetweenERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEEPKNS_8VariableESB_SB_["X"] = 1;
function __ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3;
  r5 = r3 + 8;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(r4, r1);
  do {
    if ((HEAP8[r4 | 0] & 1) << 24 >> 24 != 0) {
      r6 = r2;
      r7 = HEAP8[r2];
      r8 = r7 & 255;
      if ((r8 & 1 | 0) == 0) {
        r9 = r8 >>> 1;
      } else {
        r9 = HEAP32[r2 + 4 >> 2];
      }
      r8 = r1;
      r10 = HEAP32[HEAP32[r8 >> 2] - 12 >> 2];
      r11 = r1, r12 = r11 >> 2;
      r13 = HEAP32[(r10 + 24 >> 2) + r12];
      r14 = (r7 & 1) << 24 >> 24 == 0;
      if (r14) {
        r15 = r6 + 1 | 0;
      } else {
        r15 = HEAP32[r2 + 8 >> 2];
      }
      do {
        if ((HEAP32[(r10 + 4 >> 2) + r12] & 176 | 0) == 32) {
          if (r14) {
            r16 = r6 + 1 | 0;
            r17 = r6 + (r9 + 1) | 0;
            break;
          } else {
            r7 = HEAP32[r2 + 8 >> 2];
            r16 = r7;
            r17 = r7 + r9 | 0;
            break;
          }
        } else {
          if (r14) {
            r7 = r6 + 1 | 0;
            r16 = r7;
            r17 = r7;
            break;
          } else {
            r7 = HEAP32[r2 + 8 >> 2];
            r16 = r7;
            r17 = r7;
            break;
          }
        }
      } while (0);
      __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r5, r13, r15, r17, r16 + r9 | 0, r11 + r10 | 0, HEAP8[r10 + (r11 + 76) | 0]);
      if ((HEAP32[r5 >> 2] | 0) != 0) {
        break;
      }
      r6 = HEAP32[HEAP32[r8 >> 2] - 12 >> 2];
      __ZNSt3__18ios_base5clearEj(r11 + r6 | 0, HEAP32[(r6 + 16 >> 2) + r12] | 5);
    }
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(r4);
  STACKTOP = r3;
  return r1;
}
__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8allocateEj(r1, r2) {
  var r3;
  if (r2 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  } else {
    r3 = __Znwj(r2 << 2);
    HEAP32[r1 + 4 >> 2] = r3;
    HEAP32[r1 >> 2] = r3;
    HEAP32[r1 + 8 >> 2] = (r2 << 2) + r3 | 0;
    return;
  }
}
function __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (r6 - r7 >> 2 >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = r7 - r8 >> 2;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = r6 - r8 | 0;
  if (r10 >> 2 >>> 0 > 536870910) {
    r11 = 1073741823;
  } else {
    r8 = r10 >> 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC1EjjS6_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r4);
  __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25;
  r7 = r2 >> 2;
  r8 = 0;
  r9 = r2 + 44 | 0;
  r10 = HEAP32[r9 >> 2];
  r11 = r2 + 24 | 0;
  r12 = HEAP32[r11 >> 2];
  if (r10 >>> 0 < r12 >>> 0) {
    HEAP32[r9 >> 2] = r12;
    r13 = r12;
  } else {
    r13 = r10;
  }
  r10 = r6 & 24;
  do {
    if ((r10 | 0) == 0) {
      r9 = r1;
      r14 = r9 | 0, r15 = r14 >> 2;
      HEAP32[r15] = 0;
      r16 = r9 + 4 | 0, r17 = r16 >> 2;
      HEAP32[r17] = 0;
      r9 = r1 + 8 | 0;
      r18 = r9 | 0, r19 = r18 >> 2;
      HEAP32[r19] = -1;
      r20 = r9 + 4 | 0, r21 = r20 >> 2;
      HEAP32[r21] = -1;
      return;
    } else if ((r10 | 0) == 24) {
      if ((r5 | 0) == 0) {
        r22 = 0;
        r23 = 0;
        break;
      } else if ((r5 | 0) == 2) {
        r8 = 2064;
        break;
      } else if ((r5 | 0) != 1) {
        r8 = 2068;
        break;
      }
      r9 = r1;
      r14 = r9 | 0, r15 = r14 >> 2;
      HEAP32[r15] = 0;
      r16 = r9 + 4 | 0, r17 = r16 >> 2;
      HEAP32[r17] = 0;
      r9 = r1 + 8 | 0;
      r18 = r9 | 0, r19 = r18 >> 2;
      HEAP32[r19] = -1;
      r20 = r9 + 4 | 0, r21 = r20 >> 2;
      HEAP32[r21] = -1;
      return;
    } else {
      if ((r5 | 0) == 0) {
        r22 = 0;
        r23 = 0;
        break;
      } else if ((r5 | 0) == 2) {
        r8 = 2064;
        break;
      } else if ((r5 | 0) != 1) {
        r8 = 2068;
        break;
      }
      if ((r6 & 8 | 0) == 0) {
        r9 = r12 - HEAP32[r7 + 5] | 0;
        r22 = (r9 | 0) < 0 ? -1 : 0;
        r23 = r9;
        break;
      } else {
        r9 = HEAP32[r7 + 3] - HEAP32[r7 + 2] | 0;
        r22 = (r9 | 0) < 0 ? -1 : 0;
        r23 = r9;
        break;
      }
    }
  } while (0);
  if (r8 == 2068) {
    r5 = r1;
    r14 = r5 | 0, r15 = r14 >> 2;
    HEAP32[r15] = 0;
    r16 = r5 + 4 | 0, r17 = r16 >> 2;
    HEAP32[r17] = 0;
    r5 = r1 + 8 | 0;
    r18 = r5 | 0, r19 = r18 >> 2;
    HEAP32[r19] = -1;
    r20 = r5 + 4 | 0, r21 = r20 >> 2;
    HEAP32[r21] = -1;
    return;
  }
  if (r8 == 2064) {
    r8 = r2 + 32 | 0;
    if ((HEAP8[r8] & 1) << 24 >> 24 == 0) {
      r24 = r8 + 1 | 0;
    } else {
      r24 = HEAP32[r7 + 10];
    }
    r8 = r13 - r24 | 0;
    r22 = (r8 | 0) < 0 ? -1 : 0;
    r23 = r8;
  }
  r8 = (i64Math.add(r23, r22, r3, r4), HEAP32[tempDoublePtr >> 2]);
  r4 = HEAP32[tempDoublePtr + 4 >> 2];
  r3 = 0;
  do {
    if (!((r4 | 0) < (r3 | 0) | (r4 | 0) == (r3 | 0) & r8 >>> 0 < 0 >>> 0)) {
      r22 = r2 + 32 | 0;
      if ((HEAP8[r22] & 1) << 24 >> 24 == 0) {
        r25 = r22 + 1 | 0;
      } else {
        r25 = HEAP32[r7 + 10];
      }
      r22 = r13 - r25 | 0;
      r23 = (r22 | 0) < 0 ? -1 : 0;
      if ((r23 | 0) < (r4 | 0) | (r23 | 0) == (r4 | 0) & r22 >>> 0 < r8 >>> 0) {
        break;
      }
      r22 = r6 & 8;
      do {
        if (!((r8 | 0) == 0 & (r4 | 0) == 0)) {
          do {
            if ((r22 | 0) != 0) {
              if ((HEAP32[r7 + 3] | 0) != 0) {
                break;
              }
              r23 = r1;
              r14 = r23 | 0, r15 = r14 >> 2;
              HEAP32[r15] = 0;
              r16 = r23 + 4 | 0, r17 = r16 >> 2;
              HEAP32[r17] = 0;
              r23 = r1 + 8 | 0;
              r18 = r23 | 0, r19 = r18 >> 2;
              HEAP32[r19] = -1;
              r20 = r23 + 4 | 0, r21 = r20 >> 2;
              HEAP32[r21] = -1;
              return;
            }
          } while (0);
          if (!((r6 & 16 | 0) != 0 & (r12 | 0) == 0)) {
            break;
          }
          r23 = r1;
          r14 = r23 | 0, r15 = r14 >> 2;
          HEAP32[r15] = 0;
          r16 = r23 + 4 | 0, r17 = r16 >> 2;
          HEAP32[r17] = 0;
          r23 = r1 + 8 | 0;
          r18 = r23 | 0, r19 = r18 >> 2;
          HEAP32[r19] = -1;
          r20 = r23 + 4 | 0, r21 = r20 >> 2;
          HEAP32[r21] = -1;
          return;
        }
      } while (0);
      if ((r22 | 0) != 0) {
        HEAP32[r7 + 3] = HEAP32[r7 + 2] + r8 | 0;
        HEAP32[r7 + 4] = r13;
      }
      if ((r6 & 16 | 0) != 0) {
        HEAP32[r11 >> 2] = HEAP32[r7 + 5] + r8 | 0;
      }
      r23 = r1;
      r14 = r23 | 0, r15 = r14 >> 2;
      HEAP32[r15] = 0;
      r16 = r23 + 4 | 0, r17 = r16 >> 2;
      HEAP32[r17] = 0;
      r23 = r1 + 8 | 0;
      HEAP32[r23 >> 2] = r8;
      HEAP32[r23 + 4 >> 2] = r4;
      return;
    }
  } while (0);
  r4 = r1;
  r14 = r4 | 0, r15 = r14 >> 2;
  HEAP32[r15] = 0;
  r16 = r4 + 4 | 0, r17 = r16 >> 2;
  HEAP32[r17] = 0;
  r17 = r1 + 8 | 0;
  r18 = r17 | 0, r19 = r18 >> 2;
  HEAP32[r19] = -1;
  r20 = r17 + 4 | 0, r21 = r20 >> 2;
  HEAP32[r21] = -1;
  return;
}
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj["X"] = 1;
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = r1 + 44 | 0;
  r3 = HEAP32[r2 >> 2];
  r4 = HEAP32[r1 + 24 >> 2];
  if (r3 >>> 0 < r4 >>> 0) {
    HEAP32[r2 >> 2] = r4;
    r5 = r4;
  } else {
    r5 = r3;
  }
  if ((HEAP32[r1 + 48 >> 2] & 8 | 0) == 0) {
    r6 = -1;
    return r6;
  }
  r3 = r1 + 16 | 0;
  r4 = HEAP32[r3 >> 2];
  r2 = HEAP32[r1 + 12 >> 2];
  if (r4 >>> 0 < r5 >>> 0) {
    HEAP32[r3 >> 2] = r5;
    r7 = r5;
  } else {
    r7 = r4;
  }
  if (r2 >>> 0 >= r7 >>> 0) {
    r6 = -1;
    return r6;
  }
  r6 = HEAPU8[r2];
  return r6;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = r1 + 44 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = HEAP32[r1 + 24 >> 2];
  if (r4 >>> 0 < r5 >>> 0) {
    HEAP32[r3 >> 2] = r5;
    r6 = r5;
  } else {
    r6 = r4;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r5 = HEAP32[r4];
  r3 = (r1 + 12 | 0) >> 2;
  r7 = HEAP32[r3];
  if (r5 >>> 0 >= r7 >>> 0) {
    r8 = -1;
    return r8;
  }
  if ((r2 | 0) == -1) {
    HEAP32[r4] = r5;
    HEAP32[r3] = r7 - 1 | 0;
    HEAP32[r1 + 16 >> 2] = r6;
    r8 = 0;
    return r8;
  }
  r9 = r7 - 1 | 0;
  do {
    if ((HEAP32[r1 + 48 >> 2] & 16 | 0) == 0) {
      if ((r2 << 24 >> 24 | 0) == (HEAP8[r9] << 24 >> 24 | 0)) {
        break;
      } else {
        r8 = -1;
      }
      return r8;
    }
  } while (0);
  HEAP32[r4] = r5;
  HEAP32[r3] = r9;
  HEAP32[r1 + 16 >> 2] = r6;
  HEAP8[r9] = r2 & 255;
  r8 = r2;
  return r8;
}
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  if ((r2 | 0) == 0) {
    r6 = 0;
  } else {
    r6 = __Znwj(r2 << 2);
  }
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(r1, r2) {
  var r3, r4, r5, r6, r7, r8;
  r3 = r2 >> 2;
  r4 = r1 >> 2;
  r5 = HEAP32[r3 + 12];
  if ((r5 & 16 | 0) != 0) {
    r6 = r2 + 44 | 0;
    r2 = HEAP32[r6 >> 2];
    r7 = HEAP32[r3 + 6];
    if (r2 >>> 0 < r7 >>> 0) {
      HEAP32[r6 >> 2] = r7;
      r8 = r7;
    } else {
      r8 = r2;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, HEAP32[r3 + 5], r8);
    return;
  }
  if ((r5 & 8 | 0) == 0) {
    HEAP32[r4] = 0;
    HEAP32[r4 + 1] = 0;
    HEAP32[r4 + 2] = 0;
    return;
  } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, HEAP32[r3 + 2], HEAP32[r3 + 4]);
    return;
  }
}
function __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(r1) {
  __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1) {
  __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(r1) {
  __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(r1) {
  HEAP32[r1 >> 2] = 5266080;
  HEAP32[r1 + 56 >> 2] = 5266100;
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1 + 4 | 0);
  return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1) {
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(r1);
  return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(r1) {
  HEAP32[r1 >> 2] = 5266264;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1 + 32 | 0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(r1) {
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI10_mbstate_tEEj(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  r6 = r3 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  HEAP32[r3 >> 2] = HEAP32[r6];
  HEAP32[r3 + 4 >> 2] = HEAP32[r6 + 1];
  HEAP32[r3 + 8 >> 2] = HEAP32[r6 + 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r6 + 3];
  r6 = r3 + 8 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 16 >> 2]](r1, r2, HEAP32[r6 >> 2], HEAP32[r6 + 4 >> 2], 0, r4);
  STACKTOP = r5;
  return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27;
  r3 = r1 >> 2;
  if ((r2 | 0) == -1) {
    r4 = 0;
    return r4;
  }
  r5 = r1 | 0;
  r6 = r1 + 12 | 0;
  r7 = r1 + 8 | 0;
  r8 = HEAP32[r6 >> 2] - HEAP32[r7 >> 2] | 0;
  r9 = (r1 + 24 | 0) >> 2;
  r10 = HEAP32[r9];
  r11 = r1 + 28 | 0;
  r12 = HEAP32[r11 >> 2];
  if ((r10 | 0) == (r12 | 0)) {
    r13 = r1 + 48 | 0;
    if ((HEAP32[r13 >> 2] & 16 | 0) == 0) {
      r4 = -1;
      return r4;
    }
    r14 = r1 + 20 | 0;
    r15 = HEAP32[r14 >> 2];
    r16 = r1 + 44 | 0;
    r17 = HEAP32[r16 >> 2] - r15 | 0;
    r18 = r1 + 32 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(r18, 0);
    r19 = r18;
    if ((HEAP8[r19] & 1) << 24 >> 24 == 0) {
      r20 = 10;
    } else {
      r20 = (HEAP32[r18 >> 2] & -2) - 1 | 0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(r18, r20);
    r20 = HEAP8[r19];
    if ((r20 & 1) << 24 >> 24 == 0) {
      r21 = r18 + 1 | 0;
    } else {
      r21 = HEAP32[r3 + 10];
    }
    r18 = r20 & 255;
    if ((r18 & 1 | 0) == 0) {
      r22 = r18 >>> 1;
    } else {
      r22 = HEAP32[r3 + 9];
    }
    r18 = r21 + r22 | 0;
    HEAP32[r14 >> 2] = r21;
    HEAP32[r11 >> 2] = r18;
    r11 = r21 + (r10 - r15) | 0;
    HEAP32[r9] = r11;
    r15 = r21 + r17 | 0;
    HEAP32[r16 >> 2] = r15;
    r23 = r11;
    r24 = r18;
    r25 = r15;
    r26 = r13;
  } else {
    r23 = r10;
    r24 = r12;
    r25 = HEAP32[r3 + 11];
    r26 = r1 + 48 | 0;
  }
  r12 = r23 + 1 | 0;
  r10 = r12 >>> 0 < r25 >>> 0 ? r25 : r12;
  HEAP32[r3 + 11] = r10;
  if ((HEAP32[r26 >> 2] & 8 | 0) != 0) {
    r26 = r1 + 32 | 0;
    if ((HEAP8[r26] & 1) << 24 >> 24 == 0) {
      r27 = r26 + 1 | 0;
    } else {
      r27 = HEAP32[r3 + 10];
    }
    HEAP32[r7 >> 2] = r27;
    HEAP32[r6 >> 2] = r27 + r8 | 0;
    HEAP32[r3 + 4] = r10;
  }
  if ((r23 | 0) == (r24 | 0)) {
    r4 = FUNCTION_TABLE[HEAP32[HEAP32[r3] + 52 >> 2]](r5, r2 & 255);
    return r4;
  } else {
    HEAP32[r9] = r12;
    HEAP8[r23] = r2 & 255;
    r4 = r2 & 255;
    return r4;
  }
}
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8__appendEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r1 + 8 | 0;
  r6 = HEAP32[r5 >> 2];
  r7 = HEAP32[r1 + 4 >> 2];
  if (r6 - r7 >> 2 >>> 0 >= r2 >>> 0) {
    __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endEj(r1, r2);
    STACKTOP = r3;
    return;
  }
  r8 = HEAP32[r1 >> 2];
  r9 = r7 - r8 >> 2;
  r7 = r9 + r2 | 0;
  if (r7 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r10 = r6 - r8 | 0;
  if (r10 >> 2 >>> 0 > 536870910) {
    r11 = 1073741823;
  } else {
    r8 = r10 >> 1;
    r11 = r8 >>> 0 < r7 >>> 0 ? r7 : r8;
  }
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_(r4, r11, r9, r5);
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endEj(r4, r2);
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1, r4);
  __ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev(r4);
  STACKTOP = r3;
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = r2;
  r5 = r3 - r4 | 0;
  if ((r5 | 0) == -1) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r5 >>> 0 < 11) {
    HEAP8[r1] = r5 << 1 & 255;
    r6 = r1 + 1 | 0;
  } else {
    r7 = r5 + 16 & -16;
    r8 = __Znwj(r7);
    HEAP32[r1 + 8 >> 2] = r8;
    HEAP32[r1 >> 2] = r7 | 1;
    HEAP32[r1 + 4 >> 2] = r5;
    r6 = r8;
  }
  if ((r2 | 0) == (r3 | 0)) {
    r9 = r6;
    HEAP8[r9] = 0;
    return;
  }
  r8 = r3 + -r4 | 0;
  r4 = r6;
  r5 = r2;
  while (1) {
    HEAP8[r4] = HEAP8[r5];
    r2 = r5 + 1 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      break;
    } else {
      r4 = r4 + 1 | 0;
      r5 = r2;
    }
  }
  r9 = r6 + r8 | 0;
  HEAP8[r9] = 0;
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    return;
  }
  r4 = (r1 + 4 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZN5Avoid22UnsatisfiableExceptionC2Ev(r1) {
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  return;
}
function __ZNSt3__18ios_base4InitC2Ev() {
  var r1;
  HEAP32[HEAP32[HEAP32[1318504] - 12 >> 2] + 5274088 >> 2] = 5273764;
  r1 = HEAP32[HEAP32[1318483] - 12 >> 2] + 5273936 | 0;
  HEAP32[r1 >> 2] = HEAP32[r1 >> 2] | 8192;
  HEAP32[HEAP32[HEAP32[1318483] - 12 >> 2] + 5274004 >> 2] = 5273764;
  HEAP32[HEAP32[HEAP32[1318419] - 12 >> 2] + 5273748 >> 2] = 5273408;
  r1 = HEAP32[HEAP32[1318394] - 12 >> 2] + 5273580 | 0;
  HEAP32[r1 >> 2] = HEAP32[r1 >> 2] | 8192;
  HEAP32[HEAP32[HEAP32[1318394] - 12 >> 2] + 5273648 >> 2] = 5273408;
  return;
}
__ZNSt3__18ios_base4InitC2Ev["X"] = 1;
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = r1 >> 2;
  r4 = r1 + 32 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r4, r2);
  r2 = (r1 + 44 | 0) >> 2;
  HEAP32[r2] = 0;
  r5 = r1 + 48 | 0;
  r6 = HEAP32[r5 >> 2];
  if ((r6 & 8 | 0) != 0) {
    r7 = r4;
    r8 = HEAP8[r4];
    r9 = (r8 & 1) << 24 >> 24 == 0;
    if (r9) {
      r10 = r7 + 1 | 0;
    } else {
      r10 = HEAP32[r3 + 10];
    }
    r11 = r8 & 255;
    if ((r11 & 1 | 0) == 0) {
      r12 = r11 >>> 1;
    } else {
      r12 = HEAP32[r3 + 9];
    }
    r11 = r10 + r12 | 0;
    HEAP32[r2] = r11;
    if (r9) {
      r13 = r7 + 1 | 0;
    } else {
      r13 = HEAP32[r3 + 10];
    }
    HEAP32[r3 + 2] = r13;
    HEAP32[r3 + 3] = r13;
    HEAP32[r3 + 4] = r11;
  }
  if ((r6 & 16 | 0) == 0) {
    return;
  }
  r6 = r4;
  r11 = r4;
  r13 = HEAP8[r11];
  r7 = r13 & 255;
  if ((r7 & 1 | 0) == 0) {
    r14 = r7 >>> 1;
  } else {
    r14 = HEAP32[r3 + 9];
  }
  if ((r13 & 1) << 24 >> 24 == 0) {
    HEAP32[r2] = r6 + (r14 + 1) | 0;
    r15 = 10;
  } else {
    HEAP32[r2] = HEAP32[r3 + 10] + r14 | 0;
    r15 = (HEAP32[r4 >> 2] & -2) - 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(r4, r15);
  r15 = HEAP8[r11];
  if ((r15 & 1) << 24 >> 24 == 0) {
    r16 = r6 + 1 | 0;
  } else {
    r16 = HEAP32[r3 + 10];
  }
  r6 = r15 & 255;
  if ((r6 & 1 | 0) == 0) {
    r17 = r6 >>> 1;
  } else {
    r17 = HEAP32[r3 + 9];
  }
  r6 = r1 + 24 | 0;
  HEAP32[r6 >> 2] = r16;
  HEAP32[r3 + 5] = r16;
  HEAP32[r3 + 7] = r16 + r17 | 0;
  if ((HEAP32[r5 >> 2] & 3 | 0) == 0) {
    return;
  }
  HEAP32[r6 >> 2] = r16 + r14 | 0;
  return;
}
__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE["X"] = 1;
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE10deallocateEv(r1) {
  var r2, r3, r4;
  r2 = r1 | 0;
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    return;
  }
  r4 = r1 + 4 | 0;
  HEAP32[r4 >> 2] = r3;
  __ZdlPv(r3);
  HEAP32[r1 + 8 >> 2] = 0;
  HEAP32[r4 >> 2] = 0;
  HEAP32[r2 >> 2] = 0;
  return;
}
function __ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED2Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1 | 0);
  return;
}
function __ZN5Avoid13PositionStatsC2Ev(r1) {
  var r2;
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  HEAP32[r2 + 6] = 0;
  HEAP32[r2 + 7] = 0;
  return;
}
function __ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPN5Avoid5BlockENS_9allocatorIS3_EEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__113__vector_baseIPN5Avoid5BlockENS_9allocatorIS3_EEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  __ZdlPv(r2);
  return;
}
function __ZN5Avoid22UnsatisfiableExceptionD2Ev(r1) {
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev(r1 | 0);
  return;
}
function __ZN5Avoid22UnsatisfiableExceptionC2ERKS0_(r1, r2) {
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEEC1ERKS6_(r1 | 0, r2 | 0);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEEC1ERKS6_(r1, r2) {
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEEC2ERKS6_(r1, r2);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEEC2ERKS6_(r1, r2) {
  var r3, r4;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  HEAP32[r1 + 8 >> 2] = 0;
  r3 = r2 + 4 | 0;
  r4 = r2 | 0;
  r2 = HEAP32[r3 >> 2] - HEAP32[r4 >> 2] >> 2;
  if ((r2 | 0) == 0) {
    return;
  }
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8allocateEj(r1, r2);
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, HEAP32[r4 >> 2], HEAP32[r3 >> 2]);
  return;
}
function __ZNSt3__112__do_messageC2Ev(r1) {
  __ZNSt3__114error_categoryC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5266708;
  return;
}
function ___cxx_global_var_init997() {
  __ZNSt3__110__stdinbufIcEC1EP7__sFILE(HEAP32[_stdin >> 2]);
  _atexit(36, 5273164, ___dso_handle);
  return;
}
function __ZNSt3__110__stdinbufIcEC1EP7__sFILE(r1) {
  __ZNSt3__110__stdinbufIcEC2EP7__sFILE(r1);
  return;
}
function __ZNSt3__110__stdinbufIcED1Ev(r1) {
  __ZNSt3__110__stdinbufIcED2Ev(r1);
  return;
}
function ___cxx_global_var_init1998() {
  __ZNSt3__111__stdoutbufIcEC1EP7__sFILE(5273060, HEAP32[_stdout >> 2]);
  _atexit(502, 5273060, ___dso_handle);
  return;
}
function __ZNSt3__111__stdoutbufIcEC1EP7__sFILE(r1, r2) {
  __ZNSt3__111__stdoutbufIcEC2EP7__sFILE(r1, r2);
  return;
}
function __ZNSt3__111__stdoutbufIcED1Ev(r1) {
  __ZNSt3__111__stdoutbufIcED2Ev(r1);
  return;
}
function ___cxx_global_var_init2() {
  __ZNSt3__111__stdoutbufIcEC1EP7__sFILE(5273112, HEAP32[_stderr >> 2]);
  _atexit(502, 5273112, ___dso_handle);
  return;
}
function ___cxx_global_var_init3() {
  __ZNSt3__110__stdinbufIwEC1EP7__sFILE(HEAP32[_stdin >> 2]);
  _atexit(290, 5273004, ___dso_handle);
  return;
}
function __ZNSt3__110__stdinbufIwEC1EP7__sFILE(r1) {
  __ZNSt3__110__stdinbufIwEC2EP7__sFILE(r1);
  return;
}
function __ZNSt3__110__stdinbufIwED1Ev(r1) {
  __ZNSt3__110__stdinbufIwED2Ev(r1);
  return;
}
function ___cxx_global_var_init4999() {
  __ZNSt3__111__stdoutbufIwEC1EP7__sFILE(5272900, HEAP32[_stdout >> 2]);
  _atexit(858, 5272900, ___dso_handle);
  return;
}
function __ZNSt3__111__stdoutbufIwEC1EP7__sFILE(r1, r2) {
  __ZNSt3__111__stdoutbufIwEC2EP7__sFILE(r1, r2);
  return;
}
function __ZNSt3__111__stdoutbufIwED1Ev(r1) {
  __ZNSt3__111__stdoutbufIwED2Ev(r1);
  return;
}
function ___cxx_global_var_init5() {
  __ZNSt3__111__stdoutbufIwEC1EP7__sFILE(5272952, HEAP32[_stderr >> 2]);
  _atexit(858, 5272952, ___dso_handle);
  return;
}
function ___cxx_global_var_init14() {
  __ZNSt3__18ios_base4InitC1Ev();
  _atexit(314, 5274104, ___dso_handle);
  return;
}
function __ZNSt3__18ios_base4InitC1Ev() {
  __ZNSt3__18ios_base4InitC2Ev();
  return;
}
function __ZNSt3__18ios_base4InitD1Ev(r1) {
  __ZNSt3__18ios_base4InitD2Ev();
  return;
}
function __ZNSt3__18ios_base4InitD2Ev() {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(5273764);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(5273848);
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(5273408);
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(5273492);
  return;
}
function __ZNSt3__111__stdoutbufIwEC2EP7__sFILE(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5266748;
  HEAP32[r1 + 32 >> 2] = r2;
  __ZNSt3__16localeC1ERKS0_(r4, HEAP32[r1 + 4 >> 2]);
  r2 = HEAP32[r4 >> 2];
  r4 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273372);
  __ZNSt3__16localeD1Ev(r2);
  r2 = r4;
  HEAP32[r1 + 36 >> 2] = r2;
  r5 = r1 + 40 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r5 + 4 >> 2] = 0;
  HEAP8[r1 + 48 | 0] = FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 28 >> 2]](r2) & 1;
  STACKTOP = r3;
  return;
}
function __ZNSt3__111__stdoutbufIwED0Ev(r1) {
  __ZNSt3__111__stdoutbufIwED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = r3 - r2 | 0;
  r5 = r4 >> 2;
  r6 = r1 + 8 | 0;
  r7 = r1 | 0;
  r8 = HEAP32[r7 >> 2];
  r9 = r8;
  if (r5 >>> 0 <= HEAP32[r6 >> 2] - r9 >> 2 >>> 0) {
    r10 = r1 + 4 | 0;
    r11 = HEAP32[r10 >> 2] - r9 | 0;
    r9 = r11 >> 2;
    if (r5 >>> 0 > r9 >>> 0) {
      _memmove(r8, r2, r11, 4, 0);
      __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, (r9 << 2) + r2 | 0, r3);
      return;
    } else {
      _memmove(r8, r2, r4, 4, 0);
      HEAP32[r10 >> 2] = (r5 << 2) + r8 | 0;
      return;
    }
  }
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE10deallocateEv(r1);
  if (r5 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r8 = HEAP32[r6 >> 2] - HEAP32[r7 >> 2] | 0;
  if (r8 >> 2 >>> 0 > 536870910) {
    r12 = 1073741823;
  } else {
    r7 = r8 >> 1;
    r12 = r7 >>> 0 < r5 >>> 0 ? r5 : r7;
  }
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8allocateEj(r1, r12);
  __ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3);
  return;
}
__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_["X"] = 1;
function ___cxx_global_var_init6() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318504] = 5266644;
  HEAP32[1318506] = 5266664;
  HEAP32[1318505] = 0;
  __ZNSt3__18ios_base4initEPv(5274024, 5273164);
  HEAP32[1318524] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5274024);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273668);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP8[5274100] = r4;
  _atexit(362, 5274016, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init7() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318441] = 5266556;
  HEAP32[1318442] = 5266576;
  __ZNSt3__18ios_base4initEPv(5273768, 5273060);
  HEAP32[1318460] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273768);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273668);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP8[5273844] = r4;
  _atexit(768, 5273764, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init8() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318483] = 5266556;
  HEAP32[1318484] = 5266576;
  __ZNSt3__18ios_base4initEPv(5273936, 5273112);
  HEAP32[1318502] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273936);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273668);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP8[5274012] = r4;
  _atexit(768, 5273932, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init9() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318462] = 5266556;
  HEAP32[1318463] = 5266576;
  __ZNSt3__18ios_base4initEPv(5273852, 5273112);
  HEAP32[1318481] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273852);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273668);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP8[5273928] = r4;
  _atexit(768, 5273848, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init10() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318419] = 5266600;
  HEAP32[1318421] = 5266620;
  HEAP32[1318420] = 0;
  __ZNSt3__18ios_base4initEPv(5273684, 5273004);
  HEAP32[1318439] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273684);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273660);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 44 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP32[1318440] = r4;
  _atexit(288, 5273676, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init11() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318352] = 5266512;
  HEAP32[1318353] = 5266532;
  __ZNSt3__18ios_base4initEPv(5273412, 5272900);
  HEAP32[1318371] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273412);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273660);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 44 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP32[1318372] = r4;
  _atexit(122, 5273408, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init12() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318394] = 5266512;
  HEAP32[1318395] = 5266532;
  __ZNSt3__18ios_base4initEPv(5273580, 5272952);
  HEAP32[1318413] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273580);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273660);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 44 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP32[1318414] = r4;
  _atexit(122, 5273576, ___dso_handle);
  STACKTOP = r1;
  return;
}
function ___cxx_global_var_init13() {
  var r1, r2, r3, r4;
  r1 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r2 = r1;
  HEAP32[1318373] = 5266512;
  HEAP32[1318374] = 5266532;
  __ZNSt3__18ios_base4initEPv(5273496, 5272952);
  HEAP32[1318392] = 0;
  __ZNKSt3__18ios_base6getlocEv(r2, 5273496);
  r3 = HEAP32[r2 >> 2];
  r2 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5273660);
  r4 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 44 >> 2]](r2, 32);
  __ZNSt3__16localeD1Ev(r3);
  HEAP32[1318393] = r4;
  _atexit(122, 5273492, ___dso_handle);
  STACKTOP = r1;
  return;
}
function __ZNSt3__112_GLOBAL__N_19incrementIlEET_RS2_(r1) {
  tempValue = HEAP32[r1 >> 2], HEAP32[r1 >> 2] = tempValue + 1, tempValue;
  return;
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE(r1, r2) {
  var r3;
  FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 24 >> 2]](r1);
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5273372);
  r2 = r3;
  HEAP32[r1 + 36 >> 2] = r2;
  HEAP8[r1 + 48 | 0] = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 28 >> 2]](r2) & 1;
  return;
}
function __ZNSt3__111__stdoutbufIwE4syncEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3;
  r5 = r3 + 8;
  r6 = r1 + 36 | 0;
  r7 = r1 + 40 | 0;
  r8 = r4 | 0;
  r9 = r4 + 8 | 0;
  r10 = r4;
  r4 = r1 + 32 | 0;
  while (1) {
    r1 = HEAP32[r6 >> 2];
    r11 = FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 20 >> 2]](r1, r7, r8, r9, r5);
    r1 = HEAP32[r5 >> 2] - r10 | 0;
    if ((_fwrite(r8, 1, r1, HEAP32[r4 >> 2]) | 0) != (r1 | 0)) {
      r12 = -1;
      r2 = 8;
      break;
    }
    if ((r11 | 0) == 2) {
      r12 = -1;
      r2 = 9;
      break;
    } else if ((r11 | 0) != 1) {
      r2 = 6;
      break;
    }
  }
  if (r2 == 6) {
    r12 = ((_fflush(HEAP32[r4 >> 2]) | 0) != 0) << 31 >> 31;
    STACKTOP = r3;
    return r12;
  } else if (r2 == 8) {
    STACKTOP = r3;
    return r12;
  } else if (r2 == 9) {
    STACKTOP = r3;
    return r12;
  }
}
function __ZNSt3__111__stdoutbufIwE8overflowEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 12;
  r8 = r4 + 16;
  r9 = (r2 | 0) == -1;
  if (!r9) {
    r10 = r6 + 4 | 0;
    r11 = (r1 + 24 | 0) >> 2;
    r12 = (r1 + 20 | 0) >> 2;
    HEAP32[r12] = r6;
    r13 = (r1 + 28 | 0) >> 2;
    HEAP32[r13] = r10;
    HEAP32[r6 >> 2] = r2;
    HEAP32[r11] = r10;
    L14 : do {
      if ((HEAP8[r1 + 48 | 0] & 1) << 24 >> 24 == 0) {
        r14 = r5 | 0;
        HEAP32[r7 >> 2] = r14;
        r15 = r1 + 36 | 0;
        r16 = r1 + 40 | 0;
        r17 = r5 + 8 | 0;
        r18 = r5;
        r19 = r1 + 32 | 0;
        r20 = r6;
        r21 = r10;
        while (1) {
          r22 = HEAP32[r15 >> 2];
          r23 = FUNCTION_TABLE[HEAP32[HEAP32[r22 >> 2] + 12 >> 2]](r22, r16, r20, r21, r8, r14, r17, r7);
          r24 = HEAP32[r12];
          if ((HEAP32[r8 >> 2] | 0) == (r24 | 0)) {
            r25 = -1;
            r3 = 25;
            break;
          }
          if ((r23 | 0) == 3) {
            r3 = 17;
            break;
          }
          if (r23 >>> 0 >= 2) {
            r25 = -1;
            r3 = 28;
            break;
          }
          r22 = HEAP32[r7 >> 2] - r18 | 0;
          if ((_fwrite(r14, 1, r22, HEAP32[r19 >> 2]) | 0) != (r22 | 0)) {
            r25 = -1;
            r3 = 29;
            break;
          }
          if ((r23 | 0) != 1) {
            break L14;
          }
          r23 = HEAP32[r8 >> 2];
          r22 = HEAP32[r11];
          HEAP32[r12] = r23;
          HEAP32[r13] = r22;
          r26 = (r22 - r23 >> 2 << 2) + r23 | 0;
          HEAP32[r11] = r26;
          r20 = r23;
          r21 = r26;
        }
        if (r3 == 17) {
          if ((_fwrite(r24, 1, 1, HEAP32[r19 >> 2]) | 0) == 1) {
            break;
          } else {
            r25 = -1;
          }
          STACKTOP = r4;
          return r25;
        } else if (r3 == 25) {
          STACKTOP = r4;
          return r25;
        } else if (r3 == 28) {
          STACKTOP = r4;
          return r25;
        } else if (r3 == 29) {
          STACKTOP = r4;
          return r25;
        }
      } else {
        if ((_fwrite(r6, 4, 1, HEAP32[r1 + 32 >> 2]) | 0) == 1) {
          break;
        } else {
          r25 = -1;
        }
        STACKTOP = r4;
        return r25;
      }
    } while (0);
    HEAP32[r11] = 0;
    HEAP32[r12] = 0;
    HEAP32[r13] = 0;
  }
  r25 = r9 ? 0 : r2;
  STACKTOP = r4;
  return r25;
}
__ZNSt3__111__stdoutbufIwE8overflowEj["X"] = 1;
function __ZNSt3__110__stdinbufIwEC2EP7__sFILE(r1) {
  var r2, r3;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r2;
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(5273004);
  HEAP32[1318251] = 5267124;
  HEAP32[1318259] = r1;
  r1 = 5273044;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  __ZNSt3__16localeC1ERKS0_(r3, HEAP32[1318252]);
  __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(5273004, r3);
  __ZNSt3__16localeD1Ev(HEAP32[r3 >> 2]);
  STACKTOP = r2;
  return;
}
function __ZNSt3__110__stdinbufIwED0Ev(r1) {
  __ZNSt3__110__stdinbufIwED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__110__stdinbufIwE9underflowEv(r1) {
  return __ZNSt3__110__stdinbufIwE9__getcharEb(r1, 0);
}
function __ZNSt3__110__stdinbufIwE5uflowEv(r1) {
  return __ZNSt3__110__stdinbufIwE9__getcharEb(r1, 1);
}
function __ZNSt3__110__stdinbufIwE9pbackfailEj(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = r4 + 8, r7 = r6 >> 2;
  r8 = r4 + 12;
  if ((r2 | 0) == -1) {
    r9 = -1;
    STACKTOP = r4;
    return r9;
  }
  HEAP32[r8 >> 2] = r2;
  r10 = HEAP32[r1 + 36 >> 2];
  r11 = r5 | 0;
  r12 = FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 12 >> 2]](r10, r1 + 40 | 0, r8, r8 + 4 | 0, r4 + 16, r11, r5 + 8 | 0, r6);
  if ((r12 | 0) == 2 | (r12 | 0) == 1) {
    r9 = -1;
    STACKTOP = r4;
    return r9;
  } else if ((r12 | 0) == 3) {
    HEAP8[r11] = r2 & 255;
    HEAP32[r7] = r5 + 1 | 0;
  }
  r5 = r1 + 32 | 0;
  while (1) {
    r1 = HEAP32[r7];
    if (r1 >>> 0 <= r11 >>> 0) {
      r9 = r2;
      r3 = 44;
      break;
    }
    r12 = r1 - 1 | 0;
    HEAP32[r7] = r12;
    if ((_ungetc(HEAP8[r12] << 24 >> 24, HEAP32[r5 >> 2]) | 0) == -1) {
      r9 = -1;
      r3 = 46;
      break;
    }
  }
  if (r3 == 44) {
    STACKTOP = r4;
    return r9;
  } else if (r3 == 46) {
    STACKTOP = r4;
    return r9;
  }
}
function __ZNSt3__110__stdinbufIwE9__getcharEb(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = r4 + 8, r7 = r6 >> 2;
  r8 = r4 + 12;
  r9 = r4 + 16;
  r10 = HEAP32[r1 + 48 >> 2];
  r11 = (r10 | 0) > 1 ? r10 : 1;
  L54 : do {
    if ((r11 | 0) > 0) {
      r10 = r1 + 32 | 0;
      r12 = 0;
      while (1) {
        r13 = _fgetc(HEAP32[r10 >> 2]);
        if ((r13 & 255 | 0) == 255) {
          r14 = -1;
          break;
        }
        HEAP8[r5 + r12 | 0] = r13 & 255;
        r13 = r12 + 1 | 0;
        if ((r13 | 0) < (r11 | 0)) {
          r12 = r13;
        } else {
          break L54;
        }
      }
      STACKTOP = r4;
      return r14;
    }
  } while (0);
  L61 : do {
    if ((HEAP8[r1 + 52 | 0] & 1) << 24 >> 24 == 0) {
      r12 = r1 + 40 | 0;
      r10 = r12 >> 2;
      r13 = r1 + 36 | 0;
      r15 = r5 | 0;
      r16 = r6 + 4 | 0;
      r17 = r1 + 32 | 0;
      r18 = r11;
      while (1) {
        r19 = HEAP32[r10];
        r20 = HEAP32[r10 + 1];
        r21 = HEAP32[r13 >> 2];
        r22 = r5 + r18 | 0;
        r23 = FUNCTION_TABLE[HEAP32[HEAP32[r21 >> 2] + 16 >> 2]](r21, r12, r15, r22, r8, r6, r16, r9);
        if ((r23 | 0) == 3) {
          r3 = 58;
          break;
        } else if ((r23 | 0) == 2) {
          r14 = -1;
          r3 = 67;
          break;
        } else if ((r23 | 0) != 1) {
          r24 = r18;
          break L61;
        }
        HEAP32[r10] = r19;
        HEAP32[r10 + 1] = r20;
        if ((r18 | 0) == 8) {
          r14 = -1;
          r3 = 68;
          break;
        }
        r20 = _fgetc(HEAP32[r17 >> 2]);
        if ((r20 & 255 | 0) == 255) {
          r14 = -1;
          r3 = 69;
          break;
        }
        HEAP8[r22] = r20 & 255;
        r18 = r18 + 1 | 0;
      }
      if (r3 == 58) {
        HEAP32[r7] = HEAP8[r15] << 24 >> 24;
        r24 = r18;
        break;
      } else if (r3 == 67) {
        STACKTOP = r4;
        return r14;
      } else if (r3 == 68) {
        STACKTOP = r4;
        return r14;
      } else if (r3 == 69) {
        STACKTOP = r4;
        return r14;
      }
    } else {
      HEAP32[r7] = HEAP8[r5 | 0] << 24 >> 24;
      r24 = r11;
    }
  } while (0);
  L75 : do {
    if (!r2) {
      r11 = r1 + 32 | 0;
      r3 = r24;
      while (1) {
        if ((r3 | 0) <= 0) {
          break L75;
        }
        r9 = r3 - 1 | 0;
        if ((_ungetc(HEAP8[r5 + r9 | 0] << 24 >> 24, HEAP32[r11 >> 2]) | 0) == -1) {
          r14 = -1;
          break;
        } else {
          r3 = r9;
        }
      }
      STACKTOP = r4;
      return r14;
    }
  } while (0);
  r14 = HEAP32[r7];
  STACKTOP = r4;
  return r14;
}
__ZNSt3__110__stdinbufIwE9__getcharEb["X"] = 1;
function __ZNSt3__111__stdoutbufIcEC2EP7__sFILE(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r4 = r3;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(r1 | 0);
  HEAP32[r1 >> 2] = 5266816;
  HEAP32[r1 + 32 >> 2] = r2;
  __ZNSt3__16localeC1ERKS0_(r4, HEAP32[r1 + 4 >> 2]);
  r2 = HEAP32[r4 >> 2];
  r4 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273380);
  __ZNSt3__16localeD1Ev(r2);
  r2 = r4;
  HEAP32[r1 + 36 >> 2] = r2;
  r5 = r1 + 40 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r5 + 4 >> 2] = 0;
  HEAP8[r1 + 48 | 0] = FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 28 >> 2]](r2) & 1;
  STACKTOP = r3;
  return;
}
function __ZNSt3__111__stdoutbufIcED0Ev(r1) {
  __ZNSt3__111__stdoutbufIcED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE(r1, r2) {
  var r3;
  FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 24 >> 2]](r1);
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5273380);
  r2 = r3;
  HEAP32[r1 + 36 >> 2] = r2;
  HEAP8[r1 + 48 | 0] = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 28 >> 2]](r2) & 1;
  return;
}
function __ZNSt3__111__stdoutbufIcE4syncEv(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r2 = 0;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r4 = r3;
  r5 = r3 + 8;
  r6 = r1 + 36 | 0;
  r7 = r1 + 40 | 0;
  r8 = r4 | 0;
  r9 = r4 + 8 | 0;
  r10 = r4;
  r4 = r1 + 32 | 0;
  while (1) {
    r1 = HEAP32[r6 >> 2];
    r11 = FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 20 >> 2]](r1, r7, r8, r9, r5);
    r1 = HEAP32[r5 >> 2] - r10 | 0;
    if ((_fwrite(r8, 1, r1, HEAP32[r4 >> 2]) | 0) != (r1 | 0)) {
      r12 = -1;
      r2 = 83;
      break;
    }
    if ((r11 | 0) == 2) {
      r12 = -1;
      r2 = 82;
      break;
    } else if ((r11 | 0) != 1) {
      r2 = 80;
      break;
    }
  }
  if (r2 == 83) {
    STACKTOP = r3;
    return r12;
  } else if (r2 == 82) {
    STACKTOP = r3;
    return r12;
  } else if (r2 == 80) {
    r12 = ((_fflush(HEAP32[r4 >> 2]) | 0) != 0) << 31 >> 31;
    STACKTOP = r3;
    return r12;
  }
}
function __ZNSt3__111__stdoutbufIcE8overflowEi(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 12;
  r8 = r4 + 16;
  r9 = (r2 | 0) == -1;
  if (!r9) {
    r10 = r6 + 1 | 0;
    r11 = (r1 + 24 | 0) >> 2;
    r12 = (r1 + 20 | 0) >> 2;
    HEAP32[r12] = r6;
    r13 = (r1 + 28 | 0) >> 2;
    HEAP32[r13] = r10;
    HEAP8[r6] = r2 & 255;
    HEAP32[r11] = r10;
    L99 : do {
      if ((HEAP8[r1 + 48 | 0] & 1) << 24 >> 24 == 0) {
        r14 = r5 | 0;
        HEAP32[r7 >> 2] = r14;
        r15 = r1 + 36 | 0;
        r16 = r1 + 40 | 0;
        r17 = r5 + 8 | 0;
        r18 = r5;
        r19 = r1 + 32 | 0;
        r20 = r6;
        r21 = r10;
        while (1) {
          r22 = HEAP32[r15 >> 2];
          r23 = FUNCTION_TABLE[HEAP32[HEAP32[r22 >> 2] + 12 >> 2]](r22, r16, r20, r21, r8, r14, r17, r7);
          r24 = HEAP32[r12];
          if ((HEAP32[r8 >> 2] | 0) == (r24 | 0)) {
            r25 = -1;
            r3 = 99;
            break;
          }
          if ((r23 | 0) == 3) {
            r3 = 91;
            break;
          }
          if (r23 >>> 0 >= 2) {
            r25 = -1;
            r3 = 103;
            break;
          }
          r22 = HEAP32[r7 >> 2] - r18 | 0;
          if ((_fwrite(r14, 1, r22, HEAP32[r19 >> 2]) | 0) != (r22 | 0)) {
            r25 = -1;
            r3 = 104;
            break;
          }
          if ((r23 | 0) != 1) {
            break L99;
          }
          r23 = HEAP32[r8 >> 2];
          r22 = HEAP32[r11];
          HEAP32[r12] = r23;
          HEAP32[r13] = r22;
          r26 = r23 + (r22 - r23) | 0;
          HEAP32[r11] = r26;
          r20 = r23;
          r21 = r26;
        }
        if (r3 == 99) {
          STACKTOP = r4;
          return r25;
        } else if (r3 == 91) {
          if ((_fwrite(r24, 1, 1, HEAP32[r19 >> 2]) | 0) == 1) {
            break;
          } else {
            r25 = -1;
          }
          STACKTOP = r4;
          return r25;
        } else if (r3 == 103) {
          STACKTOP = r4;
          return r25;
        } else if (r3 == 104) {
          STACKTOP = r4;
          return r25;
        }
      } else {
        if ((_fwrite(r6, 1, 1, HEAP32[r1 + 32 >> 2]) | 0) == 1) {
          break;
        } else {
          r25 = -1;
        }
        STACKTOP = r4;
        return r25;
      }
    } while (0);
    HEAP32[r11] = 0;
    HEAP32[r12] = 0;
    HEAP32[r13] = 0;
  }
  r25 = r9 ? 0 : r2;
  STACKTOP = r4;
  return r25;
}
__ZNSt3__111__stdoutbufIcE8overflowEi["X"] = 1;
function __ZNSt3__110__stdinbufIcEC2EP7__sFILE(r1) {
  var r2, r3;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r3 = r2;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(5273164);
  HEAP32[1318291] = 5267192;
  HEAP32[1318299] = r1;
  r1 = 5273204;
  HEAP32[r1 >> 2] = 0;
  HEAP32[r1 + 4 >> 2] = 0;
  __ZNSt3__16localeC1ERKS0_(r3, HEAP32[1318292]);
  __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(5273164, r3);
  __ZNSt3__16localeD1Ev(HEAP32[r3 >> 2]);
  STACKTOP = r2;
  return;
}
function __ZNSt3__110__stdinbufIcED0Ev(r1) {
  __ZNSt3__110__stdinbufIcED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__110__stdinbufIcE9underflowEv(r1) {
  return __ZNSt3__110__stdinbufIcE9__getcharEb(r1, 0);
}
function __ZNSt3__110__stdinbufIcE5uflowEv(r1) {
  return __ZNSt3__110__stdinbufIcE9__getcharEb(r1, 1);
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = r4 + 8, r7 = r6 >> 2;
  r8 = r4 + 12;
  if ((r2 | 0) == -1) {
    r9 = -1;
    STACKTOP = r4;
    return r9;
  }
  r10 = r2 & 255;
  HEAP8[r8] = r10;
  r11 = HEAP32[r1 + 36 >> 2];
  r12 = r5 | 0;
  r13 = FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 12 >> 2]](r11, r1 + 40 | 0, r8, r8 + 1 | 0, r4 + 16, r12, r5 + 8 | 0, r6);
  if ((r13 | 0) == 3) {
    HEAP8[r12] = r10;
    HEAP32[r7] = r5 + 1 | 0;
  } else if ((r13 | 0) == 2 | (r13 | 0) == 1) {
    r9 = -1;
    STACKTOP = r4;
    return r9;
  }
  r13 = r1 + 32 | 0;
  while (1) {
    r1 = HEAP32[r7];
    if (r1 >>> 0 <= r12 >>> 0) {
      r9 = r2;
      r3 = 118;
      break;
    }
    r5 = r1 - 1 | 0;
    HEAP32[r7] = r5;
    if ((_ungetc(HEAP8[r5] << 24 >> 24, HEAP32[r13 >> 2]) | 0) == -1) {
      r9 = -1;
      r3 = 119;
      break;
    }
  }
  if (r3 == 118) {
    STACKTOP = r4;
    return r9;
  } else if (r3 == 119) {
    STACKTOP = r4;
    return r9;
  }
}
function __ZNSt3__110__stdinbufIcE9__getcharEb(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r3 = 0;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r5 = r4;
  r6 = r4 + 8;
  r7 = r4 + 12;
  r8 = r4 + 16;
  r9 = HEAP32[r1 + 48 >> 2];
  r10 = (r9 | 0) > 1 ? r9 : 1;
  L139 : do {
    if ((r10 | 0) > 0) {
      r9 = r1 + 32 | 0;
      r11 = 0;
      while (1) {
        r12 = _fgetc(HEAP32[r9 >> 2]);
        if ((r12 & 255 | 0) == 255) {
          r13 = -1;
          break;
        }
        HEAP8[r5 + r11 | 0] = r12 & 255;
        r12 = r11 + 1 | 0;
        if ((r12 | 0) < (r10 | 0)) {
          r11 = r12;
        } else {
          break L139;
        }
      }
      STACKTOP = r4;
      return r13;
    }
  } while (0);
  L146 : do {
    if ((HEAP8[r1 + 52 | 0] & 1) << 24 >> 24 == 0) {
      r11 = r1 + 40 | 0;
      r9 = r11 >> 2;
      r12 = r1 + 36 | 0;
      r14 = r5 | 0;
      r15 = r6 + 1 | 0;
      r16 = r1 + 32 | 0;
      r17 = r10;
      while (1) {
        r18 = HEAP32[r9];
        r19 = HEAP32[r9 + 1];
        r20 = HEAP32[r12 >> 2];
        r21 = r5 + r17 | 0;
        r22 = FUNCTION_TABLE[HEAP32[HEAP32[r20 >> 2] + 16 >> 2]](r20, r11, r14, r21, r7, r6, r15, r8);
        if ((r22 | 0) == 3) {
          r3 = 132;
          break;
        } else if ((r22 | 0) == 2) {
          r13 = -1;
          r3 = 140;
          break;
        } else if ((r22 | 0) != 1) {
          r23 = r17;
          break L146;
        }
        HEAP32[r9] = r18;
        HEAP32[r9 + 1] = r19;
        if ((r17 | 0) == 8) {
          r13 = -1;
          r3 = 144;
          break;
        }
        r19 = _fgetc(HEAP32[r16 >> 2]);
        if ((r19 & 255 | 0) == 255) {
          r13 = -1;
          r3 = 143;
          break;
        }
        HEAP8[r21] = r19 & 255;
        r17 = r17 + 1 | 0;
      }
      if (r3 == 132) {
        HEAP8[r6] = HEAP8[r14];
        r23 = r17;
        break;
      } else if (r3 == 140) {
        STACKTOP = r4;
        return r13;
      } else if (r3 == 143) {
        STACKTOP = r4;
        return r13;
      } else if (r3 == 144) {
        STACKTOP = r4;
        return r13;
      }
    } else {
      HEAP8[r6] = HEAP8[r5 | 0];
      r23 = r10;
    }
  } while (0);
  L160 : do {
    if (!r2) {
      r10 = r1 + 32 | 0;
      r3 = r23;
      while (1) {
        if ((r3 | 0) <= 0) {
          break L160;
        }
        r8 = r3 - 1 | 0;
        if ((_ungetc(HEAP8[r5 + r8 | 0] << 24 >> 24, HEAP32[r10 >> 2]) | 0) == -1) {
          r13 = -1;
          break;
        } else {
          r3 = r8;
        }
      }
      STACKTOP = r4;
      return r13;
    }
  } while (0);
  r13 = HEAPU8[r6];
  STACKTOP = r4;
  return r13;
}
__ZNSt3__110__stdinbufIcE9__getcharEb["X"] = 1;
function __ZNSt3__111__stdoutbufIwED2Ev(r1) {
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__stdinbufIwED2Ev(r1) {
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__111__stdoutbufIcED2Ev(r1) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(r1 | 0);
  return;
}
function __ZNSt3__110__stdinbufIcED2Ev(r1) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(r1 | 0);
  return;
}
function __GLOBAL__I_a1000() {
  ___cxx_global_var_init997();
  ___cxx_global_var_init1998();
  ___cxx_global_var_init2();
  ___cxx_global_var_init3();
  ___cxx_global_var_init4999();
  ___cxx_global_var_init5();
  ___cxx_global_var_init6();
  ___cxx_global_var_init7();
  ___cxx_global_var_init8();
  ___cxx_global_var_init9();
  ___cxx_global_var_init10();
  ___cxx_global_var_init11();
  ___cxx_global_var_init12();
  ___cxx_global_var_init13();
  ___cxx_global_var_init14();
  return;
}
function __ZNSt3__114__shared_count12__add_sharedEv(r1) {
  __ZNSt3__112_GLOBAL__N_19incrementIlEET_RS2_(r1 + 4 | 0);
  return;
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(r1, r2) {
  var r3, r4, r5;
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5273372);
  r2 = r3;
  r4 = r1 + 36 | 0;
  HEAP32[r4 >> 2] = r2;
  r5 = r1 + 48 | 0;
  HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 24 >> 2]](r2);
  r2 = HEAP32[r4 >> 2];
  HEAP8[r1 + 52 | 0] = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r2) & 1;
  if (HEAP32[r5 >> 2] >>> 0 > 8) {
    __ZNSt3__121__throw_runtime_errorEPKc(5242968);
  } else {
    return;
  }
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(r1, r2) {
  var r3, r4, r5;
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5273380);
  r2 = r3;
  r4 = r1 + 36 | 0;
  HEAP32[r4 >> 2] = r2;
  r5 = r1 + 48 | 0;
  HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 24 >> 2]](r2);
  r2 = HEAP32[r4 >> 2];
  HEAP8[r1 + 52 | 0] = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r2) & 1;
  if (HEAP32[r5 >> 2] >>> 0 > 8) {
    __ZNSt3__121__throw_runtime_errorEPKc(5242968);
  } else {
    return;
  }
}
function __ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv(r1) {
  return r1;
}
function __ZNSt3__114error_categoryD1Ev(r1) {
  return;
}
function __ZNSt3__112__do_messageD1Ev(r1) {
  return;
}
function __ZNSt3__112_GLOBAL__N_19decrementIlEET_RS2_(r1) {
  return (tempValue = HEAP32[r1 >> 2], HEAP32[r1 >> 2] = tempValue + -1, tempValue) - 1 | 0;
}
function __ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv(r1) {
  return r1 - 4 | 0;
}
function __ZNSt3__114error_categoryC2Ev(r1) {
  HEAP32[r1 >> 2] = 5266468;
  return;
}
function __ZNKSt3__114error_category23default_error_conditionEi(r1, r2, r3) {
  HEAP32[r1 >> 2] = r3;
  HEAP32[r1 + 4 >> 2] = r2;
  return;
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi(r1, r2, r3) {
  var r4;
  if ((HEAP32[r2 + 4 >> 2] | 0) != (r1 | 0)) {
    r4 = 0;
    return r4;
  }
  r4 = (HEAP32[r2 >> 2] | 0) == (r3 | 0);
  return r4;
}
function __ZNSt3__114__shared_count16__release_sharedEv(r1) {
  if ((__ZNSt3__112_GLOBAL__N_19decrementIlEET_RS2_(r1 + 4 | 0) | 0) != -1) {
    return;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 8 >> 2]](r1);
  return;
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrC1EPKc(r1, r2) {
  __ZN12_GLOBAL__N_114__libcpp_nmstrC2EPKc(r1, r2);
  return;
}
function __ZNSt11logic_errorC2EPKc(r1, r2) {
  var r3;
  HEAP32[r1 >> 2] = 5264704;
  r3 = r1 + 4 | 0;
  if ((r3 | 0) == 0) {
    return;
  }
  __ZN12_GLOBAL__N_114__libcpp_nmstrC1EPKc(r3, r2);
  return;
}
function __ZNSt11logic_errorD0Ev(r1) {
  __ZNSt11logic_errorD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt11logic_errorD1Ev(r1) {
  __ZNSt11logic_errorD2Ev(r1);
  return;
}
function __ZNSt11logic_errorD2Ev(r1) {
  HEAP32[r1 >> 2] = 5264704;
  __ZN12_GLOBAL__N_114__libcpp_nmstrD1Ev(r1 + 4 | 0);
  return;
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD1Ev(r1) {
  __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(r1);
  return;
}
function __ZNKSt11logic_error4whatEv(r1) {
  return __ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv(HEAP32[r1 + 4 >> 2]);
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(r1, r2) {
  var r3, r4;
  HEAP32[r1 >> 2] = 5264656;
  r3 = r1 + 4 | 0;
  if ((r3 | 0) == 0) {
    return;
  }
  if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
    r4 = r2 + 1 | 0;
  } else {
    r4 = HEAP32[r2 + 8 >> 2];
  }
  __ZN12_GLOBAL__N_114__libcpp_nmstrC1EPKc(r3, r4);
  return;
}
function __ZNSt13runtime_errorC1EPKc(r1, r2) {
  __ZNSt13runtime_errorC2EPKc(r1, r2);
  return;
}
function __ZNSt13runtime_errorC2EPKc(r1, r2) {
  var r3;
  HEAP32[r1 >> 2] = 5264656;
  r3 = r1 + 4 | 0;
  if ((r3 | 0) == 0) {
    return;
  }
  __ZN12_GLOBAL__N_114__libcpp_nmstrC1EPKc(r3, r2);
  return;
}
function __ZNSt13runtime_errorD0Ev(r1) {
  __ZNSt13runtime_errorD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt13runtime_errorD1Ev(r1) {
  __ZNSt13runtime_errorD2Ev(r1);
  return;
}
function __ZNSt13runtime_errorD2Ev(r1) {
  HEAP32[r1 >> 2] = 5264656;
  __ZN12_GLOBAL__N_114__libcpp_nmstrD1Ev(r1 + 4 | 0);
  return;
}
function __ZNKSt13runtime_error4whatEv(r1) {
  return __ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv(HEAP32[r1 + 4 >> 2]);
}
function __ZNSt12length_errorD0Ev(r1) {
  __ZNSt12length_errorD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt12length_errorD1Ev(r1) {
  __ZNSt12length_errorD2Ev(r1);
  return;
}
function __ZNSt12length_errorD2Ev(r1) {
  __ZNSt11logic_errorD2Ev(r1 | 0);
  return;
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(r1) {
  var r2;
  r2 = r1 | 0;
  r1 = __ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv(HEAP32[r2 >> 2]);
  if (((tempValue = HEAP32[r1 >> 2], HEAP32[r1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
    return;
  }
  r1 = HEAP32[r2 >> 2] - 12 | 0;
  if ((r1 | 0) == 0) {
    return;
  }
  __ZdaPv(r1);
  return;
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrC2EPKc(r1, r2) {
  var r3, r4, r5;
  r3 = _strlen(r2);
  r4 = __Znaj(r3 + 13 | 0);
  r5 = r1 | 0;
  HEAP32[r4 + 4 >> 2] = r3;
  HEAP32[r4 >> 2] = r3;
  r3 = r4 + 12 | 0;
  HEAP32[r5 >> 2] = r3;
  HEAP32[__ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv(r3) >> 2] = 0;
  _strcpy(__ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv(HEAP32[r5 >> 2]), r2);
  return;
}
function __ZNSt3__114error_categoryD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r5 = r4;
  FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 12 >> 2]](r5, r1, r2);
  if ((HEAP32[r5 + 4 >> 2] | 0) != (HEAP32[r3 + 4 >> 2] | 0)) {
    r6 = 0;
    STACKTOP = r4;
    return r6;
  }
  r6 = (HEAP32[r5 >> 2] | 0) == (HEAP32[r3 >> 2] | 0);
  STACKTOP = r4;
  return r6;
}
function __ZNKSt3__112__do_message7messageEi(r1, r2, r3) {
  r2 = _strerror(r3);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r1, r2, _strlen(r2));
  return;
}
function __ZNKSt3__110error_code7messageEv(r1, r2, r3) {
  FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 24 >> 2]](r1, r3, r2);
  return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r5 = r4;
  r6 = r2 | 0;
  r7 = HEAP32[r6 >> 2];
  if ((r7 | 0) == 0) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_(r1, r3);
    STACKTOP = r4;
    return;
  }
  r8 = HEAPU8[r3];
  if ((r8 & 1 | 0) == 0) {
    r9 = r8 >>> 1;
  } else {
    r9 = HEAP32[r3 + 4 >> 2];
  }
  if ((r9 | 0) == 0) {
    r10 = r7;
  } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(r3);
    r10 = HEAP32[r6 >> 2];
  }
  __ZNKSt3__110error_code7messageEv(r5, r10, HEAP32[r2 + 4 >> 2]);
  r2 = HEAP8[r5];
  if ((r2 & 1) << 24 >> 24 == 0) {
    r11 = r5 + 1 | 0;
  } else {
    r11 = HEAP32[r5 + 8 >> 2];
  }
  r10 = r2 & 255;
  if ((r10 & 1 | 0) == 0) {
    r12 = r10 >>> 1;
  } else {
    r12 = HEAP32[r5 + 4 >> 2];
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(r3, r11, r12);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_(r1, r3);
  STACKTOP = r4;
  return;
}
__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE["X"] = 1;
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r6 = r5;
  HEAP32[r6 >> 2] = r2;
  HEAP32[r6 + 4 >> 2] = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r2, r4, _strlen(r4));
  __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(r3, r6, r2);
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(r1 | 0, r3);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r3);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r2);
  HEAP32[r1 >> 2] = 5266684;
  r2 = r6;
  r6 = r1 + 8 | 0;
  r1 = HEAP32[r2 + 4 >> 2];
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  HEAP32[r6 + 4 >> 2] = r1;
  STACKTOP = r5;
  return;
}
function __ZNSt3__112system_errorD0Ev(r1) {
  __ZNSt3__112system_errorD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__112system_errorD1Ev(r1) {
  __ZNSt3__112system_errorD2Ev(r1);
  return;
}
function __ZNSt3__112system_errorD2Ev(r1) {
  __ZNSt13runtime_errorD2Ev(r1 | 0);
  return;
}
function __ZNSt3__112__do_messageD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(r1, r2);
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(r1, r2) {
  var r3, r4;
  r3 = r2, r4 = r3 >> 2;
  if ((HEAP8[r3] & 1) << 24 >> 24 == 0) {
    r3 = r1 >> 2;
    HEAP32[r3] = HEAP32[r4];
    HEAP32[r3 + 1] = HEAP32[r4 + 1];
    HEAP32[r3 + 2] = HEAP32[r4 + 2];
    return;
  } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r1, HEAP32[r2 + 8 >> 2], HEAP32[r2 + 4 >> 2]);
    return;
  }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(r1);
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(r1) {
  if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
    return;
  }
  __ZdlPv(HEAP32[r1 + 8 >> 2]);
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r1, r2) {
  var r3, r4, r5, r6;
  if ((r1 | 0) == (r2 | 0)) {
    return;
  }
  r3 = HEAP8[r2];
  if ((r3 & 1) << 24 >> 24 == 0) {
    r4 = r2 + 1 | 0;
  } else {
    r4 = HEAP32[r2 + 8 >> 2];
  }
  r5 = r3 & 255;
  if ((r5 & 1 | 0) == 0) {
    r6 = r5 >>> 1;
  } else {
    r6 = HEAP32[r2 + 4 >> 2];
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(r1, r4, r6);
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(r1, r2, _strlen(r2));
  return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(r1, r2) {
  var r3, r4, r5, r6;
  r3 = r1;
  r4 = HEAP8[r3];
  r5 = r4 & 255;
  if ((r5 & 1 | 0) == 0) {
    r6 = r5 >>> 1;
  } else {
    r6 = HEAP32[r1 + 4 >> 2];
  }
  if (r6 >>> 0 < r2 >>> 0) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(r1, r2 - r6 | 0);
    return;
  }
  if ((r4 & 1) << 24 >> 24 == 0) {
    HEAP8[r1 + (r2 + 1) | 0] = 0;
    HEAP8[r3] = r2 << 1 & 255;
    return;
  } else {
    HEAP8[HEAP32[r1 + 8 >> 2] + r2 | 0] = 0;
    HEAP32[r1 + 4 >> 2] = r2;
    return;
  }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  if ((r2 | 0) == 0) {
    return;
  }
  r3 = r1;
  r4 = HEAP8[r3];
  if ((r4 & 1) << 24 >> 24 == 0) {
    r5 = 10;
    r6 = r4;
  } else {
    r4 = HEAP32[r1 >> 2];
    r5 = (r4 & -2) - 1 | 0;
    r6 = r4 & 255;
  }
  r4 = r6 & 255;
  if ((r4 & 1 | 0) == 0) {
    r7 = r4 >>> 1;
  } else {
    r7 = HEAP32[r1 + 4 >> 2];
  }
  if ((r5 - r7 | 0) >>> 0 < r2 >>> 0) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(r1, r5, r2 - r5 + r7 | 0, r7, r7);
    r8 = HEAP8[r3];
  } else {
    r8 = r6;
  }
  if ((r8 & 1) << 24 >> 24 == 0) {
    r9 = r1 + 1 | 0;
  } else {
    r9 = HEAP32[r1 + 8 >> 2];
  }
  _memset(r9 + r7 | 0, 0, r2);
  r8 = r7 + r2 | 0;
  if ((HEAP8[r3] & 1) << 24 >> 24 == 0) {
    HEAP8[r3] = r8 << 1 & 255;
  } else {
    HEAP32[r1 + 4 >> 2] = r8;
  }
  HEAP8[r9 + r8 | 0] = 0;
  return;
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(r1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(r1, 5249432, 2);
  return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E(r1, r2) {
  var r3;
  r3 = r1 >> 2;
  L343 : do {
    if ((HEAP32[r3] | 0) == 1) {
      while (1) {
        if ((HEAP32[r3] | 0) != 1) {
          break L343;
        }
      }
    }
  } while (0);
  if ((HEAP32[r3] | 0) != 0) {
    return;
  }
  HEAP32[r3] = 1;
  __ZNSt3__117__call_once_proxyINS_12_GLOBAL__N_111__fake_bindEEEvPv(r2);
  HEAP32[r3] = -1;
  return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv() {
  var r1;
  r1 = ___cxa_allocate_exception(8);
  __ZNSt11logic_errorC2EPKc(r1, 5244352);
  HEAP32[r1 >> 2] = 5264680;
  ___cxa_throw(r1, 5271232, 84);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == -1) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r3 >>> 0 < 11) {
    HEAP8[r1] = r3 << 1 & 255;
    r4 = r1 + 1 | 0;
    _memcpy(r4, r2, r3);
    r5 = r4 + r3 | 0;
    HEAP8[r5] = 0;
    return;
  } else {
    r6 = r3 + 16 & -16;
    r7 = __Znwj(r6);
    HEAP32[r1 + 8 >> 2] = r7;
    HEAP32[r1 >> 2] = r6 | 1;
    HEAP32[r1 + 4 >> 2] = r3;
    r4 = r7;
    _memcpy(r4, r2, r3);
    r5 = r4 + r3 | 0;
    HEAP8[r5] = 0;
    return;
  }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == -1) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r2 >>> 0 < 11) {
    HEAP8[r1] = r2 << 1 & 255;
    r4 = r1 + 1 | 0;
    _memset(r4, r3, r2);
    r5 = r4 + r2 | 0;
    HEAP8[r5] = 0;
    return;
  } else {
    r6 = r2 + 16 & -16;
    r7 = __Znwj(r6);
    HEAP32[r1 + 8 >> 2] = r7;
    HEAP32[r1 >> 2] = r6 | 1;
    HEAP32[r1 + 4 >> 2] = r2;
    r4 = r7;
    _memset(r4, r3, r2);
    r5 = r4 + r2 | 0;
    HEAP8[r5] = 0;
    return;
  }
}
function __ZSt13get_terminatev() {
  return tempValue = HEAP32[1318554], HEAP32[1318554] = tempValue, tempValue;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = r1;
  r4 = HEAP8[r3];
  if ((r4 & 1) << 24 >> 24 == 0) {
    r5 = 10;
    r6 = r4;
  } else {
    r4 = HEAP32[r1 >> 2];
    r5 = (r4 & -2) - 1 | 0;
    r6 = r4 & 255;
  }
  r4 = r6 & 255;
  if ((r4 & 1 | 0) == 0) {
    r7 = r4 >>> 1;
  } else {
    r7 = HEAP32[r1 + 4 >> 2];
  }
  if ((r7 | 0) == (r5 | 0)) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(r1, r5, 1, r5, r5);
    r8 = HEAP8[r3];
  } else {
    r8 = r6;
  }
  if ((r8 & 1) << 24 >> 24 == 0) {
    r9 = r1 + 1 | 0;
  } else {
    r9 = HEAP32[r1 + 8 >> 2];
  }
  HEAP8[r9 + r7 | 0] = r2;
  r2 = r7 + 1 | 0;
  HEAP8[r9 + r2 | 0] = 0;
  if ((HEAP8[r3] & 1) << 24 >> 24 == 0) {
    HEAP8[r3] = r2 << 1 & 255;
    return;
  } else {
    HEAP32[r1 + 4 >> 2] = r2;
    return;
  }
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = r1;
  r5 = HEAP8[r4];
  if ((r5 & 1) << 24 >> 24 == 0) {
    r6 = 10;
    r7 = r5;
  } else {
    r5 = HEAP32[r1 >> 2];
    r6 = (r5 & -2) - 1 | 0;
    r7 = r5 & 255;
  }
  r5 = r7 & 255;
  if ((r5 & 1 | 0) == 0) {
    r8 = r5 >>> 1;
  } else {
    r8 = HEAP32[r1 + 4 >> 2];
  }
  if ((r6 - r8 | 0) >>> 0 < r3 >>> 0) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(r1, r6, r3 - r6 + r8 | 0, r8, r8, 0, r3, r2);
    return;
  }
  if ((r3 | 0) == 0) {
    return;
  }
  if ((r7 & 1) << 24 >> 24 == 0) {
    r9 = r1 + 1 | 0;
  } else {
    r9 = HEAP32[r1 + 8 >> 2];
  }
  _memcpy(r9 + r8 | 0, r2, r3);
  r2 = r8 + r3 | 0;
  if ((HEAP8[r4] & 1) << 24 >> 24 == 0) {
    HEAP8[r4] = r2 << 1 & 255;
  } else {
    HEAP32[r1 + 4 >> 2] = r2;
  }
  HEAP8[r9 + r2 | 0] = 0;
  return;
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = r1;
  r5 = r1;
  r6 = HEAP8[r5];
  if ((r6 & 1) << 24 >> 24 == 0) {
    r7 = 10;
    r8 = r6;
  } else {
    r6 = HEAP32[r1 >> 2];
    r7 = (r6 & -2) - 1 | 0;
    r8 = r6 & 255;
  }
  if (r7 >>> 0 < r3 >>> 0) {
    r6 = r8 & 255;
    if ((r6 & 1 | 0) == 0) {
      r9 = r6 >>> 1;
    } else {
      r9 = HEAP32[r1 + 4 >> 2];
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(r1, r7, r3 - r7 | 0, r9, 0, r9, r3, r2);
    return;
  }
  if ((r8 & 1) << 24 >> 24 == 0) {
    r10 = r4 + 1 | 0;
  } else {
    r10 = HEAP32[r1 + 8 >> 2];
  }
  _memmove(r10, r2, r3, 1, 0);
  HEAP8[r10 + r3 | 0] = 0;
  if ((HEAP8[r5] & 1) << 24 >> 24 == 0) {
    HEAP8[r5] = r3 << 1 & 255;
    return;
  } else {
    HEAP32[r1 + 4 >> 2] = r3;
    return;
  }
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj["X"] = 1;
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r1) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(r1);
  return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(r1) {
  if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
    return;
  }
  __ZdlPv(HEAP32[r1 + 8 >> 2]);
  return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r1, r2) {
  var r3, r4, r5, r6;
  if ((r1 | 0) == (r2 | 0)) {
    return;
  }
  r3 = HEAP8[r2];
  if ((r3 & 1) << 24 >> 24 == 0) {
    r4 = r2 + 4 | 0;
  } else {
    r4 = HEAP32[r2 + 8 >> 2];
  }
  r5 = r3 & 255;
  if ((r5 & 1 | 0) == 0) {
    r6 = r5 >>> 1;
  } else {
    r6 = HEAP32[r2 + 4 >> 2];
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(r1, r4, r6);
  return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(r1, r2) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(r1, r2, _wcslen(r2));
  return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9;
  r3 = r1;
  r4 = HEAP8[r3];
  if ((r4 & 1) << 24 >> 24 == 0) {
    r5 = 1;
    r6 = r4;
  } else {
    r4 = HEAP32[r1 >> 2];
    r5 = (r4 & -2) - 1 | 0;
    r6 = r4 & 255;
  }
  r4 = r6 & 255;
  if ((r4 & 1 | 0) == 0) {
    r7 = r4 >>> 1;
  } else {
    r7 = HEAP32[r1 + 4 >> 2];
  }
  if ((r7 | 0) == (r5 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(r1, r5, 1, r5, r5);
    r8 = HEAP8[r3];
  } else {
    r8 = r6;
  }
  if ((r8 & 1) << 24 >> 24 == 0) {
    r9 = r1 + 4 | 0;
  } else {
    r9 = HEAP32[r1 + 8 >> 2];
  }
  HEAP32[r9 + (r7 << 2) >> 2] = r2;
  r2 = r7 + 1 | 0;
  HEAP32[r9 + (r2 << 2) >> 2] = 0;
  if ((HEAP8[r3] & 1) << 24 >> 24 == 0) {
    HEAP8[r3] = r2 << 1 & 255;
    return;
  } else {
    HEAP32[r1 + 4 >> 2] = r2;
    return;
  }
}
__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw["X"] = 1;
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = r1;
  r5 = HEAP8[r4];
  if ((r5 & 1) << 24 >> 24 == 0) {
    r6 = 1;
    r7 = r5;
  } else {
    r5 = HEAP32[r1 >> 2];
    r6 = (r5 & -2) - 1 | 0;
    r7 = r5 & 255;
  }
  if (r6 >>> 0 < r3 >>> 0) {
    r5 = r7 & 255;
    if ((r5 & 1 | 0) == 0) {
      r8 = r5 >>> 1;
    } else {
      r8 = HEAP32[r1 + 4 >> 2];
    }
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(r1, r6, r3 - r6 | 0, r8, r8, r3, r2);
    return;
  }
  if ((r7 & 1) << 24 >> 24 == 0) {
    r9 = r1 + 4 | 0;
  } else {
    r9 = HEAP32[r1 + 8 >> 2];
  }
  _wmemmove(r9, r2, r3);
  HEAP32[r9 + (r3 << 2) >> 2] = 0;
  if ((HEAP8[r4] & 1) << 24 >> 24 == 0) {
    HEAP8[r4] = r3 << 1 & 255;
    return;
  } else {
    HEAP32[r1 + 4 >> 2] = r3;
    return;
  }
}
__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  if ((-3 - r2 | 0) >>> 0 < r3 >>> 0) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
    r9 = r1 + 1 | 0;
  } else {
    r9 = HEAP32[r1 + 8 >> 2];
  }
  do {
    if (r2 >>> 0 < 2147483631) {
      r10 = r3 + r2 | 0;
      r11 = r2 << 1;
      r12 = r10 >>> 0 < r11 >>> 0 ? r11 : r10;
      if (r12 >>> 0 < 11) {
        r13 = 11;
        break;
      }
      r13 = r12 + 16 & -16;
    } else {
      r13 = -2;
    }
  } while (0);
  r3 = __Znwj(r13);
  if ((r5 | 0) != 0) {
    _memcpy(r3, r9, r5);
  }
  if ((r7 | 0) != 0) {
    _memcpy(r3 + r5 | 0, r8, r7);
  }
  r8 = r4 - r6 | 0;
  if ((r8 | 0) != (r5 | 0)) {
    _memcpy(r3 + r7 + r5 | 0, r9 + r6 + r5 | 0, r8 - r5 | 0);
  }
  if ((r2 | 0) == 10) {
    r14 = r1 + 8 | 0;
    HEAP32[r14 >> 2] = r3;
    r15 = r13 | 1;
    r16 = r1 | 0;
    HEAP32[r16 >> 2] = r15;
    r17 = r8 + r7 | 0;
    r18 = r1 + 4 | 0;
    HEAP32[r18 >> 2] = r17;
    r19 = r3 + r17 | 0;
    HEAP8[r19] = 0;
    return;
  }
  __ZdlPv(r9);
  r14 = r1 + 8 | 0;
  HEAP32[r14 >> 2] = r3;
  r15 = r13 | 1;
  r16 = r1 | 0;
  HEAP32[r16 >> 2] = r15;
  r17 = r8 + r7 | 0;
  r18 = r1 + 4 | 0;
  HEAP32[r18 >> 2] = r17;
  r19 = r3 + r17 | 0;
  HEAP8[r19] = 0;
  return;
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13;
  if ((-3 - r2 | 0) >>> 0 < r3 >>> 0) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
    r6 = r1 + 1 | 0;
  } else {
    r6 = HEAP32[r1 + 8 >> 2];
  }
  do {
    if (r2 >>> 0 < 2147483631) {
      r7 = r3 + r2 | 0;
      r8 = r2 << 1;
      r9 = r7 >>> 0 < r8 >>> 0 ? r8 : r7;
      if (r9 >>> 0 < 11) {
        r10 = 11;
        break;
      }
      r10 = r9 + 16 & -16;
    } else {
      r10 = -2;
    }
  } while (0);
  r3 = __Znwj(r10);
  if ((r5 | 0) != 0) {
    _memcpy(r3, r6, r5);
  }
  if ((r4 | 0) != (r5 | 0)) {
    _memcpy(r3 + r5 | 0, r6 + r5 | 0, r4 - r5 | 0);
  }
  if ((r2 | 0) == 10) {
    r11 = r1 + 8 | 0;
    HEAP32[r11 >> 2] = r3;
    r12 = r10 | 1;
    r13 = r1 | 0;
    HEAP32[r13 >> 2] = r12;
    return;
  }
  __ZdlPv(r6);
  r11 = r1 + 8 | 0;
  HEAP32[r11 >> 2] = r3;
  r12 = r10 | 1;
  r13 = r1 | 0;
  HEAP32[r13 >> 2] = r12;
  return;
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj["X"] = 1;
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  if (r3 >>> 0 > 1073741822) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r3 >>> 0 < 2) {
    HEAP8[r1] = r3 << 1 & 255;
    r4 = r1 + 4 | 0;
    r5 = _wmemcpy(r4, r2, r3);
    r6 = (r3 << 2) + r4 | 0;
    HEAP32[r6 >> 2] = 0;
    return;
  } else {
    r7 = r3 + 4 & -4;
    r8 = __Znwj(r7 << 2);
    HEAP32[r1 + 8 >> 2] = r8;
    HEAP32[r1 >> 2] = r7 | 1;
    HEAP32[r1 + 4 >> 2] = r3;
    r4 = r8;
    r5 = _wmemcpy(r4, r2, r3);
    r6 = (r3 << 2) + r4 | 0;
    HEAP32[r6 >> 2] = 0;
    return;
  }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(r1, r2, r3) {
  var r4, r5, r6, r7, r8;
  if (r2 >>> 0 > 1073741822) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r2 >>> 0 < 2) {
    HEAP8[r1] = r2 << 1 & 255;
    r4 = r1 + 4 | 0;
    r5 = _wmemset(r4, r3, r2);
    r6 = (r2 << 2) + r4 | 0;
    HEAP32[r6 >> 2] = 0;
    return;
  } else {
    r7 = r2 + 4 & -4;
    r8 = __Znwj(r7 << 2);
    HEAP32[r1 + 8 >> 2] = r8;
    HEAP32[r1 >> 2] = r7 | 1;
    HEAP32[r1 + 4 >> 2] = r2;
    r4 = r8;
    r5 = _wmemset(r4, r3, r2);
    r6 = (r2 << 2) + r4 | 0;
    HEAP32[r6 >> 2] = 0;
    return;
  }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12;
  if ((1073741821 - r2 | 0) >>> 0 < r3 >>> 0) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
    r8 = r1 + 4 | 0;
  } else {
    r8 = HEAP32[r1 + 8 >> 2];
  }
  do {
    if (r2 >>> 0 < 536870895) {
      r9 = r3 + r2 | 0;
      r10 = r2 << 1;
      r11 = r9 >>> 0 < r10 >>> 0 ? r10 : r9;
      if (r11 >>> 0 < 2) {
        r12 = 2;
        break;
      }
      r12 = r11 + 4 & -4;
    } else {
      r12 = 1073741822;
    }
  } while (0);
  r3 = __Znwj(r12 << 2);
  if ((r6 | 0) != 0) {
    _wmemcpy(r3, r7, r6);
  }
  r7 = r4 - r5 | 0;
  if ((r4 | 0) != (r5 | 0)) {
    _wmemcpy((r6 << 2) + r3 | 0, (r5 << 2) + r8 | 0, r7);
  }
  if ((r2 | 0) != 1) {
    __ZdlPv(r8);
  }
  HEAP32[r1 + 8 >> 2] = r3;
  HEAP32[r1 >> 2] = r12 | 1;
  r12 = r7 + r6 | 0;
  HEAP32[r1 + 4 >> 2] = r12;
  HEAP32[r3 + (r12 << 2) >> 2] = 0;
  return;
}
__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw["X"] = 1;
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13;
  if ((1073741821 - r2 | 0) >>> 0 < r3 >>> 0) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if ((HEAP8[r1] & 1) << 24 >> 24 == 0) {
    r6 = r1 + 4 | 0;
  } else {
    r6 = HEAP32[r1 + 8 >> 2];
  }
  do {
    if (r2 >>> 0 < 536870895) {
      r7 = r3 + r2 | 0;
      r8 = r2 << 1;
      r9 = r7 >>> 0 < r8 >>> 0 ? r8 : r7;
      if (r9 >>> 0 < 2) {
        r10 = 2;
        break;
      }
      r10 = r9 + 4 & -4;
    } else {
      r10 = 1073741822;
    }
  } while (0);
  r3 = __Znwj(r10 << 2);
  if ((r5 | 0) != 0) {
    _wmemcpy(r3, r6, r5);
  }
  if ((r4 | 0) != (r5 | 0)) {
    _wmemcpy((r5 << 2) + r3 | 0, (r5 << 2) + r6 | 0, r4 - r5 | 0);
  }
  if ((r2 | 0) == 1) {
    r11 = r1 + 8 | 0;
    HEAP32[r11 >> 2] = r3;
    r12 = r10 | 1;
    r13 = r1 | 0;
    HEAP32[r13 >> 2] = r12;
    return;
  }
  __ZdlPv(r6);
  r11 = r1 + 8 | 0;
  HEAP32[r11 >> 2] = r3;
  r12 = r10 | 1;
  r13 = r1 | 0;
  HEAP32[r13 >> 2] = r12;
  return;
}
__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj["X"] = 1;
function __ZSt9terminatev() {
  FUNCTION_TABLE[__ZSt13get_terminatev()]();
  _abort();
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE(r1, r2) {
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci(r1, r2, r3) {
  return r1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv(r1) {
  return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv(r1) {
  return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv(r1) {
  return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi(r1, r2) {
  return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi(r1, r2) {
  return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE(r1, r2) {
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi(r1, r2, r3) {
  return r1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv(r1) {
  return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv(r1) {
  return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv(r1) {
  return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj(r1, r2) {
  return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj(r1, r2) {
  return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj(r1, r2, r3, r4, r5, r6) {
  r6 = r1;
  HEAP32[r6 >> 2] = 0;
  HEAP32[r6 + 4 >> 2] = 0;
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = -1;
  HEAP32[r6 + 4 >> 2] = -1;
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI10_mbstate_tEEj(r1, r2, r3, r4) {
  r4 = STACKTOP;
  r2 = r3 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r3 + 4 >> 2] = HEAP32[r2 + 1];
  HEAP32[r3 + 8 >> 2] = HEAP32[r2 + 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r2 + 3];
  r2 = r1;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r2 + 4 >> 2] = 0;
  r2 = r1 + 8 | 0;
  HEAP32[r2 >> 2] = -1;
  HEAP32[r2 + 4 >> 2] = -1;
  STACKTOP = r4;
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj(r1, r2, r3, r4, r5, r6) {
  r6 = r1;
  HEAP32[r6 >> 2] = 0;
  HEAP32[r6 + 4 >> 2] = 0;
  r6 = r1 + 8 | 0;
  HEAP32[r6 >> 2] = -1;
  HEAP32[r6 + 4 >> 2] = -1;
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI10_mbstate_tEEj(r1, r2, r3, r4) {
  r4 = STACKTOP;
  r2 = r3 >> 2;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  HEAP32[r3 >> 2] = HEAP32[r2];
  HEAP32[r3 + 4 >> 2] = HEAP32[r2 + 1];
  HEAP32[r3 + 8 >> 2] = HEAP32[r2 + 2];
  HEAP32[r3 + 12 >> 2] = HEAP32[r2 + 3];
  r2 = r1;
  HEAP32[r2 >> 2] = 0;
  HEAP32[r2 + 4 >> 2] = 0;
  r2 = r1 + 8 | 0;
  HEAP32[r2 >> 2] = -1;
  HEAP32[r2 + 4 >> 2] = -1;
  STACKTOP = r4;
  return;
}
function __ZNSt3__18ios_baseD2Ev(r1) {
  var r2;
  r2 = r1 >> 2;
  HEAP32[r2] = 5265248;
  __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(r1);
  __ZNSt3__16localeD1Ev(HEAP32[r2 + 7]);
  _free(HEAP32[r2 + 8]);
  _free(HEAP32[r2 + 9]);
  _free(HEAP32[r2 + 12]);
  _free(HEAP32[r2 + 15]);
  return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(r1) {
  __ZNSt3__18ios_baseD2Ev(r1 | 0);
  return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(r1) {
  var r2, r3, r4, r5;
  r2 = HEAP32[r1 + 40 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  r3 = r1 + 32 | 0;
  r4 = r1 + 36 | 0;
  r5 = r2;
  while (1) {
    r2 = r5 - 1 | 0;
    FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + (r2 << 2) >> 2]](0, r1, HEAP32[HEAP32[r4 >> 2] + (r2 << 2) >> 2]);
    if ((r2 | 0) == 0) {
      break;
    } else {
      r5 = r2;
    }
  }
  return;
}
function __ZNKSt3__18ios_base6getlocEv(r1, r2) {
  __ZNSt3__16localeC1ERKS0_(r1, HEAP32[r2 + 28 >> 2]);
  return;
}
function __ZNSt3__18ios_base4initEPv(r1, r2) {
  var r3, r4, r5;
  r3 = r1 >> 2;
  HEAP32[r3 + 6] = r2;
  HEAP32[r3 + 4] = (r2 | 0) == 0 & 1;
  HEAP32[r3 + 5] = 0;
  HEAP32[r3 + 1] = 4098;
  HEAP32[r3 + 3] = 0;
  HEAP32[r3 + 2] = 6;
  r3 = r1 + 28 | 0;
  r2 = (r3 | 0) == 0;
  r4 = r1 + 32 | 0;
  for (r1 = r4 >> 2, r5 = r1 + 10; r1 < r5; r1++) {
    HEAP32[r1] = 0;
  }
  if (r2) {
    return;
  }
  __ZNSt3__16localeC1Ev(r3);
  return;
}
function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(r1) {
  __ZNSt3__18ios_baseD2Ev(r1 | 0);
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev(r1) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev(r1) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(r1);
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(r1) {
  HEAP32[r1 >> 2] = 5266400;
  __ZNSt3__16localeD1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(r1) {
  var r2;
  HEAP32[r1 >> 2] = 5266400;
  __ZNSt3__16localeC1Ev(r1 + 4 | 0);
  r2 = (r1 + 8 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = 0;
  r5 = r1;
  if ((r3 | 0) <= 0) {
    r6 = 0;
    return r6;
  }
  r7 = r1 + 12 | 0;
  r8 = r1 + 16 | 0;
  r9 = r2;
  r2 = 0;
  while (1) {
    r10 = HEAP32[r7 >> 2];
    if (r10 >>> 0 < HEAP32[r8 >> 2] >>> 0) {
      HEAP32[r7 >> 2] = r10 + 1 | 0;
      r11 = HEAP8[r10];
    } else {
      r10 = FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] + 40 >> 2]](r1);
      if ((r10 | 0) == -1) {
        r6 = r2;
        r4 = 589;
        break;
      }
      r11 = r10 & 255;
    }
    HEAP8[r9] = r11;
    r10 = r2 + 1 | 0;
    if ((r10 | 0) < (r3 | 0)) {
      r9 = r9 + 1 | 0;
      r2 = r10;
    } else {
      r6 = r10;
      r4 = 590;
      break;
    }
  }
  if (r4 == 589) {
    return r6;
  } else if (r4 == 590) {
    return r6;
  }
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv(r1) {
  var r2, r3;
  if ((FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 36 >> 2]](r1) | 0) == -1) {
    r2 = -1;
    return r2;
  }
  r3 = r1 + 12 | 0;
  r1 = HEAP32[r3 >> 2];
  HEAP32[r3 >> 2] = r1 + 1 | 0;
  r2 = HEAPU8[r1];
  return r2;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = 0;
  r5 = r1;
  if ((r3 | 0) <= 0) {
    r6 = 0;
    return r6;
  }
  r7 = r1 + 24 | 0;
  r8 = r1 + 28 | 0;
  r9 = 0;
  r10 = r2;
  while (1) {
    r2 = HEAP32[r7 >> 2];
    if (r2 >>> 0 < HEAP32[r8 >> 2] >>> 0) {
      r11 = HEAP8[r10];
      HEAP32[r7 >> 2] = r2 + 1 | 0;
      HEAP8[r2] = r11;
    } else {
      if ((FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] + 52 >> 2]](r1, HEAP8[r10] << 24 >> 24) | 0) == -1) {
        r6 = r9;
        r4 = 604;
        break;
      }
    }
    r11 = r9 + 1 | 0;
    if ((r11 | 0) < (r3 | 0)) {
      r9 = r11;
      r10 = r10 + 1 | 0;
    } else {
      r6 = r11;
      r4 = 605;
      break;
    }
  }
  if (r4 == 605) {
    return r6;
  } else if (r4 == 604) {
    return r6;
  }
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev(r1) {
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev(r1) {
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(r1);
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(r1) {
  HEAP32[r1 >> 2] = 5266332;
  __ZNSt3__16localeD1Ev(HEAP32[r1 + 4 >> 2]);
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(r1) {
  var r2;
  HEAP32[r1 >> 2] = 5266332;
  __ZNSt3__16localeC1Ev(r1 + 4 | 0);
  r2 = (r1 + 8 | 0) >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  HEAP32[r2 + 3] = 0;
  HEAP32[r2 + 4] = 0;
  HEAP32[r2 + 5] = 0;
  return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = 0;
  r5 = r1;
  if ((r3 | 0) <= 0) {
    r6 = 0;
    return r6;
  }
  r7 = r1 + 12 | 0;
  r8 = r1 + 16 | 0;
  r9 = r2;
  r2 = 0;
  while (1) {
    r10 = HEAP32[r7 >> 2];
    if (r10 >>> 0 < HEAP32[r8 >> 2] >>> 0) {
      HEAP32[r7 >> 2] = r10 + 4 | 0;
      r11 = HEAP32[r10 >> 2];
    } else {
      r10 = FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] + 40 >> 2]](r1);
      if ((r10 | 0) == -1) {
        r6 = r2;
        r4 = 617;
        break;
      } else {
        r11 = r10;
      }
    }
    HEAP32[r9 >> 2] = r11;
    r10 = r2 + 1 | 0;
    if ((r10 | 0) < (r3 | 0)) {
      r9 = r9 + 4 | 0;
      r2 = r10;
    } else {
      r6 = r10;
      r4 = 619;
      break;
    }
  }
  if (r4 == 617) {
    return r6;
  } else if (r4 == 619) {
    return r6;
  }
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv(r1) {
  var r2, r3;
  if ((FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 36 >> 2]](r1) | 0) == -1) {
    r2 = -1;
    return r2;
  }
  r3 = r1 + 12 | 0;
  r1 = HEAP32[r3 >> 2];
  HEAP32[r3 >> 2] = r1 + 4 | 0;
  r2 = HEAP32[r1 >> 2];
  return r2;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = 0;
  r5 = r1;
  if ((r3 | 0) <= 0) {
    r6 = 0;
    return r6;
  }
  r7 = r1 + 24 | 0;
  r8 = r1 + 28 | 0;
  r9 = 0;
  r10 = r2;
  while (1) {
    r2 = HEAP32[r7 >> 2];
    if (r2 >>> 0 < HEAP32[r8 >> 2] >>> 0) {
      r11 = HEAP32[r10 >> 2];
      HEAP32[r7 >> 2] = r2 + 4 | 0;
      HEAP32[r2 >> 2] = r11;
    } else {
      if ((FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] + 52 >> 2]](r1, HEAP32[r10 >> 2]) | 0) == -1) {
        r6 = r9;
        r4 = 632;
        break;
      }
    }
    r11 = r9 + 1 | 0;
    if ((r11 | 0) < (r3 | 0)) {
      r9 = r11;
      r10 = r10 + 4 | 0;
    } else {
      r6 = r11;
      r4 = 634;
      break;
    }
  }
  if (r4 == 632) {
    return r6;
  } else if (r4 == 634) {
    return r6;
  }
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(r1) {
  __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(r1) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(r1 + 8 | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(r1) {
  __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(r1) {
  __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(r1) {
  __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(r1) {
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(r1 + 8 | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(r1) {
  __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(r1) {
  __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(r1) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(r1) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(r1 + 4 | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(r1) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(r1) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(r1, r2) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(r1, r2);
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(r1, r2) {
  var r3, r4;
  r3 = r1 | 0;
  HEAP8[r3] = 0;
  HEAP32[r1 + 4 >> 2] = r2;
  r1 = HEAP32[HEAP32[r2 >> 2] - 12 >> 2];
  r4 = r2;
  if ((HEAP32[r1 + (r4 + 16) >> 2] | 0) != 0) {
    return;
  }
  r2 = HEAP32[r1 + (r4 + 72) >> 2];
  if ((r2 | 0) != 0) {
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(r2);
  }
  HEAP8[r3] = 1;
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(r1) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(r1);
  return;
}
function __ZNSt3__18ios_base5clearEj(r1, r2) {
  var r3, r4, r5;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r4 = r3;
  r5 = (HEAP32[r1 + 24 >> 2] | 0) == 0;
  if (r5) {
    HEAP32[r1 + 16 >> 2] = r2 | 1;
  } else {
    HEAP32[r1 + 16 >> 2] = r2;
  }
  if (((r5 & 1 | r2) & HEAP32[r1 + 20 >> 2] | 0) == 0) {
    STACKTOP = r3;
    return;
  }
  r3 = ___cxa_allocate_exception(16);
  __ZNSt3__117iostream_categoryEv();
  HEAP32[r4 >> 2] = 1;
  HEAP32[r4 + 4 >> 2] = 5263756;
  __ZNSt3__18ios_base7failureC1EPKcRKNS_10error_codeE(r3, r4);
  ___cxa_throw(r3, 5271776, 520);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r3 = r2;
  r4 = r1 >> 2;
  r5 = r1, r6 = r5 >> 2;
  if ((HEAP32[(HEAP32[HEAP32[r4] - 12 >> 2] + 24 >> 2) + r6] | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(r3, r1);
  do {
    if ((HEAP8[r3 | 0] & 1) << 24 >> 24 != 0) {
      r1 = HEAP32[(HEAP32[HEAP32[r4] - 12 >> 2] + 24 >> 2) + r6];
      if ((FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 24 >> 2]](r1) | 0) != -1) {
        break;
      }
      r1 = HEAP32[HEAP32[r4] - 12 >> 2];
      __ZNSt3__18ios_base5clearEj(r5 + r1 | 0, HEAP32[(r1 + 16 >> 2) + r6] | 1);
    }
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(r3);
  STACKTOP = r2;
  return;
}
__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv["X"] = 1;
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(r1) {
  var r2;
  r2 = r1 + 16 | 0;
  HEAP32[r2 >> 2] = HEAP32[r2 >> 2] | 1;
  if ((HEAP32[r1 + 20 >> 2] & 1 | 0) == 0) {
    return;
  } else {
    ___cxa_rethrow();
  }
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r3 = r2;
  r4 = r1 >> 2;
  r5 = r1, r6 = r5 >> 2;
  if ((HEAP32[(HEAP32[HEAP32[r4] - 12 >> 2] + 24 >> 2) + r6] | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC1ERS3_(r3, r1);
  do {
    if ((HEAP8[r3 | 0] & 1) << 24 >> 24 != 0) {
      r1 = HEAP32[(HEAP32[HEAP32[r4] - 12 >> 2] + 24 >> 2) + r6];
      if ((FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 24 >> 2]](r1) | 0) != -1) {
        break;
      }
      r1 = HEAP32[HEAP32[r4] - 12 >> 2];
      __ZNSt3__18ios_base5clearEj(r5 + r1 | 0, HEAP32[(r1 + 16 >> 2) + r6] | 1);
    }
  } while (0);
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD1Ev(r3);
  STACKTOP = r2;
  return;
}
__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv["X"] = 1;
function __ZNKSt3__119__iostream_category4nameEv(r1) {
  return 5250736;
}
function __ZNSt3__119__iostream_categoryD1Ev(r1) {
  return;
}
function __ZNSt3__17collateIcED1Ev(r1) {
  return;
}
function __ZNSt3__17collateIwED1Ev(r1) {
  return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init270() {
  if (HEAP8[5274536] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318634] = 1;
  HEAP32[1318635] = 0;
  return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11;
  r1 = 0;
  L790 : do {
    if ((r4 | 0) == (r5 | 0)) {
      r6 = r2;
    } else {
      r7 = r2;
      r8 = r4;
      while (1) {
        if ((r7 | 0) == (r3 | 0)) {
          r9 = -1;
          r1 = 725;
          break;
        }
        r10 = HEAP8[r7];
        r11 = HEAP8[r8];
        if (r10 << 24 >> 24 < r11 << 24 >> 24) {
          r9 = -1;
          r1 = 727;
          break;
        }
        if (r11 << 24 >> 24 < r10 << 24 >> 24) {
          r9 = 1;
          r1 = 726;
          break;
        }
        r10 = r7 + 1 | 0;
        r11 = r8 + 1 | 0;
        if ((r11 | 0) == (r5 | 0)) {
          r6 = r10;
          break L790;
        } else {
          r7 = r10;
          r8 = r11;
        }
      }
      if (r1 == 725) {
        return r9;
      } else if (r1 == 726) {
        return r9;
      } else if (r1 == 727) {
        return r9;
      }
    }
  } while (0);
  r9 = (r6 | 0) != (r3 | 0) & 1;
  return r9;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    r4 = 0;
    return r4;
  } else {
    r5 = r2;
    r6 = 0;
  }
  while (1) {
    r2 = (HEAP8[r5] << 24 >> 24) + (r6 << 4) | 0;
    r1 = r2 & -268435456;
    r7 = (r1 >>> 24 | r1) ^ r2;
    r2 = r5 + 1 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      r4 = r7;
      break;
    } else {
      r5 = r2;
      r6 = r7;
    }
  }
  return r4;
}
function ___cxx_global_var_init1271() {
  if (HEAP8[5274528] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318632] = 1;
  HEAP32[1318633] = 0;
  return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11;
  r1 = 0;
  L814 : do {
    if ((r4 | 0) == (r5 | 0)) {
      r6 = r2;
    } else {
      r7 = r2;
      r8 = r4;
      while (1) {
        if ((r7 | 0) == (r3 | 0)) {
          r9 = -1;
          r1 = 748;
          break;
        }
        r10 = HEAP32[r7 >> 2];
        r11 = HEAP32[r8 >> 2];
        if ((r10 | 0) < (r11 | 0)) {
          r9 = -1;
          r1 = 745;
          break;
        }
        if ((r11 | 0) < (r10 | 0)) {
          r9 = 1;
          r1 = 746;
          break;
        }
        r10 = r7 + 4 | 0;
        r11 = r8 + 4 | 0;
        if ((r11 | 0) == (r5 | 0)) {
          r6 = r10;
          break L814;
        } else {
          r7 = r10;
          r8 = r11;
        }
      }
      if (r1 == 746) {
        return r9;
      } else if (r1 == 745) {
        return r9;
      } else if (r1 == 748) {
        return r9;
      }
    }
  } while (0);
  r9 = (r6 | 0) != (r3 | 0) & 1;
  return r9;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    r4 = 0;
    return r4;
  } else {
    r5 = r2;
    r6 = 0;
  }
  while (1) {
    r2 = (r6 << 4) + HEAP32[r5 >> 2] | 0;
    r1 = r2 & -268435456;
    r7 = (r1 >>> 24 | r1) ^ r2;
    r2 = r5 + 4 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      r4 = r7;
      break;
    } else {
      r5 = r2;
      r6 = r7;
    }
  }
  return r4;
}
function ___cxx_global_var_init2272() {
  if (HEAP8[5274520] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318630] = 1;
  HEAP32[1318631] = 0;
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(r1) {
  var r2, r3, r4;
  r2 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r2];
  r3 = HEAP32[HEAP32[r1 >> 2] - 12 >> 2] >> 2;
  r4 = r1 >> 2;
  if ((HEAP32[r3 + (r4 + 6)] | 0) == 0) {
    return;
  }
  if ((HEAP32[r3 + (r4 + 4)] | 0) != 0) {
    return;
  }
  if ((HEAP32[r3 + (r4 + 1)] & 8192 | 0) == 0) {
    return;
  }
  if (__ZSt18uncaught_exceptionv()) {
    return;
  }
  r4 = HEAP32[r2];
  r3 = HEAP32[r4 + HEAP32[HEAP32[r4 >> 2] - 12 >> 2] + 24 >> 2];
  if ((FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 24 >> 2]](r3) | 0) != -1) {
    return;
  }
  r3 = HEAP32[r2];
  r2 = HEAP32[HEAP32[r3 >> 2] - 12 >> 2];
  r4 = r3;
  __ZNSt3__18ios_base5clearEj(r4 + r2 | 0, HEAP32[r2 + (r4 + 16) >> 2] | 1);
  return;
}
__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev["X"] = 1;
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(r1) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(r1) {
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(r1 + 4 | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(r1) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(r1) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(r1 + HEAP32[HEAP32[r1 >> 2] - 12 >> 2] | 0);
  return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC1ERS3_(r1, r2) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_(r1, r2);
  return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_(r1, r2) {
  var r3, r4;
  r3 = r1 | 0;
  HEAP8[r3] = 0;
  HEAP32[r1 + 4 >> 2] = r2;
  r1 = HEAP32[HEAP32[r2 >> 2] - 12 >> 2];
  r4 = r2;
  if ((HEAP32[r1 + (r4 + 16) >> 2] | 0) != 0) {
    return;
  }
  r2 = HEAP32[r1 + (r4 + 72) >> 2];
  if ((r2 | 0) != 0) {
    __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(r2);
  }
  HEAP8[r3] = 1;
  return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD1Ev(r1) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(r1);
  return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(r1) {
  var r2, r3, r4;
  r2 = (r1 + 4 | 0) >> 2;
  r1 = HEAP32[r2];
  r3 = HEAP32[HEAP32[r1 >> 2] - 12 >> 2] >> 2;
  r4 = r1 >> 2;
  if ((HEAP32[r3 + (r4 + 6)] | 0) == 0) {
    return;
  }
  if ((HEAP32[r3 + (r4 + 4)] | 0) != 0) {
    return;
  }
  if ((HEAP32[r3 + (r4 + 1)] & 8192 | 0) == 0) {
    return;
  }
  if (__ZSt18uncaught_exceptionv()) {
    return;
  }
  r4 = HEAP32[r2];
  r3 = HEAP32[r4 + HEAP32[HEAP32[r4 >> 2] - 12 >> 2] + 24 >> 2];
  if ((FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 24 >> 2]](r3) | 0) != -1) {
    return;
  }
  r3 = HEAP32[r2];
  r2 = HEAP32[HEAP32[r3 >> 2] - 12 >> 2];
  r4 = r3;
  __ZNSt3__18ios_base5clearEj(r4 + r2 | 0, HEAP32[r2 + (r4 + 16) >> 2] | 1);
  return;
}
__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev["X"] = 1;
function __ZNKSt3__119__iostream_category7messageEi(r1, r2, r3) {
  if ((r3 | 0) == 1) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r1, 5252100, 35);
    return;
  } else {
    __ZNKSt3__112__do_message7messageEi(r1, undef, r3);
    return;
  }
}
function __ZNSt3__117iostream_categoryEv() {
  if (HEAP8[5274296] << 24 >> 24 != 0) {
    return;
  }
  if ((___cxa_guard_acquire(5274296) | 0) == 0) {
    return;
  }
  __ZNSt3__119__iostream_categoryC1Ev();
  return;
}
function __ZNSt3__119__iostream_categoryC1Ev() {
  __ZNSt3__119__iostream_categoryC2Ev();
  return;
}
function __ZNSt3__18ios_base7failureC1EPKcRKNS_10error_codeE(r1, r2) {
  __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE(r1, r2);
  return;
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE(r1, r2) {
  var r3;
  r3 = r2;
  __ZNSt3__112system_errorC2ENS_10error_codeEPKc(r1 | 0, HEAP32[r3 >> 2], HEAP32[r3 + 4 >> 2], 5249884);
  HEAP32[r1 >> 2] = 5265268;
  return;
}
function __ZNSt3__18ios_base7failureD0Ev(r1) {
  __ZNSt3__18ios_base7failureD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18ios_base7failureD1Ev(r1) {
  __ZNSt3__18ios_base7failureD2Ev(r1);
  return;
}
function __ZNSt3__18ios_base7failureD2Ev(r1) {
  __ZNSt3__112system_errorD2Ev(r1 | 0);
  return;
}
function __ZNSt3__18ios_baseD0Ev(r1) {
  __ZNSt3__18ios_baseD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18ios_baseD1Ev(r1) {
  __ZNSt3__18ios_baseD2Ev(r1);
  return;
}
function __ZNSt3__119__iostream_categoryD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__119__iostream_categoryC2Ev() {
  __ZNSt3__112__do_messageC2Ev(5263756);
  HEAP32[1315939] = 5266120;
  return;
}
function __ZNSt3__17collateIcED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_(r1, r2, r3, r4) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r3, r4);
  return;
}
function __ZNSt3__17collateIwED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_(r1, r2, r3, r4) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r3, r4);
  return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 12;
  r7 = r3 + 16;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(r5, r1);
  do {
    if ((HEAP8[r5 | 0] & 1) << 24 >> 24 != 0) {
      r8 = r1 >> 2;
      r9 = r1;
      __ZNKSt3__18ios_base6getlocEv(r6, r9 + HEAP32[HEAP32[r8] - 12 >> 2] | 0);
      r10 = HEAP32[r6 >> 2];
      r11 = __ZNKSt3__16locale9use_facetERNS0_2idE(r10, 5273332);
      __ZNSt3__16localeD1Ev(r10);
      r10 = HEAP32[HEAP32[r8] - 12 >> 2];
      r12 = HEAP8[r10 + (r9 + 76) | 0];
      r13 = HEAP32[HEAP32[r11 >> 2] + 16 >> 2];
      HEAP32[r4 >> 2] = HEAP32[r10 + (r9 + 24) >> 2];
      FUNCTION_TABLE[r13](r7, r11, r4, r9 + r10 | 0, r12, r2);
      if ((HEAP32[r7 >> 2] | 0) != 0) {
        break;
      }
      r12 = HEAP32[HEAP32[r8] - 12 >> 2];
      __ZNSt3__18ios_base5clearEj(r9 + r12 | 0, HEAP32[r12 + (r9 + 16) >> 2] | 5);
    }
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(r5);
  STACKTOP = r3;
  return r1;
}
__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi["X"] = 1;
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = r3 + 4;
  r6 = r3 + 12;
  r7 = r3 + 16;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(r5, r1);
  do {
    if ((HEAP8[r5 | 0] & 1) << 24 >> 24 != 0) {
      r8 = r1 >> 2;
      r9 = r1;
      __ZNKSt3__18ios_base6getlocEv(r6, r9 + HEAP32[HEAP32[r8] - 12 >> 2] | 0);
      r10 = HEAP32[r6 >> 2];
      r11 = __ZNKSt3__16locale9use_facetERNS0_2idE(r10, 5273332);
      __ZNSt3__16localeD1Ev(r10);
      r10 = HEAP32[HEAP32[r8] - 12 >> 2];
      r12 = HEAP8[r10 + (r9 + 76) | 0];
      r13 = HEAP32[HEAP32[r11 >> 2] + 32 >> 2];
      HEAP32[r4 >> 2] = HEAP32[r10 + (r9 + 24) >> 2];
      FUNCTION_TABLE[r13](r7, r11, r4, r9 + r10 | 0, r12, r2);
      if ((HEAP32[r7 >> 2] | 0) != 0) {
        break;
      }
      r12 = HEAP32[HEAP32[r8] - 12 >> 2];
      __ZNSt3__18ios_base5clearEj(r9 + r12 | 0, HEAP32[r12 + (r9 + 16) >> 2] | 5);
    }
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(r5);
  STACKTOP = r3;
  return r1;
}
__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd["X"] = 1;
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(r1) {
  var r2, r3;
  r2 = r1 & 74;
  if ((r2 | 0) == 8) {
    r3 = 16;
  } else if ((r2 | 0) == 64) {
    r3 = 8;
  } else if ((r2 | 0) == 0) {
    r3 = 0;
  } else {
    r3 = 10;
  }
  return r3;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  r10 = r8 + 4;
  r11 = r8 + 8;
  r12 = r8 + 12;
  r13 = r8 + 16;
  r14 = r8 + 20;
  r15 = r8 + 24;
  if ((HEAP32[r5 + 4 >> 2] & 1 | 0) == 0) {
    HEAP32[r9 >> 2] = -1;
    r16 = HEAP32[HEAP32[r2 >> 2] + 16 >> 2];
    r17 = r3 | 0;
    HEAP32[r11 >> 2] = HEAP32[r17 >> 2];
    HEAP32[r12 >> 2] = HEAP32[r4 >> 2];
    FUNCTION_TABLE[r16](r10, r2, r11, r12, r5, r6, r9);
    r12 = HEAP32[r10 >> 2];
    HEAP32[r17 >> 2] = r12;
    r17 = HEAP32[r9 >> 2];
    if ((r17 | 0) == 1) {
      HEAP8[r7] = 1;
    } else if ((r17 | 0) == 0) {
      HEAP8[r7] = 0;
    } else {
      HEAP8[r7] = 1;
      HEAP32[r6 >> 2] = 4;
    }
    HEAP32[r1 >> 2] = r12;
    STACKTOP = r8;
    return;
  }
  __ZNKSt3__18ios_base6getlocEv(r13, r5);
  r12 = HEAP32[r13 >> 2];
  r13 = __ZNKSt3__16locale9use_facetERNS0_2idE(r12, 5273668);
  __ZNSt3__16localeD1Ev(r12);
  __ZNKSt3__18ios_base6getlocEv(r14, r5);
  r5 = HEAP32[r14 >> 2];
  r14 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273300);
  r12 = r14;
  __ZNSt3__16localeD1Ev(r5);
  r5 = r15 | 0;
  r17 = r14;
  FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 24 >> 2]](r5, r12);
  r14 = r15 + 12 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 28 >> 2]](r14, r12);
  HEAP8[r7] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, HEAP32[r4 >> 2], r5, r15 + 24 | 0, r13, r6, 1) | 0) == (r5 | 0) & 1;
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r14);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r5);
  STACKTOP = r8;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb["X"] = 1;
function __ZNSt3__16localeD1Ev(r1) {
  __ZNSt3__16localeD2Ev(r1);
  return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49;
  r8 = 0;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r10 = (r4 - r3 | 0) / 12 & -1;
  r11 = r9 | 0;
  do {
    if (r10 >>> 0 > 100) {
      r12 = _malloc(r10);
      if ((r12 | 0) != 0) {
        r13 = r12;
        r14 = r12;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r13 = 0;
      r14 = 0;
    } else {
      r13 = r11;
      r14 = 0;
    }
  } while (0);
  r11 = (r3 | 0) == (r4 | 0);
  L964 : do {
    if (r11) {
      r15 = r10;
      r16 = 0;
    } else {
      r12 = r10;
      r17 = 0;
      r18 = r13;
      r19 = r3;
      while (1) {
        r20 = HEAPU8[r19];
        if ((r20 & 1 | 0) == 0) {
          r21 = r20 >>> 1;
        } else {
          r21 = HEAP32[r19 + 4 >> 2];
        }
        if ((r21 | 0) == 0) {
          HEAP8[r18] = 2;
          r22 = r17 + 1 | 0;
          r23 = r12 - 1 | 0;
        } else {
          HEAP8[r18] = 1;
          r22 = r17;
          r23 = r12;
        }
        r20 = r19 + 12 | 0;
        if ((r20 | 0) == (r4 | 0)) {
          r15 = r23;
          r16 = r22;
          break L964;
        } else {
          r12 = r23;
          r17 = r22;
          r18 = r18 + 1 | 0;
          r19 = r20;
        }
      }
    }
  } while (0);
  r22 = (r1 | 0) >> 2;
  r1 = HEAP32[r22];
  r23 = (r2 | 0) == 0;
  L976 : do {
    if ((r1 | 0) == 0 ^ r23) {
      r2 = r5;
      r21 = r15;
      r10 = r16;
      r19 = 0;
      r18 = r1, r17 = r18 >> 2;
      while (1) {
        if ((r21 | 0) == 0) {
          r24 = r18;
          break L976;
        }
        r12 = HEAP32[r17 + 3];
        if ((r12 | 0) == (HEAP32[r17 + 4] | 0)) {
          r25 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 36 >> 2]](r18);
        } else {
          r25 = HEAPU8[r12];
        }
        r12 = r25 & 255;
        if (r7) {
          r26 = r12;
        } else {
          r26 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 12 >> 2]](r5, r12);
        }
        r12 = r19 + 1 | 0;
        L988 : do {
          if (r11) {
            r27 = r10;
            r28 = r21;
            r29 = r12;
          } else {
            r20 = r21;
            r30 = r10;
            r31 = r13;
            r32 = 0;
            r33 = r3;
            while (1) {
              do {
                if (HEAP8[r31] << 24 >> 24 == 1) {
                  r34 = r33;
                  if ((HEAP8[r34] & 1) << 24 >> 24 == 0) {
                    r35 = r33 + 1 | 0;
                  } else {
                    r35 = HEAP32[r33 + 8 >> 2];
                  }
                  r36 = HEAP8[r35 + r19 | 0];
                  if (r7) {
                    r37 = r36;
                  } else {
                    r37 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 12 >> 2]](r5, r36);
                  }
                  if (r26 << 24 >> 24 != r37 << 24 >> 24) {
                    HEAP8[r31] = 0;
                    r38 = r32;
                    r39 = r30;
                    r40 = r20 - 1 | 0;
                    break;
                  }
                  r36 = HEAPU8[r34];
                  if ((r36 & 1 | 0) == 0) {
                    r41 = r36 >>> 1;
                  } else {
                    r41 = HEAP32[r33 + 4 >> 2];
                  }
                  if ((r41 | 0) != (r12 | 0)) {
                    r38 = 1;
                    r39 = r30;
                    r40 = r20;
                    break;
                  }
                  HEAP8[r31] = 2;
                  r38 = 1;
                  r39 = r30 + 1 | 0;
                  r40 = r20 - 1 | 0;
                } else {
                  r38 = r32;
                  r39 = r30;
                  r40 = r20;
                }
              } while (0);
              r36 = r33 + 12 | 0;
              if ((r36 | 0) == (r4 | 0)) {
                break;
              }
              r20 = r40;
              r30 = r39;
              r31 = r31 + 1 | 0;
              r32 = r38;
              r33 = r36;
            }
            if ((r38 & 1) << 24 >> 24 == 0) {
              r27 = r39;
              r28 = r40;
              r29 = r12;
              break;
            }
            r33 = HEAP32[r22];
            r32 = (r33 + 12 | 0) >> 2;
            r31 = HEAP32[r32];
            r30 = r33 + 16 | 0;
            r20 = HEAP32[r30 >> 2];
            do {
              if ((r31 | 0) == (r20 | 0)) {
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r33 >> 2] + 40 >> 2]](r33) | 0) == -1) {
                  r8 = 944;
                  break;
                }
                r42 = HEAP32[r32];
                r43 = HEAP32[r30 >> 2];
                r8 = 941;
                break;
              } else {
                r36 = r31 + 1 | 0;
                HEAP32[r32] = r36;
                r42 = r36;
                r43 = r20;
                r8 = 941;
                break;
              }
            } while (0);
            do {
              if (r8 == 941) {
                r8 = 0;
                if ((r42 | 0) != (r43 | 0)) {
                  break;
                }
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r33 >> 2] + 36 >> 2]](r33) | 0) == -1) {
                  r8 = 944;
                  break;
                } else {
                  break;
                }
              }
            } while (0);
            if (r8 == 944) {
              r8 = 0;
              HEAP32[r22] = 0;
            }
            if ((r39 + r40 | 0) >>> 0 < 2) {
              r27 = r39;
              r28 = r40;
              r29 = r12;
              break;
            } else {
              r44 = r39;
              r45 = r13;
              r46 = r3;
            }
            while (1) {
              do {
                if (HEAP8[r45] << 24 >> 24 == 2) {
                  r33 = HEAPU8[r46];
                  if ((r33 & 1 | 0) == 0) {
                    r47 = r33 >>> 1;
                  } else {
                    r47 = HEAP32[r46 + 4 >> 2];
                  }
                  if ((r47 | 0) == (r12 | 0)) {
                    r48 = r44;
                    break;
                  }
                  HEAP8[r45] = 0;
                  r48 = r44 - 1 | 0;
                } else {
                  r48 = r44;
                }
              } while (0);
              r33 = r46 + 12 | 0;
              if ((r33 | 0) == (r4 | 0)) {
                r27 = r48;
                r28 = r40;
                r29 = r12;
                break L988;
              } else {
                r44 = r48;
                r45 = r45 + 1 | 0;
                r46 = r33;
              }
            }
          }
        } while (0);
        r12 = HEAP32[r22];
        if ((r12 | 0) == 0 ^ r23) {
          r21 = r28;
          r10 = r27;
          r19 = r29;
          r18 = r12, r17 = r18 >> 2;
        } else {
          r24 = r12;
          break L976;
        }
      }
    } else {
      r24 = r1;
    }
  } while (0);
  if (!((r24 | 0) == 0 ^ r23)) {
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  }
  L1039 : do {
    if (r11) {
      r8 = 960;
    } else {
      r23 = r3;
      r24 = r13;
      while (1) {
        if (HEAP8[r24] << 24 >> 24 == 2) {
          r49 = r23;
          break L1039;
        }
        r1 = r23 + 12 | 0;
        if ((r1 | 0) == (r4 | 0)) {
          r8 = 960;
          break L1039;
        }
        r23 = r1;
        r24 = r24 + 1 | 0;
      }
    }
  } while (0);
  if (r8 == 960) {
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 4;
    r49 = r4;
  }
  if ((r14 | 0) == 0) {
    STACKTOP = r9;
    return r49;
  }
  _free(r14);
  STACKTOP = r9;
  return r49;
}
__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb["X"] = 1;
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 256 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r2 + 32;
  r10 = r2 + 84;
  r11 = r2 + 88;
  r12 = r2 + 248, r13 = r12 >> 2;
  r14 = r2 + 252;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r9, r5, r16, r8);
  r5 = r2 + 44 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1052 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP8[r8];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAPU8[r25];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r26 & 255, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1052;
          }
          r25 = HEAP32[r21];
          r28 = HEAP32[r22];
          if ((r25 | 0) == (r28 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20) | 0) == -1) {
              break;
            }
            r29 = HEAP32[r21];
            r30 = HEAP32[r22];
          } else {
            r31 = r25 + 1 | 0;
            HEAP32[r21] = r31;
            r29 = r31;
            r30 = r28;
          }
          if ((r29 | 0) == (r30 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20) | 0) == -1) {
              break;
            }
          }
          if (!r24) {
            r27 = r20;
            break L1052;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1052;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r32 = r3 >>> 1;
  } else {
    r32 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r32 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r33 = r1 | 0;
    HEAP32[r33 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r33 = r1 | 0;
  HEAP32[r33 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl["X"] = 1;
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  __ZNKSt3__18ios_base6getlocEv(r6, r2);
  r2 = HEAP32[r6 >> 2];
  r6 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273668);
  FUNCTION_TABLE[HEAP32[HEAP32[r6 >> 2] + 32 >> 2]](r6, 5274108, 5274134, r3);
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273300);
  r6 = r3;
  HEAP8[r4] = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r6);
  FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r1, r6);
  __ZNSt3__16localeD1Ev(r2);
  STACKTOP = r5;
  return;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10) {
  var r11, r12, r13, r14, r15, r16, r17;
  r11 = r5 >> 2;
  r5 = r4 >> 2;
  r4 = HEAP32[r5];
  r12 = (r4 | 0) == (r3 | 0);
  do {
    if (r12) {
      r13 = HEAP8[r10 + 24 | 0] << 24 >> 24 == r1 << 24 >> 24;
      if (!r13) {
        if (HEAP8[r10 + 25 | 0] << 24 >> 24 != r1 << 24 >> 24) {
          break;
        }
      }
      HEAP32[r5] = r3 + 1 | 0;
      HEAP8[r3] = r13 ? 43 : 45;
      HEAP32[r11] = 0;
      r14 = 0;
      return r14;
    }
  } while (0);
  do {
    if (r1 << 24 >> 24 == r6 << 24 >> 24) {
      r13 = HEAPU8[r7];
      if ((r13 & 1 | 0) == 0) {
        r15 = r13 >>> 1;
      } else {
        r15 = HEAP32[r7 + 4 >> 2];
      }
      if ((r15 | 0) == 0) {
        break;
      }
      r13 = HEAP32[r9 >> 2];
      if ((r13 - r8 | 0) >= 160) {
        r14 = 0;
        return r14;
      }
      r16 = HEAP32[r11];
      HEAP32[r9 >> 2] = r13 + 4 | 0;
      HEAP32[r13 >> 2] = r16;
      HEAP32[r11] = 0;
      r14 = 0;
      return r14;
    }
  } while (0);
  r9 = r10 + 26 | 0;
  r8 = r10;
  while (1) {
    if ((r8 | 0) == (r9 | 0)) {
      r17 = r9;
      break;
    }
    if (HEAP8[r8] << 24 >> 24 == r1 << 24 >> 24) {
      r17 = r8;
      break;
    } else {
      r8 = r8 + 1 | 0;
    }
  }
  r8 = r17 - r10 | 0;
  if ((r8 | 0) > 23) {
    r14 = -1;
    return r14;
  }
  do {
    if ((r2 | 0) == 8 | (r2 | 0) == 10) {
      if ((r8 | 0) < (r2 | 0)) {
        break;
      } else {
        r14 = -1;
      }
      return r14;
    } else if ((r2 | 0) == 16) {
      if ((r8 | 0) < 22) {
        break;
      }
      if (r12) {
        r14 = -1;
        return r14;
      }
      if ((r4 - r3 | 0) >= 3) {
        r14 = -1;
        return r14;
      }
      if (HEAP8[r4 - 1 | 0] << 24 >> 24 != 48) {
        r14 = -1;
        return r14;
      }
      HEAP32[r11] = 0;
      r10 = HEAP8[r8 + 5274108 | 0];
      r17 = HEAP32[r5];
      HEAP32[r5] = r17 + 1 | 0;
      HEAP8[r17] = r10;
      r14 = 0;
      return r14;
    }
  } while (0);
  if ((r4 - r3 | 0) < 39) {
    r3 = HEAP8[r8 + 5274108 | 0];
    HEAP32[r5] = r4 + 1 | 0;
    HEAP8[r4] = r3;
  }
  HEAP32[r11] = HEAP32[r11] + 1 | 0;
  r14 = 0;
  return r14;
}
__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_["X"] = 1;
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r5 = r1;
  r6 = r1;
  r7 = HEAP8[r6];
  r8 = r7 & 255;
  if ((r8 & 1 | 0) == 0) {
    r9 = r8 >>> 1;
  } else {
    r9 = HEAP32[r1 + 4 >> 2];
  }
  if ((r9 | 0) == 0) {
    return;
  }
  do {
    if ((r2 | 0) == (r3 | 0)) {
      r10 = r7;
    } else {
      r9 = r3 - 4 | 0;
      if (r9 >>> 0 > r2 >>> 0) {
        r11 = r2;
        r12 = r9;
      } else {
        r10 = r7;
        break;
      }
      while (1) {
        r9 = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r9;
        r9 = r11 + 4 | 0;
        r8 = r12 - 4 | 0;
        if (r9 >>> 0 < r8 >>> 0) {
          r11 = r9;
          r12 = r8;
        } else {
          break;
        }
      }
      r10 = HEAP8[r6];
    }
  } while (0);
  if ((r10 & 1) << 24 >> 24 == 0) {
    r13 = r5 + 1 | 0;
  } else {
    r13 = HEAP32[r1 + 8 >> 2];
  }
  r5 = r10 & 255;
  if ((r5 & 1 | 0) == 0) {
    r14 = r5 >>> 1;
  } else {
    r14 = HEAP32[r1 + 4 >> 2];
  }
  r1 = r3 - 4 | 0;
  r3 = HEAP8[r13];
  r5 = r3 << 24 >> 24;
  r10 = r3 << 24 >> 24 < 1 | r3 << 24 >> 24 == 127;
  L1163 : do {
    if (r1 >>> 0 > r2 >>> 0) {
      r3 = r13 + r14 | 0;
      r6 = r13;
      r12 = r2;
      r11 = r5;
      r7 = r10;
      while (1) {
        if (!r7) {
          if ((r11 | 0) != (HEAP32[r12 >> 2] | 0)) {
            break;
          }
        }
        r8 = (r3 - r6 | 0) > 1 ? r6 + 1 | 0 : r6;
        r9 = r12 + 4 | 0;
        r15 = HEAP8[r8];
        r16 = r15 << 24 >> 24;
        r17 = r15 << 24 >> 24 < 1 | r15 << 24 >> 24 == 127;
        if (r9 >>> 0 < r1 >>> 0) {
          r6 = r8;
          r12 = r9;
          r11 = r16;
          r7 = r17;
        } else {
          r18 = r16;
          r19 = r17;
          break L1163;
        }
      }
      HEAP32[r4 >> 2] = 4;
      return;
    } else {
      r18 = r5;
      r19 = r10;
    }
  } while (0);
  if (r19) {
    return;
  }
  r19 = HEAP32[r1 >> 2];
  if (!(r18 >>> 0 < r19 >>> 0 | (r19 | 0) == 0)) {
    return;
  }
  HEAP32[r4 >> 2] = 4;
  return;
}
__ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj["X"] = 1;
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  if ((r1 | 0) == (r2 | 0)) {
    HEAP32[r3 >> 2] = 4;
    r7 = 0;
    STACKTOP = r5;
    return r7;
  }
  r8 = HEAP32[___errno_location() >> 2];
  HEAP32[___errno_location() >> 2] = 0;
  r9 = _strtoll(r1, r6, r4, __ZNSt3__16__clocEv());
  r4 = tempRet0;
  r1 = HEAP32[___errno_location() >> 2];
  if ((r1 | 0) == 0) {
    HEAP32[___errno_location() >> 2] = r8;
  }
  if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
    HEAP32[r3 >> 2] = 4;
    r7 = 0;
    STACKTOP = r5;
    return r7;
  }
  r2 = -1;
  r6 = 0;
  if ((r1 | 0) == 34 | ((r4 | 0) < (r2 | 0) | (r4 | 0) == (r2 | 0) & r9 >>> 0 < -2147483648 >>> 0) | ((r4 | 0) > (r6 | 0) | (r4 | 0) == (r6 | 0) & r9 >>> 0 > 2147483647 >>> 0)) {
    HEAP32[r3 >> 2] = 4;
    r3 = 0;
    r7 = (r4 | 0) > (r3 | 0) | (r4 | 0) == (r3 | 0) & r9 >>> 0 > 0 >>> 0 ? 2147483647 : -2147483648;
    STACKTOP = r5;
    return r7;
  } else {
    r7 = r9;
    STACKTOP = r5;
    return r7;
  }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 256 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r2 + 32;
  r10 = r2 + 84;
  r11 = r2 + 88;
  r12 = r2 + 248, r13 = r12 >> 2;
  r14 = r2 + 252;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r9, r5, r16, r8);
  r5 = r2 + 44 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1198 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP8[r8];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAPU8[r25];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r26 & 255, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1198;
          }
          r25 = HEAP32[r21];
          r28 = HEAP32[r22];
          if ((r25 | 0) == (r28 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20) | 0) == -1) {
              break;
            }
            r29 = HEAP32[r21];
            r30 = HEAP32[r22];
          } else {
            r31 = r25 + 1 | 0;
            HEAP32[r21] = r31;
            r29 = r31;
            r30 = r28;
          }
          if ((r29 | 0) == (r30 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20) | 0) == -1) {
              break;
            }
          }
          if (!r24) {
            r27 = r20;
            break L1198;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1198;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r32 = r3 >>> 1;
  } else {
    r32 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r32 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  HEAP32[r7 + 4 >> 2] = tempRet0;
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r33 = r1 | 0;
    HEAP32[r33 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r33 = r1 | 0;
  HEAP32[r33 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx["X"] = 1;
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r7 = 0;
      r8 = 0;
    } else {
      r9 = HEAP32[___errno_location() >> 2];
      HEAP32[___errno_location() >> 2] = 0;
      r10 = _strtoll(r1, r6, r4, __ZNSt3__16__clocEv());
      r11 = tempRet0;
      r12 = HEAP32[___errno_location() >> 2];
      if ((r12 | 0) == 0) {
        HEAP32[___errno_location() >> 2] = r9;
      }
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        r8 = 0;
        break;
      }
      if ((r12 | 0) != 34) {
        r7 = r11;
        r8 = r10;
        break;
      }
      HEAP32[r3 >> 2] = 4;
      r12 = 0;
      r9 = (r11 | 0) > (r12 | 0) | (r11 | 0) == (r12 | 0) & r10 >>> 0 > 0 >>> 0;
      r7 = r9 ? 2147483647 : -2147483648;
      r8 = r9 ? -1 : 0;
    }
  } while (0);
  STACKTOP = r5;
  return tempRet0 = r7, r8;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 256 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r2 + 32;
  r10 = r2 + 84;
  r11 = r2 + 88;
  r12 = r2 + 248, r13 = r12 >> 2;
  r14 = r2 + 252;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r9, r5, r16, r8);
  r5 = r2 + 44 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1247 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP8[r8];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAPU8[r25];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r26 & 255, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1247;
          }
          r25 = HEAP32[r21];
          r28 = HEAP32[r22];
          if ((r25 | 0) == (r28 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20) | 0) == -1) {
              break;
            }
            r29 = HEAP32[r21];
            r30 = HEAP32[r22];
          } else {
            r31 = r25 + 1 | 0;
            HEAP32[r21] = r31;
            r29 = r31;
            r30 = r28;
          }
          if ((r29 | 0) == (r30 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20) | 0) == -1) {
              break;
            }
          }
          if (!r24) {
            r27 = r20;
            break L1247;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1247;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r32 = r3 >>> 1;
  } else {
    r32 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r32 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP16[r7 >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r33 = r1 | 0;
    HEAP32[r33 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r33 = r1 | 0;
  HEAP32[r33 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt["X"] = 1;
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r7 = 0;
    } else {
      if (HEAP8[r1] << 24 >> 24 == 45) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        break;
      }
      r8 = HEAP32[___errno_location() >> 2];
      HEAP32[___errno_location() >> 2] = 0;
      r9 = _strtoull(r1, r6, r4, __ZNSt3__16__clocEv());
      r10 = tempRet0;
      r11 = HEAP32[___errno_location() >> 2];
      if ((r11 | 0) == 0) {
        HEAP32[___errno_location() >> 2] = r8;
      }
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        break;
      }
      r8 = 0;
      if ((r11 | 0) == 34 | (r10 >>> 0 > r8 >>> 0 | r10 >>> 0 == r8 >>> 0 & r9 >>> 0 > 65535 >>> 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = -1;
        break;
      } else {
        r7 = r9 & 65535;
        break;
      }
    }
  } while (0);
  STACKTOP = r5;
  return r7;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 256 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r2 + 32;
  r10 = r2 + 84;
  r11 = r2 + 88;
  r12 = r2 + 248, r13 = r12 >> 2;
  r14 = r2 + 252;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r9, r5, r16, r8);
  r5 = r2 + 44 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1301 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP8[r8];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAPU8[r25];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r26 & 255, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1301;
          }
          r25 = HEAP32[r21];
          r28 = HEAP32[r22];
          if ((r25 | 0) == (r28 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20) | 0) == -1) {
              break;
            }
            r29 = HEAP32[r21];
            r30 = HEAP32[r22];
          } else {
            r31 = r25 + 1 | 0;
            HEAP32[r21] = r31;
            r29 = r31;
            r30 = r28;
          }
          if ((r29 | 0) == (r30 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20) | 0) == -1) {
              break;
            }
          }
          if (!r24) {
            r27 = r20;
            break L1301;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1301;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r32 = r3 >>> 1;
  } else {
    r32 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r32 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r33 = r1 | 0;
    HEAP32[r33 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r33 = r1 | 0;
  HEAP32[r33 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_["X"] = 1;
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r7 = 0;
    } else {
      if (HEAP8[r1] << 24 >> 24 == 45) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        break;
      }
      r8 = HEAP32[___errno_location() >> 2];
      HEAP32[___errno_location() >> 2] = 0;
      r9 = _strtoull(r1, r6, r4, __ZNSt3__16__clocEv());
      r10 = tempRet0;
      r11 = HEAP32[___errno_location() >> 2];
      if ((r11 | 0) == 0) {
        HEAP32[___errno_location() >> 2] = r8;
      }
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        break;
      }
      r8 = 0;
      if ((r11 | 0) == 34 | (r10 >>> 0 > r8 >>> 0 | r10 >>> 0 == r8 >>> 0 & r9 >>> 0 > -1 >>> 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = -1;
        break;
      } else {
        r7 = r9;
        break;
      }
    }
  } while (0);
  STACKTOP = r5;
  return r7;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 256 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r2 + 32;
  r10 = r2 + 84;
  r11 = r2 + 88;
  r12 = r2 + 248, r13 = r12 >> 2;
  r14 = r2 + 252;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r9, r5, r16, r8);
  r5 = r2 + 44 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1355 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP8[r8];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAPU8[r25];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r26 & 255, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1355;
          }
          r25 = HEAP32[r21];
          r28 = HEAP32[r22];
          if ((r25 | 0) == (r28 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20) | 0) == -1) {
              break;
            }
            r29 = HEAP32[r21];
            r30 = HEAP32[r22];
          } else {
            r31 = r25 + 1 | 0;
            HEAP32[r21] = r31;
            r29 = r31;
            r30 = r28;
          }
          if ((r29 | 0) == (r30 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20) | 0) == -1) {
              break;
            }
          }
          if (!r24) {
            r27 = r20;
            break L1355;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1355;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r32 = r3 >>> 1;
  } else {
    r32 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r32 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r33 = r1 | 0;
    HEAP32[r33 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r33 = r1 | 0;
  HEAP32[r33 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm["X"] = 1;
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r7 = 0;
    } else {
      if (HEAP8[r1] << 24 >> 24 == 45) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        break;
      }
      r8 = HEAP32[___errno_location() >> 2];
      HEAP32[___errno_location() >> 2] = 0;
      r9 = _strtoull(r1, r6, r4, __ZNSt3__16__clocEv());
      r10 = tempRet0;
      r11 = HEAP32[___errno_location() >> 2];
      if ((r11 | 0) == 0) {
        HEAP32[___errno_location() >> 2] = r8;
      }
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        break;
      }
      r8 = 0;
      if ((r11 | 0) == 34 | (r10 >>> 0 > r8 >>> 0 | r10 >>> 0 == r8 >>> 0 & r9 >>> 0 > -1 >>> 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = -1;
        break;
      } else {
        r7 = r9;
        break;
      }
    }
  } while (0);
  STACKTOP = r5;
  return r7;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 256 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r2 + 32;
  r10 = r2 + 84;
  r11 = r2 + 88;
  r12 = r2 + 248, r13 = r12 >> 2;
  r14 = r2 + 252;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(r9, r5, r16, r8);
  r5 = r2 + 44 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1409 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP8[r8];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAPU8[r25];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r26 & 255, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1409;
          }
          r25 = HEAP32[r21];
          r28 = HEAP32[r22];
          if ((r25 | 0) == (r28 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20) | 0) == -1) {
              break;
            }
            r29 = HEAP32[r21];
            r30 = HEAP32[r22];
          } else {
            r31 = r25 + 1 | 0;
            HEAP32[r21] = r31;
            r29 = r31;
            r30 = r28;
          }
          if ((r29 | 0) == (r30 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20) | 0) == -1) {
              break;
            }
          }
          if (!r24) {
            r27 = r20;
            break L1409;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1409;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r32 = r3 >>> 1;
  } else {
    r32 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r32 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  HEAP32[r7 + 4 >> 2] = tempRet0;
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r33 = r1 | 0;
    HEAP32[r33 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r33 = r1 | 0;
  HEAP32[r33 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy["X"] = 1;
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r7 = 0;
      r8 = 0;
    } else {
      if (HEAP8[r1] << 24 >> 24 == 45) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        r8 = 0;
        break;
      }
      r9 = HEAP32[___errno_location() >> 2];
      HEAP32[___errno_location() >> 2] = 0;
      r10 = _strtoull(r1, r6, r4, __ZNSt3__16__clocEv());
      r11 = tempRet0;
      r12 = HEAP32[___errno_location() >> 2];
      if ((r12 | 0) == 0) {
        HEAP32[___errno_location() >> 2] = r9;
      }
      if ((HEAP32[r6 >> 2] | 0) != (r2 | 0)) {
        HEAP32[r3 >> 2] = 4;
        r7 = 0;
        r8 = 0;
        break;
      }
      if ((r12 | 0) != 34) {
        r7 = r11;
        r8 = r10;
        break;
      }
      HEAP32[r3 >> 2] = 4;
      r7 = -1;
      r8 = -1;
    }
  } while (0);
  STACKTOP = r5;
  return tempRet0 = r7, r8;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 272 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 32;
  r9 = r2 + 36;
  r10 = r2 + 40;
  r11 = r2 + 92;
  r12 = r2 + 96;
  r13 = r2 + 256, r14 = r13 >> 2;
  r15 = r2 + 260;
  r16 = r2 + 264;
  r17 = r2 + 268;
  r18 = r2 | 0;
  __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(r10, r5, r18, r8, r9);
  r5 = r2 + 52 | 0;
  _memset(r5, 0, 40);
  HEAP32[r11 >> 2] = r5;
  r19 = r12 | 0;
  HEAP32[r14] = r19;
  HEAP32[r15 >> 2] = 0;
  HEAP8[r16] = 1;
  HEAP8[r17] = 69;
  r20 = r3 | 0;
  r3 = HEAP32[r20 >> 2];
  r21 = (HEAP32[r4 >> 2] | 0) == 0;
  L1461 : do {
    if ((r3 | 0) == 0 ^ r21) {
      r4 = HEAP8[r8];
      r22 = HEAP8[r9];
      r23 = r3;
      while (1) {
        r24 = (r23 + 12 | 0) >> 2;
        r25 = (r23 + 16 | 0) >> 2;
        r26 = r23 >> 2;
        r27 = (r23 | 0) == 0 ^ r21;
        while (1) {
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r29 = HEAPU8[r28];
          }
          if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(r29 & 255, r16, r17, r5, r11, r4, r22, r10, r19, r13, r15, r18) | 0) != 0) {
            r30 = r23;
            break L1461;
          }
          r28 = HEAP32[r24];
          r31 = HEAP32[r25];
          if ((r28 | 0) == (r31 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r26] + 40 >> 2]](r23) | 0) == -1) {
              break;
            }
            r32 = HEAP32[r24];
            r33 = HEAP32[r25];
          } else {
            r34 = r28 + 1 | 0;
            HEAP32[r24] = r34;
            r32 = r34;
            r33 = r31;
          }
          if ((r32 | 0) == (r33 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23) | 0) == -1) {
              break;
            }
          }
          if (!r27) {
            r30 = r23;
            break L1461;
          }
        }
        HEAP32[r20 >> 2] = 0;
        if (r21) {
          r30 = 0;
          break L1461;
        } else {
          r23 = 0;
        }
      }
    } else {
      r30 = r3;
    }
  } while (0);
  r3 = HEAPU8[r10];
  if ((r3 & 1 | 0) == 0) {
    r35 = r3 >>> 1;
  } else {
    r35 = HEAP32[r10 + 4 >> 2];
  }
  do {
    if ((r35 | 0) != 0) {
      if ((HEAP8[r16] & 1) << 24 >> 24 == 0) {
        break;
      }
      r3 = HEAP32[r14];
      if ((r3 - r12 | 0) >= 160) {
        break;
      }
      r20 = HEAP32[r15 >> 2];
      HEAP32[r14] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r20;
    }
  } while (0);
  HEAPF32[r7 >> 2] = __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(r5, HEAP32[r11 >> 2], r6);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r10, r19, HEAP32[r14], r6);
  if ((r30 | 0) == 0 ^ r21) {
    r36 = r1 | 0;
    HEAP32[r36 >> 2] = r30;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r36 = r1 | 0;
  HEAP32[r36 >> 2] = r30;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf["X"] = 1;
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12) {
  var r13, r14, r15, r16, r17, r18;
  r13 = r11 >> 2;
  r11 = r10 >> 2;
  if (r1 << 24 >> 24 == r6 << 24 >> 24) {
    if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
      r14 = -1;
      return r14;
    }
    HEAP8[r2] = 0;
    r6 = HEAP32[r5 >> 2];
    HEAP32[r5 >> 2] = r6 + 1 | 0;
    HEAP8[r6] = 46;
    r6 = HEAPU8[r8];
    if ((r6 & 1 | 0) == 0) {
      r15 = r6 >>> 1;
    } else {
      r15 = HEAP32[r8 + 4 >> 2];
    }
    if ((r15 | 0) == 0) {
      r14 = 0;
      return r14;
    }
    r15 = HEAP32[r11];
    if ((r15 - r9 | 0) >= 160) {
      r14 = 0;
      return r14;
    }
    r6 = HEAP32[r13];
    HEAP32[r11] = r15 + 4 | 0;
    HEAP32[r15 >> 2] = r6;
    r14 = 0;
    return r14;
  }
  do {
    if (r1 << 24 >> 24 == r7 << 24 >> 24) {
      r6 = HEAPU8[r8];
      if ((r6 & 1 | 0) == 0) {
        r16 = r6 >>> 1;
      } else {
        r16 = HEAP32[r8 + 4 >> 2];
      }
      if ((r16 | 0) == 0) {
        break;
      }
      if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
        r14 = -1;
        return r14;
      }
      r6 = HEAP32[r11];
      if ((r6 - r9 | 0) >= 160) {
        r14 = 0;
        return r14;
      }
      r15 = HEAP32[r13];
      HEAP32[r11] = r6 + 4 | 0;
      HEAP32[r6 >> 2] = r15;
      HEAP32[r13] = 0;
      r14 = 0;
      return r14;
    }
  } while (0);
  r16 = r12 + 32 | 0;
  r7 = r12;
  while (1) {
    if ((r7 | 0) == (r16 | 0)) {
      r17 = r16;
      break;
    }
    if (HEAP8[r7] << 24 >> 24 == r1 << 24 >> 24) {
      r17 = r7;
      break;
    } else {
      r7 = r7 + 1 | 0;
    }
  }
  r7 = r17 - r12 | 0;
  if ((r7 | 0) > 31) {
    r14 = -1;
    return r14;
  }
  r12 = HEAP8[r7 + 5274108 | 0];
  r17 = HEAP32[r5 >> 2];
  if ((r17 - r4 | 0) < 39) {
    HEAP32[r5 >> 2] = r17 + 1 | 0;
    HEAP8[r17] = r12;
  }
  if ((r7 - 22 | 0) >>> 0 < 2) {
    HEAP8[r3] = 80;
    r14 = 0;
    return r14;
  }
  do {
    if ((r12 & 223 | 0) == (HEAP8[r3] << 24 >> 24 | 0)) {
      HEAP8[r2] = 0;
      r17 = HEAPU8[r8];
      if ((r17 & 1 | 0) == 0) {
        r18 = r17 >>> 1;
      } else {
        r18 = HEAP32[r8 + 4 >> 2];
      }
      if ((r18 | 0) == 0) {
        break;
      }
      r17 = HEAP32[r11];
      if ((r17 - r9 | 0) >= 160) {
        break;
      }
      r5 = HEAP32[r13];
      HEAP32[r11] = r17 + 4 | 0;
      HEAP32[r17 >> 2] = r5;
    }
  } while (0);
  if ((r7 | 0) > 21) {
    r14 = 0;
    return r14;
  }
  HEAP32[r13] = HEAP32[r13] + 1 | 0;
  r14 = 0;
  return r14;
}
__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_["X"] = 1;
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(r1, r2, r3, r4, r5) {
  var r6, r7, r8;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r7 = r6;
  __ZNKSt3__18ios_base6getlocEv(r7, r2);
  r2 = HEAP32[r7 >> 2];
  r7 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273668);
  FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 32 >> 2]](r7, 5274108, 5274140, r3);
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273300);
  r7 = r3;
  r8 = r3;
  HEAP8[r4] = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 12 >> 2]](r7);
  HEAP8[r5] = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 16 >> 2]](r7);
  FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r1, r7);
  __ZNSt3__16localeD1Ev(r2);
  STACKTOP = r6;
  return;
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r6 = 0;
    } else {
      r7 = _strtod(r1, r5, __ZNSt3__16__clocEv());
      if ((HEAP32[r5 >> 2] | 0) == (r2 | 0)) {
        r6 = r7;
        break;
      } else {
        HEAP32[r3 >> 2] = 4;
        r6 = 0;
        break;
      }
    }
  } while (0);
  STACKTOP = r4;
  return r6;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 272 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 32;
  r9 = r2 + 36;
  r10 = r2 + 40;
  r11 = r2 + 92;
  r12 = r2 + 96;
  r13 = r2 + 256, r14 = r13 >> 2;
  r15 = r2 + 260;
  r16 = r2 + 264;
  r17 = r2 + 268;
  r18 = r2 | 0;
  __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(r10, r5, r18, r8, r9);
  r5 = r2 + 52 | 0;
  _memset(r5, 0, 40);
  HEAP32[r11 >> 2] = r5;
  r19 = r12 | 0;
  HEAP32[r14] = r19;
  HEAP32[r15 >> 2] = 0;
  HEAP8[r16] = 1;
  HEAP8[r17] = 69;
  r20 = r3 | 0;
  r3 = HEAP32[r20 >> 2];
  r21 = (HEAP32[r4 >> 2] | 0) == 0;
  L1574 : do {
    if ((r3 | 0) == 0 ^ r21) {
      r4 = HEAP8[r8];
      r22 = HEAP8[r9];
      r23 = r3;
      while (1) {
        r24 = (r23 + 12 | 0) >> 2;
        r25 = (r23 + 16 | 0) >> 2;
        r26 = r23 >> 2;
        r27 = (r23 | 0) == 0 ^ r21;
        while (1) {
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r29 = HEAPU8[r28];
          }
          if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(r29 & 255, r16, r17, r5, r11, r4, r22, r10, r19, r13, r15, r18) | 0) != 0) {
            r30 = r23;
            break L1574;
          }
          r28 = HEAP32[r24];
          r31 = HEAP32[r25];
          if ((r28 | 0) == (r31 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r26] + 40 >> 2]](r23) | 0) == -1) {
              break;
            }
            r32 = HEAP32[r24];
            r33 = HEAP32[r25];
          } else {
            r34 = r28 + 1 | 0;
            HEAP32[r24] = r34;
            r32 = r34;
            r33 = r31;
          }
          if ((r32 | 0) == (r33 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23) | 0) == -1) {
              break;
            }
          }
          if (!r27) {
            r30 = r23;
            break L1574;
          }
        }
        HEAP32[r20 >> 2] = 0;
        if (r21) {
          r30 = 0;
          break L1574;
        } else {
          r23 = 0;
        }
      }
    } else {
      r30 = r3;
    }
  } while (0);
  r3 = HEAPU8[r10];
  if ((r3 & 1 | 0) == 0) {
    r35 = r3 >>> 1;
  } else {
    r35 = HEAP32[r10 + 4 >> 2];
  }
  do {
    if ((r35 | 0) != 0) {
      if ((HEAP8[r16] & 1) << 24 >> 24 == 0) {
        break;
      }
      r3 = HEAP32[r14];
      if ((r3 - r12 | 0) >= 160) {
        break;
      }
      r20 = HEAP32[r15 >> 2];
      HEAP32[r14] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r20;
    }
  } while (0);
  r15 = __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(r5, HEAP32[r11 >> 2], r6);
  HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r10, r19, HEAP32[r14], r6);
  if ((r30 | 0) == 0 ^ r21) {
    r36 = r1 | 0;
    HEAP32[r36 >> 2] = r30;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r36 = r1 | 0;
  HEAP32[r36 >> 2] = r30;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd["X"] = 1;
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r6 = 0;
    } else {
      r7 = _strtod(r1, r5, __ZNSt3__16__clocEv());
      if ((HEAP32[r5 >> 2] | 0) == (r2 | 0)) {
        r6 = r7;
        break;
      }
      HEAP32[r3 >> 2] = 4;
      r6 = 0;
    }
  } while (0);
  STACKTOP = r4;
  return r6;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 272 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 32;
  r9 = r2 + 36;
  r10 = r2 + 40;
  r11 = r2 + 92;
  r12 = r2 + 96;
  r13 = r2 + 256, r14 = r13 >> 2;
  r15 = r2 + 260;
  r16 = r2 + 264;
  r17 = r2 + 268;
  r18 = r2 | 0;
  __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(r10, r5, r18, r8, r9);
  r5 = r2 + 52 | 0;
  _memset(r5, 0, 40);
  HEAP32[r11 >> 2] = r5;
  r19 = r12 | 0;
  HEAP32[r14] = r19;
  HEAP32[r15 >> 2] = 0;
  HEAP8[r16] = 1;
  HEAP8[r17] = 69;
  r20 = r3 | 0;
  r3 = HEAP32[r20 >> 2];
  r21 = (HEAP32[r4 >> 2] | 0) == 0;
  L1618 : do {
    if ((r3 | 0) == 0 ^ r21) {
      r4 = HEAP8[r8];
      r22 = HEAP8[r9];
      r23 = r3;
      while (1) {
        r24 = (r23 + 12 | 0) >> 2;
        r25 = (r23 + 16 | 0) >> 2;
        r26 = r23 >> 2;
        r27 = (r23 | 0) == 0 ^ r21;
        while (1) {
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r29 = HEAPU8[r28];
          }
          if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(r29 & 255, r16, r17, r5, r11, r4, r22, r10, r19, r13, r15, r18) | 0) != 0) {
            r30 = r23;
            break L1618;
          }
          r28 = HEAP32[r24];
          r31 = HEAP32[r25];
          if ((r28 | 0) == (r31 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r26] + 40 >> 2]](r23) | 0) == -1) {
              break;
            }
            r32 = HEAP32[r24];
            r33 = HEAP32[r25];
          } else {
            r34 = r28 + 1 | 0;
            HEAP32[r24] = r34;
            r32 = r34;
            r33 = r31;
          }
          if ((r32 | 0) == (r33 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23) | 0) == -1) {
              break;
            }
          }
          if (!r27) {
            r30 = r23;
            break L1618;
          }
        }
        HEAP32[r20 >> 2] = 0;
        if (r21) {
          r30 = 0;
          break L1618;
        } else {
          r23 = 0;
        }
      }
    } else {
      r30 = r3;
    }
  } while (0);
  r3 = HEAPU8[r10];
  if ((r3 & 1 | 0) == 0) {
    r35 = r3 >>> 1;
  } else {
    r35 = HEAP32[r10 + 4 >> 2];
  }
  do {
    if ((r35 | 0) != 0) {
      if ((HEAP8[r16] & 1) << 24 >> 24 == 0) {
        break;
      }
      r3 = HEAP32[r14];
      if ((r3 - r12 | 0) >= 160) {
        break;
      }
      r20 = HEAP32[r15 >> 2];
      HEAP32[r14] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r20;
    }
  } while (0);
  r15 = __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(r5, HEAP32[r11 >> 2], r6);
  HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r10, r19, HEAP32[r14], r6);
  if ((r30 | 0) == 0 ^ r21) {
    r36 = r1 | 0;
    HEAP32[r36 >> 2] = r30;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r36 = r1 | 0;
  HEAP32[r36 >> 2] = r30;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe["X"] = 1;
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(r1, r2, r3) {
  var r4, r5, r6, r7;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  do {
    if ((r1 | 0) == (r2 | 0)) {
      HEAP32[r3 >> 2] = 4;
      r6 = 1.1125369292536007e-308;
    } else {
      r7 = _strtod(r1, r5, __ZNSt3__16__clocEv());
      if ((HEAP32[r5 >> 2] | 0) == (r2 | 0)) {
        r6 = r7;
        break;
      } else {
        HEAP32[r3 >> 2] = 4;
        r6 = 1.1125369292536007e-308;
        break;
      }
    }
  } while (0);
  STACKTOP = r4;
  return r6;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 28;
  r9 = r8 >> 2;
  r10 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r12 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r13 = STACKTOP;
  STACKTOP = STACKTOP + 160 | 0;
  r14 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r9] = 0;
  HEAP32[r9 + 1] = 0;
  HEAP32[r9 + 2] = 0;
  __ZNKSt3__18ios_base6getlocEv(r10, r5);
  r5 = HEAP32[r10 >> 2];
  r10 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273668);
  r9 = r2 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 32 >> 2]](r10, 5274108, 5274134, r9);
  __ZNSt3__16localeD1Ev(r5);
  r5 = r11 | 0;
  _memset(r5, 0, 40);
  HEAP32[r12 >> 2] = r5;
  r10 = r13 | 0;
  HEAP32[r14 >> 2] = r10;
  HEAP32[r15 >> 2] = 0;
  r13 = r3 | 0;
  r3 = HEAP32[r13 >> 2];
  r16 = (HEAP32[r4 >> 2] | 0) == 0;
  L1666 : do {
    if ((r3 | 0) == 0 ^ r16) {
      r4 = r3;
      while (1) {
        r17 = (r4 + 12 | 0) >> 2;
        r18 = (r4 + 16 | 0) >> 2;
        r19 = r4 >> 2;
        r20 = (r4 | 0) == 0 ^ r16;
        while (1) {
          r21 = HEAP32[r17];
          if ((r21 | 0) == (HEAP32[r18] | 0)) {
            r22 = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 36 >> 2]](r4);
          } else {
            r22 = HEAPU8[r21];
          }
          if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(r22 & 255, 16, r5, r12, r15, undef, r8, r10, r14, r9) | 0) != 0) {
            r23 = r4;
            break L1666;
          }
          r21 = HEAP32[r17];
          r24 = HEAP32[r18];
          if ((r21 | 0) == (r24 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r19] + 40 >> 2]](r4) | 0) == -1) {
              break;
            }
            r25 = HEAP32[r17];
            r26 = HEAP32[r18];
          } else {
            r27 = r21 + 1 | 0;
            HEAP32[r17] = r27;
            r25 = r27;
            r26 = r24;
          }
          if ((r25 | 0) == (r26 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r19] + 36 >> 2]](r4) | 0) == -1) {
              break;
            }
          }
          if (!r20) {
            r23 = r4;
            break L1666;
          }
        }
        HEAP32[r13 >> 2] = 0;
        if (r16) {
          r23 = 0;
          break L1666;
        } else {
          r4 = 0;
        }
      }
    } else {
      r23 = r3;
    }
  } while (0);
  HEAP8[r11 + 39 | 0] = 0;
  if ((__ZNSt3__110__sscanf_lEPKcPvS1_z(r5, __ZNSt3__16__clocEv(), (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r7, tempInt)) | 0) != 1) {
    HEAP32[r6 >> 2] = 4;
  }
  if ((r23 | 0) == 0 ^ r16) {
    r28 = r1 | 0;
    HEAP32[r28 >> 2] = r23;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r8);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r28 = r1 | 0;
  HEAP32[r28 >> 2] = r23;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r8);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv["X"] = 1;
function __ZNSt3__110__sscanf_lEPKcPvS1_z(r1, r2, r3) {
  var r4, r5;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r5 = r4;
  HEAP32[r5 >> 2] = r3;
  r3 = _uselocale(r2);
  r2 = _sscanf(r1, 5249428, HEAP32[r5 >> 2]);
  if ((r3 | 0) == 0) {
    STACKTOP = r4;
    return r2;
  }
  _uselocale(r3);
  STACKTOP = r4;
  return r2;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init3275() {
  if (HEAP8[5274512] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318628] = 1;
  HEAP32[1318629] = 0;
  return;
}
function __ZNSt3__16__clocEv() {
  do {
    if (HEAP8[5274288] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274288) | 0) == 0) {
        break;
      }
      HEAP32[1315938] = _newlocale(1, 5250472, 0);
    }
  } while (0);
  return HEAP32[1315938];
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 48 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  r10 = r8 + 4;
  r11 = r8 + 8;
  r12 = r8 + 12;
  r13 = r8 + 16;
  r14 = r8 + 20;
  r15 = r8 + 24;
  if ((HEAP32[r5 + 4 >> 2] & 1 | 0) == 0) {
    HEAP32[r9 >> 2] = -1;
    r16 = HEAP32[HEAP32[r2 >> 2] + 16 >> 2];
    r17 = r3 | 0;
    HEAP32[r11 >> 2] = HEAP32[r17 >> 2];
    HEAP32[r12 >> 2] = HEAP32[r4 >> 2];
    FUNCTION_TABLE[r16](r10, r2, r11, r12, r5, r6, r9);
    r12 = HEAP32[r10 >> 2];
    HEAP32[r17 >> 2] = r12;
    r17 = HEAP32[r9 >> 2];
    if ((r17 | 0) == 0) {
      HEAP8[r7] = 0;
    } else if ((r17 | 0) == 1) {
      HEAP8[r7] = 1;
    } else {
      HEAP8[r7] = 1;
      HEAP32[r6 >> 2] = 4;
    }
    HEAP32[r1 >> 2] = r12;
    STACKTOP = r8;
    return;
  }
  __ZNKSt3__18ios_base6getlocEv(r13, r5);
  r12 = HEAP32[r13 >> 2];
  r13 = __ZNKSt3__16locale9use_facetERNS0_2idE(r12, 5273660);
  __ZNSt3__16localeD1Ev(r12);
  __ZNKSt3__18ios_base6getlocEv(r14, r5);
  r5 = HEAP32[r14 >> 2];
  r14 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273292);
  r12 = r14;
  __ZNSt3__16localeD1Ev(r5);
  r5 = r15 | 0;
  r17 = r14;
  FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 24 >> 2]](r5, r12);
  r14 = r15 + 12 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 28 >> 2]](r14, r12);
  HEAP8[r7] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, HEAP32[r4 >> 2], r5, r15 + 24 | 0, r13, r6, 1) | 0) == (r5 | 0) & 1;
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r14);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r5);
  STACKTOP = r8;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb["X"] = 1;
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49;
  r8 = 0;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r10 = (r4 - r3 | 0) / 12 & -1;
  r11 = r9 | 0;
  do {
    if (r10 >>> 0 > 100) {
      r12 = _malloc(r10);
      if ((r12 | 0) != 0) {
        r13 = r12;
        r14 = r12;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r13 = 0;
      r14 = 0;
    } else {
      r13 = r11;
      r14 = 0;
    }
  } while (0);
  r11 = (r3 | 0) == (r4 | 0);
  L1736 : do {
    if (r11) {
      r15 = r10;
      r16 = 0;
    } else {
      r12 = r10;
      r17 = 0;
      r18 = r13;
      r19 = r3;
      while (1) {
        r20 = HEAPU8[r19];
        if ((r20 & 1 | 0) == 0) {
          r21 = r20 >>> 1;
        } else {
          r21 = HEAP32[r19 + 4 >> 2];
        }
        if ((r21 | 0) == 0) {
          HEAP8[r18] = 2;
          r22 = r17 + 1 | 0;
          r23 = r12 - 1 | 0;
        } else {
          HEAP8[r18] = 1;
          r22 = r17;
          r23 = r12;
        }
        r20 = r19 + 12 | 0;
        if ((r20 | 0) == (r4 | 0)) {
          r15 = r23;
          r16 = r22;
          break L1736;
        } else {
          r12 = r23;
          r17 = r22;
          r18 = r18 + 1 | 0;
          r19 = r20;
        }
      }
    }
  } while (0);
  r22 = (r1 | 0) >> 2;
  r1 = HEAP32[r22];
  r23 = (r2 | 0) == 0;
  L1748 : do {
    if ((r1 | 0) == 0 ^ r23) {
      r2 = r5;
      r21 = r15;
      r10 = r16;
      r19 = 0;
      r18 = r1, r17 = r18 >> 2;
      while (1) {
        if ((r21 | 0) == 0) {
          r24 = r18;
          break L1748;
        }
        r12 = HEAP32[r17 + 3];
        if ((r12 | 0) == (HEAP32[r17 + 4] | 0)) {
          r25 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 36 >> 2]](r18);
        } else {
          r25 = HEAP32[r12 >> 2];
        }
        if (r7) {
          r26 = r25;
        } else {
          r26 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r5, r25);
        }
        r12 = r19 + 1 | 0;
        L1760 : do {
          if (r11) {
            r27 = r10;
            r28 = r21;
            r29 = r12;
          } else {
            r20 = r21;
            r30 = r10;
            r31 = r13;
            r32 = 0;
            r33 = r3;
            while (1) {
              do {
                if (HEAP8[r31] << 24 >> 24 == 1) {
                  r34 = r33;
                  if ((HEAP8[r34] & 1) << 24 >> 24 == 0) {
                    r35 = r33 + 4 | 0;
                  } else {
                    r35 = HEAP32[r33 + 8 >> 2];
                  }
                  r36 = HEAP32[r35 + (r19 << 2) >> 2];
                  if (r7) {
                    r37 = r36;
                  } else {
                    r37 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 28 >> 2]](r5, r36);
                  }
                  if ((r26 | 0) != (r37 | 0)) {
                    HEAP8[r31] = 0;
                    r38 = r32;
                    r39 = r30;
                    r40 = r20 - 1 | 0;
                    break;
                  }
                  r36 = HEAPU8[r34];
                  if ((r36 & 1 | 0) == 0) {
                    r41 = r36 >>> 1;
                  } else {
                    r41 = HEAP32[r33 + 4 >> 2];
                  }
                  if ((r41 | 0) != (r12 | 0)) {
                    r38 = 1;
                    r39 = r30;
                    r40 = r20;
                    break;
                  }
                  HEAP8[r31] = 2;
                  r38 = 1;
                  r39 = r30 + 1 | 0;
                  r40 = r20 - 1 | 0;
                } else {
                  r38 = r32;
                  r39 = r30;
                  r40 = r20;
                }
              } while (0);
              r36 = r33 + 12 | 0;
              if ((r36 | 0) == (r4 | 0)) {
                break;
              }
              r20 = r40;
              r30 = r39;
              r31 = r31 + 1 | 0;
              r32 = r38;
              r33 = r36;
            }
            if ((r38 & 1) << 24 >> 24 == 0) {
              r27 = r39;
              r28 = r40;
              r29 = r12;
              break;
            }
            r33 = HEAP32[r22];
            r32 = (r33 + 12 | 0) >> 2;
            r31 = HEAP32[r32];
            r30 = r33 + 16 | 0;
            if ((r31 | 0) == (HEAP32[r30 >> 2] | 0)) {
              r42 = FUNCTION_TABLE[HEAP32[HEAP32[r33 >> 2] + 40 >> 2]](r33);
            } else {
              HEAP32[r32] = r31 + 4 | 0;
              r42 = HEAP32[r31 >> 2];
            }
            do {
              if ((r42 | 0) == -1) {
                r8 = 1591;
              } else {
                r31 = HEAP32[r32];
                if ((r31 | 0) == (HEAP32[r30 >> 2] | 0)) {
                  r43 = FUNCTION_TABLE[HEAP32[HEAP32[r33 >> 2] + 36 >> 2]](r33);
                } else {
                  r43 = HEAP32[r31 >> 2];
                }
                if ((r43 | 0) == -1) {
                  r8 = 1591;
                  break;
                } else {
                  break;
                }
              }
            } while (0);
            if (r8 == 1591) {
              r8 = 0;
              HEAP32[r22] = 0;
            }
            if ((r39 + r40 | 0) >>> 0 < 2) {
              r27 = r39;
              r28 = r40;
              r29 = r12;
              break;
            } else {
              r44 = r39;
              r45 = r13;
              r46 = r3;
            }
            while (1) {
              do {
                if (HEAP8[r45] << 24 >> 24 == 2) {
                  r33 = HEAPU8[r46];
                  if ((r33 & 1 | 0) == 0) {
                    r47 = r33 >>> 1;
                  } else {
                    r47 = HEAP32[r46 + 4 >> 2];
                  }
                  if ((r47 | 0) == (r12 | 0)) {
                    r48 = r44;
                    break;
                  }
                  HEAP8[r45] = 0;
                  r48 = r44 - 1 | 0;
                } else {
                  r48 = r44;
                }
              } while (0);
              r33 = r46 + 12 | 0;
              if ((r33 | 0) == (r4 | 0)) {
                r27 = r48;
                r28 = r40;
                r29 = r12;
                break L1760;
              } else {
                r44 = r48;
                r45 = r45 + 1 | 0;
                r46 = r33;
              }
            }
          }
        } while (0);
        r12 = HEAP32[r22];
        if ((r12 | 0) == 0 ^ r23) {
          r21 = r28;
          r10 = r27;
          r19 = r29;
          r18 = r12, r17 = r18 >> 2;
        } else {
          r24 = r12;
          break L1748;
        }
      }
    } else {
      r24 = r1;
    }
  } while (0);
  if (!((r24 | 0) == 0 ^ r23)) {
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  }
  L1812 : do {
    if (r11) {
      r8 = 1607;
    } else {
      r23 = r3;
      r24 = r13;
      while (1) {
        if (HEAP8[r24] << 24 >> 24 == 2) {
          r49 = r23;
          break L1812;
        }
        r1 = r23 + 12 | 0;
        if ((r1 | 0) == (r4 | 0)) {
          r8 = 1607;
          break L1812;
        }
        r23 = r1;
        r24 = r24 + 1 | 0;
      }
    }
  } while (0);
  if (r8 == 1607) {
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 4;
    r49 = r4;
  }
  if ((r14 | 0) == 0) {
    STACKTOP = r9;
    return r49;
  }
  _free(r14);
  STACKTOP = r9;
  return r49;
}
__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 332 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r2 + 108;
  r10 = r2 + 160;
  r11 = r2 + 164;
  r12 = r2 + 324, r13 = r12 >> 2;
  r14 = r2 + 328;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r9, r5, r16, r8);
  r5 = r2 + 120 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1825 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP32[r8 >> 2];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAP32[r25 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r26, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1825;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20);
          } else {
            HEAP32[r21] = r25 + 4 | 0;
            r28 = HEAP32[r25 >> 2];
          }
          if ((r28 | 0) == -1) {
            break;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r29 = HEAP32[r25 >> 2];
          }
          if ((r29 | 0) == -1) {
            break;
          }
          if (!r24) {
            r27 = r20;
            break L1825;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1825;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r30 = r3 >>> 1;
  } else {
    r30 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r30 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r31 = r1 | 0;
    HEAP32[r31 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r31 = r1 | 0;
  HEAP32[r31 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl["X"] = 1;
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  __ZNKSt3__18ios_base6getlocEv(r6, r2);
  r2 = HEAP32[r6 >> 2];
  r6 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273660);
  FUNCTION_TABLE[HEAP32[HEAP32[r6 >> 2] + 48 >> 2]](r6, 5274108, 5274134, r3);
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273292);
  r6 = r3;
  HEAP32[r4 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 16 >> 2]](r6);
  FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r1, r6);
  __ZNSt3__16localeD1Ev(r2);
  STACKTOP = r5;
  return;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10) {
  var r11, r12, r13, r14, r15, r16, r17;
  r11 = r5 >> 2;
  r5 = r4 >> 2;
  r4 = HEAP32[r5];
  r12 = (r4 | 0) == (r3 | 0);
  do {
    if (r12) {
      r13 = (HEAP32[r10 + 96 >> 2] | 0) == (r1 | 0);
      if (!r13) {
        if ((HEAP32[r10 + 100 >> 2] | 0) != (r1 | 0)) {
          break;
        }
      }
      HEAP32[r5] = r3 + 1 | 0;
      HEAP8[r3] = r13 ? 43 : 45;
      HEAP32[r11] = 0;
      r14 = 0;
      return r14;
    }
  } while (0);
  do {
    if ((r1 | 0) == (r6 | 0)) {
      r13 = HEAPU8[r7];
      if ((r13 & 1 | 0) == 0) {
        r15 = r13 >>> 1;
      } else {
        r15 = HEAP32[r7 + 4 >> 2];
      }
      if ((r15 | 0) == 0) {
        break;
      }
      r13 = HEAP32[r9 >> 2];
      if ((r13 - r8 | 0) >= 160) {
        r14 = 0;
        return r14;
      }
      r16 = HEAP32[r11];
      HEAP32[r9 >> 2] = r13 + 4 | 0;
      HEAP32[r13 >> 2] = r16;
      HEAP32[r11] = 0;
      r14 = 0;
      return r14;
    }
  } while (0);
  r9 = r10 + 104 | 0;
  r8 = r10;
  while (1) {
    if ((r8 | 0) == (r9 | 0)) {
      r17 = r9;
      break;
    }
    if ((HEAP32[r8 >> 2] | 0) == (r1 | 0)) {
      r17 = r8;
      break;
    } else {
      r8 = r8 + 4 | 0;
    }
  }
  r8 = r17 - r10 | 0;
  r10 = r8 >> 2;
  if ((r8 | 0) > 92) {
    r14 = -1;
    return r14;
  }
  do {
    if ((r2 | 0) == 8 | (r2 | 0) == 10) {
      if ((r10 | 0) < (r2 | 0)) {
        break;
      } else {
        r14 = -1;
      }
      return r14;
    } else if ((r2 | 0) == 16) {
      if ((r8 | 0) < 88) {
        break;
      }
      if (r12) {
        r14 = -1;
        return r14;
      }
      if ((r4 - r3 | 0) >= 3) {
        r14 = -1;
        return r14;
      }
      if (HEAP8[r4 - 1 | 0] << 24 >> 24 != 48) {
        r14 = -1;
        return r14;
      }
      HEAP32[r11] = 0;
      r17 = HEAP8[r10 + 5274108 | 0];
      r1 = HEAP32[r5];
      HEAP32[r5] = r1 + 1 | 0;
      HEAP8[r1] = r17;
      r14 = 0;
      return r14;
    }
  } while (0);
  if ((r4 - r3 | 0) < 39) {
    r3 = HEAP8[r10 + 5274108 | 0];
    HEAP32[r5] = r4 + 1 | 0;
    HEAP8[r4] = r3;
  }
  HEAP32[r11] = HEAP32[r11] + 1 | 0;
  r14 = 0;
  return r14;
}
__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 332 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r2 + 108;
  r10 = r2 + 160;
  r11 = r2 + 164;
  r12 = r2 + 324, r13 = r12 >> 2;
  r14 = r2 + 328;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r9, r5, r16, r8);
  r5 = r2 + 120 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1915 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP32[r8 >> 2];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAP32[r25 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r26, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1915;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20);
          } else {
            HEAP32[r21] = r25 + 4 | 0;
            r28 = HEAP32[r25 >> 2];
          }
          if ((r28 | 0) == -1) {
            break;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r29 = HEAP32[r25 >> 2];
          }
          if ((r29 | 0) == -1) {
            break;
          }
          if (!r24) {
            r27 = r20;
            break L1915;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1915;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r30 = r3 >>> 1;
  } else {
    r30 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r30 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  HEAP32[r7 + 4 >> 2] = tempRet0;
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r31 = r1 | 0;
    HEAP32[r31 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r31 = r1 | 0;
  HEAP32[r31 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 332 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r2 + 108;
  r10 = r2 + 160;
  r11 = r2 + 164;
  r12 = r2 + 324, r13 = r12 >> 2;
  r14 = r2 + 328;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r9, r5, r16, r8);
  r5 = r2 + 120 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1952 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP32[r8 >> 2];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAP32[r25 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r26, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1952;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20);
          } else {
            HEAP32[r21] = r25 + 4 | 0;
            r28 = HEAP32[r25 >> 2];
          }
          if ((r28 | 0) == -1) {
            break;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r29 = HEAP32[r25 >> 2];
          }
          if ((r29 | 0) == -1) {
            break;
          }
          if (!r24) {
            r27 = r20;
            break L1952;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1952;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r30 = r3 >>> 1;
  } else {
    r30 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r30 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP16[r7 >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r31 = r1 | 0;
    HEAP32[r31 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r31 = r1 | 0;
  HEAP32[r31 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 332 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r2 + 108;
  r10 = r2 + 160;
  r11 = r2 + 164;
  r12 = r2 + 324, r13 = r12 >> 2;
  r14 = r2 + 328;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r9, r5, r16, r8);
  r5 = r2 + 120 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L1989 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP32[r8 >> 2];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAP32[r25 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r26, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L1989;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20);
          } else {
            HEAP32[r21] = r25 + 4 | 0;
            r28 = HEAP32[r25 >> 2];
          }
          if ((r28 | 0) == -1) {
            break;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r29 = HEAP32[r25 >> 2];
          }
          if ((r29 | 0) == -1) {
            break;
          }
          if (!r24) {
            r27 = r20;
            break L1989;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L1989;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r30 = r3 >>> 1;
  } else {
    r30 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r30 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r31 = r1 | 0;
    HEAP32[r31 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r31 = r1 | 0;
  HEAP32[r31 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 332 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r2 + 108;
  r10 = r2 + 160;
  r11 = r2 + 164;
  r12 = r2 + 324, r13 = r12 >> 2;
  r14 = r2 + 328;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r9, r5, r16, r8);
  r5 = r2 + 120 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L2026 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP32[r8 >> 2];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAP32[r25 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r26, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L2026;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20);
          } else {
            HEAP32[r21] = r25 + 4 | 0;
            r28 = HEAP32[r25 >> 2];
          }
          if ((r28 | 0) == -1) {
            break;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r29 = HEAP32[r25 >> 2];
          }
          if ((r29 | 0) == -1) {
            break;
          }
          if (!r24) {
            r27 = r20;
            break L2026;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L2026;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r30 = r3 >>> 1;
  } else {
    r30 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r30 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r31 = r1 | 0;
    HEAP32[r31 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r31 = r1 | 0;
  HEAP32[r31 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm["X"] = 1;
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12) {
  var r13, r14, r15, r16, r17, r18;
  r13 = r11 >> 2;
  r11 = r10 >> 2;
  if ((r1 | 0) == (r6 | 0)) {
    if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
      r14 = -1;
      return r14;
    }
    HEAP8[r2] = 0;
    r6 = HEAP32[r5 >> 2];
    HEAP32[r5 >> 2] = r6 + 1 | 0;
    HEAP8[r6] = 46;
    r6 = HEAPU8[r8];
    if ((r6 & 1 | 0) == 0) {
      r15 = r6 >>> 1;
    } else {
      r15 = HEAP32[r8 + 4 >> 2];
    }
    if ((r15 | 0) == 0) {
      r14 = 0;
      return r14;
    }
    r15 = HEAP32[r11];
    if ((r15 - r9 | 0) >= 160) {
      r14 = 0;
      return r14;
    }
    r6 = HEAP32[r13];
    HEAP32[r11] = r15 + 4 | 0;
    HEAP32[r15 >> 2] = r6;
    r14 = 0;
    return r14;
  }
  do {
    if ((r1 | 0) == (r7 | 0)) {
      r6 = HEAPU8[r8];
      if ((r6 & 1 | 0) == 0) {
        r16 = r6 >>> 1;
      } else {
        r16 = HEAP32[r8 + 4 >> 2];
      }
      if ((r16 | 0) == 0) {
        break;
      }
      if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
        r14 = -1;
        return r14;
      }
      r6 = HEAP32[r11];
      if ((r6 - r9 | 0) >= 160) {
        r14 = 0;
        return r14;
      }
      r15 = HEAP32[r13];
      HEAP32[r11] = r6 + 4 | 0;
      HEAP32[r6 >> 2] = r15;
      HEAP32[r13] = 0;
      r14 = 0;
      return r14;
    }
  } while (0);
  r16 = r12 + 128 | 0;
  r7 = r12;
  while (1) {
    if ((r7 | 0) == (r16 | 0)) {
      r17 = r16;
      break;
    }
    if ((HEAP32[r7 >> 2] | 0) == (r1 | 0)) {
      r17 = r7;
      break;
    } else {
      r7 = r7 + 4 | 0;
    }
  }
  r7 = r17 - r12 | 0;
  r12 = r7 >> 2;
  if ((r7 | 0) > 124) {
    r14 = -1;
    return r14;
  }
  r17 = HEAP8[r12 + 5274108 | 0];
  r1 = HEAP32[r5 >> 2];
  if ((r1 - r4 | 0) < 39) {
    HEAP32[r5 >> 2] = r1 + 1 | 0;
    HEAP8[r1] = r17;
  }
  do {
    if ((r12 - 22 | 0) >>> 0 < 2) {
      HEAP8[r3] = 80;
    } else {
      if ((r17 & 223 | 0) != (HEAP8[r3] << 24 >> 24 | 0)) {
        break;
      }
      HEAP8[r2] = 0;
      r1 = HEAPU8[r8];
      if ((r1 & 1 | 0) == 0) {
        r18 = r1 >>> 1;
      } else {
        r18 = HEAP32[r8 + 4 >> 2];
      }
      if ((r18 | 0) == 0) {
        break;
      }
      r1 = HEAP32[r11];
      if ((r1 - r9 | 0) >= 160) {
        break;
      }
      r5 = HEAP32[r13];
      HEAP32[r11] = r1 + 4 | 0;
      HEAP32[r1 >> 2] = r5;
    }
  } while (0);
  if ((r7 | 0) > 84) {
    r14 = 0;
    return r14;
  }
  HEAP32[r13] = HEAP32[r13] + 1 | 0;
  r14 = 0;
  return r14;
}
__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 332 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r2 + 108;
  r10 = r2 + 160;
  r11 = r2 + 164;
  r12 = r2 + 324, r13 = r12 >> 2;
  r14 = r2 + 328;
  r15 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE(HEAP32[r5 + 4 >> 2]);
  r16 = r2 | 0;
  __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(r9, r5, r16, r8);
  r5 = r2 + 120 | 0;
  _memset(r5, 0, 40);
  HEAP32[r10 >> 2] = r5;
  r17 = r11 | 0;
  HEAP32[r13] = r17;
  HEAP32[r14 >> 2] = 0;
  r18 = r3 | 0;
  r3 = HEAP32[r18 >> 2];
  r19 = (HEAP32[r4 >> 2] | 0) == 0;
  L2121 : do {
    if ((r3 | 0) == 0 ^ r19) {
      r4 = HEAP32[r8 >> 2];
      r20 = r3;
      while (1) {
        r21 = (r20 + 12 | 0) >> 2;
        r22 = (r20 + 16 | 0) >> 2;
        r23 = r20 >> 2;
        r24 = (r20 | 0) == 0 ^ r19;
        while (1) {
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r26 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r26 = HEAP32[r25 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r26, r15, r5, r10, r14, r4, r9, r17, r12, r16) | 0) != 0) {
            r27 = r20;
            break L2121;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 40 >> 2]](r20);
          } else {
            HEAP32[r21] = r25 + 4 | 0;
            r28 = HEAP32[r25 >> 2];
          }
          if ((r28 | 0) == -1) {
            break;
          }
          r25 = HEAP32[r21];
          if ((r25 | 0) == (HEAP32[r22] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r23] + 36 >> 2]](r20);
          } else {
            r29 = HEAP32[r25 >> 2];
          }
          if ((r29 | 0) == -1) {
            break;
          }
          if (!r24) {
            r27 = r20;
            break L2121;
          }
        }
        HEAP32[r18 >> 2] = 0;
        if (r19) {
          r27 = 0;
          break L2121;
        } else {
          r20 = 0;
        }
      }
    } else {
      r27 = r3;
    }
  } while (0);
  r3 = HEAPU8[r9];
  if ((r3 & 1 | 0) == 0) {
    r30 = r3 >>> 1;
  } else {
    r30 = HEAP32[r9 + 4 >> 2];
  }
  do {
    if ((r30 | 0) != 0) {
      r3 = HEAP32[r13];
      if ((r3 - r11 | 0) >= 160) {
        break;
      }
      r18 = HEAP32[r14 >> 2];
      HEAP32[r13] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r18;
    }
  } while (0);
  HEAP32[r7 >> 2] = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(r5, HEAP32[r10 >> 2], r6, r15);
  HEAP32[r7 + 4 >> 2] = tempRet0;
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r9, r17, HEAP32[r13], r6);
  if ((r27 | 0) == 0 ^ r19) {
    r31 = r1 | 0;
    HEAP32[r31 >> 2] = r27;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r31 = r1 | 0;
  HEAP32[r31 >> 2] = r27;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 368 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 128;
  r9 = r2 + 132;
  r10 = r2 + 136;
  r11 = r2 + 188;
  r12 = r2 + 192;
  r13 = r2 + 352, r14 = r13 >> 2;
  r15 = r2 + 356;
  r16 = r2 + 360;
  r17 = r2 + 364;
  r18 = r2 | 0;
  __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(r10, r5, r18, r8, r9);
  r5 = r2 + 148 | 0;
  _memset(r5, 0, 40);
  HEAP32[r11 >> 2] = r5;
  r19 = r12 | 0;
  HEAP32[r14] = r19;
  HEAP32[r15 >> 2] = 0;
  HEAP8[r16] = 1;
  HEAP8[r17] = 69;
  r20 = r3 | 0;
  r3 = HEAP32[r20 >> 2];
  r21 = (HEAP32[r4 >> 2] | 0) == 0;
  L2158 : do {
    if ((r3 | 0) == 0 ^ r21) {
      r4 = HEAP32[r8 >> 2];
      r22 = HEAP32[r9 >> 2];
      r23 = r3;
      while (1) {
        r24 = (r23 + 12 | 0) >> 2;
        r25 = (r23 + 16 | 0) >> 2;
        r26 = r23 >> 2;
        r27 = (r23 | 0) == 0 ^ r21;
        while (1) {
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r29 = HEAP32[r28 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(r29, r16, r17, r5, r11, r4, r22, r10, r19, r13, r15, r18) | 0) != 0) {
            r30 = r23;
            break L2158;
          }
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r31 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 40 >> 2]](r23);
          } else {
            HEAP32[r24] = r28 + 4 | 0;
            r31 = HEAP32[r28 >> 2];
          }
          if ((r31 | 0) == -1) {
            break;
          }
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r32 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r32 = HEAP32[r28 >> 2];
          }
          if ((r32 | 0) == -1) {
            break;
          }
          if (!r27) {
            r30 = r23;
            break L2158;
          }
        }
        HEAP32[r20 >> 2] = 0;
        if (r21) {
          r30 = 0;
          break L2158;
        } else {
          r23 = 0;
        }
      }
    } else {
      r30 = r3;
    }
  } while (0);
  r3 = HEAPU8[r10];
  if ((r3 & 1 | 0) == 0) {
    r33 = r3 >>> 1;
  } else {
    r33 = HEAP32[r10 + 4 >> 2];
  }
  do {
    if ((r33 | 0) != 0) {
      if ((HEAP8[r16] & 1) << 24 >> 24 == 0) {
        break;
      }
      r3 = HEAP32[r14];
      if ((r3 - r12 | 0) >= 160) {
        break;
      }
      r20 = HEAP32[r15 >> 2];
      HEAP32[r14] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r20;
    }
  } while (0);
  HEAPF32[r7 >> 2] = __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(r5, HEAP32[r11 >> 2], r6);
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r10, r19, HEAP32[r14], r6);
  if ((r30 | 0) == 0 ^ r21) {
    r34 = r1 | 0;
    HEAP32[r34 >> 2] = r30;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r34 = r1 | 0;
  HEAP32[r34 >> 2] = r30;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf["X"] = 1;
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(r1, r2, r3, r4, r5) {
  var r6, r7, r8;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r7 = r6;
  __ZNKSt3__18ios_base6getlocEv(r7, r2);
  r2 = HEAP32[r7 >> 2];
  r7 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273660);
  FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 48 >> 2]](r7, 5274108, 5274140, r3);
  r3 = __ZNKSt3__16locale9use_facetERNS0_2idE(r2, 5273292);
  r7 = r3;
  r8 = r3;
  HEAP32[r4 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 12 >> 2]](r7);
  HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 16 >> 2]](r7);
  FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 20 >> 2]](r1, r7);
  __ZNSt3__16localeD1Ev(r2);
  STACKTOP = r6;
  return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 368 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 128;
  r9 = r2 + 132;
  r10 = r2 + 136;
  r11 = r2 + 188;
  r12 = r2 + 192;
  r13 = r2 + 352, r14 = r13 >> 2;
  r15 = r2 + 356;
  r16 = r2 + 360;
  r17 = r2 + 364;
  r18 = r2 | 0;
  __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(r10, r5, r18, r8, r9);
  r5 = r2 + 148 | 0;
  _memset(r5, 0, 40);
  HEAP32[r11 >> 2] = r5;
  r19 = r12 | 0;
  HEAP32[r14] = r19;
  HEAP32[r15 >> 2] = 0;
  HEAP8[r16] = 1;
  HEAP8[r17] = 69;
  r20 = r3 | 0;
  r3 = HEAP32[r20 >> 2];
  r21 = (HEAP32[r4 >> 2] | 0) == 0;
  L2203 : do {
    if ((r3 | 0) == 0 ^ r21) {
      r4 = HEAP32[r8 >> 2];
      r22 = HEAP32[r9 >> 2];
      r23 = r3;
      while (1) {
        r24 = (r23 + 12 | 0) >> 2;
        r25 = (r23 + 16 | 0) >> 2;
        r26 = r23 >> 2;
        r27 = (r23 | 0) == 0 ^ r21;
        while (1) {
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r29 = HEAP32[r28 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(r29, r16, r17, r5, r11, r4, r22, r10, r19, r13, r15, r18) | 0) != 0) {
            r30 = r23;
            break L2203;
          }
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r31 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 40 >> 2]](r23);
          } else {
            HEAP32[r24] = r28 + 4 | 0;
            r31 = HEAP32[r28 >> 2];
          }
          if ((r31 | 0) == -1) {
            break;
          }
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r32 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r32 = HEAP32[r28 >> 2];
          }
          if ((r32 | 0) == -1) {
            break;
          }
          if (!r27) {
            r30 = r23;
            break L2203;
          }
        }
        HEAP32[r20 >> 2] = 0;
        if (r21) {
          r30 = 0;
          break L2203;
        } else {
          r23 = 0;
        }
      }
    } else {
      r30 = r3;
    }
  } while (0);
  r3 = HEAPU8[r10];
  if ((r3 & 1 | 0) == 0) {
    r33 = r3 >>> 1;
  } else {
    r33 = HEAP32[r10 + 4 >> 2];
  }
  do {
    if ((r33 | 0) != 0) {
      if ((HEAP8[r16] & 1) << 24 >> 24 == 0) {
        break;
      }
      r3 = HEAP32[r14];
      if ((r3 - r12 | 0) >= 160) {
        break;
      }
      r20 = HEAP32[r15 >> 2];
      HEAP32[r14] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r20;
    }
  } while (0);
  r15 = __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(r5, HEAP32[r11 >> 2], r6);
  HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r10, r19, HEAP32[r14], r6);
  if ((r30 | 0) == 0 ^ r21) {
    r34 = r1 | 0;
    HEAP32[r34 >> 2] = r30;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r34 = r1 | 0;
  HEAP32[r34 >> 2] = r30;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd["X"] = 1;
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init4276() {
  if (HEAP8[5274504] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318626] = 1;
  HEAP32[1318627] = 0;
  return;
}



function __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  if ((r4 & 2048 | 0) == 0) {
    r5 = r1;
  } else {
    HEAP8[r1] = 43;
    r5 = r1 + 1 | 0;
  }
  if ((r4 & 512 | 0) == 0) {
    r6 = r5;
  } else {
    HEAP8[r5] = 35;
    r6 = r5 + 1 | 0;
  }
  r5 = HEAP8[r2];
  L2253 : do {
    if (r5 << 24 >> 24 == 0) {
      r7 = r6;
    } else {
      r1 = r2;
      r8 = r6;
      r9 = r5;
      while (1) {
        r10 = r1 + 1 | 0;
        r11 = r8 + 1 | 0;
        HEAP8[r8] = r9;
        r12 = HEAP8[r10];
        if (r12 << 24 >> 24 == 0) {
          r7 = r11;
          break L2253;
        } else {
          r1 = r10;
          r8 = r11;
          r9 = r12;
        }
      }
    }
  } while (0);
  r5 = r4 & 74;
  if ((r5 | 0) == 64) {
    HEAP8[r7] = 111;
    return;
  } else if ((r5 | 0) == 8) {
    if ((r4 & 16384 | 0) == 0) {
      HEAP8[r7] = 120;
      return;
    } else {
      HEAP8[r7] = 88;
      return;
    }
  } else {
    if (r3) {
      HEAP8[r7] = 100;
      return;
    } else {
      HEAP8[r7] = 117;
      return;
    }
  }
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r1, r2, r3) {
  var r4, r5, r6;
  r4 = 0;
  r5 = r3 & 176;
  do {
    if ((r5 | 0) == 32) {
      r6 = r2;
    } else if ((r5 | 0) == 16) {
      r3 = HEAP8[r1];
      if (r3 << 24 >> 24 == 45 | r3 << 24 >> 24 == 43) {
        r6 = r1 + 1 | 0;
        break;
      }
      if (!((r2 - r1 | 0) > 1 & r3 << 24 >> 24 == 48)) {
        r4 = 1999;
        break;
      }
      r3 = HEAP8[r1 + 1 | 0];
      if (!(r3 << 24 >> 24 == 120 | r3 << 24 >> 24 == 88)) {
        r4 = 1999;
        break;
      }
      r6 = r1 + 2 | 0;
      break;
    } else {
      r4 = 1999;
    }
  } while (0);
  if (r4 == 1999) {
    r6 = r1;
  }
  return r6;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 368 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 128;
  r9 = r2 + 132;
  r10 = r2 + 136;
  r11 = r2 + 188;
  r12 = r2 + 192;
  r13 = r2 + 352, r14 = r13 >> 2;
  r15 = r2 + 356;
  r16 = r2 + 360;
  r17 = r2 + 364;
  r18 = r2 | 0;
  __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(r10, r5, r18, r8, r9);
  r5 = r2 + 148 | 0;
  _memset(r5, 0, 40);
  HEAP32[r11 >> 2] = r5;
  r19 = r12 | 0;
  HEAP32[r14] = r19;
  HEAP32[r15 >> 2] = 0;
  HEAP8[r16] = 1;
  HEAP8[r17] = 69;
  r20 = r3 | 0;
  r3 = HEAP32[r20 >> 2];
  r21 = (HEAP32[r4 >> 2] | 0) == 0;
  L2284 : do {
    if ((r3 | 0) == 0 ^ r21) {
      r4 = HEAP32[r8 >> 2];
      r22 = HEAP32[r9 >> 2];
      r23 = r3;
      while (1) {
        r24 = (r23 + 12 | 0) >> 2;
        r25 = (r23 + 16 | 0) >> 2;
        r26 = r23 >> 2;
        r27 = (r23 | 0) == 0 ^ r21;
        while (1) {
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r29 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r29 = HEAP32[r28 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(r29, r16, r17, r5, r11, r4, r22, r10, r19, r13, r15, r18) | 0) != 0) {
            r30 = r23;
            break L2284;
          }
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r31 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 40 >> 2]](r23);
          } else {
            HEAP32[r24] = r28 + 4 | 0;
            r31 = HEAP32[r28 >> 2];
          }
          if ((r31 | 0) == -1) {
            break;
          }
          r28 = HEAP32[r24];
          if ((r28 | 0) == (HEAP32[r25] | 0)) {
            r32 = FUNCTION_TABLE[HEAP32[HEAP32[r26] + 36 >> 2]](r23);
          } else {
            r32 = HEAP32[r28 >> 2];
          }
          if ((r32 | 0) == -1) {
            break;
          }
          if (!r27) {
            r30 = r23;
            break L2284;
          }
        }
        HEAP32[r20 >> 2] = 0;
        if (r21) {
          r30 = 0;
          break L2284;
        } else {
          r23 = 0;
        }
      }
    } else {
      r30 = r3;
    }
  } while (0);
  r3 = HEAPU8[r10];
  if ((r3 & 1 | 0) == 0) {
    r33 = r3 >>> 1;
  } else {
    r33 = HEAP32[r10 + 4 >> 2];
  }
  do {
    if ((r33 | 0) != 0) {
      if ((HEAP8[r16] & 1) << 24 >> 24 == 0) {
        break;
      }
      r3 = HEAP32[r14];
      if ((r3 - r12 | 0) >= 160) {
        break;
      }
      r20 = HEAP32[r15 >> 2];
      HEAP32[r14] = r3 + 4 | 0;
      HEAP32[r3 >> 2] = r20;
    }
  } while (0);
  r15 = __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(r5, HEAP32[r11 >> 2], r6);
  HEAPF64[tempDoublePtr >> 3] = r15, HEAP32[r7 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[r7 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r10, r19, HEAP32[r14], r6);
  if ((r30 | 0) == 0 ^ r21) {
    r34 = r1 | 0;
    HEAP32[r34 >> 2] = r30;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r34 = r1 | 0;
  HEAP32[r34 >> 2] = r30;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe["X"] = 1;
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 116 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 104;
  r9 = r8 >> 2;
  r10 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r12 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r13 = STACKTOP;
  STACKTOP = STACKTOP + 160 | 0;
  r14 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r9] = 0;
  HEAP32[r9 + 1] = 0;
  HEAP32[r9 + 2] = 0;
  __ZNKSt3__18ios_base6getlocEv(r10, r5);
  r5 = HEAP32[r10 >> 2];
  r10 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273660);
  r9 = r2 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 48 >> 2]](r10, 5274108, 5274134, r9);
  __ZNSt3__16localeD1Ev(r5);
  r5 = r11 | 0;
  _memset(r5, 0, 40);
  HEAP32[r12 >> 2] = r5;
  r10 = r13 | 0;
  HEAP32[r14 >> 2] = r10;
  HEAP32[r15 >> 2] = 0;
  r13 = r3 | 0;
  r3 = HEAP32[r13 >> 2];
  r16 = (HEAP32[r4 >> 2] | 0) == 0;
  L2324 : do {
    if ((r3 | 0) == 0 ^ r16) {
      r4 = r3;
      while (1) {
        r17 = (r4 + 12 | 0) >> 2;
        r18 = (r4 + 16 | 0) >> 2;
        r19 = r4 >> 2;
        r20 = (r4 | 0) == 0 ^ r16;
        while (1) {
          r21 = HEAP32[r17];
          if ((r21 | 0) == (HEAP32[r18] | 0)) {
            r22 = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 36 >> 2]](r4);
          } else {
            r22 = HEAP32[r21 >> 2];
          }
          if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(r22, 16, r5, r12, r15, undef, r8, r10, r14, r9) | 0) != 0) {
            r23 = r4;
            break L2324;
          }
          r21 = HEAP32[r17];
          if ((r21 | 0) == (HEAP32[r18] | 0)) {
            r24 = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 40 >> 2]](r4);
          } else {
            HEAP32[r17] = r21 + 4 | 0;
            r24 = HEAP32[r21 >> 2];
          }
          if ((r24 | 0) == -1) {
            break;
          }
          r21 = HEAP32[r17];
          if ((r21 | 0) == (HEAP32[r18] | 0)) {
            r25 = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 36 >> 2]](r4);
          } else {
            r25 = HEAP32[r21 >> 2];
          }
          if ((r25 | 0) == -1) {
            break;
          }
          if (!r20) {
            r23 = r4;
            break L2324;
          }
        }
        HEAP32[r13 >> 2] = 0;
        if (r16) {
          r23 = 0;
          break L2324;
        } else {
          r4 = 0;
        }
      }
    } else {
      r23 = r3;
    }
  } while (0);
  HEAP8[r11 + 39 | 0] = 0;
  if ((__ZNSt3__110__sscanf_lEPKcPvS1_z(r5, __ZNSt3__16__clocEv(), (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r7, tempInt)) | 0) != 1) {
    HEAP32[r6 >> 2] = 4;
  }
  if ((r23 | 0) == 0 ^ r16) {
    r26 = r1 | 0;
    HEAP32[r26 >> 2] = r23;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r8);
    STACKTOP = r2;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 2;
  r26 = r1 | 0;
  HEAP32[r26 >> 2] = r23;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r8);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv["X"] = 1;
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r7;
  r9 = r7 + 4;
  r10 = r7 + 8;
  if ((HEAP32[r4 + 4 >> 2] & 1 | 0) == 0) {
    r11 = HEAP32[HEAP32[r2 >> 2] + 24 >> 2];
    HEAP32[r8 >> 2] = HEAP32[r3 >> 2];
    FUNCTION_TABLE[r11](r1, r2, r8, r4, r5, r6 & 1);
    STACKTOP = r7;
    return;
  }
  __ZNKSt3__18ios_base6getlocEv(r9, r4);
  r4 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r4, 5273300);
  r5 = r9;
  __ZNSt3__16localeD1Ev(r4);
  r4 = HEAP32[r9 >> 2];
  if (r6) {
    FUNCTION_TABLE[HEAP32[r4 + 24 >> 2]](r10, r5);
  } else {
    FUNCTION_TABLE[HEAP32[r4 + 28 >> 2]](r10, r5);
  }
  r5 = r10;
  r4 = r10;
  r6 = HEAP8[r4];
  if ((r6 & 1) << 24 >> 24 == 0) {
    r9 = r5 + 1 | 0;
    r12 = r9;
    r13 = r9;
    r14 = r10 + 8 | 0;
  } else {
    r9 = r10 + 8 | 0;
    r12 = HEAP32[r9 >> 2];
    r13 = r5 + 1 | 0;
    r14 = r9;
  }
  r9 = (r3 | 0) >> 2;
  r3 = r10 + 4 | 0;
  r5 = r12;
  r12 = r6;
  while (1) {
    if ((r12 & 1) << 24 >> 24 == 0) {
      r15 = r13;
    } else {
      r15 = HEAP32[r14 >> 2];
    }
    r6 = r12 & 255;
    if ((r5 | 0) == (r15 + ((r6 & 1 | 0) == 0 ? r6 >>> 1 : HEAP32[r3 >> 2]) | 0)) {
      break;
    }
    r6 = HEAP8[r5];
    r8 = HEAP32[r9];
    do {
      if ((r8 | 0) != 0) {
        r2 = r8 + 24 | 0;
        r11 = HEAP32[r2 >> 2];
        if ((r11 | 0) != (HEAP32[r8 + 28 >> 2] | 0)) {
          HEAP32[r2 >> 2] = r11 + 1 | 0;
          HEAP8[r11] = r6;
          break;
        }
        if ((FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 52 >> 2]](r8, r6 & 255) | 0) != -1) {
          break;
        }
        HEAP32[r9] = 0;
      }
    } while (0);
    r5 = r5 + 1 | 0;
    r12 = HEAP8[r4];
  }
  HEAP32[r1 >> 2] = HEAP32[r9];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r7;
  return;
}
__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb["X"] = 1;
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 56 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 8;
  r9 = r2 + 44;
  r10 = r2 + 48;
  r11 = r2 + 52;
  r12 = r7 | 0;
  HEAP8[r12] = HEAP8[5264464];
  HEAP8[r12 + 1 | 0] = HEAP8[5264465 | 0];
  HEAP8[r12 + 2 | 0] = HEAP8[5264466 | 0];
  HEAP8[r12 + 3 | 0] = HEAP8[5264467 | 0];
  HEAP8[r12 + 4 | 0] = HEAP8[5264468 | 0];
  HEAP8[r12 + 5 | 0] = HEAP8[5264469 | 0];
  r13 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r7 + 1 | 0, 5267748, 1, HEAP32[r13 >> 2]);
  r7 = r8 | 0;
  r14 = r8 + __ZNSt3__111__sprintf_lEPcPvPKcz(r7, __ZNSt3__16__clocEv(), r12, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt)) | 0;
  r6 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r7, r14, HEAP32[r13 >> 2]);
  r13 = r2 + 20 | 0;
  __ZNKSt3__18ios_base6getlocEv(r11, r4);
  __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r7, r6, r14, r13, r9, r10, r11);
  __ZNSt3__16localeD1Ev(HEAP32[r11 >> 2]);
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r13, HEAP32[r9 >> 2], HEAP32[r10 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNSt3__111__sprintf_lEPcPvPKcz(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  HEAP32[r6 >> 2] = r4;
  r4 = _uselocale(r2);
  r2 = _sprintf(r1, r3, HEAP32[r6 >> 2]);
  if ((r4 | 0) == 0) {
    STACKTOP = r5;
    return r2;
  }
  _uselocale(r4);
  STACKTOP = r5;
  return r2;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
  if ((r3 & 2048 | 0) == 0) {
    r4 = r1;
  } else {
    HEAP8[r1] = 43;
    r4 = r1 + 1 | 0;
  }
  if ((r3 & 1024 | 0) == 0) {
    r5 = r4;
  } else {
    HEAP8[r4] = 35;
    r5 = r4 + 1 | 0;
  }
  r4 = r3 & 260;
  r1 = r3 >>> 14;
  r3 = (r4 | 0) == 260;
  if (r3) {
    r6 = r5;
    r7 = 0;
  } else {
    HEAP8[r5] = 46;
    HEAP8[r5 + 1 | 0] = 42;
    r6 = r5 + 2 | 0;
    r7 = 1;
  }
  r5 = HEAP8[r2];
  L2403 : do {
    if (r5 << 24 >> 24 == 0) {
      r8 = r6;
    } else {
      r9 = r2;
      r10 = r6;
      r11 = r5;
      while (1) {
        r12 = r9 + 1 | 0;
        r13 = r10 + 1 | 0;
        HEAP8[r10] = r11;
        r14 = HEAP8[r12];
        if (r14 << 24 >> 24 == 0) {
          r8 = r13;
          break L2403;
        } else {
          r9 = r12;
          r10 = r13;
          r11 = r14;
        }
      }
    }
  } while (0);
  do {
    if ((r4 | 0) == 4) {
      if ((r1 & 1 | 0) == 0) {
        HEAP8[r8] = 102;
        break;
      } else {
        HEAP8[r8] = 70;
        break;
      }
    } else if ((r4 | 0) == 256) {
      if ((r1 & 1 | 0) == 0) {
        HEAP8[r8] = 101;
        break;
      } else {
        HEAP8[r8] = 69;
        break;
      }
    } else {
      r5 = (r1 & 1 | 0) != 0;
      if (r3) {
        if (r5) {
          HEAP8[r8] = 65;
          break;
        } else {
          HEAP8[r8] = 97;
          break;
        }
      } else {
        if (r5) {
          HEAP8[r8] = 71;
          break;
        } else {
          HEAP8[r8] = 103;
          break;
        }
      }
    }
  } while (0);
  return r7 << 24 >> 24 != 0;
}
__ZNSt3__114__num_put_base14__format_floatEPcPKcj["X"] = 1;
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r8 = r6 >> 2;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r9 = r6;
  r10 = r7 | 0;
  r7 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r10 >> 2], 5273668);
  r11 = r7;
  r12 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r10 >> 2], 5273300);
  r10 = r12;
  FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 20 >> 2]](r9, r10);
  r13 = r9;
  r14 = r9;
  r15 = HEAPU8[r14];
  if ((r15 & 1 | 0) == 0) {
    r16 = r15 >>> 1;
  } else {
    r16 = HEAP32[r9 + 4 >> 2];
  }
  L2432 : do {
    if ((r16 | 0) == 0) {
      FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 32 >> 2]](r11, r1, r3, r4);
      HEAP32[r8] = r4 + (r3 - r1) | 0;
    } else {
      HEAP32[r8] = r4;
      r15 = HEAP8[r1];
      if (r15 << 24 >> 24 == 45 | r15 << 24 >> 24 == 43) {
        r17 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 28 >> 2]](r11, r15);
        r15 = HEAP32[r8];
        HEAP32[r8] = r15 + 1 | 0;
        HEAP8[r15] = r17;
        r18 = r1 + 1 | 0;
      } else {
        r18 = r1;
      }
      do {
        if ((r3 - r18 | 0) > 1) {
          if (HEAP8[r18] << 24 >> 24 != 48) {
            r19 = r18;
            break;
          }
          r17 = r18 + 1 | 0;
          r15 = HEAP8[r17];
          if (!(r15 << 24 >> 24 == 120 | r15 << 24 >> 24 == 88)) {
            r19 = r18;
            break;
          }
          r15 = r7;
          r20 = FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 28 >> 2]](r11, 48);
          r21 = HEAP32[r8];
          HEAP32[r8] = r21 + 1 | 0;
          HEAP8[r21] = r20;
          r20 = FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 28 >> 2]](r11, HEAP8[r17]);
          r17 = HEAP32[r8];
          HEAP32[r8] = r17 + 1 | 0;
          HEAP8[r17] = r20;
          r19 = r18 + 2 | 0;
        } else {
          r19 = r18;
        }
      } while (0);
      L2447 : do {
        if ((r19 | 0) != (r3 | 0)) {
          r20 = r3 - 1 | 0;
          if (r19 >>> 0 < r20 >>> 0) {
            r22 = r19;
            r23 = r20;
          } else {
            break;
          }
          while (1) {
            r20 = HEAP8[r22];
            HEAP8[r22] = HEAP8[r23];
            HEAP8[r23] = r20;
            r20 = r22 + 1 | 0;
            r17 = r23 - 1 | 0;
            if (r20 >>> 0 < r17 >>> 0) {
              r22 = r20;
              r23 = r17;
            } else {
              break L2447;
            }
          }
        }
      } while (0);
      r17 = FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 16 >> 2]](r10);
      L2453 : do {
        if (r19 >>> 0 < r3 >>> 0) {
          r20 = r13 + 1 | 0;
          r15 = r7;
          r21 = r9 + 4 | 0;
          r24 = r9 + 8 | 0;
          r25 = 0;
          r26 = 0;
          r27 = r19;
          while (1) {
            r28 = HEAP8[((HEAP8[r14] & 1) << 24 >> 24 == 0 ? r20 : HEAP32[r24 >> 2]) + r26 | 0];
            if (r28 << 24 >> 24 != 0 & (r25 | 0) == (r28 << 24 >> 24 | 0)) {
              r28 = HEAP32[r8];
              HEAP32[r8] = r28 + 1 | 0;
              HEAP8[r28] = r17;
              r28 = HEAPU8[r14];
              r29 = (r26 >>> 0 < (((r28 & 1 | 0) == 0 ? r28 >>> 1 : HEAP32[r21 >> 2]) - 1 | 0) >>> 0 & 1) + r26 | 0;
              r30 = 0;
            } else {
              r29 = r26;
              r30 = r25;
            }
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 28 >> 2]](r11, HEAP8[r27]);
            r31 = HEAP32[r8];
            HEAP32[r8] = r31 + 1 | 0;
            HEAP8[r31] = r28;
            r28 = r27 + 1 | 0;
            if (r28 >>> 0 < r3 >>> 0) {
              r25 = r30 + 1 | 0;
              r26 = r29;
              r27 = r28;
            } else {
              break L2453;
            }
          }
        }
      } while (0);
      r17 = r4 + (r19 - r1) | 0;
      r27 = HEAP32[r8];
      if ((r17 | 0) == (r27 | 0)) {
        break;
      }
      r26 = r27 - 1 | 0;
      if (r17 >>> 0 < r26 >>> 0) {
        r32 = r17;
        r33 = r26;
      } else {
        break;
      }
      while (1) {
        r26 = HEAP8[r32];
        HEAP8[r32] = HEAP8[r33];
        HEAP8[r33] = r26;
        r26 = r32 + 1 | 0;
        r17 = r33 - 1 | 0;
        if (r26 >>> 0 < r17 >>> 0) {
          r32 = r26;
          r33 = r17;
        } else {
          break L2432;
        }
      }
    }
  } while (0);
  if ((r2 | 0) == (r3 | 0)) {
    r3 = HEAP32[r8];
    HEAP32[r5 >> 2] = r3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r6;
    return;
  } else {
    r3 = r4 + (r2 - r1) | 0;
    HEAP32[r5 >> 2] = r3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r6;
    return;
  }
}
__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE["X"] = 1;
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 88 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r2;
  r9 = r2 + 8;
  r10 = r2 + 76;
  r11 = r2 + 80;
  r12 = r2 + 84;
  HEAP32[r8 >> 2] = 37;
  HEAP32[r8 + 4 >> 2] = 0;
  r13 = r8;
  r8 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r13 + 1 | 0, 5245116, 1, HEAP32[r8 >> 2]);
  r14 = r9 | 0;
  r15 = r9 + __ZNSt3__111__sprintf_lEPcPvPKcz(r14, __ZNSt3__16__clocEv(), r13, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r6, HEAP32[tempInt + 4 >> 2] = r7, tempInt)) | 0;
  r7 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r14, r15, HEAP32[r8 >> 2]);
  r8 = r2 + 32 | 0;
  __ZNKSt3__18ios_base6getlocEv(r12, r4);
  __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r14, r7, r15, r8, r10, r11, r12);
  __ZNSt3__16localeD1Ev(HEAP32[r12 >> 2]);
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r8, HEAP32[r10 >> 2], HEAP32[r11 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 56 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 8;
  r9 = r2 + 44;
  r10 = r2 + 48;
  r11 = r2 + 52;
  r12 = r7 | 0;
  HEAP8[r12] = HEAP8[5264464];
  HEAP8[r12 + 1 | 0] = HEAP8[5264465 | 0];
  HEAP8[r12 + 2 | 0] = HEAP8[5264466 | 0];
  HEAP8[r12 + 3 | 0] = HEAP8[5264467 | 0];
  HEAP8[r12 + 4 | 0] = HEAP8[5264468 | 0];
  HEAP8[r12 + 5 | 0] = HEAP8[5264469 | 0];
  r13 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r7 + 1 | 0, 5267748, 0, HEAP32[r13 >> 2]);
  r7 = r8 | 0;
  r14 = r8 + __ZNSt3__111__sprintf_lEPcPvPKcz(r7, __ZNSt3__16__clocEv(), r12, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt)) | 0;
  r6 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r7, r14, HEAP32[r13 >> 2]);
  r13 = r2 + 20 | 0;
  __ZNKSt3__18ios_base6getlocEv(r11, r4);
  __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r7, r6, r14, r13, r9, r10, r11);
  __ZNSt3__16localeD1Ev(HEAP32[r11 >> 2]);
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r13, HEAP32[r9 >> 2], HEAP32[r10 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 88 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r2;
  r9 = r2 + 8;
  r10 = r2 + 76;
  r11 = r2 + 80;
  r12 = r2 + 84;
  HEAP32[r8 >> 2] = 37;
  HEAP32[r8 + 4 >> 2] = 0;
  r13 = r8;
  r8 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r13 + 1 | 0, 5245116, 0, HEAP32[r8 >> 2]);
  r14 = r9 | 0;
  r15 = r9 + __ZNSt3__111__sprintf_lEPcPvPKcz(r14, __ZNSt3__16__clocEv(), r13, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r6, HEAP32[tempInt + 4 >> 2] = r7, tempInt)) | 0;
  r7 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r14, r15, HEAP32[r8 >> 2]);
  r8 = r2 + 32 | 0;
  __ZNKSt3__18ios_base6getlocEv(r12, r4);
  __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r14, r7, r15, r8, r10, r11, r12);
  __ZNSt3__16localeD1Ev(HEAP32[r12 >> 2]);
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r8, HEAP32[r10 >> 2], HEAP32[r11 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 120 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 40, r9 = r8 >> 2;
  r10 = r2 + 44;
  r11 = r2 + 104;
  r12 = r2 + 108;
  r13 = r2 + 112;
  r14 = r2 + 116;
  HEAP32[r7 >> 2] = 37;
  HEAP32[r7 + 4 >> 2] = 0;
  r15 = r7;
  r7 = r4 + 4 | 0;
  r16 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(r15 + 1 | 0, 5244652, HEAP32[r7 >> 2]);
  r17 = r2 + 8 | 0;
  HEAP32[r9] = r17;
  r18 = __ZNSt3__16__clocEv();
  if (r16) {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  } else {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  }
  do {
    if ((r19 | 0) > 29) {
      if (r16) {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      } else {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      }
      r18 = HEAP32[r9];
      if ((r18 | 0) != 0) {
        r21 = r20;
        r22 = r18;
        r23 = r18;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r18 = HEAP32[r9];
      r21 = r20;
      r22 = r18;
      r23 = r18;
    } else {
      r21 = r19;
      r22 = 0;
      r23 = HEAP32[r9];
    }
  } while (0);
  r19 = r23 + r21 | 0;
  r20 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r23, r19, HEAP32[r7 >> 2]);
  do {
    if ((r23 | 0) == (r17 | 0)) {
      r24 = r10 | 0;
      r25 = 0;
    } else {
      r7 = _malloc(r21 << 1);
      if ((r7 | 0) != 0) {
        r24 = r7;
        r25 = r7;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r24 = 0;
      r25 = 0;
    }
  } while (0);
  r21 = HEAP32[r9];
  __ZNKSt3__18ios_base6getlocEv(r13, r4);
  __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r21, r20, r19, r24, r11, r12, r13);
  __ZNSt3__16localeD1Ev(HEAP32[r13 >> 2]);
  r13 = r3 | 0;
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r14, HEAP32[r13 >> 2], r24, HEAP32[r11 >> 2], HEAP32[r12 >> 2], r4, r5);
  r5 = HEAP32[r14 >> 2];
  HEAP32[r13 >> 2] = r5;
  HEAP32[r1 >> 2] = r5;
  if ((r25 | 0) != 0) {
    _free(r25);
  }
  if ((r22 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  _free(r22);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd["X"] = 1;
function __ZNSt3__112__snprintf_lEPcjPvPKcz(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  HEAP32[r6 >> 2] = r4;
  r4 = _uselocale(r2);
  r2 = _snprintf(r1, 30, r3, HEAP32[r6 >> 2]);
  if ((r4 | 0) == 0) {
    STACKTOP = r5;
    return r2;
  }
  _uselocale(r4);
  STACKTOP = r5;
  return r2;
}
function __ZNSt3__112__asprintf_lEPPcPvPKcz(r1, r2, r3, r4) {
  var r5, r6;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r6 = r5;
  HEAP32[r6 >> 2] = r4;
  r4 = _uselocale(r2);
  r2 = _asprintf(r1, r3, HEAP32[r6 >> 2]);
  if ((r4 | 0) == 0) {
    STACKTOP = r5;
    return r2;
  }
  _uselocale(r4);
  STACKTOP = r5;
  return r2;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init9277() {
  if (HEAP8[5274496] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318624] = 1;
  HEAP32[1318625] = 0;
  return;
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37;
  r8 = r6 >> 2;
  r6 = 0;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r10 = r9;
  r11 = r7 | 0;
  r7 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r11 >> 2], 5273668), r12 = r7 >> 2;
  r13 = r7;
  r14 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r11 >> 2], 5273300), r11 = r14 >> 2;
  r15 = r14;
  FUNCTION_TABLE[HEAP32[HEAP32[r11] + 20 >> 2]](r10, r15);
  HEAP32[r8] = r4;
  r14 = HEAP8[r1];
  if (r14 << 24 >> 24 == 45 | r14 << 24 >> 24 == 43) {
    r16 = FUNCTION_TABLE[HEAP32[HEAP32[r12] + 28 >> 2]](r13, r14);
    r14 = HEAP32[r8];
    HEAP32[r8] = r14 + 1 | 0;
    HEAP8[r14] = r16;
    r17 = r1 + 1 | 0;
  } else {
    r17 = r1;
  }
  r16 = r3;
  L2529 : do {
    if ((r16 - r17 | 0) > 1) {
      if (HEAP8[r17] << 24 >> 24 != 48) {
        r18 = r17;
        r6 = 2241;
        break;
      }
      r14 = r17 + 1 | 0;
      r19 = HEAP8[r14];
      if (!(r19 << 24 >> 24 == 120 | r19 << 24 >> 24 == 88)) {
        r18 = r17;
        r6 = 2241;
        break;
      }
      r19 = r7;
      r20 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 28 >> 2]](r13, 48);
      r21 = HEAP32[r8];
      HEAP32[r8] = r21 + 1 | 0;
      HEAP8[r21] = r20;
      r20 = r17 + 2 | 0;
      r21 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 28 >> 2]](r13, HEAP8[r14]);
      r14 = HEAP32[r8];
      HEAP32[r8] = r14 + 1 | 0;
      HEAP8[r14] = r21;
      r21 = r20;
      while (1) {
        if (r21 >>> 0 >= r3 >>> 0) {
          r22 = r21;
          r23 = r20;
          break L2529;
        }
        if ((_isxdigit(HEAP8[r21] << 24 >> 24, __ZNSt3__16__clocEv()) | 0) == 0) {
          r22 = r21;
          r23 = r20;
          break L2529;
        } else {
          r21 = r21 + 1 | 0;
        }
      }
    } else {
      r18 = r17;
      r6 = 2241;
    }
  } while (0);
  L2540 : do {
    if (r6 == 2241) {
      while (1) {
        r6 = 0;
        if (r18 >>> 0 >= r3 >>> 0) {
          r22 = r18;
          r23 = r17;
          break L2540;
        }
        if ((_isdigit(HEAP8[r18] << 24 >> 24, __ZNSt3__16__clocEv()) | 0) == 0) {
          r22 = r18;
          r23 = r17;
          break L2540;
        } else {
          r18 = r18 + 1 | 0;
          r6 = 2241;
        }
      }
    }
  } while (0);
  r6 = r10;
  r18 = r10;
  r17 = HEAPU8[r18];
  if ((r17 & 1 | 0) == 0) {
    r24 = r17 >>> 1;
  } else {
    r24 = HEAP32[r10 + 4 >> 2];
  }
  L2551 : do {
    if ((r24 | 0) == 0) {
      FUNCTION_TABLE[HEAP32[HEAP32[r12] + 32 >> 2]](r13, r23, r22, HEAP32[r8]);
      HEAP32[r8] = HEAP32[r8] + (r22 - r23) | 0;
    } else {
      L2553 : do {
        if ((r23 | 0) != (r22 | 0)) {
          r17 = r22 - 1 | 0;
          if (r23 >>> 0 < r17 >>> 0) {
            r25 = r23;
            r26 = r17;
          } else {
            break;
          }
          while (1) {
            r17 = HEAP8[r25];
            HEAP8[r25] = HEAP8[r26];
            HEAP8[r26] = r17;
            r17 = r25 + 1 | 0;
            r21 = r26 - 1 | 0;
            if (r17 >>> 0 < r21 >>> 0) {
              r25 = r17;
              r26 = r21;
            } else {
              break L2553;
            }
          }
        }
      } while (0);
      r21 = FUNCTION_TABLE[HEAP32[HEAP32[r11] + 16 >> 2]](r15);
      L2559 : do {
        if (r23 >>> 0 < r22 >>> 0) {
          r17 = r6 + 1 | 0;
          r20 = r10 + 4 | 0;
          r14 = r10 + 8 | 0;
          r19 = r7;
          r27 = 0;
          r28 = 0;
          r29 = r23;
          while (1) {
            r30 = HEAP8[((HEAP8[r18] & 1) << 24 >> 24 == 0 ? r17 : HEAP32[r14 >> 2]) + r28 | 0];
            if (r30 << 24 >> 24 > 0 & (r27 | 0) == (r30 << 24 >> 24 | 0)) {
              r30 = HEAP32[r8];
              HEAP32[r8] = r30 + 1 | 0;
              HEAP8[r30] = r21;
              r30 = HEAPU8[r18];
              r31 = (r28 >>> 0 < (((r30 & 1 | 0) == 0 ? r30 >>> 1 : HEAP32[r20 >> 2]) - 1 | 0) >>> 0 & 1) + r28 | 0;
              r32 = 0;
            } else {
              r31 = r28;
              r32 = r27;
            }
            r30 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 28 >> 2]](r13, HEAP8[r29]);
            r33 = HEAP32[r8];
            HEAP32[r8] = r33 + 1 | 0;
            HEAP8[r33] = r30;
            r30 = r29 + 1 | 0;
            if (r30 >>> 0 < r22 >>> 0) {
              r27 = r32 + 1 | 0;
              r28 = r31;
              r29 = r30;
            } else {
              break L2559;
            }
          }
        }
      } while (0);
      r21 = r4 + (r23 - r1) | 0;
      r29 = HEAP32[r8];
      if ((r21 | 0) == (r29 | 0)) {
        break;
      }
      r28 = r29 - 1 | 0;
      if (r21 >>> 0 < r28 >>> 0) {
        r34 = r21;
        r35 = r28;
      } else {
        break;
      }
      while (1) {
        r28 = HEAP8[r34];
        HEAP8[r34] = HEAP8[r35];
        HEAP8[r35] = r28;
        r28 = r34 + 1 | 0;
        r21 = r35 - 1 | 0;
        if (r28 >>> 0 < r21 >>> 0) {
          r34 = r28;
          r35 = r21;
        } else {
          break L2551;
        }
      }
    }
  } while (0);
  L2574 : do {
    if (r22 >>> 0 < r3 >>> 0) {
      r35 = r7;
      r34 = r22;
      while (1) {
        r23 = HEAP8[r34];
        if (r23 << 24 >> 24 == 46) {
          break;
        }
        r31 = FUNCTION_TABLE[HEAP32[HEAP32[r35 >> 2] + 28 >> 2]](r13, r23);
        r23 = HEAP32[r8];
        HEAP32[r8] = r23 + 1 | 0;
        HEAP8[r23] = r31;
        r31 = r34 + 1 | 0;
        if (r31 >>> 0 < r3 >>> 0) {
          r34 = r31;
        } else {
          r36 = r31;
          break L2574;
        }
      }
      r35 = FUNCTION_TABLE[HEAP32[HEAP32[r11] + 12 >> 2]](r15);
      r31 = HEAP32[r8];
      HEAP32[r8] = r31 + 1 | 0;
      HEAP8[r31] = r35;
      r36 = r34 + 1 | 0;
    } else {
      r36 = r22;
    }
  } while (0);
  FUNCTION_TABLE[HEAP32[HEAP32[r12] + 32 >> 2]](r13, r36, r3, HEAP32[r8]);
  r13 = HEAP32[r8] + (r16 - r36) | 0;
  HEAP32[r8] = r13;
  if ((r2 | 0) == (r3 | 0)) {
    r37 = r13;
    HEAP32[r5 >> 2] = r37;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r9;
    return;
  }
  r37 = r4 + (r2 - r1) | 0;
  HEAP32[r5 >> 2] = r37;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r9;
  return;
}
__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE["X"] = 1;
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 120 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 40, r9 = r8 >> 2;
  r10 = r2 + 44;
  r11 = r2 + 104;
  r12 = r2 + 108;
  r13 = r2 + 112;
  r14 = r2 + 116;
  HEAP32[r7 >> 2] = 37;
  HEAP32[r7 + 4 >> 2] = 0;
  r15 = r7;
  r7 = r4 + 4 | 0;
  r16 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(r15 + 1 | 0, 5248736, HEAP32[r7 >> 2]);
  r17 = r2 + 8 | 0;
  HEAP32[r9] = r17;
  r18 = __ZNSt3__16__clocEv();
  if (r16) {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  } else {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  }
  do {
    if ((r19 | 0) > 29) {
      if (r16) {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      } else {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      }
      r18 = HEAP32[r9];
      if ((r18 | 0) != 0) {
        r21 = r20;
        r22 = r18;
        r23 = r18;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r18 = HEAP32[r9];
      r21 = r20;
      r22 = r18;
      r23 = r18;
    } else {
      r21 = r19;
      r22 = 0;
      r23 = HEAP32[r9];
    }
  } while (0);
  r19 = r23 + r21 | 0;
  r20 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r23, r19, HEAP32[r7 >> 2]);
  do {
    if ((r23 | 0) == (r17 | 0)) {
      r24 = r10 | 0;
      r25 = 0;
    } else {
      r7 = _malloc(r21 << 1);
      if ((r7 | 0) != 0) {
        r24 = r7;
        r25 = r7;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r24 = 0;
      r25 = 0;
    }
  } while (0);
  r21 = HEAP32[r9];
  __ZNKSt3__18ios_base6getlocEv(r13, r4);
  __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(r21, r20, r19, r24, r11, r12, r13);
  __ZNSt3__16localeD1Ev(HEAP32[r13 >> 2]);
  r13 = r3 | 0;
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r14, HEAP32[r13 >> 2], r24, HEAP32[r11 >> 2], HEAP32[r12 >> 2], r4, r5);
  r5 = HEAP32[r14 >> 2];
  HEAP32[r13 >> 2] = r5;
  HEAP32[r1 >> 2] = r5;
  if ((r25 | 0) != 0) {
    _free(r25);
  }
  if ((r22 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  _free(r22);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce["X"] = 1;
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 72 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2 + 8;
  r8 = r2 + 28;
  r9 = r2 + 68;
  r10 = r2 | 0;
  HEAP8[r10] = HEAP8[5264472];
  HEAP8[r10 + 1 | 0] = HEAP8[5264473 | 0];
  HEAP8[r10 + 2 | 0] = HEAP8[5264474 | 0];
  HEAP8[r10 + 3 | 0] = HEAP8[5264475 | 0];
  HEAP8[r10 + 4 | 0] = HEAP8[5264476 | 0];
  HEAP8[r10 + 5 | 0] = HEAP8[5264477 | 0];
  r11 = r7 | 0;
  r12 = __ZNSt3__111__sprintf_lEPcPvPKcz(r11, __ZNSt3__16__clocEv(), r10, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt));
  r6 = r7 + r12 | 0;
  r10 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r11, r6, HEAP32[r4 + 4 >> 2]);
  __ZNKSt3__18ios_base6getlocEv(r9, r4);
  r13 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r13, 5273668);
  __ZNSt3__16localeD1Ev(r13);
  r13 = r8 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 32 >> 2]](r9, r11, r6, r13);
  r11 = r8 + r12 | 0;
  if ((r10 | 0) == (r6 | 0)) {
    r14 = r11;
    r15 = r3 | 0;
    r16 = HEAP32[r15 >> 2];
    __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, r16, r13, r14, r11, r4, r5);
    STACKTOP = r2;
    return;
  }
  r14 = r8 + (r10 - r7) | 0;
  r15 = r3 | 0;
  r16 = HEAP32[r15 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, r16, r13, r14, r11, r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r7;
  r9 = r7 + 4;
  r10 = r7 + 8;
  if ((HEAP32[r4 + 4 >> 2] & 1 | 0) == 0) {
    r11 = HEAP32[HEAP32[r2 >> 2] + 24 >> 2];
    HEAP32[r8 >> 2] = HEAP32[r3 >> 2];
    FUNCTION_TABLE[r11](r1, r2, r8, r4, r5, r6 & 1);
    STACKTOP = r7;
    return;
  }
  __ZNKSt3__18ios_base6getlocEv(r9, r4);
  r4 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r4, 5273292);
  r5 = r9;
  __ZNSt3__16localeD1Ev(r4);
  r4 = HEAP32[r9 >> 2];
  if (r6) {
    FUNCTION_TABLE[HEAP32[r4 + 24 >> 2]](r10, r5);
  } else {
    FUNCTION_TABLE[HEAP32[r4 + 28 >> 2]](r10, r5);
  }
  r5 = r10;
  r4 = HEAP8[r5];
  if ((r4 & 1) << 24 >> 24 == 0) {
    r6 = r10 + 4 | 0;
    r12 = r6;
    r13 = r6;
    r14 = r10 + 8 | 0;
  } else {
    r6 = r10 + 8 | 0;
    r12 = HEAP32[r6 >> 2];
    r13 = r10 + 4 | 0;
    r14 = r6;
  }
  r6 = (r3 | 0) >> 2;
  r3 = r12;
  r12 = r4;
  while (1) {
    if ((r12 & 1) << 24 >> 24 == 0) {
      r15 = r13;
    } else {
      r15 = HEAP32[r14 >> 2];
    }
    r4 = r12 & 255;
    if ((r4 & 1 | 0) == 0) {
      r16 = r4 >>> 1;
    } else {
      r16 = HEAP32[r13 >> 2];
    }
    if ((r3 | 0) == ((r16 << 2) + r15 | 0)) {
      break;
    }
    r4 = HEAP32[r3 >> 2];
    r9 = HEAP32[r6];
    do {
      if ((r9 | 0) != 0) {
        r8 = r9 + 24 | 0;
        r2 = HEAP32[r8 >> 2];
        if ((r2 | 0) == (HEAP32[r9 + 28 >> 2] | 0)) {
          r17 = FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 52 >> 2]](r9, r4);
        } else {
          HEAP32[r8 >> 2] = r2 + 4 | 0;
          HEAP32[r2 >> 2] = r4;
          r17 = r4;
        }
        if ((r17 | 0) != -1) {
          break;
        }
        HEAP32[r6] = 0;
      }
    } while (0);
    r3 = r3 + 4 | 0;
    r12 = HEAP8[r5];
  }
  HEAP32[r1 >> 2] = HEAP32[r6];
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r10);
  STACKTOP = r7;
  return;
}
__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb["X"] = 1;
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 116 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 8;
  r9 = r2 + 104;
  r10 = r2 + 108;
  r11 = r2 + 112;
  r12 = r7 | 0;
  HEAP8[r12] = HEAP8[5264464];
  HEAP8[r12 + 1 | 0] = HEAP8[5264465 | 0];
  HEAP8[r12 + 2 | 0] = HEAP8[5264466 | 0];
  HEAP8[r12 + 3 | 0] = HEAP8[5264467 | 0];
  HEAP8[r12 + 4 | 0] = HEAP8[5264468 | 0];
  HEAP8[r12 + 5 | 0] = HEAP8[5264469 | 0];
  r13 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r7 + 1 | 0, 5267748, 1, HEAP32[r13 >> 2]);
  r7 = r8 | 0;
  r14 = r8 + __ZNSt3__111__sprintf_lEPcPvPKcz(r7, __ZNSt3__16__clocEv(), r12, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt)) | 0;
  r6 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r7, r14, HEAP32[r13 >> 2]);
  r13 = r2 + 20 | 0;
  __ZNKSt3__18ios_base6getlocEv(r11, r4);
  __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(r7, r6, r14, r13, r9, r10, r11);
  __ZNSt3__16localeD1Ev(HEAP32[r11 >> 2]);
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r13, HEAP32[r9 >> 2], HEAP32[r10 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r8 = r6 >> 2;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r9 = r6;
  r10 = r7 | 0;
  r7 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r10 >> 2], 5273660);
  r11 = r7;
  r12 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r10 >> 2], 5273292);
  r10 = r12;
  FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 20 >> 2]](r9, r10);
  r13 = r9;
  r14 = r9;
  r15 = HEAPU8[r14];
  if ((r15 & 1 | 0) == 0) {
    r16 = r15 >>> 1;
  } else {
    r16 = HEAP32[r9 + 4 >> 2];
  }
  L2666 : do {
    if ((r16 | 0) == 0) {
      FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 48 >> 2]](r11, r1, r3, r4);
      HEAP32[r8] = (r3 - r1 << 2) + r4 | 0;
    } else {
      HEAP32[r8] = r4;
      r15 = HEAP8[r1];
      if (r15 << 24 >> 24 == 45 | r15 << 24 >> 24 == 43) {
        r17 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 44 >> 2]](r11, r15);
        r15 = HEAP32[r8];
        HEAP32[r8] = r15 + 4 | 0;
        HEAP32[r15 >> 2] = r17;
        r18 = r1 + 1 | 0;
      } else {
        r18 = r1;
      }
      do {
        if ((r3 - r18 | 0) > 1) {
          if (HEAP8[r18] << 24 >> 24 != 48) {
            r19 = r18;
            break;
          }
          r17 = r18 + 1 | 0;
          r15 = HEAP8[r17];
          if (!(r15 << 24 >> 24 == 120 | r15 << 24 >> 24 == 88)) {
            r19 = r18;
            break;
          }
          r15 = r7;
          r20 = FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 44 >> 2]](r11, 48);
          r21 = HEAP32[r8];
          HEAP32[r8] = r21 + 4 | 0;
          HEAP32[r21 >> 2] = r20;
          r20 = FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 44 >> 2]](r11, HEAP8[r17]);
          r17 = HEAP32[r8];
          HEAP32[r8] = r17 + 4 | 0;
          HEAP32[r17 >> 2] = r20;
          r19 = r18 + 2 | 0;
        } else {
          r19 = r18;
        }
      } while (0);
      L2679 : do {
        if ((r19 | 0) != (r3 | 0)) {
          r20 = r3 - 1 | 0;
          if (r19 >>> 0 < r20 >>> 0) {
            r22 = r19;
            r23 = r20;
          } else {
            break;
          }
          while (1) {
            r20 = HEAP8[r22];
            HEAP8[r22] = HEAP8[r23];
            HEAP8[r23] = r20;
            r20 = r22 + 1 | 0;
            r17 = r23 - 1 | 0;
            if (r20 >>> 0 < r17 >>> 0) {
              r22 = r20;
              r23 = r17;
            } else {
              break L2679;
            }
          }
        }
      } while (0);
      r17 = FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 16 >> 2]](r10);
      L2685 : do {
        if (r19 >>> 0 < r3 >>> 0) {
          r20 = r13 + 1 | 0;
          r15 = r7;
          r21 = r9 + 4 | 0;
          r24 = r9 + 8 | 0;
          r25 = 0;
          r26 = 0;
          r27 = r19;
          while (1) {
            r28 = HEAP8[((HEAP8[r14] & 1) << 24 >> 24 == 0 ? r20 : HEAP32[r24 >> 2]) + r26 | 0];
            if (r28 << 24 >> 24 != 0 & (r25 | 0) == (r28 << 24 >> 24 | 0)) {
              r28 = HEAP32[r8];
              HEAP32[r8] = r28 + 4 | 0;
              HEAP32[r28 >> 2] = r17;
              r28 = HEAPU8[r14];
              r29 = (r26 >>> 0 < (((r28 & 1 | 0) == 0 ? r28 >>> 1 : HEAP32[r21 >> 2]) - 1 | 0) >>> 0 & 1) + r26 | 0;
              r30 = 0;
            } else {
              r29 = r26;
              r30 = r25;
            }
            r28 = FUNCTION_TABLE[HEAP32[HEAP32[r15 >> 2] + 44 >> 2]](r11, HEAP8[r27]);
            r31 = HEAP32[r8];
            HEAP32[r8] = r31 + 4 | 0;
            HEAP32[r31 >> 2] = r28;
            r28 = r27 + 1 | 0;
            if (r28 >>> 0 < r3 >>> 0) {
              r25 = r30 + 1 | 0;
              r26 = r29;
              r27 = r28;
            } else {
              break L2685;
            }
          }
        }
      } while (0);
      r17 = (r19 - r1 << 2) + r4 | 0;
      r27 = HEAP32[r8];
      if ((r17 | 0) == (r27 | 0)) {
        break;
      }
      r26 = r27 - 4 | 0;
      if (r17 >>> 0 < r26 >>> 0) {
        r32 = r17;
        r33 = r26;
      } else {
        break;
      }
      while (1) {
        r26 = HEAP32[r32 >> 2];
        HEAP32[r32 >> 2] = HEAP32[r33 >> 2];
        HEAP32[r33 >> 2] = r26;
        r26 = r32 + 4 | 0;
        r17 = r33 - 4 | 0;
        if (r26 >>> 0 < r17 >>> 0) {
          r32 = r26;
          r33 = r17;
        } else {
          break L2666;
        }
      }
    }
  } while (0);
  if ((r2 | 0) == (r3 | 0)) {
    r3 = HEAP32[r8];
    HEAP32[r5 >> 2] = r3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r6;
    return;
  } else {
    r3 = (r2 - r1 << 2) + r4 | 0;
    HEAP32[r5 >> 2] = r3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r9);
    STACKTOP = r6;
    return;
  }
}
__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE["X"] = 1;
function __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31;
  r8 = r5 - r3 >> 2;
  r9 = (r6 + 12 | 0) >> 2;
  r6 = HEAP32[r9];
  r10 = (r6 | 0) > (r8 | 0) ? r6 - r8 | 0 : 0;
  L2706 : do {
    if (r3 >>> 0 < r4 >>> 0) {
      r8 = r3;
      r6 = r2;
      r11 = r2;
      while (1) {
        r12 = HEAP32[r8 >> 2];
        if ((r6 | 0) == 0) {
          r13 = 0;
          r14 = r11;
        } else {
          r15 = r6 + 24 | 0;
          r16 = HEAP32[r15 >> 2];
          if ((r16 | 0) == (HEAP32[r6 + 28 >> 2] | 0)) {
            r17 = FUNCTION_TABLE[HEAP32[HEAP32[r6 >> 2] + 52 >> 2]](r6, r12);
          } else {
            HEAP32[r15 >> 2] = r16 + 4 | 0;
            HEAP32[r16 >> 2] = r12;
            r17 = r12;
          }
          r12 = (r17 | 0) == -1;
          r13 = r12 ? 0 : r6;
          r14 = r12 ? 0 : r11;
        }
        r12 = r8 + 4 | 0;
        if (r12 >>> 0 < r4 >>> 0) {
          r8 = r12;
          r6 = r13;
          r11 = r14;
        } else {
          r18 = r12;
          r19 = r14;
          break L2706;
        }
      }
    } else {
      r18 = r3;
      r19 = r2;
    }
  } while (0);
  L2717 : do {
    if ((r10 | 0) == 0) {
      r20 = r19;
    } else {
      r2 = r10;
      r3 = r19;
      r14 = r19;
      while (1) {
        if ((r3 | 0) == 0) {
          r21 = 0;
          r22 = r14;
        } else {
          r13 = r3 + 24 | 0;
          r4 = HEAP32[r13 >> 2];
          if ((r4 | 0) == (HEAP32[r3 + 28 >> 2] | 0)) {
            r23 = FUNCTION_TABLE[HEAP32[HEAP32[r3 >> 2] + 52 >> 2]](r3, r7);
          } else {
            HEAP32[r13 >> 2] = r4 + 4 | 0;
            HEAP32[r4 >> 2] = r7;
            r23 = r7;
          }
          r4 = (r23 | 0) == -1;
          r21 = r4 ? 0 : r3;
          r22 = r4 ? 0 : r14;
        }
        r4 = r2 - 1 | 0;
        if ((r4 | 0) == 0) {
          r20 = r22;
          break L2717;
        } else {
          r2 = r4;
          r3 = r21;
          r14 = r22;
        }
      }
    }
  } while (0);
  if (r18 >>> 0 < r5 >>> 0) {
    r24 = r18;
    r25 = r20;
    r26 = r20;
  } else {
    r27 = r20;
    HEAP32[r9] = 0;
    r28 = r1 | 0;
    HEAP32[r28 >> 2] = r27;
    return;
  }
  while (1) {
    r20 = HEAP32[r24 >> 2];
    if ((r25 | 0) == 0) {
      r29 = 0;
      r30 = r26;
    } else {
      r18 = r25 + 24 | 0;
      r22 = HEAP32[r18 >> 2];
      if ((r22 | 0) == (HEAP32[r25 + 28 >> 2] | 0)) {
        r31 = FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 52 >> 2]](r25, r20);
      } else {
        HEAP32[r18 >> 2] = r22 + 4 | 0;
        HEAP32[r22 >> 2] = r20;
        r31 = r20;
      }
      r20 = (r31 | 0) == -1;
      r29 = r20 ? 0 : r25;
      r30 = r20 ? 0 : r26;
    }
    r20 = r24 + 4 | 0;
    if (r20 >>> 0 < r5 >>> 0) {
      r24 = r20;
      r25 = r29;
      r26 = r30;
    } else {
      r27 = r30;
      break;
    }
  }
  HEAP32[r9] = 0;
  r28 = r1 | 0;
  HEAP32[r28 >> 2] = r27;
  return;
}
__ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_["X"] = 1;
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 208 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r2;
  r9 = r2 + 8;
  r10 = r2 + 196;
  r11 = r2 + 200;
  r12 = r2 + 204;
  HEAP32[r8 >> 2] = 37;
  HEAP32[r8 + 4 >> 2] = 0;
  r13 = r8;
  r8 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r13 + 1 | 0, 5245116, 1, HEAP32[r8 >> 2]);
  r14 = r9 | 0;
  r15 = r9 + __ZNSt3__111__sprintf_lEPcPvPKcz(r14, __ZNSt3__16__clocEv(), r13, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r6, HEAP32[tempInt + 4 >> 2] = r7, tempInt)) | 0;
  r7 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r14, r15, HEAP32[r8 >> 2]);
  r8 = r2 + 32 | 0;
  __ZNKSt3__18ios_base6getlocEv(r12, r4);
  __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(r14, r7, r15, r8, r10, r11, r12);
  __ZNSt3__16localeD1Ev(HEAP32[r12 >> 2]);
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r8, HEAP32[r10 >> 2], HEAP32[r11 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 116 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 8;
  r9 = r2 + 104;
  r10 = r2 + 108;
  r11 = r2 + 112;
  r12 = r7 | 0;
  HEAP8[r12] = HEAP8[5264464];
  HEAP8[r12 + 1 | 0] = HEAP8[5264465 | 0];
  HEAP8[r12 + 2 | 0] = HEAP8[5264466 | 0];
  HEAP8[r12 + 3 | 0] = HEAP8[5264467 | 0];
  HEAP8[r12 + 4 | 0] = HEAP8[5264468 | 0];
  HEAP8[r12 + 5 | 0] = HEAP8[5264469 | 0];
  r13 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r7 + 1 | 0, 5267748, 0, HEAP32[r13 >> 2]);
  r7 = r8 | 0;
  r14 = r8 + __ZNSt3__111__sprintf_lEPcPvPKcz(r7, __ZNSt3__16__clocEv(), r12, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt)) | 0;
  r6 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r7, r14, HEAP32[r13 >> 2]);
  r13 = r2 + 20 | 0;
  __ZNKSt3__18ios_base6getlocEv(r11, r4);
  __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(r7, r6, r14, r13, r9, r10, r11);
  __ZNSt3__16localeD1Ev(HEAP32[r11 >> 2]);
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r13, HEAP32[r9 >> 2], HEAP32[r10 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 216 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r2;
  r9 = r2 + 8;
  r10 = r2 + 204;
  r11 = r2 + 208;
  r12 = r2 + 212;
  HEAP32[r8 >> 2] = 37;
  HEAP32[r8 + 4 >> 2] = 0;
  r13 = r8;
  r8 = r4 + 4 | 0;
  __ZNSt3__114__num_put_base12__format_intEPcPKcbj(r13 + 1 | 0, 5245116, 0, HEAP32[r8 >> 2]);
  r14 = r9 | 0;
  r15 = r9 + __ZNSt3__111__sprintf_lEPcPvPKcz(r14, __ZNSt3__16__clocEv(), r13, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = r6, HEAP32[tempInt + 4 >> 2] = r7, tempInt)) | 0;
  r7 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r14, r15, HEAP32[r8 >> 2]);
  r8 = r2 + 32 | 0;
  __ZNKSt3__18ios_base6getlocEv(r12, r4);
  __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(r14, r7, r15, r8, r10, r11, r12);
  __ZNSt3__16localeD1Ev(HEAP32[r12 >> 2]);
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r8, HEAP32[r10 >> 2], HEAP32[r11 >> 2], r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 288 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 40, r9 = r8 >> 2;
  r10 = r2 + 44;
  r11 = r2 + 272;
  r12 = r2 + 276;
  r13 = r2 + 280;
  r14 = r2 + 284;
  HEAP32[r7 >> 2] = 37;
  HEAP32[r7 + 4 >> 2] = 0;
  r15 = r7;
  r7 = r4 + 4 | 0;
  r16 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(r15 + 1 | 0, 5244652, HEAP32[r7 >> 2]);
  r17 = r2 + 8 | 0;
  HEAP32[r9] = r17;
  r18 = __ZNSt3__16__clocEv();
  if (r16) {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  } else {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  }
  do {
    if ((r19 | 0) > 29) {
      if (r16) {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      } else {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      }
      r18 = HEAP32[r9];
      if ((r18 | 0) != 0) {
        r21 = r20;
        r22 = r18;
        r23 = r18;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r18 = HEAP32[r9];
      r21 = r20;
      r22 = r18;
      r23 = r18;
    } else {
      r21 = r19;
      r22 = 0;
      r23 = HEAP32[r9];
    }
  } while (0);
  r19 = r23 + r21 | 0;
  r20 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r23, r19, HEAP32[r7 >> 2]);
  do {
    if ((r23 | 0) == (r17 | 0)) {
      r24 = r10 | 0;
      r25 = 0;
    } else {
      r7 = _malloc(r21 << 3);
      r6 = r7;
      if ((r7 | 0) != 0) {
        r24 = r6;
        r25 = r6;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r24 = r6;
      r25 = r6;
    }
  } while (0);
  r21 = HEAP32[r9];
  __ZNKSt3__18ios_base6getlocEv(r13, r4);
  __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(r21, r20, r19, r24, r11, r12, r13);
  __ZNSt3__16localeD1Ev(HEAP32[r13 >> 2]);
  r13 = r3 | 0;
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r14, HEAP32[r13 >> 2], r24, HEAP32[r11 >> 2], HEAP32[r12 >> 2], r4, r5);
  r5 = HEAP32[r14 >> 2];
  HEAP32[r13 >> 2] = r5;
  HEAP32[r1 >> 2] = r5;
  if ((r25 | 0) != 0) {
    _free(r25);
  }
  if ((r22 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  _free(r22);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd["X"] = 1;
function __ZNSt3__120__time_get_c_storageIcEC2Ev() {
  HEAP32[1315959] = 5266036;
  return;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37;
  r8 = r6 >> 2;
  r6 = 0;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r10 = r9;
  r11 = r7 | 0;
  r7 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r11 >> 2], 5273660), r12 = r7 >> 2;
  r13 = r7;
  r14 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r11 >> 2], 5273292), r11 = r14 >> 2;
  r15 = r14;
  FUNCTION_TABLE[HEAP32[HEAP32[r11] + 20 >> 2]](r10, r15);
  HEAP32[r8] = r4;
  r14 = HEAP8[r1];
  if (r14 << 24 >> 24 == 45 | r14 << 24 >> 24 == 43) {
    r16 = FUNCTION_TABLE[HEAP32[HEAP32[r12] + 44 >> 2]](r13, r14);
    r14 = HEAP32[r8];
    HEAP32[r8] = r14 + 4 | 0;
    HEAP32[r14 >> 2] = r16;
    r17 = r1 + 1 | 0;
  } else {
    r17 = r1;
  }
  r16 = r3;
  L2782 : do {
    if ((r16 - r17 | 0) > 1) {
      if (HEAP8[r17] << 24 >> 24 != 48) {
        r18 = r17;
        r6 = 2474;
        break;
      }
      r14 = r17 + 1 | 0;
      r19 = HEAP8[r14];
      if (!(r19 << 24 >> 24 == 120 | r19 << 24 >> 24 == 88)) {
        r18 = r17;
        r6 = 2474;
        break;
      }
      r19 = r7;
      r20 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 44 >> 2]](r13, 48);
      r21 = HEAP32[r8];
      HEAP32[r8] = r21 + 4 | 0;
      HEAP32[r21 >> 2] = r20;
      r20 = r17 + 2 | 0;
      r21 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 44 >> 2]](r13, HEAP8[r14]);
      r14 = HEAP32[r8];
      HEAP32[r8] = r14 + 4 | 0;
      HEAP32[r14 >> 2] = r21;
      r21 = r20;
      while (1) {
        if (r21 >>> 0 >= r3 >>> 0) {
          r22 = r21;
          r23 = r20;
          break L2782;
        }
        if ((_isxdigit(HEAP8[r21] << 24 >> 24, __ZNSt3__16__clocEv()) | 0) == 0) {
          r22 = r21;
          r23 = r20;
          break L2782;
        } else {
          r21 = r21 + 1 | 0;
        }
      }
    } else {
      r18 = r17;
      r6 = 2474;
    }
  } while (0);
  L2793 : do {
    if (r6 == 2474) {
      while (1) {
        r6 = 0;
        if (r18 >>> 0 >= r3 >>> 0) {
          r22 = r18;
          r23 = r17;
          break L2793;
        }
        if ((_isdigit(HEAP8[r18] << 24 >> 24, __ZNSt3__16__clocEv()) | 0) == 0) {
          r22 = r18;
          r23 = r17;
          break L2793;
        } else {
          r18 = r18 + 1 | 0;
          r6 = 2474;
        }
      }
    }
  } while (0);
  r6 = r10;
  r18 = r10;
  r17 = HEAPU8[r18];
  if ((r17 & 1 | 0) == 0) {
    r24 = r17 >>> 1;
  } else {
    r24 = HEAP32[r10 + 4 >> 2];
  }
  L2804 : do {
    if ((r24 | 0) == 0) {
      FUNCTION_TABLE[HEAP32[HEAP32[r12] + 48 >> 2]](r13, r23, r22, HEAP32[r8]);
      HEAP32[r8] = (r22 - r23 << 2) + HEAP32[r8] | 0;
    } else {
      L2808 : do {
        if ((r23 | 0) != (r22 | 0)) {
          r17 = r22 - 1 | 0;
          if (r23 >>> 0 < r17 >>> 0) {
            r25 = r23;
            r26 = r17;
          } else {
            break;
          }
          while (1) {
            r17 = HEAP8[r25];
            HEAP8[r25] = HEAP8[r26];
            HEAP8[r26] = r17;
            r17 = r25 + 1 | 0;
            r21 = r26 - 1 | 0;
            if (r17 >>> 0 < r21 >>> 0) {
              r25 = r17;
              r26 = r21;
            } else {
              break L2808;
            }
          }
        }
      } while (0);
      r21 = FUNCTION_TABLE[HEAP32[HEAP32[r11] + 16 >> 2]](r15);
      L2814 : do {
        if (r23 >>> 0 < r22 >>> 0) {
          r17 = r6 + 1 | 0;
          r20 = r10 + 4 | 0;
          r14 = r10 + 8 | 0;
          r19 = r7;
          r27 = 0;
          r28 = 0;
          r29 = r23;
          while (1) {
            r30 = HEAP8[((HEAP8[r18] & 1) << 24 >> 24 == 0 ? r17 : HEAP32[r14 >> 2]) + r28 | 0];
            if (r30 << 24 >> 24 > 0 & (r27 | 0) == (r30 << 24 >> 24 | 0)) {
              r30 = HEAP32[r8];
              HEAP32[r8] = r30 + 4 | 0;
              HEAP32[r30 >> 2] = r21;
              r30 = HEAPU8[r18];
              r31 = (r28 >>> 0 < (((r30 & 1 | 0) == 0 ? r30 >>> 1 : HEAP32[r20 >> 2]) - 1 | 0) >>> 0 & 1) + r28 | 0;
              r32 = 0;
            } else {
              r31 = r28;
              r32 = r27;
            }
            r30 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 44 >> 2]](r13, HEAP8[r29]);
            r33 = HEAP32[r8];
            HEAP32[r8] = r33 + 4 | 0;
            HEAP32[r33 >> 2] = r30;
            r30 = r29 + 1 | 0;
            if (r30 >>> 0 < r22 >>> 0) {
              r27 = r32 + 1 | 0;
              r28 = r31;
              r29 = r30;
            } else {
              break L2814;
            }
          }
        }
      } while (0);
      r21 = (r23 - r1 << 2) + r4 | 0;
      r29 = HEAP32[r8];
      if ((r21 | 0) == (r29 | 0)) {
        break;
      }
      r28 = r29 - 4 | 0;
      if (r21 >>> 0 < r28 >>> 0) {
        r34 = r21;
        r35 = r28;
      } else {
        break;
      }
      while (1) {
        r28 = HEAP32[r34 >> 2];
        HEAP32[r34 >> 2] = HEAP32[r35 >> 2];
        HEAP32[r35 >> 2] = r28;
        r28 = r34 + 4 | 0;
        r21 = r35 - 4 | 0;
        if (r28 >>> 0 < r21 >>> 0) {
          r34 = r28;
          r35 = r21;
        } else {
          break L2804;
        }
      }
    }
  } while (0);
  L2827 : do {
    if (r22 >>> 0 < r3 >>> 0) {
      r35 = r7;
      r34 = r22;
      while (1) {
        r23 = HEAP8[r34];
        if (r23 << 24 >> 24 == 46) {
          break;
        }
        r31 = FUNCTION_TABLE[HEAP32[HEAP32[r35 >> 2] + 44 >> 2]](r13, r23);
        r23 = HEAP32[r8];
        HEAP32[r8] = r23 + 4 | 0;
        HEAP32[r23 >> 2] = r31;
        r31 = r34 + 1 | 0;
        if (r31 >>> 0 < r3 >>> 0) {
          r34 = r31;
        } else {
          r36 = r31;
          break L2827;
        }
      }
      r35 = FUNCTION_TABLE[HEAP32[HEAP32[r11] + 12 >> 2]](r15);
      r31 = HEAP32[r8];
      HEAP32[r8] = r31 + 4 | 0;
      HEAP32[r31 >> 2] = r35;
      r36 = r34 + 1 | 0;
    } else {
      r36 = r22;
    }
  } while (0);
  FUNCTION_TABLE[HEAP32[HEAP32[r12] + 48 >> 2]](r13, r36, r3, HEAP32[r8]);
  r13 = (r16 - r36 << 2) + HEAP32[r8] | 0;
  HEAP32[r8] = r13;
  if ((r2 | 0) == (r3 | 0)) {
    r37 = r13;
    HEAP32[r5 >> 2] = r37;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
    STACKTOP = r9;
    return;
  }
  r37 = (r2 - r1 << 2) + r4 | 0;
  HEAP32[r5 >> 2] = r37;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r10);
  STACKTOP = r9;
  return;
}
__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE["X"] = 1;
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 288 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2;
  r8 = r2 + 40, r9 = r8 >> 2;
  r10 = r2 + 44;
  r11 = r2 + 272;
  r12 = r2 + 276;
  r13 = r2 + 280;
  r14 = r2 + 284;
  HEAP32[r7 >> 2] = 37;
  HEAP32[r7 + 4 >> 2] = 0;
  r15 = r7;
  r7 = r4 + 4 | 0;
  r16 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(r15 + 1 | 0, 5248736, HEAP32[r7 >> 2]);
  r17 = r2 + 8 | 0;
  HEAP32[r9] = r17;
  r18 = __ZNSt3__16__clocEv();
  if (r16) {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  } else {
    r19 = __ZNSt3__112__snprintf_lEPcjPvPKcz(r17, r18, r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  }
  do {
    if ((r19 | 0) > 29) {
      if (r16) {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 12 | 0, HEAP32[tempInt >> 2] = HEAP32[r4 + 8 >> 2], HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 8 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      } else {
        r20 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), r15, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r6, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      }
      r18 = HEAP32[r9];
      if ((r18 | 0) != 0) {
        r21 = r20;
        r22 = r18;
        r23 = r18;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r18 = HEAP32[r9];
      r21 = r20;
      r22 = r18;
      r23 = r18;
    } else {
      r21 = r19;
      r22 = 0;
      r23 = HEAP32[r9];
    }
  } while (0);
  r19 = r23 + r21 | 0;
  r20 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r23, r19, HEAP32[r7 >> 2]);
  do {
    if ((r23 | 0) == (r17 | 0)) {
      r24 = r10 | 0;
      r25 = 0;
    } else {
      r7 = _malloc(r21 << 3);
      r6 = r7;
      if ((r7 | 0) != 0) {
        r24 = r6;
        r25 = r6;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r24 = r6;
      r25 = r6;
    }
  } while (0);
  r21 = HEAP32[r9];
  __ZNKSt3__18ios_base6getlocEv(r13, r4);
  __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(r21, r20, r19, r24, r11, r12, r13);
  __ZNSt3__16localeD1Ev(HEAP32[r13 >> 2]);
  r13 = r3 | 0;
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r14, HEAP32[r13 >> 2], r24, HEAP32[r11 >> 2], HEAP32[r12 >> 2], r4, r5);
  r5 = HEAP32[r14 >> 2];
  HEAP32[r13 >> 2] = r5;
  HEAP32[r1 >> 2] = r5;
  if ((r25 | 0) != 0) {
    _free(r25);
  }
  if ((r22 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  _free(r22);
  STACKTOP = r2;
  return;
}
__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe["X"] = 1;
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 180 | 0;
  r7 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r7 >> 2];
  r7 = r2 + 8;
  r8 = r2 + 28;
  r9 = r2 + 176;
  r10 = r2 | 0;
  HEAP8[r10] = HEAP8[5264472];
  HEAP8[r10 + 1 | 0] = HEAP8[5264473 | 0];
  HEAP8[r10 + 2 | 0] = HEAP8[5264474 | 0];
  HEAP8[r10 + 3 | 0] = HEAP8[5264475 | 0];
  HEAP8[r10 + 4 | 0] = HEAP8[5264476 | 0];
  HEAP8[r10 + 5 | 0] = HEAP8[5264477 | 0];
  r11 = r7 | 0;
  r12 = __ZNSt3__111__sprintf_lEPcPvPKcz(r11, __ZNSt3__16__clocEv(), r10, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r6, tempInt));
  r6 = r7 + r12 | 0;
  r10 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(r11, r6, HEAP32[r4 + 4 >> 2]);
  __ZNKSt3__18ios_base6getlocEv(r9, r4);
  r13 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r13, 5273660);
  __ZNSt3__16localeD1Ev(r13);
  r13 = r8 | 0;
  FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 48 >> 2]](r9, r11, r6, r13);
  r11 = (r12 << 2) + r8 | 0;
  if ((r10 | 0) == (r6 | 0)) {
    r14 = r11;
    r15 = r3 | 0;
    r16 = HEAP32[r15 >> 2];
    __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, r16, r13, r14, r11, r4, r5);
    STACKTOP = r2;
    return;
  }
  r14 = (r10 - r7 << 2) + r8 | 0;
  r15 = r3 | 0;
  r16 = HEAP32[r15 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, r16, r13, r14, r11, r4, r5);
  STACKTOP = r2;
  return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev(r1) {
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv(r1) {
  return 2;
}
function ___cxx_global_var_init10278() {
  if (HEAP8[5274472] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318618] = 1;
  HEAP32[1318619] = 0;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  var r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56;
  r10 = r6 >> 2;
  r11 = 0;
  r12 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r13 = r12;
  r14 = r12 + 4;
  r15 = r12 + 8;
  r16 = r12 + 12;
  __ZNKSt3__18ios_base6getlocEv(r13, r5);
  r17 = HEAP32[r13 >> 2];
  r13 = __ZNKSt3__16locale9use_facetERNS0_2idE(r17, 5273668);
  r18 = r13;
  __ZNSt3__16localeD1Ev(r17);
  HEAP32[r10] = 0;
  L2886 : do {
    if ((r8 | 0) == (r9 | 0)) {
      r19 = r3;
    } else {
      r17 = r13 >> 2;
      r20 = r13 + 8 | 0;
      r21 = r13;
      r22 = r2;
      r23 = r15 | 0;
      r24 = r16 | 0;
      r25 = r14 | 0;
      r26 = (r4 | 0) == 0;
      r27 = r8;
      r28 = 0;
      r29 = r3;
      L2888 : while (1) {
        r30 = (r29 | 0) == 0 ^ r26;
        r31 = (r29 + 12 | 0) >> 2;
        r32 = (r29 + 16 | 0) >> 2;
        r33 = r29 >> 2;
        r34 = r28;
        while (1) {
          if ((r34 | 0) != 0) {
            r19 = r29;
            break L2886;
          }
          if (!r30) {
            r11 = 2569;
            break L2888;
          }
          if (FUNCTION_TABLE[HEAP32[HEAP32[r17] + 36 >> 2]](r18, HEAP8[r27], 0) << 24 >> 24 == 37) {
            r11 = 2571;
            break;
          }
          r35 = HEAP8[r27];
          if (r35 << 24 >> 24 > -1) {
            r36 = HEAP32[r20 >> 2];
            if ((HEAP16[r36 + (r35 << 24 >> 24 << 1) >> 1] & 8192) << 16 >> 16 != 0) {
              r37 = r27;
              r11 = 2582;
              break;
            }
          }
          r35 = HEAP32[r31];
          if ((r35 | 0) == (HEAP32[r32] | 0)) {
            r38 = FUNCTION_TABLE[HEAP32[HEAP32[r33] + 36 >> 2]](r29);
          } else {
            r38 = HEAPU8[r35];
          }
          if (FUNCTION_TABLE[HEAP32[HEAP32[r21 >> 2] + 12 >> 2]](r18, r38 & 255) << 24 >> 24 == FUNCTION_TABLE[HEAP32[HEAP32[r21 >> 2] + 12 >> 2]](r18, HEAP8[r27]) << 24 >> 24) {
            r11 = 2604;
            break;
          }
          HEAP32[r10] = 4;
          r34 = 4;
        }
        L2903 : do {
          if (r11 == 2582) {
            while (1) {
              r11 = 0;
              r34 = r37 + 1 | 0;
              if ((r34 | 0) == (r9 | 0)) {
                r39 = r9;
                break;
              }
              r30 = HEAP8[r34];
              if (r30 << 24 >> 24 <= -1) {
                r39 = r34;
                break;
              }
              if ((HEAP16[r36 + (r30 << 24 >> 24 << 1) >> 1] & 8192) << 16 >> 16 == 0) {
                r39 = r34;
                break;
              } else {
                r37 = r34;
                r11 = 2582;
              }
            }
            r34 = r29;
            while (1) {
              r30 = (r34 + 12 | 0) >> 2;
              r35 = (r34 + 16 | 0) >> 2;
              r40 = r34 >> 2;
              r41 = (r34 | 0) == 0 ^ r26;
              while (1) {
                r42 = HEAP32[r30];
                if ((r42 | 0) == (HEAP32[r35] | 0)) {
                  r43 = FUNCTION_TABLE[HEAP32[HEAP32[r40] + 36 >> 2]](r34);
                } else {
                  r43 = HEAPU8[r42];
                }
                r42 = r43 << 24 >> 24;
                if (r42 >>> 0 >= 128) {
                  r44 = r39;
                  r45 = r34;
                  break L2903;
                }
                if ((HEAP16[HEAP32[r20 >> 2] + (r42 << 1) >> 1] & 8192) << 16 >> 16 == 0) {
                  r44 = r39;
                  r45 = r34;
                  break L2903;
                }
                r42 = HEAP32[r30];
                r46 = HEAP32[r35];
                if ((r42 | 0) == (r46 | 0)) {
                  if ((FUNCTION_TABLE[HEAP32[HEAP32[r40] + 40 >> 2]](r34) | 0) == -1) {
                    break;
                  }
                  r47 = HEAP32[r30];
                  r48 = HEAP32[r35];
                } else {
                  r49 = r42 + 1 | 0;
                  HEAP32[r30] = r49;
                  r47 = r49;
                  r48 = r46;
                }
                if ((r47 | 0) == (r48 | 0)) {
                  if ((FUNCTION_TABLE[HEAP32[HEAP32[r40] + 36 >> 2]](r34) | 0) == -1) {
                    break;
                  }
                }
                if (!r41) {
                  r44 = r39;
                  r45 = r34;
                  break L2903;
                }
              }
              if (r26) {
                r44 = r39;
                r45 = 0;
                break L2903;
              } else {
                r34 = 0;
              }
            }
          } else if (r11 == 2604) {
            r11 = 0;
            r34 = HEAP32[r31];
            r41 = HEAP32[r32];
            do {
              if ((r34 | 0) == (r41 | 0)) {
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r33] + 40 >> 2]](r29) | 0) == -1) {
                  r11 = 2610;
                  break;
                }
                r50 = HEAP32[r31];
                r51 = HEAP32[r32];
                r11 = 2608;
                break;
              } else {
                r40 = r34 + 1 | 0;
                HEAP32[r31] = r40;
                r50 = r40;
                r51 = r41;
                r11 = 2608;
                break;
              }
            } while (0);
            do {
              if (r11 == 2608) {
                r11 = 0;
                if ((r50 | 0) != (r51 | 0)) {
                  r52 = r29;
                  break;
                }
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r33] + 36 >> 2]](r29) | 0) == -1) {
                  r11 = 2610;
                  break;
                } else {
                  r52 = r29;
                  break;
                }
              }
            } while (0);
            if (r11 == 2610) {
              r11 = 0;
              r52 = 0;
            }
            r44 = r27 + 1 | 0;
            r45 = r52;
          } else if (r11 == 2571) {
            r11 = 0;
            r41 = r27 + 1 | 0;
            if ((r41 | 0) == (r9 | 0)) {
              r11 = 2572;
              break L2888;
            }
            r34 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 36 >> 2]](r18, HEAP8[r41], 0);
            if (r34 << 24 >> 24 == 69 | r34 << 24 >> 24 == 48) {
              r40 = r27 + 2 | 0;
              if ((r40 | 0) == (r9 | 0)) {
                r11 = 2575;
                break L2888;
              }
              r53 = r34;
              r54 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 36 >> 2]](r18, HEAP8[r40], 0);
              r55 = r40;
            } else {
              r53 = 0;
              r54 = r34;
              r55 = r41;
            }
            r41 = HEAP32[HEAP32[r22 >> 2] + 36 >> 2];
            HEAP32[r23 >> 2] = r29;
            HEAP32[r24 >> 2] = r4;
            FUNCTION_TABLE[r41](r14, r2, r15, r16, r5, r6, r7, r54, r53);
            r44 = r55 + 1 | 0;
            r45 = HEAP32[r25 >> 2];
          }
        } while (0);
        if ((r44 | 0) == (r9 | 0)) {
          r19 = r45;
          break L2886;
        }
        r27 = r44;
        r28 = HEAP32[r10];
        r29 = r45;
      }
      if (r11 == 2572) {
        HEAP32[r10] = 4;
        r19 = r29;
        break;
      } else if (r11 == 2575) {
        HEAP32[r10] = 4;
        r19 = r29;
        break;
      } else if (r11 == 2569) {
        HEAP32[r10] = 4;
        r19 = r29;
        break;
      }
    }
  } while (0);
  if ((r19 | 0) == 0 ^ (r4 | 0) == 0) {
    r56 = r1 | 0;
    HEAP32[r56 >> 2] = r19;
    STACKTOP = r12;
    return;
  }
  HEAP32[r10] = HEAP32[r10] | 2;
  r56 = r1 | 0;
  HEAP32[r56 >> 2] = r19;
  STACKTOP = r12;
  return;
}
__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_["X"] = 1;
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9;
  r8 = STACKTOP;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r1, r2, HEAP32[r3 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264456, 5264464);
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r10 = HEAP32[r9 >> 2];
  __ZNKSt3__16locale9use_facetERNS0_2idE(r10, 5273668);
  __ZNSt3__16localeD1Ev(r10);
  r10 = r2 + 8 | 0;
  r9 = FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 20 >> 2]](r10);
  r10 = HEAP8[r9];
  if ((r10 & 1) << 24 >> 24 == 0) {
    r11 = r9 + 1 | 0;
  } else {
    r11 = HEAP32[r9 + 8 >> 2];
  }
  r12 = r10 & 255;
  if ((r12 & 1 | 0) == 0) {
    r13 = r12 >>> 1;
  } else {
    r13 = HEAP32[r9 + 4 >> 2];
  }
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r1, r2, HEAP32[r3 >> 2], HEAP32[r4 >> 2], r5, r6, r7, r11, r11 + r13 | 0);
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r5 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273668);
  __ZNSt3__16localeD1Ev(r5);
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(r2, r7 + 24 | 0, r3, HEAP32[r4 >> 2], r6, r9);
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5, r6) {
  var r7;
  r7 = r1 + 8 | 0;
  r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] >> 2]](r7);
  r7 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, r4, r1, r1 + 168 | 0, r6, r5, 0) - r1 | 0;
  if ((r7 | 0) >= 168) {
    return;
  }
  HEAP32[r2 >> 2] = ((r7 | 0) / 12 & -1 | 0) % 7;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r5 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273668);
  __ZNSt3__16localeD1Ev(r5);
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(r2, r7 + 16 | 0, r3, HEAP32[r4 >> 2], r6, r9);
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5, r6) {
  var r7;
  r7 = r1 + 8 | 0;
  r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 4 >> 2]](r7);
  r7 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, r4, r1, r1 + 288 | 0, r6, r5, 0) - r1 | 0;
  if ((r7 | 0) >= 288) {
    return;
  }
  HEAP32[r2 >> 2] = ((r7 | 0) / 12 & -1 | 0) % 12;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2;
  __ZNKSt3__18ios_base6getlocEv(r8, r5);
  r5 = HEAP32[r8 >> 2];
  r8 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273668);
  __ZNSt3__16localeD1Ev(r5);
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 20 | 0, r3, HEAP32[r4 >> 2], r6, r8);
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r2;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6, r7;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 4);
  if ((HEAP32[r4 >> 2] & 4 | 0) != 0) {
    return;
  }
  if ((r6 | 0) < 69) {
    r7 = r6 + 2e3 | 0;
  } else {
    r7 = (r6 - 69 | 0) >>> 0 < 31 ? r6 + 1900 | 0 : r6;
  }
  HEAP32[r1 >> 2] = r7 - 1900 | 0;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  var r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r10 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r10 >> 2];
  r10 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r10 >> 2];
  r10 = r9;
  r11 = r9 + 4;
  r12 = r9 + 8;
  r13 = r9 + 12;
  r14 = r9 + 16;
  r15 = r9 + 20;
  r16 = r9 + 24;
  r17 = r9 + 28;
  r18 = r9 + 32;
  r19 = r9 + 36;
  HEAP32[r6 >> 2] = 0;
  __ZNKSt3__18ios_base6getlocEv(r10, r5);
  r20 = HEAP32[r10 >> 2];
  r10 = __ZNKSt3__16locale9use_facetERNS0_2idE(r20, 5273668);
  __ZNSt3__16localeD1Ev(r20);
  r20 = r8 << 24 >> 24;
  if ((r20 | 0) == 98 | (r20 | 0) == 66 | (r20 | 0) == 104) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(r2, r7 + 16 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 106) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 28 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 70) {
    r8 = r3 | 0;
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r13, r2, HEAP32[r8 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264440, 5264448);
    HEAP32[r8 >> 2] = HEAP32[r13 >> 2];
  } else if ((r20 | 0) == 99) {
    r13 = r2 + 8 | 0;
    r8 = FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 12 >> 2]](r13);
    r13 = r3 | 0;
    r21 = HEAP8[r8];
    if ((r21 & 1) << 24 >> 24 == 0) {
      r22 = r8 + 1 | 0;
    } else {
      r22 = HEAP32[r8 + 8 >> 2];
    }
    r23 = r21 & 255;
    if ((r23 & 1 | 0) == 0) {
      r24 = r23 >>> 1;
    } else {
      r24 = HEAP32[r8 + 4 >> 2];
    }
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r11, r2, HEAP32[r13 >> 2], HEAP32[r4 >> 2], r5, r6, r7, r22, r22 + r24 | 0);
    HEAP32[r13 >> 2] = HEAP32[r11 >> 2];
  } else if ((r20 | 0) == 83) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(r7 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 68) {
    r11 = r3 | 0;
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r12, r2, HEAP32[r11 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264448, 5264456);
    HEAP32[r11 >> 2] = HEAP32[r12 >> 2];
  } else if ((r20 | 0) == 97 | (r20 | 0) == 65) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(r2, r7 + 24 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 73) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 8 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 82) {
    r12 = r3 | 0;
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r15, r2, HEAP32[r12 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264420, 5264425);
    HEAP32[r12 >> 2] = HEAP32[r15 >> 2];
  } else if ((r20 | 0) == 109) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 16 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 114) {
    r15 = r3 | 0;
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r14, r2, HEAP32[r15 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264428, 5264439);
    HEAP32[r15 >> 2] = HEAP32[r14 >> 2];
  } else if ((r20 | 0) == 112) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(r2, r7 + 8 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 121) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 20 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 88) {
    r14 = r2 + 8 | 0;
    r15 = FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 24 >> 2]](r14);
    r14 = r3 | 0;
    r12 = HEAP8[r15];
    if ((r12 & 1) << 24 >> 24 == 0) {
      r25 = r15 + 1 | 0;
    } else {
      r25 = HEAP32[r15 + 8 >> 2];
    }
    r11 = r12 & 255;
    if ((r11 & 1 | 0) == 0) {
      r26 = r11 >>> 1;
    } else {
      r26 = HEAP32[r15 + 4 >> 2];
    }
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r19, r2, HEAP32[r14 >> 2], HEAP32[r4 >> 2], r5, r6, r7, r25, r25 + r26 | 0);
    HEAP32[r14 >> 2] = HEAP32[r19 >> 2];
  } else if ((r20 | 0) == 84) {
    r19 = r3 | 0;
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(r16, r2, HEAP32[r19 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264412, 5264420);
    HEAP32[r19 >> 2] = HEAP32[r16 >> 2];
  } else if ((r20 | 0) == 119) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 24 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 120) {
    r16 = HEAP32[HEAP32[r2 >> 2] + 20 >> 2];
    HEAP32[r17 >> 2] = HEAP32[r3 >> 2];
    HEAP32[r18 >> 2] = HEAP32[r4 >> 2];
    FUNCTION_TABLE[r16](r1, r2, r17, r18, r5, r6, r7);
    STACKTOP = r9;
    return;
  } else if ((r20 | 0) == 72) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 8 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 110 | (r20 | 0) == 116) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 77) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 4 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 100 | (r20 | 0) == 101) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 12 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 89) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(r7 + 20 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 37) {
    __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(r3, HEAP32[r4 >> 2], r6, r10);
  } else {
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 4;
  }
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r9;
  return;
}
__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc["X"] = 1;
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 & 4 | 0) == 0) {
      if ((r6 - 1 | 0) >>> 0 >= 31) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      return;
    }
  } while (0);
  HEAP32[r4 >> 2] = r5 | 4;
  return;
}
function __ZNSt3__120__time_get_c_storageIwEC2Ev() {
  HEAP32[1315956] = 5265996;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 24) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 & 4 | 0) == 0) {
      if ((r6 - 1 | 0) >>> 0 >= 12) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      return;
    }
  } while (0);
  HEAP32[r4 >> 2] = r5 | 4;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 3);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 366) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2) - 1 | 0;
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 12) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 60) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r5 = 0;
  r6 = r4 + 8 | 0;
  r4 = (r1 | 0) >> 2;
  r1 = HEAP32[r4];
  r7 = (r2 | 0) == 0;
  L3079 : do {
    if ((r1 | 0) == 0 ^ r7) {
      r2 = r1, r8 = r2 >> 2;
      while (1) {
        r9 = HEAP32[r8 + 3];
        if ((r9 | 0) == (HEAP32[r8 + 4] | 0)) {
          r10 = FUNCTION_TABLE[HEAP32[HEAP32[r8] + 36 >> 2]](r2);
        } else {
          r10 = HEAPU8[r9];
        }
        r9 = r10 << 24 >> 24;
        if (r9 >>> 0 >= 128) {
          break;
        }
        if ((HEAP16[HEAP32[r6 >> 2] + (r9 << 1) >> 1] & 8192) << 16 >> 16 == 0) {
          break;
        }
        r9 = HEAP32[r4];
        r11 = (r9 + 12 | 0) >> 2;
        r12 = HEAP32[r11];
        r13 = r9 + 16 | 0;
        r14 = HEAP32[r13 >> 2];
        do {
          if ((r12 | 0) == (r14 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 40 >> 2]](r9) | 0) == -1) {
              r5 = 2751;
              break;
            }
            r15 = HEAP32[r11];
            r16 = HEAP32[r13 >> 2];
            r5 = 2749;
            break;
          } else {
            r17 = r12 + 1 | 0;
            HEAP32[r11] = r17;
            r15 = r17;
            r16 = r14;
            r5 = 2749;
            break;
          }
        } while (0);
        do {
          if (r5 == 2749) {
            r5 = 0;
            if ((r15 | 0) != (r16 | 0)) {
              break;
            }
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 36 >> 2]](r9) | 0) == -1) {
              r5 = 2751;
              break;
            } else {
              break;
            }
          }
        } while (0);
        if (r5 == 2751) {
          r5 = 0;
          HEAP32[r4] = 0;
        }
        r9 = HEAP32[r4];
        if ((r9 | 0) == 0 ^ r7) {
          r2 = r9, r8 = r2 >> 2;
        } else {
          r18 = r9;
          break L3079;
        }
      }
      r18 = HEAP32[r4];
    } else {
      r18 = r1;
    }
  } while (0);
  if ((r18 | 0) == 0 ^ r7) {
    return;
  }
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] | 2;
  return;
}
__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE["X"] = 1;
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9;
  r7 = r1 + 8 | 0;
  r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 8 >> 2]](r7);
  r7 = HEAPU8[r1];
  if ((r7 & 1 | 0) == 0) {
    r8 = r7 >>> 1;
  } else {
    r8 = HEAP32[r1 + 4 >> 2];
  }
  r7 = HEAPU8[r1 + 12 | 0];
  if ((r7 & 1 | 0) == 0) {
    r9 = r7 >>> 1;
  } else {
    r9 = HEAP32[r1 + 16 >> 2];
  }
  if ((r8 | 0) == (-r9 | 0)) {
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] | 4;
    return;
  }
  r9 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, r4, r1, r1 + 24 | 0, r6, r5, 0);
  r5 = r9 - r1 | 0;
  do {
    if ((r9 | 0) == (r1 | 0)) {
      if ((HEAP32[r2 >> 2] | 0) != 12) {
        break;
      }
      HEAP32[r2 >> 2] = 0;
      return;
    }
  } while (0);
  if ((r5 | 0) != 12) {
    return;
  }
  r5 = HEAP32[r2 >> 2];
  if ((r5 | 0) >= 12) {
    return;
  }
  HEAP32[r2 >> 2] = r5 + 12 | 0;
  return;
}
__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE["X"] = 1;
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 61) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 1);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 7) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 4);
  if ((HEAP32[r4 >> 2] & 4 | 0) != 0) {
    return;
  }
  HEAP32[r1 >> 2] = r6 - 1900 | 0;
  return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12;
  r5 = r3 >> 2;
  r3 = 0;
  r6 = (r1 | 0) >> 2;
  r1 = HEAP32[r6], r7 = r1 >> 2;
  r8 = (r2 | 0) == 0;
  if (!((r1 | 0) == 0 ^ r8)) {
    HEAP32[r5] = HEAP32[r5] | 6;
    return;
  }
  r2 = HEAP32[r7 + 3];
  if ((r2 | 0) == (HEAP32[r7 + 4] | 0)) {
    r9 = FUNCTION_TABLE[HEAP32[HEAP32[r7] + 36 >> 2]](r1);
  } else {
    r9 = HEAPU8[r2];
  }
  if (FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 36 >> 2]](r4, r9 & 255, 0) << 24 >> 24 != 37) {
    HEAP32[r5] = HEAP32[r5] | 4;
    return;
  }
  r9 = HEAP32[r6];
  r4 = (r9 + 12 | 0) >> 2;
  r2 = HEAP32[r4];
  r1 = r9 + 16 | 0;
  r7 = HEAP32[r1 >> 2];
  do {
    if ((r2 | 0) == (r7 | 0)) {
      if ((FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 40 >> 2]](r9) | 0) == -1) {
        r3 = 2809;
        break;
      }
      r10 = HEAP32[r4];
      r11 = HEAP32[r1 >> 2];
      r3 = 2807;
      break;
    } else {
      r12 = r2 + 1 | 0;
      HEAP32[r4] = r12;
      r10 = r12;
      r11 = r7;
      r3 = 2807;
      break;
    }
  } while (0);
  do {
    if (r3 == 2807) {
      if ((r10 | 0) != (r11 | 0)) {
        break;
      }
      if ((FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 36 >> 2]](r9) | 0) == -1) {
        r3 = 2809;
        break;
      } else {
        break;
      }
    }
  } while (0);
  if (r3 == 2809) {
    HEAP32[r6] = 0;
  }
  if ((HEAP32[r6] | 0) == 0 ^ r8) {
    return;
  }
  HEAP32[r5] = HEAP32[r5] | 2;
  return;
}
__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE["X"] = 1;
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r6 = r3 >> 2;
  r3 = 0;
  r7 = (r1 | 0) >> 2;
  r1 = HEAP32[r7], r8 = r1 >> 2;
  r9 = (r2 | 0) == 0;
  if (!((r1 | 0) == 0 ^ r9)) {
    HEAP32[r6] = HEAP32[r6] | 6;
    r10 = 0;
    return r10;
  }
  r2 = HEAP32[r8 + 3];
  if ((r2 | 0) == (HEAP32[r8 + 4] | 0)) {
    r11 = FUNCTION_TABLE[HEAP32[HEAP32[r8] + 36 >> 2]](r1);
  } else {
    r11 = HEAPU8[r2];
  }
  r2 = r11 & 255;
  r1 = r11 << 24 >> 24;
  do {
    if (r1 >>> 0 < 128) {
      r11 = r4 + 8 | 0;
      if ((HEAP16[HEAP32[r11 >> 2] + (r1 << 1) >> 1] & 2048) << 16 >> 16 == 0) {
        break;
      }
      r8 = r4;
      r12 = FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 36 >> 2]](r4, r2, 0) << 24 >> 24;
      r13 = HEAP32[r7];
      r14 = (r13 + 12 | 0) >> 2;
      r15 = HEAP32[r14];
      r16 = r13 + 16 | 0;
      r17 = HEAP32[r16 >> 2];
      do {
        if ((r15 | 0) == (r17 | 0)) {
          if ((FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 40 >> 2]](r13) | 0) == -1) {
            r3 = 2831;
            break;
          }
          r18 = HEAP32[r14];
          r19 = HEAP32[r16 >> 2];
          r3 = 2829;
          break;
        } else {
          r20 = r15 + 1 | 0;
          HEAP32[r14] = r20;
          r18 = r20;
          r19 = r17;
          r3 = 2829;
          break;
        }
      } while (0);
      do {
        if (r3 == 2829) {
          if ((r18 | 0) != (r19 | 0)) {
            break;
          }
          if ((FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 36 >> 2]](r13) | 0) == -1) {
            r3 = 2831;
            break;
          } else {
            break;
          }
        }
      } while (0);
      if (r3 == 2831) {
        HEAP32[r7] = 0;
      }
      r13 = r12 - 48 | 0;
      r17 = r5 - 1 | 0;
      r14 = HEAP32[r7];
      r15 = (r14 | 0) == 0 ^ r9;
      L3195 : do {
        if (r15 & (r17 | 0) > 0) {
          r16 = r13;
          r20 = r17;
          r21 = r14, r22 = r21 >> 2;
          while (1) {
            r23 = HEAP32[r22 + 3];
            if ((r23 | 0) == (HEAP32[r22 + 4] | 0)) {
              r24 = FUNCTION_TABLE[HEAP32[HEAP32[r22] + 36 >> 2]](r21);
            } else {
              r24 = HEAPU8[r23];
            }
            r23 = r24 << 24 >> 24;
            if (r23 >>> 0 >= 128) {
              r10 = r16;
              r3 = 2851;
              break;
            }
            if ((HEAP16[HEAP32[r11 >> 2] + (r23 << 1) >> 1] & 2048) << 16 >> 16 == 0) {
              r10 = r16;
              r3 = 2854;
              break;
            }
            r23 = (FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 36 >> 2]](r4, r24 & 255, 0) << 24 >> 24) + (r16 * 10 & -1) | 0;
            r25 = HEAP32[r7];
            r26 = (r25 + 12 | 0) >> 2;
            r27 = HEAP32[r26];
            r28 = r25 + 16 | 0;
            r29 = HEAP32[r28 >> 2];
            do {
              if ((r27 | 0) == (r29 | 0)) {
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 40 >> 2]](r25) | 0) == -1) {
                  r3 = 2844;
                  break;
                }
                r30 = HEAP32[r26];
                r31 = HEAP32[r28 >> 2];
                r3 = 2842;
                break;
              } else {
                r32 = r27 + 1 | 0;
                HEAP32[r26] = r32;
                r30 = r32;
                r31 = r29;
                r3 = 2842;
                break;
              }
            } while (0);
            do {
              if (r3 == 2842) {
                r3 = 0;
                if ((r30 | 0) != (r31 | 0)) {
                  break;
                }
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 36 >> 2]](r25) | 0) == -1) {
                  r3 = 2844;
                  break;
                } else {
                  break;
                }
              }
            } while (0);
            if (r3 == 2844) {
              r3 = 0;
              HEAP32[r7] = 0;
            }
            r25 = r23 - 48 | 0;
            r29 = r20 - 1 | 0;
            r26 = HEAP32[r7];
            r27 = (r26 | 0) == 0 ^ r9;
            if (r27 & (r29 | 0) > 0) {
              r16 = r25;
              r20 = r29;
              r21 = r26, r22 = r21 >> 2;
            } else {
              r33 = r25;
              r34 = r27;
              break L3195;
            }
          }
          if (r3 == 2854) {
            return r10;
          } else if (r3 == 2851) {
            return r10;
          }
        } else {
          r33 = r13;
          r34 = r15;
        }
      } while (0);
      if (r34) {
        r10 = r33;
        return r10;
      }
      HEAP32[r6] = HEAP32[r6] | 2;
      r10 = r33;
      return r10;
    }
  } while (0);
  HEAP32[r6] = HEAP32[r6] | 4;
  r10 = 0;
  return r10;
}
__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi["X"] = 1;
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev(r1) {
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv(r1) {
  return 2;
}
function ___cxx_global_var_init151069() {
  if (HEAP8[5274464] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318616] = 1;
  HEAP32[1318617] = 0;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  var r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54;
  r10 = r6 >> 2;
  r11 = 0;
  r12 = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  r13 = r12;
  r14 = r12 + 4;
  r15 = r12 + 8;
  r16 = r12 + 12;
  __ZNKSt3__18ios_base6getlocEv(r13, r5);
  r17 = HEAP32[r13 >> 2];
  r13 = __ZNKSt3__16locale9use_facetERNS0_2idE(r17, 5273660);
  r18 = r13;
  __ZNSt3__16localeD1Ev(r17);
  HEAP32[r10] = 0;
  L9 : do {
    if ((r8 | 0) == (r9 | 0)) {
      r19 = r3;
    } else {
      r17 = r13 >> 2;
      r20 = r13 >> 2;
      r21 = r13;
      r22 = r2;
      r23 = r15 | 0;
      r24 = r16 | 0;
      r25 = r14 | 0;
      r26 = (r4 | 0) == 0;
      r27 = r8, r28 = r27 >> 2;
      r29 = 0;
      r30 = r3;
      L11 : while (1) {
        r31 = (r30 | 0) == 0 ^ r26;
        r32 = (r30 + 12 | 0) >> 2;
        r33 = (r30 + 16 | 0) >> 2;
        r34 = r30 >> 2;
        r35 = r29;
        while (1) {
          if ((r35 | 0) != 0) {
            r19 = r30;
            break L9;
          }
          if (!r31) {
            r11 = 14;
            break L11;
          }
          if (FUNCTION_TABLE[HEAP32[HEAP32[r17] + 52 >> 2]](r18, HEAP32[r28], 0) << 24 >> 24 == 37) {
            r11 = 16;
            break;
          }
          if (FUNCTION_TABLE[HEAP32[HEAP32[r20] + 12 >> 2]](r18, 8192, HEAP32[r28])) {
            r36 = r27;
            r11 = 26;
            break;
          }
          r37 = HEAP32[r32];
          if ((r37 | 0) == (HEAP32[r33] | 0)) {
            r38 = FUNCTION_TABLE[HEAP32[HEAP32[r34] + 36 >> 2]](r30);
          } else {
            r38 = HEAP32[r37 >> 2];
          }
          if ((FUNCTION_TABLE[HEAP32[HEAP32[r21 >> 2] + 28 >> 2]](r18, r38) | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r21 >> 2] + 28 >> 2]](r18, HEAP32[r28]) | 0)) {
            r11 = 48;
            break;
          }
          HEAP32[r10] = 4;
          r35 = 4;
        }
        L24 : do {
          if (r11 == 16) {
            r11 = 0;
            r35 = r27 + 4 | 0;
            if ((r35 | 0) == (r9 | 0)) {
              r11 = 17;
              break L11;
            }
            r31 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 52 >> 2]](r18, HEAP32[r35 >> 2], 0);
            if (r31 << 24 >> 24 == 69 | r31 << 24 >> 24 == 48) {
              r37 = r27 + 8 | 0;
              if ((r37 | 0) == (r9 | 0)) {
                r11 = 20;
                break L11;
              }
              r39 = r31;
              r40 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 52 >> 2]](r18, HEAP32[r37 >> 2], 0);
              r41 = r37;
            } else {
              r39 = 0;
              r40 = r31;
              r41 = r35;
            }
            r35 = HEAP32[HEAP32[r22 >> 2] + 36 >> 2];
            HEAP32[r23 >> 2] = r30;
            HEAP32[r24 >> 2] = r4;
            FUNCTION_TABLE[r35](r14, r2, r15, r16, r5, r6, r7, r40, r39);
            r42 = r41 + 4 | 0;
            r43 = HEAP32[r25 >> 2];
          } else if (r11 == 26) {
            while (1) {
              r11 = 0;
              r35 = r36 + 4 | 0;
              if ((r35 | 0) == (r9 | 0)) {
                r44 = r9;
                break;
              }
              if (FUNCTION_TABLE[HEAP32[HEAP32[r20] + 12 >> 2]](r18, 8192, HEAP32[r35 >> 2])) {
                r36 = r35;
                r11 = 26;
              } else {
                r44 = r35;
                break;
              }
            }
            r35 = r30;
            while (1) {
              r31 = (r35 + 12 | 0) >> 2;
              r37 = (r35 + 16 | 0) >> 2;
              r45 = r35 >> 2;
              r46 = (r35 | 0) == 0 ^ r26;
              while (1) {
                r47 = HEAP32[r31];
                if ((r47 | 0) == (HEAP32[r37] | 0)) {
                  r48 = FUNCTION_TABLE[HEAP32[HEAP32[r45] + 36 >> 2]](r35);
                } else {
                  r48 = HEAP32[r47 >> 2];
                }
                if (!FUNCTION_TABLE[HEAP32[HEAP32[r20] + 12 >> 2]](r18, 8192, r48)) {
                  r42 = r44;
                  r43 = r35;
                  break L24;
                }
                r47 = HEAP32[r31];
                if ((r47 | 0) == (HEAP32[r37] | 0)) {
                  r49 = FUNCTION_TABLE[HEAP32[HEAP32[r45] + 40 >> 2]](r35);
                } else {
                  HEAP32[r31] = r47 + 4 | 0;
                  r49 = HEAP32[r47 >> 2];
                }
                if ((r49 | 0) == -1) {
                  break;
                }
                r47 = HEAP32[r31];
                if ((r47 | 0) == (HEAP32[r37] | 0)) {
                  r50 = FUNCTION_TABLE[HEAP32[HEAP32[r45] + 36 >> 2]](r35);
                } else {
                  r50 = HEAP32[r47 >> 2];
                }
                if ((r50 | 0) == -1) {
                  break;
                }
                if (!r46) {
                  r42 = r44;
                  r43 = r35;
                  break L24;
                }
              }
              if (r26) {
                r42 = r44;
                r43 = 0;
                break L24;
              } else {
                r35 = 0;
              }
            }
          } else if (r11 == 48) {
            r11 = 0;
            r35 = HEAP32[r32];
            if ((r35 | 0) == (HEAP32[r33] | 0)) {
              r51 = FUNCTION_TABLE[HEAP32[HEAP32[r34] + 40 >> 2]](r30);
            } else {
              HEAP32[r32] = r35 + 4 | 0;
              r51 = HEAP32[r35 >> 2];
            }
            do {
              if ((r51 | 0) == -1) {
                r11 = 56;
              } else {
                r35 = HEAP32[r32];
                if ((r35 | 0) == (HEAP32[r33] | 0)) {
                  r52 = FUNCTION_TABLE[HEAP32[HEAP32[r34] + 36 >> 2]](r30);
                } else {
                  r52 = HEAP32[r35 >> 2];
                }
                if ((r52 | 0) == -1) {
                  r11 = 56;
                  break;
                } else {
                  r53 = r30;
                  break;
                }
              }
            } while (0);
            if (r11 == 56) {
              r11 = 0;
              r53 = 0;
            }
            r42 = r27 + 4 | 0;
            r43 = r53;
          }
        } while (0);
        if ((r42 | 0) == (r9 | 0)) {
          r19 = r43;
          break L9;
        }
        r27 = r42, r28 = r27 >> 2;
        r29 = HEAP32[r10];
        r30 = r43;
      }
      if (r11 == 14) {
        HEAP32[r10] = 4;
        r19 = r30;
        break;
      } else if (r11 == 17) {
        HEAP32[r10] = 4;
        r19 = r30;
        break;
      } else if (r11 == 20) {
        HEAP32[r10] = 4;
        r19 = r30;
        break;
      }
    }
  } while (0);
  if ((r19 | 0) == 0 ^ (r4 | 0) == 0) {
    r54 = r1 | 0;
    HEAP32[r54 >> 2] = r19;
    STACKTOP = r12;
    return;
  }
  HEAP32[r10] = HEAP32[r10] | 2;
  r54 = r1 | 0;
  HEAP32[r54 >> 2] = r19;
  STACKTOP = r12;
  return;
}
__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_["X"] = 1;
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9;
  r8 = STACKTOP;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r1, r2, HEAP32[r3 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264380, 5264412);
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r10 = HEAP32[r9 >> 2];
  __ZNKSt3__16locale9use_facetERNS0_2idE(r10, 5273660);
  __ZNSt3__16localeD1Ev(r10);
  r10 = r2 + 8 | 0;
  r9 = FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 20 >> 2]](r10);
  r10 = HEAP8[r9];
  if ((r10 & 1) << 24 >> 24 == 0) {
    r11 = r9 + 4 | 0;
  } else {
    r11 = HEAP32[r9 + 8 >> 2];
  }
  r12 = r10 & 255;
  if ((r12 & 1 | 0) == 0) {
    r13 = r12 >>> 1;
  } else {
    r13 = HEAP32[r9 + 4 >> 2];
  }
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r1, r2, HEAP32[r3 >> 2], HEAP32[r4 >> 2], r5, r6, r7, r11, (r13 << 2) + r11 | 0);
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r5 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273660);
  __ZNSt3__16localeD1Ev(r5);
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(r2, r7 + 24 | 0, r3, HEAP32[r4 >> 2], r6, r9);
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5, r6) {
  var r7;
  r7 = r1 + 8 | 0;
  r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] >> 2]](r7);
  r7 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, r4, r1, r1 + 168 | 0, r6, r5, 0) - r1 | 0;
  if ((r7 | 0) >= 168) {
    return;
  }
  HEAP32[r2 >> 2] = ((r7 | 0) / 12 & -1 | 0) % 7;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r5 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273660);
  __ZNSt3__16localeD1Ev(r5);
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(r2, r7 + 16 | 0, r3, HEAP32[r4 >> 2], r6, r9);
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r8;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5, r6) {
  var r7;
  r7 = r1 + 8 | 0;
  r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 4 >> 2]](r7);
  r7 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, r4, r1, r1 + 288 | 0, r6, r5, 0) - r1 | 0;
  if ((r7 | 0) >= 288) {
    return;
  }
  HEAP32[r2 >> 2] = ((r7 | 0) / 12 & -1 | 0) % 12;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(r1, r2, r3, r4, r5, r6, r7) {
  var r8;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r8 >> 2];
  r8 = r2;
  __ZNKSt3__18ios_base6getlocEv(r8, r5);
  r5 = HEAP32[r8 >> 2];
  r8 = __ZNKSt3__16locale9use_facetERNS0_2idE(r5, 5273660);
  __ZNSt3__16localeD1Ev(r5);
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 20 | 0, r3, HEAP32[r4 >> 2], r6, r8);
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r2;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6, r7;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 4);
  if ((HEAP32[r4 >> 2] & 4 | 0) != 0) {
    return;
  }
  if ((r6 | 0) < 69) {
    r7 = r6 + 2e3 | 0;
  } else {
    r7 = (r6 - 69 | 0) >>> 0 < 31 ? r6 + 1900 | 0 : r6;
  }
  HEAP32[r1 >> 2] = r7 - 1900 | 0;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(r1, r2, r3, r4, r5, r6, r7, r8, r9) {
  var r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24;
  r9 = STACKTOP;
  STACKTOP = STACKTOP + 40 | 0;
  r10 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r10 >> 2];
  r10 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r10 >> 2];
  r10 = r9;
  r11 = r9 + 4;
  r12 = r9 + 8;
  r13 = r9 + 12;
  r14 = r9 + 16;
  r15 = r9 + 20;
  r16 = r9 + 24;
  r17 = r9 + 28;
  r18 = r9 + 32;
  r19 = r9 + 36;
  HEAP32[r6 >> 2] = 0;
  __ZNKSt3__18ios_base6getlocEv(r10, r5);
  r20 = HEAP32[r10 >> 2];
  r10 = __ZNKSt3__16locale9use_facetERNS0_2idE(r20, 5273660);
  __ZNSt3__16localeD1Ev(r20);
  r20 = r8 << 24 >> 24;
  if ((r20 | 0) == 109) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 16 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 77) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 4 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 110 | (r20 | 0) == 116) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 112) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(r2, r7 + 8 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 114) {
    r8 = r3 | 0;
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r14, r2, HEAP32[r8 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264272, 5264316);
    HEAP32[r8 >> 2] = HEAP32[r14 >> 2];
  } else if ((r20 | 0) == 82) {
    r14 = r3 | 0;
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r15, r2, HEAP32[r14 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264252, 5264272);
    HEAP32[r14 >> 2] = HEAP32[r15 >> 2];
  } else if ((r20 | 0) == 83) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(r7 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 84) {
    r15 = r3 | 0;
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r16, r2, HEAP32[r15 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264220, 5264252);
    HEAP32[r15 >> 2] = HEAP32[r16 >> 2];
  } else if ((r20 | 0) == 119) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 24 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 120) {
    r16 = HEAP32[HEAP32[r2 >> 2] + 20 >> 2];
    HEAP32[r17 >> 2] = HEAP32[r3 >> 2];
    HEAP32[r18 >> 2] = HEAP32[r4 >> 2];
    FUNCTION_TABLE[r16](r1, r2, r17, r18, r5, r6, r7);
    STACKTOP = r9;
    return;
  } else if ((r20 | 0) == 88) {
    r18 = r2 + 8 | 0;
    r17 = FUNCTION_TABLE[HEAP32[HEAP32[r18 >> 2] + 24 >> 2]](r18);
    r18 = r3 | 0;
    r16 = HEAP8[r17];
    if ((r16 & 1) << 24 >> 24 == 0) {
      r21 = r17 + 4 | 0;
    } else {
      r21 = HEAP32[r17 + 8 >> 2];
    }
    r15 = r16 & 255;
    if ((r15 & 1 | 0) == 0) {
      r22 = r15 >>> 1;
    } else {
      r22 = HEAP32[r17 + 4 >> 2];
    }
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r19, r2, HEAP32[r18 >> 2], HEAP32[r4 >> 2], r5, r6, r7, r21, (r22 << 2) + r21 | 0);
    HEAP32[r18 >> 2] = HEAP32[r19 >> 2];
  } else if ((r20 | 0) == 121) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 20 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 89) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 20 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 37) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 73) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 8 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 70) {
    r19 = r3 | 0;
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r13, r2, HEAP32[r19 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264316, 5264348);
    HEAP32[r19 >> 2] = HEAP32[r13 >> 2];
  } else if ((r20 | 0) == 72) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 8 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 106) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 28 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 97 | (r20 | 0) == 65) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(r2, r7 + 24 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 98 | (r20 | 0) == 66 | (r20 | 0) == 104) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(r2, r7 + 16 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 99) {
    r13 = r2 + 8 | 0;
    r19 = FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 12 >> 2]](r13);
    r13 = r3 | 0;
    r18 = HEAP8[r19];
    if ((r18 & 1) << 24 >> 24 == 0) {
      r23 = r19 + 4 | 0;
    } else {
      r23 = HEAP32[r19 + 8 >> 2];
    }
    r21 = r18 & 255;
    if ((r21 & 1 | 0) == 0) {
      r24 = r21 >>> 1;
    } else {
      r24 = HEAP32[r19 + 4 >> 2];
    }
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r11, r2, HEAP32[r13 >> 2], HEAP32[r4 >> 2], r5, r6, r7, r23, (r24 << 2) + r23 | 0);
    HEAP32[r13 >> 2] = HEAP32[r11 >> 2];
  } else if ((r20 | 0) == 100 | (r20 | 0) == 101) {
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(r7 + 12 | 0, r3, HEAP32[r4 >> 2], r6, r10);
  } else if ((r20 | 0) == 68) {
    r20 = r3 | 0;
    __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(r12, r2, HEAP32[r20 >> 2], HEAP32[r4 >> 2], r5, r6, r7, 5264348, 5264380);
    HEAP32[r20 >> 2] = HEAP32[r12 >> 2];
  } else {
    HEAP32[r6 >> 2] = HEAP32[r6 >> 2] | 4;
  }
  HEAP32[r1 >> 2] = HEAP32[r3 >> 2];
  STACKTOP = r9;
  return;
}
__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc["X"] = 1;
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 & 4 | 0) == 0) {
      if ((r6 - 1 | 0) >>> 0 >= 31) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      return;
    }
  } while (0);
  HEAP32[r4 >> 2] = r5 | 4;
  return;
}
function ___cxx_global_var_init20() {
  if (HEAP8[5274456] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318614] = 1;
  HEAP32[1318615] = 0;
  return;
}
function ___cxx_global_var_init21() {
  if (HEAP8[5274448] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318612] = 1;
  HEAP32[1318613] = 0;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 24) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  do {
    if ((r5 & 4 | 0) == 0) {
      if ((r6 - 1 | 0) >>> 0 >= 12) {
        break;
      }
      HEAP32[r1 >> 2] = r6;
      return;
    }
  } while (0);
  HEAP32[r4 >> 2] = r5 | 4;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 3);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 366) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2) - 1 | 0;
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 12) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 60) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r5 = 0;
  r6 = (r1 | 0) >> 2;
  r1 = HEAP32[r6];
  r7 = (r2 | 0) == 0;
  L212 : do {
    if ((r1 | 0) == 0 ^ r7) {
      r2 = r4;
      r8 = r1, r9 = r8 >> 2;
      L214 : while (1) {
        r10 = HEAP32[r9 + 3];
        if ((r10 | 0) == (HEAP32[r9 + 4] | 0)) {
          r11 = FUNCTION_TABLE[HEAP32[HEAP32[r9] + 36 >> 2]](r8);
        } else {
          r11 = HEAP32[r10 >> 2];
        }
        r10 = FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 12 >> 2]](r4, 8192, r11);
        r12 = HEAP32[r6];
        if (!r10) {
          r13 = r12;
          r5 = 210;
          break L212;
        }
        r10 = (r12 + 12 | 0) >> 2;
        r14 = HEAP32[r10];
        r15 = r12 + 16 | 0;
        if ((r14 | 0) == (HEAP32[r15 >> 2] | 0)) {
          r16 = FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 40 >> 2]](r12);
        } else {
          HEAP32[r10] = r14 + 4 | 0;
          r16 = HEAP32[r14 >> 2];
        }
        do {
          if ((r16 | 0) != -1) {
            r14 = HEAP32[r10];
            if ((r14 | 0) == (HEAP32[r15 >> 2] | 0)) {
              r17 = FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 36 >> 2]](r12);
            } else {
              r17 = HEAP32[r14 >> 2];
            }
            if ((r17 | 0) == -1) {
              break;
            }
            r14 = HEAP32[r6];
            if ((r14 | 0) == 0 ^ r7) {
              r8 = r14, r9 = r8 >> 2;
              continue L214;
            } else {
              r13 = r14;
              r5 = 210;
              break L212;
            }
          }
        } while (0);
        HEAP32[r6] = 0;
        if (r7) {
          break L212;
        } else {
          r8 = 0, r9 = r8 >> 2;
        }
      }
    } else {
      r13 = r1;
      r5 = 210;
    }
  } while (0);
  do {
    if (r5 == 210) {
      if (!((r13 | 0) == 0 ^ r7)) {
        break;
      }
      return;
    }
  } while (0);
  HEAP32[r3 >> 2] = HEAP32[r3 >> 2] | 2;
  return;
}
__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE["X"] = 1;
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9;
  r7 = r1 + 8 | 0;
  r1 = FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 8 >> 2]](r7);
  r7 = HEAPU8[r1];
  if ((r7 & 1 | 0) == 0) {
    r8 = r7 >>> 1;
  } else {
    r8 = HEAP32[r1 + 4 >> 2];
  }
  r7 = HEAPU8[r1 + 12 | 0];
  if ((r7 & 1 | 0) == 0) {
    r9 = r7 >>> 1;
  } else {
    r9 = HEAP32[r1 + 16 >> 2];
  }
  if ((r8 | 0) == (-r9 | 0)) {
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] | 4;
    return;
  }
  r9 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(r3, r4, r1, r1 + 24 | 0, r6, r5, 0);
  r5 = r9 - r1 | 0;
  do {
    if ((r9 | 0) == (r1 | 0)) {
      if ((HEAP32[r2 >> 2] | 0) != 12) {
        break;
      }
      HEAP32[r2 >> 2] = 0;
      return;
    }
  } while (0);
  if ((r5 | 0) != 12) {
    return;
  }
  r5 = HEAP32[r2 >> 2];
  if ((r5 | 0) >= 12) {
    return;
  }
  HEAP32[r2 >> 2] = r5 + 12 | 0;
  return;
}
__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE["X"] = 1;
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 2);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 61) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 1);
  r5 = HEAP32[r4 >> 2];
  if ((r5 & 4 | 0) == 0 & (r6 | 0) < 7) {
    HEAP32[r1 >> 2] = r6;
    return;
  } else {
    HEAP32[r4 >> 2] = r5 | 4;
    return;
  }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4, r5) {
  var r6;
  r6 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r2, r3, r4, r5, 4);
  if ((HEAP32[r4 >> 2] & 4 | 0) != 0) {
    return;
  }
  HEAP32[r1 >> 2] = r6 - 1900 | 0;
  return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(r1, r2, r3, r4) {
  var r5, r6, r7, r8, r9, r10, r11;
  r5 = r3 >> 2;
  r3 = 0;
  r6 = (r1 | 0) >> 2;
  r1 = HEAP32[r6], r7 = r1 >> 2;
  r8 = (r2 | 0) == 0;
  if (!((r1 | 0) == 0 ^ r8)) {
    HEAP32[r5] = HEAP32[r5] | 6;
    return;
  }
  r2 = HEAP32[r7 + 3];
  if ((r2 | 0) == (HEAP32[r7 + 4] | 0)) {
    r9 = FUNCTION_TABLE[HEAP32[HEAP32[r7] + 36 >> 2]](r1);
  } else {
    r9 = HEAP32[r2 >> 2];
  }
  if (FUNCTION_TABLE[HEAP32[HEAP32[r4 >> 2] + 52 >> 2]](r4, r9, 0) << 24 >> 24 != 37) {
    HEAP32[r5] = HEAP32[r5] | 4;
    return;
  }
  r9 = HEAP32[r6];
  r4 = (r9 + 12 | 0) >> 2;
  r2 = HEAP32[r4];
  r1 = r9 + 16 | 0;
  if ((r2 | 0) == (HEAP32[r1 >> 2] | 0)) {
    r10 = FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 40 >> 2]](r9);
  } else {
    HEAP32[r4] = r2 + 4 | 0;
    r10 = HEAP32[r2 >> 2];
  }
  do {
    if ((r10 | 0) == -1) {
      r3 = 267;
    } else {
      r2 = HEAP32[r4];
      if ((r2 | 0) == (HEAP32[r1 >> 2] | 0)) {
        r11 = FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 36 >> 2]](r9);
      } else {
        r11 = HEAP32[r2 >> 2];
      }
      if ((r11 | 0) == -1) {
        r3 = 267;
        break;
      }
      if (!((HEAP32[r6] | 0) == 0 ^ r8)) {
        break;
      }
      return;
    }
  } while (0);
  do {
    if (r3 == 267) {
      HEAP32[r6] = 0;
      if (r8) {
        break;
      }
      return;
    }
  } while (0);
  HEAP32[r5] = HEAP32[r5] | 2;
  return;
}
__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE["X"] = 1;
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27;
  r6 = r3 >> 2;
  r3 = 0;
  r7 = (r1 | 0) >> 2;
  r1 = HEAP32[r7], r8 = r1 >> 2;
  r9 = (r2 | 0) == 0;
  if (!((r1 | 0) == 0 ^ r9)) {
    HEAP32[r6] = HEAP32[r6] | 6;
    r10 = 0;
    return r10;
  }
  r2 = HEAP32[r8 + 3];
  if ((r2 | 0) == (HEAP32[r8 + 4] | 0)) {
    r11 = FUNCTION_TABLE[HEAP32[HEAP32[r8] + 36 >> 2]](r1);
  } else {
    r11 = HEAP32[r2 >> 2];
  }
  r2 = r4;
  if (!FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 12 >> 2]](r4, 2048, r11)) {
    HEAP32[r6] = HEAP32[r6] | 4;
    r10 = 0;
    return r10;
  }
  r1 = r4;
  r8 = FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 52 >> 2]](r4, r11, 0) << 24 >> 24;
  r11 = HEAP32[r7];
  r12 = (r11 + 12 | 0) >> 2;
  r13 = HEAP32[r12];
  r14 = r11 + 16 | 0;
  if ((r13 | 0) == (HEAP32[r14 >> 2] | 0)) {
    r15 = FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 40 >> 2]](r11);
  } else {
    HEAP32[r12] = r13 + 4 | 0;
    r15 = HEAP32[r13 >> 2];
  }
  do {
    if ((r15 | 0) == -1) {
      r3 = 292;
    } else {
      r13 = HEAP32[r12];
      if ((r13 | 0) == (HEAP32[r14 >> 2] | 0)) {
        r16 = FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 36 >> 2]](r11);
      } else {
        r16 = HEAP32[r13 >> 2];
      }
      if ((r16 | 0) == -1) {
        r3 = 292;
        break;
      }
      r17 = HEAP32[r7];
      break;
    }
  } while (0);
  if (r3 == 292) {
    HEAP32[r7] = 0;
    r17 = 0;
  }
  r16 = r8 - 48 | 0;
  r8 = r5 - 1 | 0;
  r5 = (r17 | 0) == 0 ^ r9;
  L337 : do {
    if (r5 & (r8 | 0) > 0) {
      r11 = r16;
      r14 = r8;
      r12 = r17, r15 = r12 >> 2;
      while (1) {
        r13 = HEAP32[r15 + 3];
        if ((r13 | 0) == (HEAP32[r15 + 4] | 0)) {
          r18 = FUNCTION_TABLE[HEAP32[HEAP32[r15] + 36 >> 2]](r12);
        } else {
          r18 = HEAP32[r13 >> 2];
        }
        if (!FUNCTION_TABLE[HEAP32[HEAP32[r2 >> 2] + 12 >> 2]](r4, 2048, r18)) {
          r10 = r11;
          break;
        }
        r13 = (FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 52 >> 2]](r4, r18, 0) << 24 >> 24) + (r11 * 10 & -1) | 0;
        r19 = HEAP32[r7];
        r20 = (r19 + 12 | 0) >> 2;
        r21 = HEAP32[r20];
        r22 = r19 + 16 | 0;
        if ((r21 | 0) == (HEAP32[r22 >> 2] | 0)) {
          r23 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 40 >> 2]](r19);
        } else {
          HEAP32[r20] = r21 + 4 | 0;
          r23 = HEAP32[r21 >> 2];
        }
        do {
          if ((r23 | 0) == -1) {
            r3 = 307;
          } else {
            r21 = HEAP32[r20];
            if ((r21 | 0) == (HEAP32[r22 >> 2] | 0)) {
              r24 = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 36 >> 2]](r19);
            } else {
              r24 = HEAP32[r21 >> 2];
            }
            if ((r24 | 0) == -1) {
              r3 = 307;
              break;
            }
            r25 = HEAP32[r7];
            break;
          }
        } while (0);
        if (r3 == 307) {
          r3 = 0;
          HEAP32[r7] = 0;
          r25 = 0;
        }
        r19 = r13 - 48 | 0;
        r22 = r14 - 1 | 0;
        r20 = (r25 | 0) == 0 ^ r9;
        if (r20 & (r22 | 0) > 0) {
          r11 = r19;
          r14 = r22;
          r12 = r25, r15 = r12 >> 2;
        } else {
          r26 = r19;
          r27 = r20;
          break L337;
        }
      }
      return r10;
    } else {
      r26 = r16;
      r27 = r5;
    }
  } while (0);
  if (r27) {
    r10 = r26;
    return r10;
  }
  HEAP32[r6] = HEAP32[r6] | 2;
  r10 = r26;
  return r10;
}
__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi["X"] = 1;
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(r1) {
  __ZNSt3__110__time_putD2Ev(HEAP32[r1 + 8 >> 2]);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev(r1) {
  __ZNSt3__110__time_putD2Ev(HEAP32[r1 + 8 >> 2]);
  return;
}
function __ZNSt3__110__time_putD2Ev(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  _freelocale(r1);
  return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 104 | 0;
  r4 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r4 >> 2];
  r4 = r5;
  r9 = r5 + 100;
  r10 = r4 | 0;
  HEAP32[r9 >> 2] = r4 + 100 | 0;
  __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(r2 + 8 | 0, r10, r9, r6, r7, r8);
  r8 = HEAP32[r9 >> 2];
  r9 = HEAP32[r3 >> 2];
  if ((r10 | 0) == (r8 | 0)) {
    r11 = r9;
    r12 = r1 | 0;
    HEAP32[r12 >> 2] = r11;
    STACKTOP = r5;
    return;
  } else {
    r13 = r9;
    r14 = r10;
  }
  while (1) {
    r10 = HEAP8[r14];
    if ((r13 | 0) == 0) {
      r15 = 0;
    } else {
      r9 = r13 + 24 | 0;
      r3 = HEAP32[r9 >> 2];
      if ((r3 | 0) == (HEAP32[r13 + 28 >> 2] | 0)) {
        r16 = FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 52 >> 2]](r13, r10 & 255);
      } else {
        HEAP32[r9 >> 2] = r3 + 1 | 0;
        HEAP8[r3] = r10;
        r16 = r10 & 255;
      }
      r15 = (r16 | 0) == -1 ? 0 : r13;
    }
    r10 = r14 + 1 | 0;
    if ((r10 | 0) == (r8 | 0)) {
      r11 = r15;
      break;
    } else {
      r13 = r15;
      r14 = r10;
    }
  }
  r12 = r1 | 0;
  HEAP32[r12 >> 2] = r11;
  STACKTOP = r5;
  return;
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r8 = r7;
  r9 = r8 | 0;
  HEAP8[r9] = 37;
  r10 = r8 + 1 | 0;
  HEAP8[r10] = r5;
  r11 = r8 + 2 | 0;
  HEAP8[r11] = r6;
  HEAP8[r8 + 3 | 0] = 0;
  if (r6 << 24 >> 24 != 0) {
    HEAP8[r10] = r6;
    HEAP8[r11] = r5;
  }
  HEAP32[r3 >> 2] = r2 + _strftime(r2, HEAP32[r3 >> 2] - r2 | 0, r9, r4, HEAP32[r1 >> 2]) | 0;
  STACKTOP = r7;
  return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(r1) {
  __ZNSt3__110__time_putD2Ev(HEAP32[r1 + 8 >> 2]);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev(r1) {
  __ZNSt3__110__time_putD2Ev(HEAP32[r1 + 8 >> 2]);
  return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16;
  r5 = STACKTOP;
  STACKTOP = STACKTOP + 404 | 0;
  r4 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r4 >> 2];
  r4 = r5;
  r9 = r5 + 400;
  r10 = r4 | 0;
  HEAP32[r9 >> 2] = r4 + 400 | 0;
  __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc(r2 + 8 | 0, r10, r9, r6, r7, r8);
  r8 = HEAP32[r9 >> 2];
  r9 = HEAP32[r3 >> 2];
  if ((r10 | 0) == (r8 | 0)) {
    r11 = r9;
    r12 = r1 | 0;
    HEAP32[r12 >> 2] = r11;
    STACKTOP = r5;
    return;
  } else {
    r13 = r9;
    r14 = r10;
  }
  while (1) {
    r10 = HEAP32[r14 >> 2];
    if ((r13 | 0) == 0) {
      r15 = 0;
    } else {
      r9 = r13 + 24 | 0;
      r3 = HEAP32[r9 >> 2];
      if ((r3 | 0) == (HEAP32[r13 + 28 >> 2] | 0)) {
        r16 = FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 52 >> 2]](r13, r10);
      } else {
        HEAP32[r9 >> 2] = r3 + 4 | 0;
        HEAP32[r3 >> 2] = r10;
        r16 = r10;
      }
      r15 = (r16 | 0) == -1 ? 0 : r13;
    }
    r10 = r14 + 4 | 0;
    if ((r10 | 0) == (r8 | 0)) {
      r11 = r15;
      break;
    } else {
      r13 = r15;
      r14 = r10;
    }
  }
  r12 = r1 | 0;
  HEAP32[r12 >> 2] = r11;
  STACKTOP = r5;
  return;
}
function __ZNSt3__110moneypunctIcLb0EED1Ev(r1) {
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv(r1) {
  return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv(r1) {
  return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv(r1) {
  return 0;
}
function __ZNSt3__110moneypunctIcLb1EED1Ev(r1) {
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv(r1) {
  return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv(r1) {
  return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv(r1) {
  return 0;
}
function __ZNSt3__110moneypunctIwLb0EED1Ev(r1) {
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv(r1) {
  return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv(r1) {
  return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv(r1) {
  return 0;
}
function __ZNSt3__110moneypunctIwLb1EED1Ev(r1) {
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv(r1) {
  return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv(r1) {
  return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv(r1) {
  return 0;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev(r1) {
  return;
}
function __ZNSt3__112__do_nothingEPv(r1) {
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv(r1, r2) {
  r2 = r1;
  tempBigInt = 67109634;
  HEAP8[r2] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[r2 + 3 | 0] = tempBigInt & 255;
  return;
}
function ___cxx_global_var_init22() {
  if (HEAP8[5274568] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318642] = 1;
  HEAP32[1318643] = 0;
  return;
}
function ___cxx_global_var_init23() {
  if (HEAP8[5274560] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318640] = 1;
  HEAP32[1318641] = 0;
  return;
}
function ___cxx_global_var_init24() {
  if (HEAP8[5274552] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318638] = 1;
  HEAP32[1318639] = 0;
  return;
}
function ___cxx_global_var_init25() {
  if (HEAP8[5274544] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318636] = 1;
  HEAP32[1318637] = 0;
  return;
}
function ___cxx_global_var_init261070() {
  if (HEAP8[5274440] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318610] = 1;
  HEAP32[1318611] = 0;
  return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(r1, 1, 45);
  return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(r1, 1, 45);
  return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv(r1, r2) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(r1, 1, 45);
  return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv(r1, r2) {
  r2 = r1 >> 2;
  HEAP32[r2] = 0;
  HEAP32[r2 + 1] = 0;
  HEAP32[r2 + 2] = 0;
  return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv(r1, r2) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(r1, 1, 45);
  return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 116 | 0;
  r8 = r7;
  r9 = r7 + 100;
  r10 = r7 + 104;
  r11 = r7 + 112;
  r12 = r8 | 0;
  HEAP32[r9 >> 2] = r8 + 100 | 0;
  __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(r1, r12, r9, r4, r5, r6);
  r6 = r10;
  HEAP32[r6 >> 2] = 0;
  HEAP32[r6 + 4 >> 2] = 0;
  HEAP32[r11 >> 2] = r12;
  r12 = _uselocale(HEAP32[r1 >> 2]);
  r1 = _mbsrtowcs(r2, r11, 100, r10);
  if ((r12 | 0) != 0) {
    _uselocale(r12);
  }
  if ((r1 | 0) == -1) {
    __ZNSt3__121__throw_runtime_errorEPKc(5244792);
  } else {
    HEAP32[r3 >> 2] = (r1 << 2) + r2 | 0;
    STACKTOP = r7;
    return;
  }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 232 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r2;
  r10 = r2 + 100;
  r11 = r2 + 108;
  r12 = r2 + 112;
  r13 = r2 + 116;
  r14 = r2 + 120;
  r15 = (r10 | 0) >> 2;
  HEAP32[r15] = r9 | 0;
  r16 = r10 + 4 | 0;
  HEAP32[r16 >> 2] = 534;
  __ZNKSt3__18ios_base6getlocEv(r12, r6);
  r17 = r12 | 0;
  r18 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r17 >> 2], 5273668);
  r19 = r18;
  HEAP8[r13] = 0;
  r20 = r4 | 0;
  do {
    if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(r3, HEAP32[r20 >> 2], r5, r12, HEAP32[r6 + 4 >> 2], r7, r13, r19, r10, r11, r9 + 100 | 0)) {
      r4 = r14 | 0;
      FUNCTION_TABLE[HEAP32[HEAP32[r18 >> 2] + 32 >> 2]](r19, 5264208, 5264218, r4);
      r21 = r2 + 132 | 0;
      r22 = HEAP32[r11 >> 2];
      r23 = HEAP32[r15];
      r24 = r22 - r23 | 0;
      do {
        if (r24 >>> 0 > 98) {
          r25 = _malloc(r24 + 2 | 0);
          if ((r25 | 0) != 0) {
            r26 = r25;
            r27 = r25;
            break;
          }
          __ZSt17__throw_bad_allocv();
          r26 = 0;
          r27 = 0;
        } else {
          r26 = r21;
          r27 = 0;
        }
      } while (0);
      if ((HEAP8[r13] & 1) << 24 >> 24 == 0) {
        r28 = r26;
      } else {
        HEAP8[r26] = 45;
        r28 = r26 + 1 | 0;
      }
      L499 : do {
        if (r23 >>> 0 < r22 >>> 0) {
          r24 = r14 + 10 | 0;
          r25 = r14;
          r29 = r28;
          r30 = r23;
          while (1) {
            r31 = r4;
            while (1) {
              if ((r31 | 0) == (r24 | 0)) {
                r32 = r24;
                break;
              }
              if (HEAP8[r31] << 24 >> 24 == HEAP8[r30] << 24 >> 24) {
                r32 = r31;
                break;
              } else {
                r31 = r31 + 1 | 0;
              }
            }
            HEAP8[r29] = HEAP8[r32 - r25 + 5264208 | 0];
            r31 = r30 + 1 | 0;
            r33 = r29 + 1 | 0;
            if (r31 >>> 0 < HEAP32[r11 >> 2] >>> 0) {
              r29 = r33;
              r30 = r31;
            } else {
              r34 = r33;
              break L499;
            }
          }
        } else {
          r34 = r28;
        }
      } while (0);
      HEAP8[r34] = 0;
      if ((_sscanf(r21, 5248640, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r8, tempInt)) | 0) != 1) {
        __ZNSt3__121__throw_runtime_errorEPKc(5248516);
      }
      if ((r27 | 0) == 0) {
        break;
      }
      _free(r27);
    }
  } while (0);
  r27 = HEAP32[r3 >> 2];
  if (!((r27 | 0) == 0 ^ (HEAP32[r20 >> 2] | 0) == 0)) {
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] | 2;
  }
  HEAP32[r1 >> 2] = r27;
  __ZNSt3__16localeD1Ev(HEAP32[r17 >> 2]);
  r17 = HEAP32[r15];
  HEAP32[r15] = 0;
  if ((r17 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  FUNCTION_TABLE[HEAP32[r16 >> 2]](r17);
  STACKTOP = r2;
  return;
}
__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe["X"] = 1;
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11) {
  var r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119;
  r12 = r10 >> 2;
  r13 = r6 >> 2;
  r6 = 0;
  r14 = STACKTOP;
  STACKTOP = STACKTOP + 444 | 0;
  r15 = r14, r16 = r15 >> 2;
  r17 = r14 + 4;
  r18 = r14 + 404;
  r19 = r14 + 412, r20 = r19 >> 2;
  r21 = r14 + 416, r22 = r21 >> 2;
  r23 = r14 + 420;
  r24 = r14 + 424;
  r25 = r14 + 428;
  r26 = r14 + 432;
  r27 = r26, r28 = r27 >> 2;
  r29 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r30 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r31 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r32 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r33 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r34 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r16] = r11;
  r11 = r17 | 0;
  r35 = (r18 | 0) >> 2;
  HEAP32[r35] = r11;
  r36 = r18 + 4 | 0;
  HEAP32[r36 >> 2] = 534;
  HEAP32[r20] = r11;
  HEAP32[r22] = r17 + 400 | 0;
  HEAP32[r28] = 0;
  HEAP32[r28 + 1] = 0;
  HEAP32[r28 + 2] = 0;
  r28 = r29 >> 2;
  r17 = r30, r37 = r17 >> 2;
  r38 = r31, r39 = r38 >> 2;
  HEAP32[r28] = 0;
  HEAP32[r28 + 1] = 0;
  HEAP32[r28 + 2] = 0;
  HEAP32[r37] = 0;
  HEAP32[r37 + 1] = 0;
  HEAP32[r37 + 2] = 0;
  HEAP32[r39] = 0;
  HEAP32[r39 + 1] = 0;
  HEAP32[r39 + 2] = 0;
  __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(r3, r4, r23, r24, r25, r26, r29, r30, r31, r32);
  r4 = r9 | 0;
  HEAP32[r12] = HEAP32[r4 >> 2];
  r3 = (r1 | 0) >> 2;
  r39 = (r2 | 0) == 0;
  r37 = (r8 + 8 | 0) >> 2;
  r8 = r31 + 1 | 0;
  r28 = (r31 + 4 | 0) >> 2;
  r40 = r31 + 8 | 0;
  r41 = r30 + 1 | 0;
  r42 = (r30 + 4 | 0) >> 2;
  r43 = r30 + 8 | 0;
  r44 = (r5 & 512 | 0) != 0;
  r5 = r29 + 12 | 0;
  r45 = HEAP8[r23 + 3 | 0] << 24 >> 24 != 0;
  r46 = HEAP8[r24] << 24 >> 24;
  r24 = HEAP8[r25] << 24 >> 24;
  r25 = r26 + 4 | 0;
  r47 = r44 ^ 1;
  r48 = 0;
  r49 = 0;
  r50 = r11;
  L522 : while (1) {
    r11 = HEAP32[r3], r51 = r11 >> 2;
    if (!((r11 | 0) == 0 ^ r39)) {
      r52 = r48;
      r53 = r50;
      r6 = 646;
      break;
    }
    r54 = HEAP8[r23 + r49 | 0] << 24 >> 24;
    do {
      if ((r54 | 0) == 0) {
        r6 = 491;
      } else if ((r54 | 0) == 1) {
        if ((r49 | 0) == 3) {
          r52 = r48;
          r53 = r50;
          r6 = 646;
          break L522;
        }
        r55 = HEAP32[r51 + 3];
        if ((r55 | 0) == (HEAP32[r51 + 4] | 0)) {
          r56 = FUNCTION_TABLE[HEAP32[HEAP32[r51] + 36 >> 2]](r11);
        } else {
          r56 = HEAPU8[r55];
        }
        r55 = r56 << 24 >> 24;
        if (r55 >>> 0 >= 128) {
          r6 = 490;
          break L522;
        }
        if ((HEAP16[HEAP32[r37] + (r55 << 1) >> 1] & 8192) << 16 >> 16 == 0) {
          r6 = 490;
          break L522;
        }
        r55 = HEAP32[r3];
        r57 = (r55 + 12 | 0) >> 2;
        r58 = HEAP32[r57];
        r59 = r55 + 16 | 0;
        r60 = HEAP32[r59 >> 2];
        do {
          if ((r58 | 0) == (r60 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r55 >> 2] + 40 >> 2]](r55) | 0) == -1) {
              break;
            }
            r61 = HEAP32[r57];
            r62 = HEAP32[r59 >> 2];
            r6 = 486;
            break;
          } else {
            r63 = r58 + 1 | 0;
            HEAP32[r57] = r63;
            r61 = r63;
            r62 = r60;
            r6 = 486;
            break;
          }
        } while (0);
        if (r6 == 486) {
          r6 = 0;
          if ((r61 | 0) != (r62 | 0)) {
            r6 = 491;
            break;
          }
          if ((FUNCTION_TABLE[HEAP32[HEAP32[r55 >> 2] + 36 >> 2]](r55) | 0) != -1) {
            r6 = 491;
            break;
          }
        }
        HEAP32[r3] = 0;
        r6 = 491;
        break;
      } else if ((r54 | 0) == 3) {
        r60 = HEAP8[r17];
        r57 = r60 & 255;
        r58 = (r57 & 1 | 0) == 0 ? r57 >>> 1 : HEAP32[r42];
        r57 = HEAP8[r38];
        r59 = r57 & 255;
        r63 = (r59 & 1 | 0) == 0 ? r59 >>> 1 : HEAP32[r28];
        if ((r58 | 0) == (-r63 | 0)) {
          r64 = r48;
          r65 = r50;
          break;
        }
        if ((r58 | 0) == 0) {
          r58 = HEAP32[r51 + 3];
          if ((r58 | 0) == (HEAP32[r51 + 4] | 0)) {
            r66 = FUNCTION_TABLE[HEAP32[HEAP32[r51] + 36 >> 2]](r11);
            r67 = HEAP8[r38];
          } else {
            r66 = HEAPU8[r58];
            r67 = r57;
          }
          if ((r66 << 24 >> 24 | 0) != (HEAP8[(r67 & 1) << 24 >> 24 == 0 ? r8 : HEAP32[r40 >> 2]] << 24 >> 24 | 0)) {
            r64 = r48;
            r65 = r50;
            break;
          }
          r57 = HEAP32[r3];
          r58 = (r57 + 12 | 0) >> 2;
          r59 = HEAP32[r58];
          r68 = r57 + 16 | 0;
          r69 = HEAP32[r68 >> 2];
          do {
            if ((r59 | 0) == (r69 | 0)) {
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r57 >> 2] + 40 >> 2]](r57) | 0) == -1) {
                r6 = 540;
                break;
              }
              r70 = HEAP32[r58];
              r71 = HEAP32[r68 >> 2];
              r6 = 537;
              break;
            } else {
              r72 = r59 + 1 | 0;
              HEAP32[r58] = r72;
              r70 = r72;
              r71 = r69;
              r6 = 537;
              break;
            }
          } while (0);
          do {
            if (r6 == 537) {
              r6 = 0;
              if ((r70 | 0) != (r71 | 0)) {
                break;
              }
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r57 >> 2] + 36 >> 2]](r57) | 0) == -1) {
                r6 = 540;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 540) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          HEAP8[r7] = 1;
          r57 = HEAPU8[r38];
          r64 = ((r57 & 1 | 0) == 0 ? r57 >>> 1 : HEAP32[r28]) >>> 0 > 1 ? r31 : r48;
          r65 = r50;
          break;
        }
        r57 = HEAP32[r51 + 3];
        r69 = HEAP32[r51 + 4];
        r58 = (r57 | 0) == (r69 | 0);
        if ((r63 | 0) == 0) {
          if (r58) {
            r73 = FUNCTION_TABLE[HEAP32[HEAP32[r51] + 36 >> 2]](r11);
            r74 = HEAP8[r17];
          } else {
            r73 = HEAPU8[r57];
            r74 = r60;
          }
          if ((r73 << 24 >> 24 | 0) != (HEAP8[(r74 & 1) << 24 >> 24 == 0 ? r41 : HEAP32[r43 >> 2]] << 24 >> 24 | 0)) {
            HEAP8[r7] = 1;
            r64 = r48;
            r65 = r50;
            break;
          }
          r59 = HEAP32[r3];
          r68 = (r59 + 12 | 0) >> 2;
          r55 = HEAP32[r68];
          r72 = r59 + 16 | 0;
          r75 = HEAP32[r72 >> 2];
          do {
            if ((r55 | 0) == (r75 | 0)) {
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r59 >> 2] + 40 >> 2]](r59) | 0) == -1) {
                r6 = 524;
                break;
              }
              r76 = HEAP32[r68];
              r77 = HEAP32[r72 >> 2];
              r6 = 521;
              break;
            } else {
              r78 = r55 + 1 | 0;
              HEAP32[r68] = r78;
              r76 = r78;
              r77 = r75;
              r6 = 521;
              break;
            }
          } while (0);
          do {
            if (r6 == 521) {
              r6 = 0;
              if ((r76 | 0) != (r77 | 0)) {
                break;
              }
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r59 >> 2] + 36 >> 2]](r59) | 0) == -1) {
                r6 = 524;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 524) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          r59 = HEAPU8[r17];
          r64 = ((r59 & 1 | 0) == 0 ? r59 >>> 1 : HEAP32[r42]) >>> 0 > 1 ? r30 : r48;
          r65 = r50;
          break;
        }
        if (r58) {
          r59 = FUNCTION_TABLE[HEAP32[HEAP32[r51] + 36 >> 2]](r11);
          r75 = HEAP32[r3];
          r79 = r59;
          r80 = HEAP8[r17];
          r81 = r75, r82 = r81 >> 2;
          r83 = HEAP32[r75 + 12 >> 2];
          r84 = HEAP32[r75 + 16 >> 2];
        } else {
          r79 = HEAPU8[r57];
          r80 = r60;
          r81 = r11, r82 = r81 >> 2;
          r83 = r57;
          r84 = r69;
        }
        r75 = r81 + 12 | 0;
        r59 = r81 + 16 | 0;
        r68 = (r83 | 0) == (r84 | 0);
        if ((r79 << 24 >> 24 | 0) == (HEAP8[(r80 & 1) << 24 >> 24 == 0 ? r41 : HEAP32[r43 >> 2]] << 24 >> 24 | 0)) {
          do {
            if (r68) {
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r82] + 40 >> 2]](r81) | 0) == -1) {
                r6 = 555;
                break;
              }
              r85 = HEAP32[r75 >> 2];
              r86 = HEAP32[r59 >> 2];
              r6 = 552;
              break;
            } else {
              r55 = r83 + 1 | 0;
              HEAP32[r75 >> 2] = r55;
              r85 = r55;
              r86 = r84;
              r6 = 552;
              break;
            }
          } while (0);
          do {
            if (r6 == 552) {
              r6 = 0;
              if ((r85 | 0) != (r86 | 0)) {
                break;
              }
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r82] + 36 >> 2]](r81) | 0) == -1) {
                r6 = 555;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 555) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          r75 = HEAPU8[r17];
          r64 = ((r75 & 1 | 0) == 0 ? r75 >>> 1 : HEAP32[r42]) >>> 0 > 1 ? r30 : r48;
          r65 = r50;
          break;
        }
        if (r68) {
          r87 = FUNCTION_TABLE[HEAP32[HEAP32[r82] + 36 >> 2]](r81);
        } else {
          r87 = HEAPU8[r83];
        }
        if ((r87 << 24 >> 24 | 0) != (HEAP8[(HEAP8[r38] & 1) << 24 >> 24 == 0 ? r8 : HEAP32[r40 >> 2]] << 24 >> 24 | 0)) {
          r6 = 571;
          break L522;
        }
        r75 = HEAP32[r3];
        r59 = (r75 + 12 | 0) >> 2;
        r69 = HEAP32[r59];
        r57 = r75 + 16 | 0;
        r60 = HEAP32[r57 >> 2];
        do {
          if ((r69 | 0) == (r60 | 0)) {
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r75 >> 2] + 40 >> 2]](r75) | 0) == -1) {
              r6 = 569;
              break;
            }
            r88 = HEAP32[r59];
            r89 = HEAP32[r57 >> 2];
            r6 = 566;
            break;
          } else {
            r58 = r69 + 1 | 0;
            HEAP32[r59] = r58;
            r88 = r58;
            r89 = r60;
            r6 = 566;
            break;
          }
        } while (0);
        do {
          if (r6 == 566) {
            r6 = 0;
            if ((r88 | 0) != (r89 | 0)) {
              break;
            }
            if ((FUNCTION_TABLE[HEAP32[HEAP32[r75 >> 2] + 36 >> 2]](r75) | 0) == -1) {
              r6 = 569;
              break;
            } else {
              break;
            }
          }
        } while (0);
        if (r6 == 569) {
          r6 = 0;
          HEAP32[r3] = 0;
        }
        HEAP8[r7] = 1;
        r75 = HEAPU8[r38];
        r64 = ((r75 & 1 | 0) == 0 ? r75 >>> 1 : HEAP32[r28]) >>> 0 > 1 ? r31 : r48;
        r65 = r50;
        break;
      } else if ((r54 | 0) == 2) {
        if (!((r48 | 0) != 0 | r49 >>> 0 < 2)) {
          if (!(r44 | (r49 | 0) == 2 & r45)) {
            r64 = 0;
            r65 = r50;
            break;
          }
        }
        HEAP32[r33 >> 2] = 0;
        if ((__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SD_SC_SC_RKT1_Rjb(r1, r2, r29, r5, r33) | 0) == (r29 | 0) | r47) {
          r64 = r48;
          r65 = r50;
          break;
        } else {
          r6 = 576;
          break L522;
        }
      } else if ((r54 | 0) == 4) {
        r75 = 0;
        r60 = r11, r59 = r60 >> 2;
        r69 = r50;
        while (1) {
          r57 = HEAP32[r59 + 3];
          if ((r57 | 0) == (HEAP32[r59 + 4] | 0)) {
            r90 = FUNCTION_TABLE[HEAP32[HEAP32[r59] + 36 >> 2]](r60);
          } else {
            r90 = HEAPU8[r57];
          }
          r57 = r90 & 255;
          r68 = r90 << 24 >> 24;
          do {
            if (r68 >>> 0 < 128) {
              if ((HEAP16[HEAP32[r37] + (r68 << 1) >> 1] & 2048) << 16 >> 16 == 0) {
                r6 = 586;
                break;
              }
              r58 = HEAP32[r12];
              if ((r58 | 0) == (HEAP32[r16] | 0)) {
                __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r9, r10, r15);
                r91 = HEAP32[r12];
              } else {
                r91 = r58;
              }
              HEAP32[r12] = r91 + 1 | 0;
              HEAP8[r91] = r57;
              r92 = r75 + 1 | 0;
              r93 = r69;
              break;
            } else {
              r6 = 586;
            }
          } while (0);
          if (r6 == 586) {
            r6 = 0;
            r57 = HEAPU8[r27];
            if (!((r75 | 0) != 0 & (((r57 & 1 | 0) == 0 ? r57 >>> 1 : HEAP32[r25 >> 2]) | 0) != 0 & (r68 | 0) == (r24 | 0))) {
              r94 = r75;
              r95 = r69;
              break;
            }
            if ((r69 | 0) == (HEAP32[r22] | 0)) {
              __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r18, r19, r21);
            }
            r57 = HEAP32[r20];
            r58 = r57 + 4 | 0;
            HEAP32[r20] = r58;
            HEAP32[r57 >> 2] = r75;
            r92 = 0;
            r93 = r58;
          }
          r58 = HEAP32[r3];
          r57 = (r58 + 12 | 0) >> 2;
          r55 = HEAP32[r57];
          r72 = r58 + 16 | 0;
          r63 = HEAP32[r72 >> 2];
          do {
            if ((r55 | 0) == (r63 | 0)) {
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 40 >> 2]](r58) | 0) == -1) {
                r6 = 599;
                break;
              }
              r96 = HEAP32[r57];
              r97 = HEAP32[r72 >> 2];
              r6 = 595;
              break;
            } else {
              r78 = r55 + 1 | 0;
              HEAP32[r57] = r78;
              r96 = r78;
              r97 = r63;
              r6 = 595;
              break;
            }
          } while (0);
          do {
            if (r6 == 595) {
              r6 = 0;
              if ((r96 | 0) != (r97 | 0)) {
                break;
              }
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 36 >> 2]](r58) | 0) == -1) {
                r6 = 599;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 599) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          r58 = HEAP32[r3];
          if ((r58 | 0) == 0 ^ r39) {
            r75 = r92;
            r60 = r58, r59 = r60 >> 2;
            r69 = r93;
          } else {
            r94 = r92;
            r95 = r93;
            break;
          }
        }
        if ((HEAP32[r35] | 0) == (r95 | 0) | (r94 | 0) == 0) {
          r98 = r95;
        } else {
          if ((r95 | 0) == (HEAP32[r22] | 0)) {
            __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r18, r19, r21);
            r99 = HEAP32[r20];
          } else {
            r99 = r95;
          }
          r69 = r99 + 4 | 0;
          HEAP32[r20] = r69;
          HEAP32[r99 >> 2] = r94;
          r98 = r69;
        }
        r69 = HEAP32[r32 >> 2];
        L672 : do {
          if ((r69 | 0) > 0) {
            r60 = HEAP32[r3], r59 = r60 >> 2;
            if (!((r60 | 0) == 0 ^ r39)) {
              r6 = 611;
              break L522;
            }
            r75 = HEAP32[r59 + 3];
            if ((r75 | 0) == (HEAP32[r59 + 4] | 0)) {
              r100 = FUNCTION_TABLE[HEAP32[HEAP32[r59] + 36 >> 2]](r60);
            } else {
              r100 = HEAPU8[r75];
            }
            if ((r100 << 24 >> 24 | 0) != (r46 | 0)) {
              r6 = 611;
              break L522;
            }
            r75 = HEAP32[r3];
            r60 = (r75 + 12 | 0) >> 2;
            r59 = HEAP32[r60];
            r58 = r75 + 16 | 0;
            r63 = HEAP32[r58 >> 2];
            do {
              if ((r59 | 0) == (r63 | 0)) {
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r75 >> 2] + 40 >> 2]](r75) | 0) == -1) {
                  r6 = 620;
                  break;
                }
                r101 = HEAP32[r60];
                r102 = HEAP32[r58 >> 2];
                r6 = 617;
                break;
              } else {
                r57 = r59 + 1 | 0;
                HEAP32[r60] = r57;
                r101 = r57;
                r102 = r63;
                r6 = 617;
                break;
              }
            } while (0);
            do {
              if (r6 == 617) {
                r6 = 0;
                if ((r101 | 0) != (r102 | 0)) {
                  r103 = r69;
                  break;
                }
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r75 >> 2] + 36 >> 2]](r75) | 0) == -1) {
                  r6 = 620;
                  break;
                } else {
                  r103 = r69;
                  break;
                }
              }
            } while (0);
            do {
              if (r6 == 620) {
                r6 = 0;
                HEAP32[r3] = 0;
                r103 = r69;
                break;
              }
            } while (0);
            while (1) {
              r75 = HEAP32[r3], r63 = r75 >> 2;
              if (!((r75 | 0) == 0 ^ r39)) {
                r6 = 627;
                break L522;
              }
              r60 = HEAP32[r63 + 3];
              if ((r60 | 0) == (HEAP32[r63 + 4] | 0)) {
                r104 = FUNCTION_TABLE[HEAP32[HEAP32[r63] + 36 >> 2]](r75);
              } else {
                r104 = HEAPU8[r60];
              }
              r60 = r104 << 24 >> 24;
              if (r60 >>> 0 >= 128) {
                r6 = 627;
                break L522;
              }
              if ((HEAP16[HEAP32[r37] + (r60 << 1) >> 1] & 2048) << 16 >> 16 == 0) {
                r6 = 627;
                break L522;
              }
              if ((HEAP32[r12] | 0) == (HEAP32[r16] | 0)) {
                __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r9, r10, r15);
              }
              r60 = HEAP32[r3], r75 = r60 >> 2;
              r63 = HEAP32[r75 + 3];
              if ((r63 | 0) == (HEAP32[r75 + 4] | 0)) {
                r105 = FUNCTION_TABLE[HEAP32[HEAP32[r75] + 36 >> 2]](r60);
              } else {
                r105 = HEAPU8[r63];
              }
              r63 = HEAP32[r12];
              HEAP32[r12] = r63 + 1 | 0;
              HEAP8[r63] = r105 & 255;
              r63 = r103 - 1 | 0;
              HEAP32[r32 >> 2] = r63;
              r60 = HEAP32[r3];
              r75 = (r60 + 12 | 0) >> 2;
              r59 = HEAP32[r75];
              r58 = r60 + 16 | 0;
              r57 = HEAP32[r58 >> 2];
              do {
                if ((r59 | 0) == (r57 | 0)) {
                  if ((FUNCTION_TABLE[HEAP32[HEAP32[r60 >> 2] + 40 >> 2]](r60) | 0) == -1) {
                    r6 = 642;
                    break;
                  }
                  r106 = HEAP32[r75];
                  r107 = HEAP32[r58 >> 2];
                  r6 = 638;
                  break;
                } else {
                  r55 = r59 + 1 | 0;
                  HEAP32[r75] = r55;
                  r106 = r55;
                  r107 = r57;
                  r6 = 638;
                  break;
                }
              } while (0);
              do {
                if (r6 == 638) {
                  r6 = 0;
                  if ((r106 | 0) != (r107 | 0)) {
                    break;
                  }
                  if ((FUNCTION_TABLE[HEAP32[HEAP32[r60 >> 2] + 36 >> 2]](r60) | 0) == -1) {
                    r6 = 642;
                    break;
                  } else {
                    break;
                  }
                }
              } while (0);
              if (r6 == 642) {
                r6 = 0;
                HEAP32[r3] = 0;
              }
              if ((r63 | 0) > 0) {
                r103 = r63;
              } else {
                break L672;
              }
            }
          }
        } while (0);
        if ((HEAP32[r12] | 0) == (HEAP32[r4 >> 2] | 0)) {
          r6 = 644;
          break L522;
        } else {
          r64 = r48;
          r65 = r98;
          break;
        }
      } else {
        r64 = r48;
        r65 = r50;
      }
    } while (0);
    L720 : do {
      if (r6 == 491) {
        r6 = 0;
        if ((r49 | 0) == 3) {
          r52 = r48;
          r53 = r50;
          r6 = 646;
          break L522;
        }
        r11 = HEAP32[r3];
        if ((r11 | 0) == 0 ^ r39) {
          r108 = r11, r109 = r108 >> 2;
        } else {
          r64 = r48;
          r65 = r50;
          break;
        }
        while (1) {
          r11 = HEAP32[r109 + 3];
          if ((r11 | 0) == (HEAP32[r109 + 4] | 0)) {
            r110 = FUNCTION_TABLE[HEAP32[HEAP32[r109] + 36 >> 2]](r108);
          } else {
            r110 = HEAPU8[r11];
          }
          r11 = r110 << 24 >> 24;
          if (r11 >>> 0 >= 128) {
            r64 = r48;
            r65 = r50;
            break L720;
          }
          if ((HEAP16[HEAP32[r37] + (r11 << 1) >> 1] & 8192) << 16 >> 16 == 0) {
            r64 = r48;
            r65 = r50;
            break L720;
          }
          r11 = HEAP32[r3];
          r54 = (r11 + 12 | 0) >> 2;
          r51 = HEAP32[r54];
          r69 = r11 + 16 | 0;
          r60 = HEAP32[r69 >> 2];
          do {
            if ((r51 | 0) == (r60 | 0)) {
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 40 >> 2]](r11) | 0) == -1) {
                r6 = 507;
                break;
              }
              r111 = HEAP32[r54];
              r112 = HEAP32[r69 >> 2];
              r6 = 503;
              break;
            } else {
              r57 = r51 + 1 | 0;
              HEAP32[r54] = r57;
              r111 = r57;
              r112 = r60;
              r6 = 503;
              break;
            }
          } while (0);
          do {
            if (r6 == 503) {
              r6 = 0;
              if ((r111 | 0) != (r112 | 0)) {
                break;
              }
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 36 >> 2]](r11) | 0) == -1) {
                r6 = 507;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 507) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          r11 = HEAP32[r3];
          if ((r11 | 0) == 0 ^ r39) {
            r108 = r11, r109 = r108 >> 2;
          } else {
            r64 = r48;
            r65 = r50;
            break L720;
          }
        }
      }
    } while (0);
    r11 = r49 + 1 | 0;
    if (r11 >>> 0 < 4) {
      r48 = r64;
      r49 = r11;
      r50 = r65;
    } else {
      r52 = r64;
      r53 = r65;
      r6 = 646;
      break;
    }
  }
  L744 : do {
    if (r6 == 490) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    } else if (r6 == 571) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    } else if (r6 == 576) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    } else if (r6 == 611) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    } else if (r6 == 627) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    } else if (r6 == 644) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    } else if (r6 == 646) {
      L752 : do {
        if ((r52 | 0) != 0) {
          r65 = r52;
          r64 = r52 + 1 | 0;
          r50 = r52 + 8 | 0;
          r49 = r52 + 4 | 0;
          r48 = 1;
          while (1) {
            r108 = HEAP8[r65];
            r109 = r108 & 255;
            if ((r109 & 1 | 0) == 0) {
              r114 = r109 >>> 1;
            } else {
              r114 = HEAP32[r49 >> 2];
            }
            if (r48 >>> 0 >= r114 >>> 0) {
              break L752;
            }
            r109 = HEAP32[r3], r112 = r109 >> 2;
            if (!((r109 | 0) == 0 ^ r39)) {
              break;
            }
            r111 = HEAP32[r112 + 3];
            if ((r111 | 0) == (HEAP32[r112 + 4] | 0)) {
              r115 = FUNCTION_TABLE[HEAP32[HEAP32[r112] + 36 >> 2]](r109);
              r116 = HEAP8[r65];
            } else {
              r115 = HEAPU8[r111];
              r116 = r108;
            }
            if ((r116 & 1) << 24 >> 24 == 0) {
              r117 = r64;
            } else {
              r117 = HEAP32[r50 >> 2];
            }
            if ((r115 << 24 >> 24 | 0) != (HEAP8[r117 + r48 | 0] << 24 >> 24 | 0)) {
              break;
            }
            r108 = r48 + 1 | 0;
            r111 = HEAP32[r3];
            r109 = (r111 + 12 | 0) >> 2;
            r112 = HEAP32[r109];
            r37 = r111 + 16 | 0;
            r110 = HEAP32[r37 >> 2];
            do {
              if ((r112 | 0) == (r110 | 0)) {
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r111 >> 2] + 40 >> 2]](r111) | 0) == -1) {
                  break;
                }
                r118 = HEAP32[r109];
                r119 = HEAP32[r37 >> 2];
                r6 = 666;
                break;
              } else {
                r98 = r112 + 1 | 0;
                HEAP32[r109] = r98;
                r118 = r98;
                r119 = r110;
                r6 = 666;
                break;
              }
            } while (0);
            if (r6 == 666) {
              r6 = 0;
              if ((r118 | 0) != (r119 | 0)) {
                r48 = r108;
                continue;
              }
              if ((FUNCTION_TABLE[HEAP32[HEAP32[r111 >> 2] + 36 >> 2]](r111) | 0) != -1) {
                r48 = r108;
                continue;
              }
            }
            HEAP32[r3] = 0;
            r48 = r108;
          }
          HEAP32[r13] = HEAP32[r13] | 4;
          r113 = 0;
          break L744;
        }
      } while (0);
      r48 = HEAP32[r35];
      if ((r48 | 0) == (r53 | 0)) {
        r113 = 1;
        break;
      }
      HEAP32[r34 >> 2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r26, r48, r53, r34);
      if ((HEAP32[r34 >> 2] | 0) == 0) {
        r113 = 1;
        break;
      }
      HEAP32[r13] = HEAP32[r13] | 4;
      r113 = 0;
    }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r31);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r30);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r29);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r26);
  r26 = HEAP32[r35];
  HEAP32[r35] = 0;
  if ((r26 | 0) == 0) {
    STACKTOP = r14;
    return r113;
  }
  FUNCTION_TABLE[HEAP32[r36 >> 2]](r26);
  STACKTOP = r14;
  return r113;
}
__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = r1;
  r5 = r2;
  r6 = HEAP8[r4];
  r7 = r6 & 255;
  if ((r7 & 1 | 0) == 0) {
    r8 = r7 >>> 1;
  } else {
    r8 = HEAP32[r1 + 4 >> 2];
  }
  if ((r6 & 1) << 24 >> 24 == 0) {
    r9 = 10;
    r10 = r6;
  } else {
    r6 = HEAP32[r1 >> 2];
    r9 = (r6 & -2) - 1 | 0;
    r10 = r6 & 255;
  }
  r6 = r3 - r5 | 0;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  if ((r9 - r8 | 0) >>> 0 < r6 >>> 0) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(r1, r9, r8 + r6 - r9 | 0, r8, r8);
    r11 = HEAP8[r4];
  } else {
    r11 = r10;
  }
  if ((r11 & 1) << 24 >> 24 == 0) {
    r12 = r1 + 1 | 0;
  } else {
    r12 = HEAP32[r1 + 8 >> 2];
  }
  r11 = r3 + (r8 - r5) | 0;
  r5 = r2;
  r2 = r12 + r8 | 0;
  while (1) {
    HEAP8[r2] = HEAP8[r5];
    r10 = r5 + 1 | 0;
    if ((r10 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r10;
      r2 = r2 + 1 | 0;
    }
  }
  HEAP8[r12 + r11 | 0] = 0;
  r11 = r8 + r6 | 0;
  if ((HEAP8[r4] & 1) << 24 >> 24 == 0) {
    HEAP8[r4] = r11 << 1 & 255;
    return;
  } else {
    HEAP32[r1 + 4 >> 2] = r11;
    return;
  }
}
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_["X"] = 1;
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10) {
  var r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 104 | 0;
  r12 = r11;
  r13 = r11 + 4;
  r14 = r11 + 16;
  r15 = r11 + 28;
  r16 = r11 + 40;
  r17 = r11 + 52;
  r18 = r11 + 56;
  r19 = r11 + 68;
  r20 = r11 + 80;
  r21 = r11 + 92;
  if (r1) {
    r1 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5274160);
    r22 = r1;
    FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 44 >> 2]](r12, r22);
    r23 = r3;
    tempBigInt = HEAP32[r12 >> 2];
    HEAP8[r23] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r23 + 1 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r23 + 2 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r23 + 3 | 0] = tempBigInt & 255;
    r23 = r1 >> 2;
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 32 >> 2]](r13, r22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r9, r13);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r13);
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 28 >> 2]](r14, r22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r8, r14);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r14);
    r14 = r1;
    HEAP8[r4] = FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 12 >> 2]](r22);
    HEAP8[r5] = FUNCTION_TABLE[HEAP32[HEAP32[r14 >> 2] + 16 >> 2]](r22);
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 20 >> 2]](r15, r22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r6, r15);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r15);
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 24 >> 2]](r16, r22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r7, r16);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r16);
    r16 = FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 36 >> 2]](r22);
    HEAP32[r10 >> 2] = r16;
    STACKTOP = r11;
    return;
  } else {
    r22 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5274168);
    r2 = r22;
    FUNCTION_TABLE[HEAP32[HEAP32[r22 >> 2] + 44 >> 2]](r17, r2);
    r1 = r3;
    tempBigInt = HEAP32[r17 >> 2];
    HEAP8[r1] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r1 + 1 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r1 + 2 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r1 + 3 | 0] = tempBigInt & 255;
    r1 = r22 >> 2;
    FUNCTION_TABLE[HEAP32[HEAP32[r1] + 32 >> 2]](r18, r2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r9, r18);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
    FUNCTION_TABLE[HEAP32[HEAP32[r1] + 28 >> 2]](r19, r2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r8, r19);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r19);
    r19 = r22;
    HEAP8[r4] = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 12 >> 2]](r2);
    HEAP8[r5] = FUNCTION_TABLE[HEAP32[HEAP32[r19 >> 2] + 16 >> 2]](r2);
    FUNCTION_TABLE[HEAP32[HEAP32[r1] + 20 >> 2]](r20, r2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r6, r20);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r20);
    FUNCTION_TABLE[HEAP32[HEAP32[r1] + 24 >> 2]](r21, r2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r7, r21);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r21);
    r16 = FUNCTION_TABLE[HEAP32[HEAP32[r22 >> 2] + 36 >> 2]](r2);
    HEAP32[r10 >> 2] = r16;
    STACKTOP = r11;
    return;
  }
}
__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri["X"] = 1;
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SD_SC_SC_RKT1_Rjb(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45;
  r6 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r8 = (r4 - r3 | 0) / 12 & -1;
  r9 = r7 | 0;
  do {
    if (r8 >>> 0 > 100) {
      r10 = _malloc(r8);
      if ((r10 | 0) != 0) {
        r11 = r10;
        r12 = r10;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r11 = 0;
      r12 = 0;
    } else {
      r11 = r9;
      r12 = 0;
    }
  } while (0);
  r9 = (r3 | 0) == (r4 | 0);
  L835 : do {
    if (r9) {
      r13 = r8;
      r14 = 0;
    } else {
      r10 = r8;
      r15 = 0;
      r16 = r11;
      r17 = r3;
      while (1) {
        r18 = HEAPU8[r17];
        if ((r18 & 1 | 0) == 0) {
          r19 = r18 >>> 1;
        } else {
          r19 = HEAP32[r17 + 4 >> 2];
        }
        if ((r19 | 0) == 0) {
          HEAP8[r16] = 2;
          r20 = r15 + 1 | 0;
          r21 = r10 - 1 | 0;
        } else {
          HEAP8[r16] = 1;
          r20 = r15;
          r21 = r10;
        }
        r18 = r17 + 12 | 0;
        if ((r18 | 0) == (r4 | 0)) {
          r13 = r21;
          r14 = r20;
          break L835;
        } else {
          r10 = r21;
          r15 = r20;
          r16 = r16 + 1 | 0;
          r17 = r18;
        }
      }
    }
  } while (0);
  r20 = (r1 | 0) >> 2;
  r1 = HEAP32[r20];
  r21 = (r2 | 0) == 0;
  L847 : do {
    if ((r1 | 0) == 0 ^ r21) {
      r2 = r13;
      r19 = r14;
      r8 = 0;
      r17 = r1, r16 = r17 >> 2;
      while (1) {
        if ((r2 | 0) == 0) {
          r22 = r17;
          break L847;
        }
        r15 = HEAP32[r16 + 3];
        if ((r15 | 0) == (HEAP32[r16 + 4] | 0)) {
          r23 = FUNCTION_TABLE[HEAP32[HEAP32[r16] + 36 >> 2]](r17);
        } else {
          r23 = HEAPU8[r15];
        }
        r15 = r23 & 255;
        r10 = r8 + 1 | 0;
        L855 : do {
          if (r9) {
            r24 = r19;
            r25 = r2;
            r26 = r10;
          } else {
            r18 = r2;
            r27 = r19;
            r28 = r11;
            r29 = 0;
            r30 = r3;
            while (1) {
              do {
                if (HEAP8[r28] << 24 >> 24 == 1) {
                  r31 = HEAP8[r30];
                  if ((r31 & 1) << 24 >> 24 == 0) {
                    r32 = r30 + 1 | 0;
                  } else {
                    r32 = HEAP32[r30 + 8 >> 2];
                  }
                  if (r15 << 24 >> 24 != HEAP8[r32 + r8 | 0] << 24 >> 24) {
                    HEAP8[r28] = 0;
                    r33 = r29;
                    r34 = r27;
                    r35 = r18 - 1 | 0;
                    break;
                  }
                  r36 = r31 & 255;
                  if ((r36 & 1 | 0) == 0) {
                    r37 = r36 >>> 1;
                  } else {
                    r37 = HEAP32[r30 + 4 >> 2];
                  }
                  if ((r37 | 0) != (r10 | 0)) {
                    r33 = 1;
                    r34 = r27;
                    r35 = r18;
                    break;
                  }
                  HEAP8[r28] = 2;
                  r33 = 1;
                  r34 = r27 + 1 | 0;
                  r35 = r18 - 1 | 0;
                } else {
                  r33 = r29;
                  r34 = r27;
                  r35 = r18;
                }
              } while (0);
              r36 = r30 + 12 | 0;
              if ((r36 | 0) == (r4 | 0)) {
                break;
              }
              r18 = r35;
              r27 = r34;
              r28 = r28 + 1 | 0;
              r29 = r33;
              r30 = r36;
            }
            if ((r33 & 1) << 24 >> 24 == 0) {
              r24 = r34;
              r25 = r35;
              r26 = r10;
              break;
            }
            r30 = HEAP32[r20];
            r29 = (r30 + 12 | 0) >> 2;
            r28 = HEAP32[r29];
            r27 = r30 + 16 | 0;
            r18 = HEAP32[r27 >> 2];
            do {
              if ((r28 | 0) == (r18 | 0)) {
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r30 >> 2] + 40 >> 2]](r30) | 0) == -1) {
                  r6 = 774;
                  break;
                }
                r38 = HEAP32[r29];
                r39 = HEAP32[r27 >> 2];
                r6 = 771;
                break;
              } else {
                r36 = r28 + 1 | 0;
                HEAP32[r29] = r36;
                r38 = r36;
                r39 = r18;
                r6 = 771;
                break;
              }
            } while (0);
            do {
              if (r6 == 771) {
                r6 = 0;
                if ((r38 | 0) != (r39 | 0)) {
                  break;
                }
                if ((FUNCTION_TABLE[HEAP32[HEAP32[r30 >> 2] + 36 >> 2]](r30) | 0) == -1) {
                  r6 = 774;
                  break;
                } else {
                  break;
                }
              }
            } while (0);
            if (r6 == 774) {
              r6 = 0;
              HEAP32[r20] = 0;
            }
            if ((r34 + r35 | 0) >>> 0 < 2) {
              r24 = r34;
              r25 = r35;
              r26 = r10;
              break;
            } else {
              r40 = r34;
              r41 = r11;
              r42 = r3;
            }
            while (1) {
              do {
                if (HEAP8[r41] << 24 >> 24 == 2) {
                  r30 = HEAPU8[r42];
                  if ((r30 & 1 | 0) == 0) {
                    r43 = r30 >>> 1;
                  } else {
                    r43 = HEAP32[r42 + 4 >> 2];
                  }
                  if ((r43 | 0) == (r10 | 0)) {
                    r44 = r40;
                    break;
                  }
                  HEAP8[r41] = 0;
                  r44 = r40 - 1 | 0;
                } else {
                  r44 = r40;
                }
              } while (0);
              r30 = r42 + 12 | 0;
              if ((r30 | 0) == (r4 | 0)) {
                r24 = r44;
                r25 = r35;
                r26 = r10;
                break L855;
              } else {
                r40 = r44;
                r41 = r41 + 1 | 0;
                r42 = r30;
              }
            }
          }
        } while (0);
        r10 = HEAP32[r20];
        if ((r10 | 0) == 0 ^ r21) {
          r2 = r25;
          r19 = r24;
          r8 = r26;
          r17 = r10, r16 = r17 >> 2;
        } else {
          r22 = r10;
          break L847;
        }
      }
    } else {
      r22 = r1;
    }
  } while (0);
  if (!((r22 | 0) == 0 ^ r21)) {
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] | 2;
  }
  L903 : do {
    if (r9) {
      r6 = 790;
    } else {
      r21 = r3;
      r22 = r11;
      while (1) {
        if (HEAP8[r22] << 24 >> 24 == 2) {
          r45 = r21;
          break L903;
        }
        r1 = r21 + 12 | 0;
        if ((r1 | 0) == (r4 | 0)) {
          r6 = 790;
          break L903;
        }
        r21 = r1;
        r22 = r22 + 1 | 0;
      }
    }
  } while (0);
  if (r6 == 790) {
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] | 4;
    r45 = r4;
  }
  if ((r12 | 0) == 0) {
    STACKTOP = r7;
    return r45;
  }
  _free(r12);
  STACKTOP = r7;
  return r45;
}
__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SD_SC_SC_RKT1_Rjb["X"] = 1;
function __ZNSt3__121__throw_runtime_errorEPKc(r1) {
  var r2;
  r2 = ___cxa_allocate_exception(8);
  __ZNSt13runtime_errorC1EPKc(r2, r1);
  ___cxa_throw(r2, 5271220, 52);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 120 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r2;
  r10 = r2 + 100;
  r11 = r2 + 108;
  r12 = r2 + 112;
  r13 = r2 + 116;
  r14 = (r10 | 0) >> 2;
  HEAP32[r14] = r9 | 0;
  r15 = r10 + 4 | 0;
  HEAP32[r15 >> 2] = 534;
  __ZNKSt3__18ios_base6getlocEv(r12, r6);
  r16 = r12 | 0;
  r17 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r16 >> 2], 5273668);
  r18 = r17;
  HEAP8[r13] = 0;
  r19 = HEAP32[r4 >> 2];
  if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(r3, r19, r5, r12, HEAP32[r6 + 4 >> 2], r7, r13, r18, r10, r11, r9 + 100 | 0)) {
    r9 = r8;
    if ((HEAP8[r9] & 1) << 24 >> 24 == 0) {
      HEAP8[r8 + 1 | 0] = 0;
      HEAP8[r9] = 0;
    } else {
      HEAP8[HEAP32[r8 + 8 >> 2]] = 0;
      HEAP32[r8 + 4 >> 2] = 0;
    }
    r9 = r17;
    if ((HEAP8[r13] & 1) << 24 >> 24 != 0) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(r8, FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 28 >> 2]](r18, 45));
    }
    r13 = FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 28 >> 2]](r18, 48);
    r18 = HEAP32[r11 >> 2];
    r11 = r18 - 1 | 0;
    r9 = HEAP32[r14];
    while (1) {
      if (r9 >>> 0 >= r11 >>> 0) {
        break;
      }
      if (HEAP8[r9] << 24 >> 24 == r13 << 24 >> 24) {
        r9 = r9 + 1 | 0;
      } else {
        break;
      }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(r8, r9, r18);
  }
  r18 = HEAP32[r3 >> 2];
  if (!((r18 | 0) == 0 ^ (r19 | 0) == 0)) {
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] | 2;
  }
  HEAP32[r1 >> 2] = r18;
  __ZNSt3__16localeD1Ev(HEAP32[r16 >> 2]);
  r16 = HEAP32[r14];
  HEAP32[r14] = 0;
  if ((r16 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  FUNCTION_TABLE[HEAP32[r15 >> 2]](r16);
  STACKTOP = r2;
  return;
}
__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE["X"] = 1;
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10;
  r4 = (r1 + 4 | 0) >> 2;
  r5 = (HEAP32[r4] | 0) != 534;
  r6 = (r1 | 0) >> 2;
  r1 = HEAP32[r6];
  r7 = r1;
  r8 = HEAP32[r3 >> 2] - r7 | 0;
  r9 = r8 >>> 0 < 2147483647 ? r8 << 1 : -1;
  r8 = HEAP32[r2 >> 2] - r7 | 0;
  r7 = _realloc(r5 ? r1 : 0, r9);
  if ((r7 | 0) == 0) {
    __ZSt17__throw_bad_allocv();
  }
  do {
    if (r5) {
      HEAP32[r6] = r7;
      r10 = r7;
    } else {
      r1 = HEAP32[r6];
      HEAP32[r6] = r7;
      if ((r1 | 0) == 0) {
        r10 = r7;
        break;
      }
      FUNCTION_TABLE[HEAP32[r4]](r1);
      r10 = HEAP32[r6];
    }
  } while (0);
  HEAP32[r4] = 270;
  HEAP32[r2 >> 2] = r10 + r8 | 0;
  HEAP32[r3 >> 2] = HEAP32[r6] + r9 | 0;
  return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init29() {
  if (HEAP8[5274432] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318608] = 1;
  HEAP32[1318609] = 0;
  return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = (r1 + 4 | 0) >> 2;
  r5 = (HEAP32[r4] | 0) != 534;
  r6 = (r1 | 0) >> 2;
  r1 = HEAP32[r6];
  r7 = r1;
  r8 = HEAP32[r3 >> 2] - r7 | 0;
  r9 = r8 >>> 0 < 2147483647 ? r8 << 1 : -1;
  r8 = HEAP32[r2 >> 2] - r7 >> 2;
  if (r5) {
    r10 = r1;
  } else {
    r10 = 0;
  }
  r1 = _realloc(r10, r9);
  r10 = r1;
  if ((r1 | 0) == 0) {
    __ZSt17__throw_bad_allocv();
  }
  do {
    if (r5) {
      HEAP32[r6] = r10;
      r11 = r10;
    } else {
      r1 = HEAP32[r6];
      HEAP32[r6] = r10;
      if ((r1 | 0) == 0) {
        r11 = r10;
        break;
      }
      FUNCTION_TABLE[HEAP32[r4]](r1);
      r11 = HEAP32[r6];
    }
  } while (0);
  HEAP32[r4] = 270;
  HEAP32[r2 >> 2] = (r8 << 2) + r11 | 0;
  HEAP32[r3 >> 2] = (r9 >>> 2 << 2) + HEAP32[r6] | 0;
  return;
}
__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_["X"] = 1;
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 560 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r2;
  r10 = r2 + 400;
  r11 = r2 + 408;
  r12 = r2 + 412;
  r13 = r2 + 416;
  r14 = r2 + 420;
  r15 = (r10 | 0) >> 2;
  HEAP32[r15] = r9 | 0;
  r16 = r10 + 4 | 0;
  HEAP32[r16 >> 2] = 534;
  __ZNKSt3__18ios_base6getlocEv(r12, r6);
  r17 = r12 | 0;
  r18 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r17 >> 2], 5273660);
  r19 = r18;
  HEAP8[r13] = 0;
  r20 = r4 | 0;
  do {
    if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(r3, HEAP32[r20 >> 2], r5, r12, HEAP32[r6 + 4 >> 2], r7, r13, r19, r10, r11, r9 + 400 | 0)) {
      r4 = r14 | 0;
      FUNCTION_TABLE[HEAP32[HEAP32[r18 >> 2] + 48 >> 2]](r19, 5264196, 5264206, r4);
      r21 = r2 + 460 | 0;
      r22 = HEAP32[r11 >> 2];
      r23 = HEAP32[r15];
      r24 = r22 - r23 >> 2;
      do {
        if (r24 >>> 0 > 98) {
          r25 = _malloc(r24 + 2 | 0);
          if ((r25 | 0) != 0) {
            r26 = r25;
            r27 = r25;
            break;
          }
          __ZSt17__throw_bad_allocv();
          r26 = 0;
          r27 = 0;
        } else {
          r26 = r21;
          r27 = 0;
        }
      } while (0);
      if ((HEAP8[r13] & 1) << 24 >> 24 == 0) {
        r28 = r26;
      } else {
        HEAP8[r26] = 45;
        r28 = r26 + 1 | 0;
      }
      L986 : do {
        if (r23 >>> 0 < r22 >>> 0) {
          r24 = r14 + 160 | 0;
          r25 = r14;
          r29 = r28;
          r30 = r23;
          while (1) {
            r31 = r4;
            while (1) {
              if ((r31 | 0) == (r24 | 0)) {
                r32 = r24;
                break;
              }
              if ((HEAP32[r31 >> 2] | 0) == (HEAP32[r30 >> 2] | 0)) {
                r32 = r31;
                break;
              } else {
                r31 = r31 + 4 | 0;
              }
            }
            HEAP8[r29] = HEAP8[r32 - r25 + 21056784 >> 2 | 0];
            r31 = r30 + 4 | 0;
            r33 = r29 + 1 | 0;
            if (r31 >>> 0 < HEAP32[r11 >> 2] >>> 0) {
              r29 = r33;
              r30 = r31;
            } else {
              r34 = r33;
              break L986;
            }
          }
        } else {
          r34 = r28;
        }
      } while (0);
      HEAP8[r34] = 0;
      if ((_sscanf(r21, 5248640, (tempInt = STACKTOP, STACKTOP = STACKTOP + 4 | 0, HEAP32[tempInt >> 2] = r8, tempInt)) | 0) != 1) {
        __ZNSt3__121__throw_runtime_errorEPKc(5248516);
      }
      if ((r27 | 0) == 0) {
        break;
      }
      _free(r27);
    }
  } while (0);
  r27 = HEAP32[r3 >> 2];
  if (!((r27 | 0) == 0 ^ (HEAP32[r20 >> 2] | 0) == 0)) {
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] | 2;
  }
  HEAP32[r1 >> 2] = r27;
  __ZNSt3__16localeD1Ev(HEAP32[r17 >> 2]);
  r17 = HEAP32[r15];
  HEAP32[r15] = 0;
  if ((r17 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  FUNCTION_TABLE[HEAP32[r16 >> 2]](r17);
  STACKTOP = r2;
  return;
}
__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe["X"] = 1;
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11) {
  var r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118;
  r12 = r10 >> 2;
  r13 = r6 >> 2;
  r6 = 0;
  r14 = STACKTOP;
  STACKTOP = STACKTOP + 444 | 0;
  r15 = r14, r16 = r15 >> 2;
  r17 = r14 + 4;
  r18 = r14 + 404;
  r19 = r14 + 412, r20 = r19 >> 2;
  r21 = r14 + 416, r22 = r21 >> 2;
  r23 = r14 + 420;
  r24 = r14 + 424;
  r25 = r14 + 428;
  r26 = r14 + 432;
  r27 = r26, r28 = r27 >> 2;
  r29 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r30 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r31 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r32 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r33 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r34 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r16] = r11;
  r11 = r17 | 0;
  r35 = (r18 | 0) >> 2;
  HEAP32[r35] = r11;
  r36 = r18 + 4 | 0;
  HEAP32[r36 >> 2] = 534;
  HEAP32[r20] = r11;
  HEAP32[r22] = r17 + 400 | 0;
  HEAP32[r28] = 0;
  HEAP32[r28 + 1] = 0;
  HEAP32[r28 + 2] = 0;
  r28 = r29 >> 2;
  r17 = r30, r37 = r17 >> 2;
  r38 = r31, r39 = r38 >> 2;
  HEAP32[r28] = 0;
  HEAP32[r28 + 1] = 0;
  HEAP32[r28 + 2] = 0;
  HEAP32[r37] = 0;
  HEAP32[r37 + 1] = 0;
  HEAP32[r37 + 2] = 0;
  HEAP32[r39] = 0;
  HEAP32[r39 + 1] = 0;
  HEAP32[r39 + 2] = 0;
  __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(r3, r4, r23, r24, r25, r26, r29, r30, r31, r32);
  r4 = r9 | 0;
  HEAP32[r12] = HEAP32[r4 >> 2];
  r3 = (r1 | 0) >> 2;
  r39 = (r2 | 0) == 0;
  r37 = r8 >> 2;
  r28 = r31 + 4 | 0, r40 = r28 >> 2;
  r41 = r31 + 8 | 0;
  r42 = r30 + 4 | 0, r43 = r42 >> 2;
  r44 = r30 + 8 | 0;
  r45 = (r5 & 512 | 0) != 0;
  r5 = r29 + 12 | 0;
  r46 = HEAP8[r23 + 3 | 0] << 24 >> 24 != 0;
  r47 = HEAP32[r24 >> 2];
  r24 = HEAP32[r25 >> 2];
  r25 = r26 + 4 | 0;
  r48 = r45 ^ 1;
  r49 = 0;
  r50 = 0;
  r51 = r11;
  L1009 : while (1) {
    r11 = HEAP32[r3], r52 = r11 >> 2;
    if (!((r11 | 0) == 0 ^ r39)) {
      r53 = r49;
      r54 = r51;
      r6 = 1063;
      break;
    }
    r55 = HEAP8[r23 + r50 | 0] << 24 >> 24;
    do {
      if ((r55 | 0) == 0) {
        r6 = 908;
      } else if ((r55 | 0) == 1) {
        if ((r50 | 0) == 3) {
          r53 = r49;
          r54 = r51;
          r6 = 1063;
          break L1009;
        }
        r56 = HEAP32[r52 + 3];
        if ((r56 | 0) == (HEAP32[r52 + 4] | 0)) {
          r57 = FUNCTION_TABLE[HEAP32[HEAP32[r52] + 36 >> 2]](r11);
        } else {
          r57 = HEAP32[r56 >> 2];
        }
        if (!FUNCTION_TABLE[HEAP32[HEAP32[r37] + 12 >> 2]](r8, 8192, r57)) {
          r6 = 907;
          break L1009;
        }
        r56 = HEAP32[r3];
        r58 = (r56 + 12 | 0) >> 2;
        r59 = HEAP32[r58];
        r60 = r56 + 16 | 0;
        if ((r59 | 0) == (HEAP32[r60 >> 2] | 0)) {
          r61 = FUNCTION_TABLE[HEAP32[HEAP32[r56 >> 2] + 40 >> 2]](r56);
        } else {
          HEAP32[r58] = r59 + 4 | 0;
          r61 = HEAP32[r59 >> 2];
        }
        if ((r61 | 0) != -1) {
          r59 = HEAP32[r58];
          if ((r59 | 0) == (HEAP32[r60 >> 2] | 0)) {
            r62 = FUNCTION_TABLE[HEAP32[HEAP32[r56 >> 2] + 36 >> 2]](r56);
          } else {
            r62 = HEAP32[r59 >> 2];
          }
          if ((r62 | 0) != -1) {
            r6 = 908;
            break;
          }
        }
        HEAP32[r3] = 0;
        r6 = 908;
        break;
      } else if ((r55 | 0) == 3) {
        r59 = HEAP8[r17];
        r56 = r59 & 255;
        r60 = (r56 & 1 | 0) == 0 ? r56 >>> 1 : HEAP32[r43];
        r56 = HEAP8[r38];
        r58 = r56 & 255;
        r63 = (r58 & 1 | 0) == 0 ? r58 >>> 1 : HEAP32[r40];
        if ((r60 | 0) == (-r63 | 0)) {
          r64 = r49;
          r65 = r51;
          break;
        }
        if ((r60 | 0) == 0) {
          r60 = HEAP32[r52 + 3];
          if ((r60 | 0) == (HEAP32[r52 + 4] | 0)) {
            r66 = FUNCTION_TABLE[HEAP32[HEAP32[r52] + 36 >> 2]](r11);
            r67 = HEAP8[r38];
          } else {
            r66 = HEAP32[r60 >> 2];
            r67 = r56;
          }
          if ((r66 | 0) != (HEAP32[((r67 & 1) << 24 >> 24 == 0 ? r28 : HEAP32[r41 >> 2]) >> 2] | 0)) {
            r64 = r49;
            r65 = r51;
            break;
          }
          r56 = HEAP32[r3];
          r60 = (r56 + 12 | 0) >> 2;
          r58 = HEAP32[r60];
          r68 = r56 + 16 | 0;
          if ((r58 | 0) == (HEAP32[r68 >> 2] | 0)) {
            r69 = FUNCTION_TABLE[HEAP32[HEAP32[r56 >> 2] + 40 >> 2]](r56);
          } else {
            HEAP32[r60] = r58 + 4 | 0;
            r69 = HEAP32[r58 >> 2];
          }
          do {
            if ((r69 | 0) == -1) {
              r6 = 957;
            } else {
              r58 = HEAP32[r60];
              if ((r58 | 0) == (HEAP32[r68 >> 2] | 0)) {
                r70 = FUNCTION_TABLE[HEAP32[HEAP32[r56 >> 2] + 36 >> 2]](r56);
              } else {
                r70 = HEAP32[r58 >> 2];
              }
              if ((r70 | 0) == -1) {
                r6 = 957;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 957) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          HEAP8[r7] = 1;
          r56 = HEAPU8[r38];
          r64 = ((r56 & 1 | 0) == 0 ? r56 >>> 1 : HEAP32[r40]) >>> 0 > 1 ? r31 : r49;
          r65 = r51;
          break;
        }
        r56 = HEAP32[r52 + 3];
        r68 = HEAP32[r52 + 4];
        r60 = (r56 | 0) == (r68 | 0);
        if ((r63 | 0) == 0) {
          if (r60) {
            r71 = FUNCTION_TABLE[HEAP32[HEAP32[r52] + 36 >> 2]](r11);
            r72 = HEAP8[r17];
          } else {
            r71 = HEAP32[r56 >> 2];
            r72 = r59;
          }
          if ((r71 | 0) != (HEAP32[((r72 & 1) << 24 >> 24 == 0 ? r42 : HEAP32[r44 >> 2]) >> 2] | 0)) {
            HEAP8[r7] = 1;
            r64 = r49;
            r65 = r51;
            break;
          }
          r58 = HEAP32[r3];
          r73 = (r58 + 12 | 0) >> 2;
          r74 = HEAP32[r73];
          r75 = r58 + 16 | 0;
          if ((r74 | 0) == (HEAP32[r75 >> 2] | 0)) {
            r76 = FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 40 >> 2]](r58);
          } else {
            HEAP32[r73] = r74 + 4 | 0;
            r76 = HEAP32[r74 >> 2];
          }
          do {
            if ((r76 | 0) == -1) {
              r6 = 941;
            } else {
              r74 = HEAP32[r73];
              if ((r74 | 0) == (HEAP32[r75 >> 2] | 0)) {
                r77 = FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 36 >> 2]](r58);
              } else {
                r77 = HEAP32[r74 >> 2];
              }
              if ((r77 | 0) == -1) {
                r6 = 941;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 941) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          r58 = HEAPU8[r17];
          r64 = ((r58 & 1 | 0) == 0 ? r58 >>> 1 : HEAP32[r43]) >>> 0 > 1 ? r30 : r49;
          r65 = r51;
          break;
        }
        if (r60) {
          r58 = FUNCTION_TABLE[HEAP32[HEAP32[r52] + 36 >> 2]](r11);
          r75 = HEAP32[r3];
          r78 = r58;
          r79 = HEAP8[r17];
          r80 = r75, r81 = r80 >> 2;
          r82 = HEAP32[r75 + 12 >> 2];
          r83 = HEAP32[r75 + 16 >> 2];
        } else {
          r78 = HEAP32[r56 >> 2];
          r79 = r59;
          r80 = r11, r81 = r80 >> 2;
          r82 = r56;
          r83 = r68;
        }
        r75 = r80 + 12 | 0;
        r58 = r80 + 16 | 0;
        r73 = (r82 | 0) == (r83 | 0);
        if ((r78 | 0) == (HEAP32[((r79 & 1) << 24 >> 24 == 0 ? r42 : HEAP32[r44 >> 2]) >> 2] | 0)) {
          if (r73) {
            r84 = FUNCTION_TABLE[HEAP32[HEAP32[r81] + 40 >> 2]](r80);
          } else {
            HEAP32[r75 >> 2] = r82 + 4 | 0;
            r84 = HEAP32[r82 >> 2];
          }
          do {
            if ((r84 | 0) == -1) {
              r6 = 972;
            } else {
              r63 = HEAP32[r75 >> 2];
              if ((r63 | 0) == (HEAP32[r58 >> 2] | 0)) {
                r85 = FUNCTION_TABLE[HEAP32[HEAP32[r81] + 36 >> 2]](r80);
              } else {
                r85 = HEAP32[r63 >> 2];
              }
              if ((r85 | 0) == -1) {
                r6 = 972;
                break;
              } else {
                break;
              }
            }
          } while (0);
          if (r6 == 972) {
            r6 = 0;
            HEAP32[r3] = 0;
          }
          r58 = HEAPU8[r17];
          r64 = ((r58 & 1 | 0) == 0 ? r58 >>> 1 : HEAP32[r43]) >>> 0 > 1 ? r30 : r49;
          r65 = r51;
          break;
        }
        if (r73) {
          r86 = FUNCTION_TABLE[HEAP32[HEAP32[r81] + 36 >> 2]](r80);
        } else {
          r86 = HEAP32[r82 >> 2];
        }
        if ((r86 | 0) != (HEAP32[((HEAP8[r38] & 1) << 24 >> 24 == 0 ? r28 : HEAP32[r41 >> 2]) >> 2] | 0)) {
          r6 = 988;
          break L1009;
        }
        r58 = HEAP32[r3];
        r75 = (r58 + 12 | 0) >> 2;
        r68 = HEAP32[r75];
        r56 = r58 + 16 | 0;
        if ((r68 | 0) == (HEAP32[r56 >> 2] | 0)) {
          r87 = FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 40 >> 2]](r58);
        } else {
          HEAP32[r75] = r68 + 4 | 0;
          r87 = HEAP32[r68 >> 2];
        }
        do {
          if ((r87 | 0) == -1) {
            r6 = 986;
          } else {
            r68 = HEAP32[r75];
            if ((r68 | 0) == (HEAP32[r56 >> 2] | 0)) {
              r88 = FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 36 >> 2]](r58);
            } else {
              r88 = HEAP32[r68 >> 2];
            }
            if ((r88 | 0) == -1) {
              r6 = 986;
              break;
            } else {
              break;
            }
          }
        } while (0);
        if (r6 == 986) {
          r6 = 0;
          HEAP32[r3] = 0;
        }
        HEAP8[r7] = 1;
        r58 = HEAPU8[r38];
        r64 = ((r58 & 1 | 0) == 0 ? r58 >>> 1 : HEAP32[r40]) >>> 0 > 1 ? r31 : r49;
        r65 = r51;
        break;
      } else if ((r55 | 0) == 2) {
        if (!((r49 | 0) != 0 | r50 >>> 0 < 2)) {
          if (!(r45 | (r50 | 0) == 2 & r46)) {
            r64 = 0;
            r65 = r51;
            break;
          }
        }
        HEAP32[r33 >> 2] = 0;
        if ((__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SD_SC_SC_RKT1_Rjb(r1, r2, r29, r5, r33) | 0) == (r29 | 0) | r48) {
          r64 = r49;
          r65 = r51;
          break;
        } else {
          r6 = 993;
          break L1009;
        }
      } else if ((r55 | 0) == 4) {
        r58 = 0;
        r56 = r11, r75 = r56 >> 2;
        r73 = r51;
        L1124 : while (1) {
          r68 = HEAP32[r75 + 3];
          if ((r68 | 0) == (HEAP32[r75 + 4] | 0)) {
            r89 = FUNCTION_TABLE[HEAP32[HEAP32[r75] + 36 >> 2]](r56);
          } else {
            r89 = HEAP32[r68 >> 2];
          }
          if (FUNCTION_TABLE[HEAP32[HEAP32[r37] + 12 >> 2]](r8, 2048, r89)) {
            r68 = HEAP32[r12];
            if ((r68 | 0) == (HEAP32[r16] | 0)) {
              __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r9, r10, r15);
              r90 = HEAP32[r12];
            } else {
              r90 = r68;
            }
            HEAP32[r12] = r90 + 4 | 0;
            HEAP32[r90 >> 2] = r89;
            r91 = r58 + 1 | 0;
            r92 = r73;
          } else {
            r68 = HEAPU8[r27];
            if (!((r58 | 0) != 0 & (((r68 & 1 | 0) == 0 ? r68 >>> 1 : HEAP32[r25 >> 2]) | 0) != 0 & (r89 | 0) == (r24 | 0))) {
              r93 = r58;
              r94 = r73;
              break;
            }
            if ((r73 | 0) == (HEAP32[r22] | 0)) {
              __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r18, r19, r21);
            }
            r68 = HEAP32[r20];
            r59 = r68 + 4 | 0;
            HEAP32[r20] = r59;
            HEAP32[r68 >> 2] = r58;
            r91 = 0;
            r92 = r59;
          }
          r59 = HEAP32[r3];
          r68 = (r59 + 12 | 0) >> 2;
          r60 = HEAP32[r68];
          r63 = r59 + 16 | 0;
          if ((r60 | 0) == (HEAP32[r63 >> 2] | 0)) {
            r95 = FUNCTION_TABLE[HEAP32[HEAP32[r59 >> 2] + 40 >> 2]](r59);
          } else {
            HEAP32[r68] = r60 + 4 | 0;
            r95 = HEAP32[r60 >> 2];
          }
          do {
            if ((r95 | 0) != -1) {
              r60 = HEAP32[r68];
              if ((r60 | 0) == (HEAP32[r63 >> 2] | 0)) {
                r96 = FUNCTION_TABLE[HEAP32[HEAP32[r59 >> 2] + 36 >> 2]](r59);
              } else {
                r96 = HEAP32[r60 >> 2];
              }
              if ((r96 | 0) == -1) {
                break;
              }
              r60 = HEAP32[r3];
              if ((r60 | 0) == 0 ^ r39) {
                r58 = r91;
                r56 = r60, r75 = r56 >> 2;
                r73 = r92;
                continue L1124;
              } else {
                r93 = r91;
                r94 = r92;
                break L1124;
              }
            }
          } while (0);
          HEAP32[r3] = 0;
          if (r39) {
            r93 = r91;
            r94 = r92;
            break;
          } else {
            r58 = r91;
            r56 = 0, r75 = r56 >> 2;
            r73 = r92;
          }
        }
        if ((HEAP32[r35] | 0) == (r94 | 0) | (r93 | 0) == 0) {
          r97 = r94;
        } else {
          if ((r94 | 0) == (HEAP32[r22] | 0)) {
            __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r18, r19, r21);
            r98 = HEAP32[r20];
          } else {
            r98 = r94;
          }
          r73 = r98 + 4 | 0;
          HEAP32[r20] = r73;
          HEAP32[r98 >> 2] = r93;
          r97 = r73;
        }
        r73 = HEAP32[r32 >> 2];
        L1163 : do {
          if ((r73 | 0) > 0) {
            r56 = HEAP32[r3], r75 = r56 >> 2;
            if (!((r56 | 0) == 0 ^ r39)) {
              r6 = 1028;
              break L1009;
            }
            r58 = HEAP32[r75 + 3];
            if ((r58 | 0) == (HEAP32[r75 + 4] | 0)) {
              r99 = FUNCTION_TABLE[HEAP32[HEAP32[r75] + 36 >> 2]](r56);
            } else {
              r99 = HEAP32[r58 >> 2];
            }
            if ((r99 | 0) != (r47 | 0)) {
              r6 = 1028;
              break L1009;
            }
            r58 = HEAP32[r3];
            r56 = (r58 + 12 | 0) >> 2;
            r75 = HEAP32[r56];
            r59 = r58 + 16 | 0;
            if ((r75 | 0) == (HEAP32[r59 >> 2] | 0)) {
              r100 = FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 40 >> 2]](r58);
            } else {
              HEAP32[r56] = r75 + 4 | 0;
              r100 = HEAP32[r75 >> 2];
            }
            do {
              if ((r100 | 0) == -1) {
                r6 = 1037;
              } else {
                r75 = HEAP32[r56];
                if ((r75 | 0) == (HEAP32[r59 >> 2] | 0)) {
                  r101 = FUNCTION_TABLE[HEAP32[HEAP32[r58 >> 2] + 36 >> 2]](r58);
                } else {
                  r101 = HEAP32[r75 >> 2];
                }
                if ((r101 | 0) == -1) {
                  r6 = 1037;
                  break;
                } else {
                  r102 = r73;
                  break;
                }
              }
            } while (0);
            do {
              if (r6 == 1037) {
                r6 = 0;
                HEAP32[r3] = 0;
                r102 = r73;
                break;
              }
            } while (0);
            while (1) {
              r58 = HEAP32[r3], r59 = r58 >> 2;
              if (!((r58 | 0) == 0 ^ r39)) {
                r6 = 1044;
                break L1009;
              }
              r56 = HEAP32[r59 + 3];
              if ((r56 | 0) == (HEAP32[r59 + 4] | 0)) {
                r103 = FUNCTION_TABLE[HEAP32[HEAP32[r59] + 36 >> 2]](r58);
              } else {
                r103 = HEAP32[r56 >> 2];
              }
              if (!FUNCTION_TABLE[HEAP32[HEAP32[r37] + 12 >> 2]](r8, 2048, r103)) {
                r6 = 1044;
                break L1009;
              }
              if ((HEAP32[r12] | 0) == (HEAP32[r16] | 0)) {
                __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r9, r10, r15);
              }
              r56 = HEAP32[r3], r58 = r56 >> 2;
              r59 = HEAP32[r58 + 3];
              if ((r59 | 0) == (HEAP32[r58 + 4] | 0)) {
                r104 = FUNCTION_TABLE[HEAP32[HEAP32[r58] + 36 >> 2]](r56);
              } else {
                r104 = HEAP32[r59 >> 2];
              }
              r59 = HEAP32[r12];
              HEAP32[r12] = r59 + 4 | 0;
              HEAP32[r59 >> 2] = r104;
              r59 = r102 - 1 | 0;
              HEAP32[r32 >> 2] = r59;
              r56 = HEAP32[r3];
              r58 = (r56 + 12 | 0) >> 2;
              r75 = HEAP32[r58];
              r63 = r56 + 16 | 0;
              if ((r75 | 0) == (HEAP32[r63 >> 2] | 0)) {
                r105 = FUNCTION_TABLE[HEAP32[HEAP32[r56 >> 2] + 40 >> 2]](r56);
              } else {
                HEAP32[r58] = r75 + 4 | 0;
                r105 = HEAP32[r75 >> 2];
              }
              do {
                if ((r105 | 0) == -1) {
                  r6 = 1059;
                } else {
                  r75 = HEAP32[r58];
                  if ((r75 | 0) == (HEAP32[r63 >> 2] | 0)) {
                    r106 = FUNCTION_TABLE[HEAP32[HEAP32[r56 >> 2] + 36 >> 2]](r56);
                  } else {
                    r106 = HEAP32[r75 >> 2];
                  }
                  if ((r106 | 0) == -1) {
                    r6 = 1059;
                    break;
                  } else {
                    break;
                  }
                }
              } while (0);
              if (r6 == 1059) {
                r6 = 0;
                HEAP32[r3] = 0;
              }
              if ((r59 | 0) > 0) {
                r102 = r59;
              } else {
                break L1163;
              }
            }
          }
        } while (0);
        if ((HEAP32[r12] | 0) == (HEAP32[r4 >> 2] | 0)) {
          r6 = 1061;
          break L1009;
        } else {
          r64 = r49;
          r65 = r97;
          break;
        }
      } else {
        r64 = r49;
        r65 = r51;
      }
    } while (0);
    L1213 : do {
      if (r6 == 908) {
        r6 = 0;
        if ((r50 | 0) == 3) {
          r53 = r49;
          r54 = r51;
          r6 = 1063;
          break L1009;
        }
        r11 = HEAP32[r3];
        if ((r11 | 0) == 0 ^ r39) {
          r107 = r11, r108 = r107 >> 2;
        } else {
          r64 = r49;
          r65 = r51;
          break;
        }
        L1216 : while (1) {
          r11 = HEAP32[r108 + 3];
          if ((r11 | 0) == (HEAP32[r108 + 4] | 0)) {
            r109 = FUNCTION_TABLE[HEAP32[HEAP32[r108] + 36 >> 2]](r107);
          } else {
            r109 = HEAP32[r11 >> 2];
          }
          if (!FUNCTION_TABLE[HEAP32[HEAP32[r37] + 12 >> 2]](r8, 8192, r109)) {
            r64 = r49;
            r65 = r51;
            break L1213;
          }
          r11 = HEAP32[r3];
          r55 = (r11 + 12 | 0) >> 2;
          r52 = HEAP32[r55];
          r73 = r11 + 16 | 0;
          if ((r52 | 0) == (HEAP32[r73 >> 2] | 0)) {
            r110 = FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 40 >> 2]](r11);
          } else {
            HEAP32[r55] = r52 + 4 | 0;
            r110 = HEAP32[r52 >> 2];
          }
          do {
            if ((r110 | 0) != -1) {
              r52 = HEAP32[r55];
              if ((r52 | 0) == (HEAP32[r73 >> 2] | 0)) {
                r111 = FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 36 >> 2]](r11);
              } else {
                r111 = HEAP32[r52 >> 2];
              }
              if ((r111 | 0) == -1) {
                break;
              }
              r52 = HEAP32[r3];
              if ((r52 | 0) == 0 ^ r39) {
                r107 = r52, r108 = r107 >> 2;
                continue L1216;
              } else {
                r64 = r49;
                r65 = r51;
                break L1213;
              }
            }
          } while (0);
          HEAP32[r3] = 0;
          if (r39) {
            r64 = r49;
            r65 = r51;
            break L1213;
          } else {
            r107 = 0, r108 = r107 >> 2;
          }
        }
      }
    } while (0);
    r11 = r50 + 1 | 0;
    if (r11 >>> 0 < 4) {
      r49 = r64;
      r50 = r11;
      r51 = r65;
    } else {
      r53 = r64;
      r54 = r65;
      r6 = 1063;
      break;
    }
  }
  L1237 : do {
    if (r6 == 907) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    } else if (r6 == 1061) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    } else if (r6 == 1063) {
      L1241 : do {
        if ((r53 | 0) != 0) {
          r65 = r53;
          r64 = r53 + 4 | 0;
          r51 = r53 + 8 | 0;
          r50 = 1;
          while (1) {
            r49 = HEAP8[r65];
            r107 = r49 & 255;
            if ((r107 & 1 | 0) == 0) {
              r113 = r107 >>> 1;
            } else {
              r113 = HEAP32[r64 >> 2];
            }
            if (r50 >>> 0 >= r113 >>> 0) {
              break L1241;
            }
            r107 = HEAP32[r3], r108 = r107 >> 2;
            if (!((r107 | 0) == 0 ^ r39)) {
              break;
            }
            r111 = HEAP32[r108 + 3];
            if ((r111 | 0) == (HEAP32[r108 + 4] | 0)) {
              r114 = FUNCTION_TABLE[HEAP32[HEAP32[r108] + 36 >> 2]](r107);
              r115 = HEAP8[r65];
            } else {
              r114 = HEAP32[r111 >> 2];
              r115 = r49;
            }
            if ((r115 & 1) << 24 >> 24 == 0) {
              r116 = r64;
            } else {
              r116 = HEAP32[r51 >> 2];
            }
            if ((r114 | 0) != (HEAP32[r116 + (r50 << 2) >> 2] | 0)) {
              break;
            }
            r49 = r50 + 1 | 0;
            r111 = HEAP32[r3];
            r107 = (r111 + 12 | 0) >> 2;
            r108 = HEAP32[r107];
            r110 = r111 + 16 | 0;
            if ((r108 | 0) == (HEAP32[r110 >> 2] | 0)) {
              r117 = FUNCTION_TABLE[HEAP32[HEAP32[r111 >> 2] + 40 >> 2]](r111);
            } else {
              HEAP32[r107] = r108 + 4 | 0;
              r117 = HEAP32[r108 >> 2];
            }
            if ((r117 | 0) != -1) {
              r108 = HEAP32[r107];
              if ((r108 | 0) == (HEAP32[r110 >> 2] | 0)) {
                r118 = FUNCTION_TABLE[HEAP32[HEAP32[r111 >> 2] + 36 >> 2]](r111);
              } else {
                r118 = HEAP32[r108 >> 2];
              }
              if ((r118 | 0) != -1) {
                r50 = r49;
                continue;
              }
            }
            HEAP32[r3] = 0;
            r50 = r49;
          }
          HEAP32[r13] = HEAP32[r13] | 4;
          r112 = 0;
          break L1237;
        }
      } while (0);
      r50 = HEAP32[r35];
      if ((r50 | 0) == (r54 | 0)) {
        r112 = 1;
        break;
      }
      HEAP32[r34 >> 2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(r26, r50, r54, r34);
      if ((HEAP32[r34 >> 2] | 0) == 0) {
        r112 = 1;
        break;
      }
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    } else if (r6 == 988) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    } else if (r6 == 1028) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    } else if (r6 == 1044) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    } else if (r6 == 993) {
      HEAP32[r13] = HEAP32[r13] | 4;
      r112 = 0;
    }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r31);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r30);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r29);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r26);
  r26 = HEAP32[r35];
  HEAP32[r35] = 0;
  if ((r26 | 0) == 0) {
    STACKTOP = r14;
    return r112;
  }
  FUNCTION_TABLE[HEAP32[r36 >> 2]](r26);
  STACKTOP = r14;
  return r112;
}
__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_["X"] = 1;
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init30() {
  if (HEAP8[5274424] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318606] = 1;
  HEAP32[1318607] = 0;
  return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r4 = r1;
  r5 = r2;
  r6 = HEAP8[r4];
  r7 = r6 & 255;
  if ((r7 & 1 | 0) == 0) {
    r8 = r7 >>> 1;
  } else {
    r8 = HEAP32[r1 + 4 >> 2];
  }
  if ((r6 & 1) << 24 >> 24 == 0) {
    r9 = 1;
    r10 = r6;
  } else {
    r6 = HEAP32[r1 >> 2];
    r9 = (r6 & -2) - 1 | 0;
    r10 = r6 & 255;
  }
  r6 = r3 - r5 >> 2;
  if ((r6 | 0) == 0) {
    return;
  }
  if ((r9 - r8 | 0) >>> 0 < r6 >>> 0) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(r1, r9, r8 + r6 - r9 | 0, r8, r8);
    r11 = HEAP8[r4];
  } else {
    r11 = r10;
  }
  if ((r11 & 1) << 24 >> 24 == 0) {
    r12 = r1 + 4 | 0;
  } else {
    r12 = HEAP32[r1 + 8 >> 2];
  }
  r11 = (r8 << 2) + r12 | 0;
  if ((r2 | 0) == (r3 | 0)) {
    r13 = r11;
  } else {
    r10 = r8 + ((r3 - 4 + -r5 | 0) >>> 2) + 1 | 0;
    r5 = r2;
    r2 = r11;
    while (1) {
      HEAP32[r2 >> 2] = HEAP32[r5 >> 2];
      r11 = r5 + 4 | 0;
      if ((r11 | 0) == (r3 | 0)) {
        break;
      } else {
        r5 = r11;
        r2 = r2 + 4 | 0;
      }
    }
    r13 = (r10 << 2) + r12 | 0;
  }
  HEAP32[r13 >> 2] = 0;
  r13 = r8 + r6 | 0;
  if ((HEAP8[r4] & 1) << 24 >> 24 == 0) {
    HEAP8[r4] = r13 << 1 & 255;
    return;
  } else {
    HEAP32[r1 + 4 >> 2] = r13;
    return;
  }
}
__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_["X"] = 1;
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10) {
  var r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 104 | 0;
  r12 = r11;
  r13 = r11 + 4;
  r14 = r11 + 16;
  r15 = r11 + 28;
  r16 = r11 + 40;
  r17 = r11 + 52;
  r18 = r11 + 56;
  r19 = r11 + 68;
  r20 = r11 + 80;
  r21 = r11 + 92;
  if (r1) {
    r1 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5274144);
    r22 = r1;
    FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 44 >> 2]](r12, r22);
    r23 = r3;
    tempBigInt = HEAP32[r12 >> 2];
    HEAP8[r23] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r23 + 1 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r23 + 2 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r23 + 3 | 0] = tempBigInt & 255;
    r23 = r1 >> 2;
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 32 >> 2]](r13, r22);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r9, r13);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r13);
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 28 >> 2]](r14, r22);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r8, r14);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r14);
    r14 = r1 >> 2;
    HEAP32[r4 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r14] + 12 >> 2]](r22);
    HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r14] + 16 >> 2]](r22);
    FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 20 >> 2]](r15, r22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r6, r15);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r15);
    FUNCTION_TABLE[HEAP32[HEAP32[r23] + 24 >> 2]](r16, r22);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r7, r16);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r16);
    r16 = FUNCTION_TABLE[HEAP32[HEAP32[r14] + 36 >> 2]](r22);
    HEAP32[r10 >> 2] = r16;
    STACKTOP = r11;
    return;
  } else {
    r22 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r2 >> 2], 5274152);
    r2 = r22;
    FUNCTION_TABLE[HEAP32[HEAP32[r22 >> 2] + 44 >> 2]](r17, r2);
    r14 = r3;
    tempBigInt = HEAP32[r17 >> 2];
    HEAP8[r14] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r14 + 1 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r14 + 2 | 0] = tempBigInt & 255;
    tempBigInt = tempBigInt >> 8;
    HEAP8[r14 + 3 | 0] = tempBigInt & 255;
    r14 = r22 >> 2;
    FUNCTION_TABLE[HEAP32[HEAP32[r14] + 32 >> 2]](r18, r2);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r9, r18);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r18);
    FUNCTION_TABLE[HEAP32[HEAP32[r14] + 28 >> 2]](r19, r2);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r8, r19);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r19);
    r19 = r22 >> 2;
    HEAP32[r4 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 12 >> 2]](r2);
    HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 16 >> 2]](r2);
    FUNCTION_TABLE[HEAP32[HEAP32[r22 >> 2] + 20 >> 2]](r20, r2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r6, r20);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r20);
    FUNCTION_TABLE[HEAP32[HEAP32[r14] + 24 >> 2]](r21, r2);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r7, r21);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r21);
    r16 = FUNCTION_TABLE[HEAP32[HEAP32[r19] + 36 >> 2]](r2);
    HEAP32[r10 >> 2] = r16;
    STACKTOP = r11;
    return;
  }
}
__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri["X"] = 1;
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SD_SC_SC_RKT1_Rjb(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44;
  r6 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r8 = (r4 - r3 | 0) / 12 & -1;
  r9 = r7 | 0;
  do {
    if (r8 >>> 0 > 100) {
      r10 = _malloc(r8);
      if ((r10 | 0) != 0) {
        r11 = r10;
        r12 = r10;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r11 = 0;
      r12 = 0;
    } else {
      r11 = r9;
      r12 = 0;
    }
  } while (0);
  r9 = (r3 | 0) == (r4 | 0);
  L1338 : do {
    if (r9) {
      r13 = r8;
      r14 = 0;
    } else {
      r10 = r8;
      r15 = 0;
      r16 = r11;
      r17 = r3;
      while (1) {
        r18 = HEAPU8[r17];
        if ((r18 & 1 | 0) == 0) {
          r19 = r18 >>> 1;
        } else {
          r19 = HEAP32[r17 + 4 >> 2];
        }
        if ((r19 | 0) == 0) {
          HEAP8[r16] = 2;
          r20 = r15 + 1 | 0;
          r21 = r10 - 1 | 0;
        } else {
          HEAP8[r16] = 1;
          r20 = r15;
          r21 = r10;
        }
        r18 = r17 + 12 | 0;
        if ((r18 | 0) == (r4 | 0)) {
          r13 = r21;
          r14 = r20;
          break L1338;
        } else {
          r10 = r21;
          r15 = r20;
          r16 = r16 + 1 | 0;
          r17 = r18;
        }
      }
    }
  } while (0);
  r20 = (r1 | 0) >> 2;
  r1 = HEAP32[r20];
  r21 = (r2 | 0) == 0;
  L1350 : do {
    if ((r1 | 0) == 0 ^ r21) {
      r2 = r13;
      r19 = r14;
      r8 = 0;
      r17 = r1, r16 = r17 >> 2;
      while (1) {
        if ((r2 | 0) == 0) {
          r22 = r17;
          break L1350;
        }
        r15 = HEAP32[r16 + 3];
        if ((r15 | 0) == (HEAP32[r16 + 4] | 0)) {
          r23 = FUNCTION_TABLE[HEAP32[HEAP32[r16] + 36 >> 2]](r17);
        } else {
          r23 = HEAP32[r15 >> 2];
        }
        r15 = r8 + 1 | 0;
        L1358 : do {
          if (r9) {
            r24 = r19;
            r25 = r2;
            r26 = r15;
          } else {
            r10 = r2;
            r18 = r19;
            r27 = r11;
            r28 = 0;
            r29 = r3;
            while (1) {
              do {
                if (HEAP8[r27] << 24 >> 24 == 1) {
                  r30 = HEAP8[r29];
                  if ((r30 & 1) << 24 >> 24 == 0) {
                    r31 = r29 + 4 | 0;
                  } else {
                    r31 = HEAP32[r29 + 8 >> 2];
                  }
                  if ((r23 | 0) != (HEAP32[r31 + (r8 << 2) >> 2] | 0)) {
                    HEAP8[r27] = 0;
                    r32 = r28;
                    r33 = r18;
                    r34 = r10 - 1 | 0;
                    break;
                  }
                  r35 = r30 & 255;
                  if ((r35 & 1 | 0) == 0) {
                    r36 = r35 >>> 1;
                  } else {
                    r36 = HEAP32[r29 + 4 >> 2];
                  }
                  if ((r36 | 0) != (r15 | 0)) {
                    r32 = 1;
                    r33 = r18;
                    r34 = r10;
                    break;
                  }
                  HEAP8[r27] = 2;
                  r32 = 1;
                  r33 = r18 + 1 | 0;
                  r34 = r10 - 1 | 0;
                } else {
                  r32 = r28;
                  r33 = r18;
                  r34 = r10;
                }
              } while (0);
              r35 = r29 + 12 | 0;
              if ((r35 | 0) == (r4 | 0)) {
                break;
              }
              r10 = r34;
              r18 = r33;
              r27 = r27 + 1 | 0;
              r28 = r32;
              r29 = r35;
            }
            if ((r32 & 1) << 24 >> 24 == 0) {
              r24 = r33;
              r25 = r34;
              r26 = r15;
              break;
            }
            r29 = HEAP32[r20];
            r28 = (r29 + 12 | 0) >> 2;
            r27 = HEAP32[r28];
            r18 = r29 + 16 | 0;
            if ((r27 | 0) == (HEAP32[r18 >> 2] | 0)) {
              r37 = FUNCTION_TABLE[HEAP32[HEAP32[r29 >> 2] + 40 >> 2]](r29);
            } else {
              HEAP32[r28] = r27 + 4 | 0;
              r37 = HEAP32[r27 >> 2];
            }
            do {
              if ((r37 | 0) == -1) {
                r6 = 1199;
              } else {
                r27 = HEAP32[r28];
                if ((r27 | 0) == (HEAP32[r18 >> 2] | 0)) {
                  r38 = FUNCTION_TABLE[HEAP32[HEAP32[r29 >> 2] + 36 >> 2]](r29);
                } else {
                  r38 = HEAP32[r27 >> 2];
                }
                if ((r38 | 0) == -1) {
                  r6 = 1199;
                  break;
                } else {
                  break;
                }
              }
            } while (0);
            if (r6 == 1199) {
              r6 = 0;
              HEAP32[r20] = 0;
            }
            if ((r33 + r34 | 0) >>> 0 < 2) {
              r24 = r33;
              r25 = r34;
              r26 = r15;
              break;
            } else {
              r39 = r33;
              r40 = r11;
              r41 = r3;
            }
            while (1) {
              do {
                if (HEAP8[r40] << 24 >> 24 == 2) {
                  r29 = HEAPU8[r41];
                  if ((r29 & 1 | 0) == 0) {
                    r42 = r29 >>> 1;
                  } else {
                    r42 = HEAP32[r41 + 4 >> 2];
                  }
                  if ((r42 | 0) == (r15 | 0)) {
                    r43 = r39;
                    break;
                  }
                  HEAP8[r40] = 0;
                  r43 = r39 - 1 | 0;
                } else {
                  r43 = r39;
                }
              } while (0);
              r29 = r41 + 12 | 0;
              if ((r29 | 0) == (r4 | 0)) {
                r24 = r43;
                r25 = r34;
                r26 = r15;
                break L1358;
              } else {
                r39 = r43;
                r40 = r40 + 1 | 0;
                r41 = r29;
              }
            }
          }
        } while (0);
        r15 = HEAP32[r20];
        if ((r15 | 0) == 0 ^ r21) {
          r2 = r25;
          r19 = r24;
          r8 = r26;
          r17 = r15, r16 = r17 >> 2;
        } else {
          r22 = r15;
          break L1350;
        }
      }
    } else {
      r22 = r1;
    }
  } while (0);
  if (!((r22 | 0) == 0 ^ r21)) {
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] | 2;
  }
  L1407 : do {
    if (r9) {
      r6 = 1215;
    } else {
      r21 = r3;
      r22 = r11;
      while (1) {
        if (HEAP8[r22] << 24 >> 24 == 2) {
          r44 = r21;
          break L1407;
        }
        r1 = r21 + 12 | 0;
        if ((r1 | 0) == (r4 | 0)) {
          r6 = 1215;
          break L1407;
        }
        r21 = r1;
        r22 = r22 + 1 | 0;
      }
    }
  } while (0);
  if (r6 == 1215) {
    HEAP32[r5 >> 2] = HEAP32[r5 >> 2] | 4;
    r44 = r4;
  }
  if ((r12 | 0) == 0) {
    STACKTOP = r7;
    return r44;
  }
  _free(r12);
  STACKTOP = r7;
  return r44;
}
__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SD_SC_SC_RKT1_Rjb["X"] = 1;
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 420 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r4;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r4 >> 2] = HEAP32[r9 >> 2];
  r9 = r2;
  r10 = r2 + 400;
  r11 = r2 + 408;
  r12 = r2 + 412;
  r13 = r2 + 416;
  r14 = (r10 | 0) >> 2;
  HEAP32[r14] = r9 | 0;
  r15 = r10 + 4 | 0;
  HEAP32[r15 >> 2] = 534;
  __ZNKSt3__18ios_base6getlocEv(r12, r6);
  r16 = r12 | 0;
  r17 = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[r16 >> 2], 5273660);
  r18 = r17;
  HEAP8[r13] = 0;
  r19 = HEAP32[r4 >> 2];
  if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(r3, r19, r5, r12, HEAP32[r6 + 4 >> 2], r7, r13, r18, r10, r11, r9 + 400 | 0)) {
    r9 = r8;
    if ((HEAP8[r9] & 1) << 24 >> 24 == 0) {
      HEAP32[r8 + 4 >> 2] = 0;
      HEAP8[r9] = 0;
    } else {
      HEAP32[HEAP32[r8 + 8 >> 2] >> 2] = 0;
      HEAP32[r8 + 4 >> 2] = 0;
    }
    r9 = r17;
    if ((HEAP8[r13] & 1) << 24 >> 24 != 0) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(r8, FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 44 >> 2]](r18, 45));
    }
    r13 = FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 44 >> 2]](r18, 48);
    r18 = HEAP32[r11 >> 2];
    r11 = r18 - 4 | 0;
    r9 = HEAP32[r14];
    while (1) {
      if (r9 >>> 0 >= r11 >>> 0) {
        break;
      }
      if ((HEAP32[r9 >> 2] | 0) == (r13 | 0)) {
        r9 = r9 + 4 | 0;
      } else {
        break;
      }
    }
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(r8, r9, r18);
  }
  r18 = HEAP32[r3 >> 2];
  if (!((r18 | 0) == 0 ^ (r19 | 0) == 0)) {
    HEAP32[r7 >> 2] = HEAP32[r7 >> 2] | 2;
  }
  HEAP32[r1 >> 2] = r18;
  __ZNSt3__16localeD1Ev(HEAP32[r16 >> 2]);
  r16 = HEAP32[r14];
  HEAP32[r14] = 0;
  if ((r16 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  FUNCTION_TABLE[HEAP32[r15 >> 2]](r16);
  STACKTOP = r2;
  return;
}
__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE["X"] = 1;
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11;
  r4 = (r1 + 4 | 0) >> 2;
  r5 = (HEAP32[r4] | 0) != 534;
  r6 = (r1 | 0) >> 2;
  r1 = HEAP32[r6];
  r7 = r1;
  r8 = HEAP32[r3 >> 2] - r7 | 0;
  r9 = r8 >>> 0 < 2147483647 ? r8 << 1 : -1;
  r8 = HEAP32[r2 >> 2] - r7 >> 2;
  if (r5) {
    r10 = r1;
  } else {
    r10 = 0;
  }
  r1 = _realloc(r10, r9);
  r10 = r1;
  if ((r1 | 0) == 0) {
    __ZSt17__throw_bad_allocv();
  }
  do {
    if (r5) {
      HEAP32[r6] = r10;
      r11 = r10;
    } else {
      r1 = HEAP32[r6];
      HEAP32[r6] = r10;
      if ((r1 | 0) == 0) {
        r11 = r10;
        break;
      }
      FUNCTION_TABLE[HEAP32[r4]](r1);
      r11 = HEAP32[r6];
    }
  } while (0);
  HEAP32[r4] = 270;
  HEAP32[r2 >> 2] = (r8 << 2) + r11 | 0;
  HEAP32[r3 >> 2] = (r9 >>> 2 << 2) + HEAP32[r6] | 0;
  return;
}
__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_["X"] = 1;
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 232 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 100, r9 = r8 >> 2;
  r10 = r2 + 204;
  r11 = r2 + 208;
  r12 = r2 + 212;
  r13 = r2 + 216;
  r14 = r2 + 220;
  r15 = r14 >> 2;
  r16 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r17 = r16, r18 = r17 >> 2;
  r19 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r20 = r19, r21 = r20 >> 2;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r23 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r24 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r25 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r26 = r2 | 0;
  HEAP32[r9] = r26;
  r27 = r2 + 104 | 0;
  r28 = _snprintf(r26, 100, 5248324, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  do {
    if (r28 >>> 0 > 99) {
      r26 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), 5248324, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      r29 = HEAP32[r9];
      if ((r29 | 0) == 0) {
        __ZSt17__throw_bad_allocv();
        r30 = HEAP32[r9];
      } else {
        r30 = r29;
      }
      r29 = _malloc(r26);
      if ((r29 | 0) != 0) {
        r31 = r29;
        r32 = r26;
        r33 = r30;
        r34 = r29;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r31 = 0;
      r32 = r26;
      r33 = r30;
      r34 = 0;
    } else {
      r31 = r27;
      r32 = r28;
      r33 = 0;
      r34 = 0;
    }
  } while (0);
  __ZNKSt3__18ios_base6getlocEv(r10, r5);
  r28 = HEAP32[r10 >> 2];
  r10 = __ZNKSt3__16locale9use_facetERNS0_2idE(r28, 5273668);
  r27 = r10;
  r30 = HEAP32[r9];
  FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 32 >> 2]](r27, r30, r30 + r32 | 0, r31);
  if ((r32 | 0) == 0) {
    r35 = 0;
  } else {
    r35 = HEAP8[HEAP32[r9]] << 24 >> 24 == 45;
  }
  HEAP32[r15] = 0;
  HEAP32[r15 + 1] = 0;
  HEAP32[r15 + 2] = 0;
  HEAP32[r18] = 0;
  HEAP32[r18 + 1] = 0;
  HEAP32[r18 + 2] = 0;
  HEAP32[r21] = 0;
  HEAP32[r21 + 1] = 0;
  HEAP32[r21 + 2] = 0;
  __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(r4, r35, r28, r11, r12, r13, r14, r16, r19, r22);
  r4 = r23 | 0;
  r23 = HEAP32[r22 >> 2];
  if ((r32 | 0) > (r23 | 0)) {
    r22 = HEAPU8[r20];
    if ((r22 & 1 | 0) == 0) {
      r36 = r22 >>> 1;
    } else {
      r36 = HEAP32[r19 + 4 >> 2];
    }
    r22 = HEAPU8[r17];
    if ((r22 & 1 | 0) == 0) {
      r37 = r22 >>> 1;
    } else {
      r37 = HEAP32[r16 + 4 >> 2];
    }
    r38 = (r32 - r23 << 1 | 1) + r36 + r37 | 0;
  } else {
    r37 = HEAPU8[r20];
    if ((r37 & 1 | 0) == 0) {
      r39 = r37 >>> 1;
    } else {
      r39 = HEAP32[r19 + 4 >> 2];
    }
    r37 = HEAPU8[r17];
    if ((r37 & 1 | 0) == 0) {
      r40 = r37 >>> 1;
    } else {
      r40 = HEAP32[r16 + 4 >> 2];
    }
    r38 = r40 + (r39 + 2) | 0;
  }
  r39 = r38 + r23 | 0;
  do {
    if (r39 >>> 0 > 100) {
      r38 = _malloc(r39);
      if ((r38 | 0) != 0) {
        r41 = r38;
        r42 = r38;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r41 = 0;
      r42 = 0;
    } else {
      r41 = r4;
      r42 = 0;
    }
  } while (0);
  __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(r41, r24, r25, HEAP32[r5 + 4 >> 2], r31, r31 + r32 | 0, r27, r35, r11, HEAP8[r12], HEAP8[r13], r14, r16, r19, r23);
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r41, HEAP32[r24 >> 2], HEAP32[r25 >> 2], r5, r6);
  if ((r42 | 0) != 0) {
    _free(r42);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r19);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r16);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r14);
  __ZNSt3__16localeD1Ev(r28);
  if ((r34 | 0) != 0) {
    _free(r34);
  }
  if ((r33 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  _free(r33);
  STACKTOP = r2;
  return;
}
__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce["X"] = 1;
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10) {
  var r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r12 = r11;
  r13 = r12;
  r14 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r16 = r15;
  r17 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r18 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r19 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r20 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r21 = r20;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r23 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r24 = r23;
  r25 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r26 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r27 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  if (r1) {
    r1 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5274160), r28 = r1 >> 2;
    r29 = r1;
    r30 = HEAP32[r28];
    if (r2) {
      FUNCTION_TABLE[HEAP32[r30 + 44 >> 2]](r13, r29);
      r13 = r4;
      tempBigInt = HEAP32[r12 >> 2];
      HEAP8[r13] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r13 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r13 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r13 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r28] + 32 >> 2]](r14, r29);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r9, r14);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r14);
    } else {
      FUNCTION_TABLE[HEAP32[r30 + 40 >> 2]](r16, r29);
      r16 = r4;
      tempBigInt = HEAP32[r15 >> 2];
      HEAP8[r16] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r16 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r16 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r16 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r28] + 28 >> 2]](r17, r29);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r9, r17);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r17);
    }
    r17 = r1;
    HEAP8[r5] = FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 12 >> 2]](r29);
    HEAP8[r6] = FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 16 >> 2]](r29);
    r17 = r1;
    FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 20 >> 2]](r18, r29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r7, r18);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
    FUNCTION_TABLE[HEAP32[HEAP32[r17 >> 2] + 24 >> 2]](r19, r29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r8, r19);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r19);
    r19 = FUNCTION_TABLE[HEAP32[HEAP32[r28] + 36 >> 2]](r29);
    HEAP32[r10 >> 2] = r19;
    STACKTOP = r11;
    return;
  } else {
    r29 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5274168), r3 = r29 >> 2;
    r28 = r29;
    r17 = HEAP32[r3];
    if (r2) {
      FUNCTION_TABLE[HEAP32[r17 + 44 >> 2]](r21, r28);
      r21 = r4;
      tempBigInt = HEAP32[r20 >> 2];
      HEAP8[r21] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r21 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r21 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r21 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r3] + 32 >> 2]](r22, r28);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r9, r22);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r22);
    } else {
      FUNCTION_TABLE[HEAP32[r17 + 40 >> 2]](r24, r28);
      r24 = r4;
      tempBigInt = HEAP32[r23 >> 2];
      HEAP8[r24] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r24 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r24 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r24 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r3] + 28 >> 2]](r25, r28);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r9, r25);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r25);
    }
    r25 = r29;
    HEAP8[r5] = FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 12 >> 2]](r28);
    HEAP8[r6] = FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 16 >> 2]](r28);
    r25 = r29;
    FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 20 >> 2]](r26, r28);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r7, r26);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r26);
    FUNCTION_TABLE[HEAP32[HEAP32[r25 >> 2] + 24 >> 2]](r27, r28);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r8, r27);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r27);
    r19 = FUNCTION_TABLE[HEAP32[HEAP32[r3] + 36 >> 2]](r28);
    HEAP32[r10 >> 2] = r19;
    STACKTOP = r11;
    return;
  }
}
__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri["X"] = 1;
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev(r1) {
  return;
}
function ___cxx_global_var_init32() {
  if (HEAP8[5274416] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318604] = 1;
  HEAP32[1318605] = 0;
  return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15) {
  var r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76;
  r16 = r3 >> 2;
  r3 = 0;
  HEAP32[r16] = r1;
  r17 = r7 >> 2;
  r18 = r14;
  r19 = r14 + 1 | 0;
  r20 = r14 + 8 | 0;
  r21 = (r14 + 4 | 0) >> 2;
  r14 = r13;
  r22 = (r4 & 512 | 0) == 0;
  r23 = r13 + 1 | 0;
  r24 = r13 + 4 | 0;
  r25 = r13 + 8 | 0;
  r13 = r7 + 8 | 0;
  r26 = (r15 | 0) > 0;
  r27 = r12;
  r28 = r12 + 1 | 0;
  r29 = (r12 + 8 | 0) >> 2;
  r30 = r12 + 4 | 0;
  r12 = -r15 | 0;
  r31 = r5;
  r5 = 0;
  while (1) {
    r32 = HEAP8[r9 + r5 | 0] << 24 >> 24;
    L1543 : do {
      if ((r32 | 0) == 3) {
        r33 = HEAP8[r18];
        r34 = r33 & 255;
        if ((r34 & 1 | 0) == 0) {
          r35 = r34 >>> 1;
        } else {
          r35 = HEAP32[r21];
        }
        if ((r35 | 0) == 0) {
          r36 = r31;
          break;
        }
        if ((r33 & 1) << 24 >> 24 == 0) {
          r37 = r19;
        } else {
          r37 = HEAP32[r20 >> 2];
        }
        r33 = HEAP8[r37];
        r34 = HEAP32[r16];
        HEAP32[r16] = r34 + 1 | 0;
        HEAP8[r34] = r33;
        r36 = r31;
      } else if ((r32 | 0) == 1) {
        HEAP32[r2 >> 2] = HEAP32[r16];
        r33 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 28 >> 2]](r7, 32);
        r34 = HEAP32[r16];
        HEAP32[r16] = r34 + 1 | 0;
        HEAP8[r34] = r33;
        r36 = r31;
      } else if ((r32 | 0) == 0) {
        HEAP32[r2 >> 2] = HEAP32[r16];
        r36 = r31;
      } else if ((r32 | 0) == 2) {
        r33 = HEAP8[r14];
        r34 = r33 & 255;
        r38 = (r34 & 1 | 0) == 0;
        if (r38) {
          r39 = r34 >>> 1;
        } else {
          r39 = HEAP32[r24 >> 2];
        }
        if ((r39 | 0) == 0 | r22) {
          r36 = r31;
          break;
        }
        if ((r33 & 1) << 24 >> 24 == 0) {
          r40 = r23;
        } else {
          r40 = HEAP32[r25 >> 2];
        }
        if (r38) {
          r41 = r34 >>> 1;
        } else {
          r41 = HEAP32[r24 >> 2];
        }
        r34 = r40 + r41 | 0;
        r38 = HEAP32[r16];
        L1568 : do {
          if ((r40 | 0) == (r34 | 0)) {
            r42 = r38;
          } else {
            r33 = r40;
            r43 = r38;
            while (1) {
              HEAP8[r43] = HEAP8[r33];
              r44 = r33 + 1 | 0;
              r45 = r43 + 1 | 0;
              if ((r44 | 0) == (r34 | 0)) {
                r42 = r45;
                break L1568;
              } else {
                r33 = r44;
                r43 = r45;
              }
            }
          }
        } while (0);
        HEAP32[r16] = r42;
        r36 = r31;
      } else if ((r32 | 0) == 4) {
        r34 = HEAP32[r16];
        r38 = r8 ? r31 + 1 | 0 : r31;
        r43 = r38;
        while (1) {
          if (r43 >>> 0 >= r6 >>> 0) {
            break;
          }
          r33 = HEAP8[r43];
          if (r33 << 24 >> 24 <= -1) {
            break;
          }
          if ((HEAP16[HEAP32[r13 >> 2] + (r33 << 24 >> 24 << 1) >> 1] & 2048) << 16 >> 16 == 0) {
            break;
          } else {
            r43 = r43 + 1 | 0;
          }
        }
        r33 = r43;
        if (r26) {
          do {
            if (r43 >>> 0 > r38 >>> 0) {
              r45 = r38 + -r33 | 0;
              r44 = r45 >>> 0 < r12 >>> 0 ? r12 : r45;
              r45 = r44 + r15 | 0;
              r46 = r43;
              r47 = r15;
              r48 = r34;
              while (1) {
                r49 = r46 - 1 | 0;
                r50 = HEAP8[r49];
                HEAP32[r16] = r48 + 1 | 0;
                HEAP8[r48] = r50;
                r50 = r47 - 1 | 0;
                r51 = (r50 | 0) > 0;
                if (!(r49 >>> 0 > r38 >>> 0 & r51)) {
                  break;
                }
                r46 = r49;
                r47 = r50;
                r48 = HEAP32[r16];
              }
              r48 = r43 + r44 | 0;
              if (r51) {
                r52 = r45;
                r53 = r48;
                r3 = 1382;
                break;
              } else {
                r54 = 0;
                r55 = r45;
                r56 = r48;
                break;
              }
            } else {
              r52 = r15;
              r53 = r43;
              r3 = 1382;
            }
          } while (0);
          if (r3 == 1382) {
            r3 = 0;
            r54 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 28 >> 2]](r7, 48);
            r55 = r52;
            r56 = r53;
          }
          r33 = HEAP32[r16];
          HEAP32[r16] = r33 + 1 | 0;
          L1589 : do {
            if ((r55 | 0) > 0) {
              r48 = r55;
              r47 = r33;
              while (1) {
                HEAP8[r47] = r54;
                r46 = r48 - 1 | 0;
                r50 = HEAP32[r16];
                HEAP32[r16] = r50 + 1 | 0;
                if ((r46 | 0) > 0) {
                  r48 = r46;
                  r47 = r50;
                } else {
                  r57 = r50;
                  break L1589;
                }
              }
            } else {
              r57 = r33;
            }
          } while (0);
          HEAP8[r57] = r10;
          r58 = r56;
        } else {
          r58 = r43;
        }
        L1594 : do {
          if ((r58 | 0) == (r38 | 0)) {
            r33 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 28 >> 2]](r7, 48);
            r47 = HEAP32[r16];
            HEAP32[r16] = r47 + 1 | 0;
            HEAP8[r47] = r33;
          } else {
            r33 = HEAP8[r27];
            r47 = r33 & 255;
            if ((r47 & 1 | 0) == 0) {
              r59 = r47 >>> 1;
            } else {
              r59 = HEAP32[r30 >> 2];
            }
            do {
              if ((r59 | 0) == 0) {
                r60 = r58;
                r61 = 0;
                r62 = 0;
                r63 = -1;
              } else {
                if ((r33 & 1) << 24 >> 24 == 0) {
                  r64 = r28;
                } else {
                  r64 = HEAP32[r29];
                }
                r60 = r58;
                r61 = 0;
                r62 = 0;
                r63 = HEAP8[r64] << 24 >> 24;
                break;
              }
            } while (0);
            while (1) {
              do {
                if ((r61 | 0) == (r63 | 0)) {
                  r33 = HEAP32[r16];
                  HEAP32[r16] = r33 + 1 | 0;
                  HEAP8[r33] = r11;
                  r33 = r62 + 1 | 0;
                  r47 = HEAP8[r27];
                  r48 = r47 & 255;
                  if ((r48 & 1 | 0) == 0) {
                    r65 = r48 >>> 1;
                  } else {
                    r65 = HEAP32[r30 >> 2];
                  }
                  if (r33 >>> 0 >= r65 >>> 0) {
                    r66 = r63;
                    r67 = r33;
                    r68 = 0;
                    break;
                  }
                  r48 = (r47 & 1) << 24 >> 24 == 0;
                  if (r48) {
                    r69 = r28;
                  } else {
                    r69 = HEAP32[r29];
                  }
                  if (HEAP8[r69 + r33 | 0] << 24 >> 24 == 127) {
                    r66 = -1;
                    r67 = r33;
                    r68 = 0;
                    break;
                  }
                  if (r48) {
                    r70 = r28;
                  } else {
                    r70 = HEAP32[r29];
                  }
                  r66 = HEAP8[r70 + r33 | 0] << 24 >> 24;
                  r67 = r33;
                  r68 = 0;
                } else {
                  r66 = r63;
                  r67 = r62;
                  r68 = r61;
                }
              } while (0);
              r33 = r60 - 1 | 0;
              r48 = HEAP8[r33];
              r47 = HEAP32[r16];
              HEAP32[r16] = r47 + 1 | 0;
              HEAP8[r47] = r48;
              if ((r33 | 0) == (r38 | 0)) {
                break L1594;
              } else {
                r60 = r33;
                r61 = r68 + 1 | 0;
                r62 = r67;
                r63 = r66;
              }
            }
          }
        } while (0);
        r43 = HEAP32[r16];
        if ((r34 | 0) == (r43 | 0)) {
          r36 = r38;
          break;
        }
        r33 = r43 - 1 | 0;
        if (r34 >>> 0 < r33 >>> 0) {
          r71 = r34;
          r72 = r33;
        } else {
          r36 = r38;
          break;
        }
        while (1) {
          r33 = HEAP8[r71];
          HEAP8[r71] = HEAP8[r72];
          HEAP8[r72] = r33;
          r33 = r71 + 1 | 0;
          r43 = r72 - 1 | 0;
          if (r33 >>> 0 < r43 >>> 0) {
            r71 = r33;
            r72 = r43;
          } else {
            r36 = r38;
            break L1543;
          }
        }
      } else {
        r36 = r31;
      }
    } while (0);
    r32 = r5 + 1 | 0;
    if ((r32 | 0) == 4) {
      break;
    } else {
      r31 = r36;
      r5 = r32;
    }
  }
  r5 = HEAP8[r18];
  r18 = r5 & 255;
  r36 = (r18 & 1 | 0) == 0;
  if (r36) {
    r73 = r18 >>> 1;
  } else {
    r73 = HEAP32[r21];
  }
  if (r73 >>> 0 > 1) {
    if ((r5 & 1) << 24 >> 24 == 0) {
      r74 = r19;
    } else {
      r74 = HEAP32[r20 >> 2];
    }
    if (r36) {
      r75 = r18 >>> 1;
    } else {
      r75 = HEAP32[r21];
    }
    r21 = r74 + r75 | 0;
    r75 = HEAP32[r16];
    r18 = r74 + 1 | 0;
    L1642 : do {
      if ((r18 | 0) == (r21 | 0)) {
        r76 = r75;
      } else {
        r74 = r75;
        r36 = r18;
        while (1) {
          HEAP8[r74] = HEAP8[r36];
          r20 = r74 + 1 | 0;
          r19 = r36 + 1 | 0;
          if ((r19 | 0) == (r21 | 0)) {
            r76 = r20;
            break L1642;
          } else {
            r74 = r20;
            r36 = r19;
          }
        }
      }
    } while (0);
    HEAP32[r16] = r76;
  }
  r76 = r4 & 176;
  if ((r76 | 0) == 32) {
    HEAP32[r2 >> 2] = HEAP32[r16];
    return;
  } else if ((r76 | 0) == 16) {
    return;
  } else {
    HEAP32[r2 >> 2] = r1;
    return;
  }
}
__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i["X"] = 1;
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43;
  r2 = r7 >> 2;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 28 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  r10 = r8 + 4;
  r11 = r8 + 8;
  r12 = r8 + 12;
  r13 = r8 + 16;
  r14 = r13 >> 2;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r16 = r15, r17 = r16 >> 2;
  r18 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r19 = r18, r20 = r19 >> 2;
  r21 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 100 | 0;
  r23 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r24 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r25 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r25, 5273668);
  r26 = r9;
  r27 = r7;
  r28 = r7;
  r7 = HEAP8[r28];
  r29 = r7 & 255;
  if ((r29 & 1 | 0) == 0) {
    r30 = r29 >>> 1;
  } else {
    r30 = HEAP32[r2 + 1];
  }
  if ((r30 | 0) == 0) {
    r31 = 0;
  } else {
    if ((r7 & 1) << 24 >> 24 == 0) {
      r32 = r27 + 1 | 0;
    } else {
      r32 = HEAP32[r2 + 2];
    }
    r31 = HEAP8[r32] << 24 >> 24 == FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 28 >> 2]](r26, 45) << 24 >> 24;
  }
  HEAP32[r14] = 0;
  HEAP32[r14 + 1] = 0;
  HEAP32[r14 + 2] = 0;
  HEAP32[r17] = 0;
  HEAP32[r17 + 1] = 0;
  HEAP32[r17 + 2] = 0;
  HEAP32[r20] = 0;
  HEAP32[r20 + 1] = 0;
  HEAP32[r20 + 2] = 0;
  __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(r4, r31, r25, r10, r11, r12, r13, r15, r18, r21);
  r4 = r22 | 0;
  r22 = HEAPU8[r28];
  r20 = (r22 & 1 | 0) == 0;
  if (r20) {
    r33 = r22 >>> 1;
  } else {
    r33 = HEAP32[r2 + 1];
  }
  r17 = HEAP32[r21 >> 2];
  if (r33 >>> 0 > r17 >>> 0) {
    if (r20) {
      r34 = r22 >>> 1;
    } else {
      r34 = HEAP32[r2 + 1];
    }
    r22 = HEAPU8[r19];
    if ((r22 & 1 | 0) == 0) {
      r35 = r22 >>> 1;
    } else {
      r35 = HEAP32[r18 + 4 >> 2];
    }
    r22 = HEAPU8[r16];
    if ((r22 & 1 | 0) == 0) {
      r36 = r22 >>> 1;
    } else {
      r36 = HEAP32[r15 + 4 >> 2];
    }
    r37 = (r34 - r17 << 1 | 1) + r35 + r36 | 0;
  } else {
    r36 = HEAPU8[r19];
    if ((r36 & 1 | 0) == 0) {
      r38 = r36 >>> 1;
    } else {
      r38 = HEAP32[r18 + 4 >> 2];
    }
    r36 = HEAPU8[r16];
    if ((r36 & 1 | 0) == 0) {
      r39 = r36 >>> 1;
    } else {
      r39 = HEAP32[r15 + 4 >> 2];
    }
    r37 = r39 + (r38 + 2) | 0;
  }
  r38 = r37 + r17 | 0;
  do {
    if (r38 >>> 0 > 100) {
      r37 = _malloc(r38);
      if ((r37 | 0) != 0) {
        r40 = r37;
        r41 = r37;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r40 = 0;
      r41 = 0;
    } else {
      r40 = r4;
      r41 = 0;
    }
  } while (0);
  r4 = HEAP8[r28];
  if ((r4 & 1) << 24 >> 24 == 0) {
    r42 = r27 + 1 | 0;
  } else {
    r42 = HEAP32[r2 + 2];
  }
  r27 = r4 & 255;
  if ((r27 & 1 | 0) == 0) {
    r43 = r27 >>> 1;
  } else {
    r43 = HEAP32[r2 + 1];
  }
  __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(r40, r23, r24, HEAP32[r5 + 4 >> 2], r42, r42 + r43 | 0, r26, r31, r10, HEAP8[r11], HEAP8[r12], r13, r15, r18, r17);
  __ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r40, HEAP32[r23 >> 2], HEAP32[r24 >> 2], r5, r6);
  if ((r41 | 0) == 0) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r15);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r13);
    __ZNSt3__16localeD1Ev(r25);
    STACKTOP = r8;
    return;
  }
  _free(r41);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r15);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r13);
  __ZNSt3__16localeD1Ev(r25);
  STACKTOP = r8;
  return;
}
__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE["X"] = 1;
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 532 | 0;
  r8 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r8 >> 2];
  r8 = r2 + 100, r9 = r8 >> 2;
  r10 = r2 + 504;
  r11 = r2 + 508;
  r12 = r2 + 512;
  r13 = r2 + 516;
  r14 = r2 + 520;
  r15 = r14 >> 2;
  r16 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r17 = r16, r18 = r17 >> 2;
  r19 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r20 = r19, r21 = r20 >> 2;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r23 = STACKTOP;
  STACKTOP = STACKTOP + 400 | 0;
  r24 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r25 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r26 = r2 | 0;
  HEAP32[r9] = r26;
  r27 = r2 + 104 | 0;
  r28 = _snprintf(r26, 100, 5248324, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
  do {
    if (r28 >>> 0 > 99) {
      r26 = __ZNSt3__112__asprintf_lEPPcPvPKcz(r8, __ZNSt3__16__clocEv(), 5248324, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempDoublePtr >> 3] = r7, HEAP32[tempInt >> 2] = HEAP32[tempDoublePtr >> 2], HEAP32[tempInt + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2], tempInt));
      r29 = HEAP32[r9];
      if ((r29 | 0) == 0) {
        __ZSt17__throw_bad_allocv();
        r30 = HEAP32[r9];
      } else {
        r30 = r29;
      }
      r29 = _malloc(r26 << 2);
      r31 = r29;
      if ((r29 | 0) != 0) {
        r32 = r31;
        r33 = r26;
        r34 = r30;
        r35 = r31;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r32 = r31;
      r33 = r26;
      r34 = r30;
      r35 = r31;
    } else {
      r32 = r27;
      r33 = r28;
      r34 = 0;
      r35 = 0;
    }
  } while (0);
  __ZNKSt3__18ios_base6getlocEv(r10, r5);
  r28 = HEAP32[r10 >> 2];
  r10 = __ZNKSt3__16locale9use_facetERNS0_2idE(r28, 5273660);
  r27 = r10;
  r30 = HEAP32[r9];
  FUNCTION_TABLE[HEAP32[HEAP32[r10 >> 2] + 48 >> 2]](r27, r30, r30 + r33 | 0, r32);
  if ((r33 | 0) == 0) {
    r36 = 0;
  } else {
    r36 = HEAP8[HEAP32[r9]] << 24 >> 24 == 45;
  }
  HEAP32[r15] = 0;
  HEAP32[r15 + 1] = 0;
  HEAP32[r15 + 2] = 0;
  HEAP32[r18] = 0;
  HEAP32[r18 + 1] = 0;
  HEAP32[r18 + 2] = 0;
  HEAP32[r21] = 0;
  HEAP32[r21 + 1] = 0;
  HEAP32[r21 + 2] = 0;
  __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(r4, r36, r28, r11, r12, r13, r14, r16, r19, r22);
  r4 = r23 | 0;
  r23 = HEAP32[r22 >> 2];
  if ((r33 | 0) > (r23 | 0)) {
    r22 = HEAPU8[r20];
    if ((r22 & 1 | 0) == 0) {
      r37 = r22 >>> 1;
    } else {
      r37 = HEAP32[r19 + 4 >> 2];
    }
    r22 = HEAPU8[r17];
    if ((r22 & 1 | 0) == 0) {
      r38 = r22 >>> 1;
    } else {
      r38 = HEAP32[r16 + 4 >> 2];
    }
    r39 = (r33 - r23 << 1 | 1) + r37 + r38 | 0;
  } else {
    r38 = HEAPU8[r20];
    if ((r38 & 1 | 0) == 0) {
      r40 = r38 >>> 1;
    } else {
      r40 = HEAP32[r19 + 4 >> 2];
    }
    r38 = HEAPU8[r17];
    if ((r38 & 1 | 0) == 0) {
      r41 = r38 >>> 1;
    } else {
      r41 = HEAP32[r16 + 4 >> 2];
    }
    r39 = r41 + (r40 + 2) | 0;
  }
  r40 = r39 + r23 | 0;
  do {
    if (r40 >>> 0 > 100) {
      r39 = _malloc(r40 << 2);
      r41 = r39;
      if ((r39 | 0) != 0) {
        r42 = r41;
        r43 = r41;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r42 = r41;
      r43 = r41;
    } else {
      r42 = r4;
      r43 = 0;
    }
  } while (0);
  __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(r42, r24, r25, HEAP32[r5 + 4 >> 2], r32, (r33 << 2) + r32 | 0, r27, r36, r11, HEAP32[r12 >> 2], HEAP32[r13 >> 2], r14, r16, r19, r23);
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r42, HEAP32[r24 >> 2], HEAP32[r25 >> 2], r5, r6);
  if ((r43 | 0) != 0) {
    _free(r43);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r19);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r16);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r14);
  __ZNSt3__16localeD1Ev(r28);
  if ((r35 | 0) != 0) {
    _free(r35);
  }
  if ((r34 | 0) == 0) {
    STACKTOP = r2;
    return;
  }
  _free(r34);
  STACKTOP = r2;
  return;
}
__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe["X"] = 1;
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10) {
  var r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r12 = r11;
  r13 = r12;
  r14 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r16 = r15;
  r17 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r18 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r19 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r20 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r21 = r20;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r23 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r24 = r23;
  r25 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r26 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r27 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  if (r1) {
    r1 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5274144), r28 = r1 >> 2;
    r29 = r1;
    r30 = HEAP32[r28];
    if (r2) {
      FUNCTION_TABLE[HEAP32[r30 + 44 >> 2]](r13, r29);
      r13 = r4;
      tempBigInt = HEAP32[r12 >> 2];
      HEAP8[r13] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r13 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r13 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r13 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r28] + 32 >> 2]](r14, r29);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r9, r14);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r14);
    } else {
      FUNCTION_TABLE[HEAP32[r30 + 40 >> 2]](r16, r29);
      r16 = r4;
      tempBigInt = HEAP32[r15 >> 2];
      HEAP8[r16] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r16 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r16 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r16 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r28] + 28 >> 2]](r17, r29);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r9, r17);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r17);
    }
    r17 = r1 >> 2;
    HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 12 >> 2]](r29);
    HEAP32[r6 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 16 >> 2]](r29);
    FUNCTION_TABLE[HEAP32[HEAP32[r28] + 20 >> 2]](r18, r29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r7, r18);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
    FUNCTION_TABLE[HEAP32[HEAP32[r28] + 24 >> 2]](r19, r29);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r8, r19);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r19);
    r19 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 36 >> 2]](r29);
    HEAP32[r10 >> 2] = r19;
    STACKTOP = r11;
    return;
  } else {
    r29 = __ZNKSt3__16locale9use_facetERNS0_2idE(r3, 5274152), r3 = r29 >> 2;
    r17 = r29;
    r28 = HEAP32[r3];
    if (r2) {
      FUNCTION_TABLE[HEAP32[r28 + 44 >> 2]](r21, r17);
      r21 = r4;
      tempBigInt = HEAP32[r20 >> 2];
      HEAP8[r21] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r21 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r21 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r21 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r3] + 32 >> 2]](r22, r17);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r9, r22);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r22);
    } else {
      FUNCTION_TABLE[HEAP32[r28 + 40 >> 2]](r24, r17);
      r24 = r4;
      tempBigInt = HEAP32[r23 >> 2];
      HEAP8[r24] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r24 + 1 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r24 + 2 | 0] = tempBigInt & 255;
      tempBigInt = tempBigInt >> 8;
      HEAP8[r24 + 3 | 0] = tempBigInt & 255;
      FUNCTION_TABLE[HEAP32[HEAP32[r3] + 28 >> 2]](r25, r17);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r9, r25);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r25);
    }
    r25 = r29 >> 2;
    HEAP32[r5 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r25] + 12 >> 2]](r17);
    HEAP32[r6 >> 2] = FUNCTION_TABLE[HEAP32[HEAP32[r25] + 16 >> 2]](r17);
    FUNCTION_TABLE[HEAP32[HEAP32[r3] + 20 >> 2]](r26, r17);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(r7, r26);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r26);
    FUNCTION_TABLE[HEAP32[HEAP32[r3] + 24 >> 2]](r27, r17);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_(r8, r27);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r27);
    r19 = FUNCTION_TABLE[HEAP32[HEAP32[r25] + 36 >> 2]](r17);
    HEAP32[r10 >> 2] = r19;
    STACKTOP = r11;
    return;
  }
}
__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri["X"] = 1;
function __ZNSt3__18messagesIcED1Ev(r1) {
  return;
}
function ___cxx_global_var_init33() {
  if (HEAP8[5274488] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318622] = 1;
  HEAP32[1318623] = 0;
  return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15) {
  var r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72;
  r16 = r3 >> 2;
  r3 = 0;
  HEAP32[r16] = r1;
  r17 = r7 >> 2;
  r18 = r14;
  r19 = r14 + 4 | 0, r20 = r19 >> 2;
  r21 = r14 + 8 | 0;
  r14 = r13;
  r22 = (r4 & 512 | 0) == 0;
  r23 = r13 + 4 | 0;
  r24 = r13 + 8 | 0;
  r13 = r7;
  r25 = (r15 | 0) > 0;
  r26 = r12;
  r27 = r12 + 1 | 0;
  r28 = (r12 + 8 | 0) >> 2;
  r29 = r12 + 4 | 0;
  r12 = r5;
  r5 = 0;
  while (1) {
    r30 = HEAP8[r9 + r5 | 0] << 24 >> 24;
    L1799 : do {
      if ((r30 | 0) == 0) {
        HEAP32[r2 >> 2] = HEAP32[r16];
        r31 = r12;
      } else if ((r30 | 0) == 1) {
        HEAP32[r2 >> 2] = HEAP32[r16];
        r32 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 44 >> 2]](r7, 32);
        r33 = HEAP32[r16];
        HEAP32[r16] = r33 + 4 | 0;
        HEAP32[r33 >> 2] = r32;
        r31 = r12;
      } else if ((r30 | 0) == 3) {
        r32 = HEAP8[r18];
        r33 = r32 & 255;
        if ((r33 & 1 | 0) == 0) {
          r34 = r33 >>> 1;
        } else {
          r34 = HEAP32[r20];
        }
        if ((r34 | 0) == 0) {
          r31 = r12;
          break;
        }
        if ((r32 & 1) << 24 >> 24 == 0) {
          r35 = r19;
        } else {
          r35 = HEAP32[r21 >> 2];
        }
        r32 = HEAP32[r35 >> 2];
        r33 = HEAP32[r16];
        HEAP32[r16] = r33 + 4 | 0;
        HEAP32[r33 >> 2] = r32;
        r31 = r12;
      } else if ((r30 | 0) == 2) {
        r32 = HEAP8[r14];
        r33 = r32 & 255;
        r36 = (r33 & 1 | 0) == 0;
        if (r36) {
          r37 = r33 >>> 1;
        } else {
          r37 = HEAP32[r23 >> 2];
        }
        if ((r37 | 0) == 0 | r22) {
          r31 = r12;
          break;
        }
        if ((r32 & 1) << 24 >> 24 == 0) {
          r38 = r23;
        } else {
          r38 = HEAP32[r24 >> 2];
        }
        if (r36) {
          r39 = r33 >>> 1;
        } else {
          r39 = HEAP32[r23 >> 2];
        }
        r33 = (r39 << 2) + r38 | 0;
        r36 = HEAP32[r16];
        if ((r38 | 0) == (r33 | 0)) {
          r40 = r36;
        } else {
          r32 = ((r39 - 1 << 2) + r38 + -r38 | 0) >>> 2;
          r41 = r38;
          r42 = r36;
          while (1) {
            HEAP32[r42 >> 2] = HEAP32[r41 >> 2];
            r43 = r41 + 4 | 0;
            if ((r43 | 0) == (r33 | 0)) {
              break;
            }
            r41 = r43;
            r42 = r42 + 4 | 0;
          }
          r40 = (r32 + 1 << 2) + r36 | 0;
        }
        HEAP32[r16] = r40;
        r31 = r12;
      } else if ((r30 | 0) == 4) {
        r42 = HEAP32[r16];
        r41 = r8 ? r12 + 4 | 0 : r12;
        r33 = r41;
        while (1) {
          if (r33 >>> 0 >= r6 >>> 0) {
            break;
          }
          if (FUNCTION_TABLE[HEAP32[HEAP32[r13 >> 2] + 12 >> 2]](r7, 2048, HEAP32[r33 >> 2])) {
            r33 = r33 + 4 | 0;
          } else {
            break;
          }
        }
        if (r25) {
          do {
            if (r33 >>> 0 > r41 >>> 0) {
              r36 = r33;
              r32 = r15;
              while (1) {
                r44 = r36 - 4 | 0;
                r43 = HEAP32[r44 >> 2];
                r45 = HEAP32[r16];
                HEAP32[r16] = r45 + 4 | 0;
                HEAP32[r45 >> 2] = r43;
                r46 = r32 - 1 | 0;
                r47 = (r46 | 0) > 0;
                if (r44 >>> 0 > r41 >>> 0 & r47) {
                  r36 = r44;
                  r32 = r46;
                } else {
                  break;
                }
              }
              if (r47) {
                r48 = r46;
                r49 = r44;
                r3 = 1609;
                break;
              }
              r32 = HEAP32[r16];
              HEAP32[r16] = r32 + 4 | 0;
              r50 = r32;
              r51 = r44;
              break;
            } else {
              r48 = r15;
              r49 = r33;
              r3 = 1609;
            }
          } while (0);
          L1843 : do {
            if (r3 == 1609) {
              r3 = 0;
              r32 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 44 >> 2]](r7, 48);
              r36 = HEAP32[r16];
              HEAP32[r16] = r36 + 4 | 0;
              if ((r48 | 0) > 0) {
                r52 = r48;
                r53 = r36;
              } else {
                r50 = r36;
                r51 = r49;
                break;
              }
              while (1) {
                HEAP32[r53 >> 2] = r32;
                r36 = r52 - 1 | 0;
                r43 = HEAP32[r16];
                HEAP32[r16] = r43 + 4 | 0;
                if ((r36 | 0) > 0) {
                  r52 = r36;
                  r53 = r43;
                } else {
                  r50 = r43;
                  r51 = r49;
                  break L1843;
                }
              }
            }
          } while (0);
          HEAP32[r50 >> 2] = r10;
          r54 = r51;
        } else {
          r54 = r33;
        }
        L1849 : do {
          if ((r54 | 0) == (r41 | 0)) {
            r32 = FUNCTION_TABLE[HEAP32[HEAP32[r17] + 44 >> 2]](r7, 48);
            r43 = HEAP32[r16];
            HEAP32[r16] = r43 + 4 | 0;
            HEAP32[r43 >> 2] = r32;
          } else {
            r32 = HEAP8[r26];
            r43 = r32 & 255;
            if ((r43 & 1 | 0) == 0) {
              r55 = r43 >>> 1;
            } else {
              r55 = HEAP32[r29 >> 2];
            }
            do {
              if ((r55 | 0) == 0) {
                r56 = r54;
                r57 = 0;
                r58 = 0;
                r59 = -1;
              } else {
                if ((r32 & 1) << 24 >> 24 == 0) {
                  r60 = r27;
                } else {
                  r60 = HEAP32[r28];
                }
                r56 = r54;
                r57 = 0;
                r58 = 0;
                r59 = HEAP8[r60] << 24 >> 24;
                break;
              }
            } while (0);
            while (1) {
              do {
                if ((r57 | 0) == (r59 | 0)) {
                  r32 = HEAP32[r16];
                  HEAP32[r16] = r32 + 4 | 0;
                  HEAP32[r32 >> 2] = r11;
                  r32 = r58 + 1 | 0;
                  r43 = HEAP8[r26];
                  r36 = r43 & 255;
                  if ((r36 & 1 | 0) == 0) {
                    r61 = r36 >>> 1;
                  } else {
                    r61 = HEAP32[r29 >> 2];
                  }
                  if (r32 >>> 0 >= r61 >>> 0) {
                    r62 = r59;
                    r63 = r32;
                    r64 = 0;
                    break;
                  }
                  r36 = (r43 & 1) << 24 >> 24 == 0;
                  if (r36) {
                    r65 = r27;
                  } else {
                    r65 = HEAP32[r28];
                  }
                  if (HEAP8[r65 + r32 | 0] << 24 >> 24 == 127) {
                    r62 = -1;
                    r63 = r32;
                    r64 = 0;
                    break;
                  }
                  if (r36) {
                    r66 = r27;
                  } else {
                    r66 = HEAP32[r28];
                  }
                  r62 = HEAP8[r66 + r32 | 0] << 24 >> 24;
                  r63 = r32;
                  r64 = 0;
                } else {
                  r62 = r59;
                  r63 = r58;
                  r64 = r57;
                }
              } while (0);
              r32 = r56 - 4 | 0;
              r36 = HEAP32[r32 >> 2];
              r43 = HEAP32[r16];
              HEAP32[r16] = r43 + 4 | 0;
              HEAP32[r43 >> 2] = r36;
              if ((r32 | 0) == (r41 | 0)) {
                break L1849;
              } else {
                r56 = r32;
                r57 = r64 + 1 | 0;
                r58 = r63;
                r59 = r62;
              }
            }
          }
        } while (0);
        r33 = HEAP32[r16];
        if ((r42 | 0) == (r33 | 0)) {
          r31 = r41;
          break;
        }
        r32 = r33 - 4 | 0;
        if (r42 >>> 0 < r32 >>> 0) {
          r67 = r42;
          r68 = r32;
        } else {
          r31 = r41;
          break;
        }
        while (1) {
          r32 = HEAP32[r67 >> 2];
          HEAP32[r67 >> 2] = HEAP32[r68 >> 2];
          HEAP32[r68 >> 2] = r32;
          r32 = r67 + 4 | 0;
          r33 = r68 - 4 | 0;
          if (r32 >>> 0 < r33 >>> 0) {
            r67 = r32;
            r68 = r33;
          } else {
            r31 = r41;
            break L1799;
          }
        }
      } else {
        r31 = r12;
      }
    } while (0);
    r30 = r5 + 1 | 0;
    if ((r30 | 0) == 4) {
      break;
    } else {
      r12 = r31;
      r5 = r30;
    }
  }
  r5 = HEAP8[r18];
  r18 = r5 & 255;
  r31 = (r18 & 1 | 0) == 0;
  if (r31) {
    r69 = r18 >>> 1;
  } else {
    r69 = HEAP32[r20];
  }
  if (r69 >>> 0 > 1) {
    if ((r5 & 1) << 24 >> 24 == 0) {
      r70 = r19;
    } else {
      r70 = HEAP32[r21 >> 2];
    }
    if (r31) {
      r71 = r18 >>> 1;
    } else {
      r71 = HEAP32[r20];
    }
    r20 = (r71 << 2) + r70 | 0;
    r18 = HEAP32[r16];
    r31 = r70 + 4 | 0;
    if ((r31 | 0) == (r20 | 0)) {
      r72 = r18;
    } else {
      r21 = (((r71 - 2 << 2) + r70 + -r70 | 0) >>> 2) + 1 | 0;
      r70 = r18;
      r71 = r31;
      while (1) {
        HEAP32[r70 >> 2] = HEAP32[r71 >> 2];
        r31 = r71 + 4 | 0;
        if ((r31 | 0) == (r20 | 0)) {
          break;
        } else {
          r70 = r70 + 4 | 0;
          r71 = r31;
        }
      }
      r72 = (r21 << 2) + r18 | 0;
    }
    HEAP32[r16] = r72;
  }
  r72 = r4 & 176;
  if ((r72 | 0) == 32) {
    HEAP32[r2 >> 2] = HEAP32[r16];
    return;
  } else if ((r72 | 0) == 16) {
    return;
  } else {
    HEAP32[r2 >> 2] = r1;
    return;
  }
}
__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i["X"] = 1;
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE(r1, r2, r3, r4, r5, r6, r7) {
  var r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43;
  r2 = r7 >> 2;
  r8 = STACKTOP;
  STACKTOP = STACKTOP + 28 | 0;
  r9 = r3;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r3 >> 2] = HEAP32[r9 >> 2];
  r9 = r8;
  r10 = r8 + 4;
  r11 = r8 + 8;
  r12 = r8 + 12;
  r13 = r8 + 16;
  r14 = r13 >> 2;
  r15 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r16 = r15, r17 = r16 >> 2;
  r18 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r19 = r18, r20 = r19 >> 2;
  r21 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 400 | 0;
  r23 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  r24 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  __ZNKSt3__18ios_base6getlocEv(r9, r5);
  r25 = HEAP32[r9 >> 2];
  r9 = __ZNKSt3__16locale9use_facetERNS0_2idE(r25, 5273660);
  r26 = r9;
  r27 = r7;
  r28 = HEAP8[r27];
  r29 = r28 & 255;
  if ((r29 & 1 | 0) == 0) {
    r30 = r29 >>> 1;
  } else {
    r30 = HEAP32[r2 + 1];
  }
  if ((r30 | 0) == 0) {
    r31 = 0;
  } else {
    if ((r28 & 1) << 24 >> 24 == 0) {
      r32 = r7 + 4 | 0;
    } else {
      r32 = HEAP32[r2 + 2];
    }
    r31 = (HEAP32[r32 >> 2] | 0) == (FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 44 >> 2]](r26, 45) | 0);
  }
  HEAP32[r14] = 0;
  HEAP32[r14 + 1] = 0;
  HEAP32[r14 + 2] = 0;
  HEAP32[r17] = 0;
  HEAP32[r17 + 1] = 0;
  HEAP32[r17 + 2] = 0;
  HEAP32[r20] = 0;
  HEAP32[r20 + 1] = 0;
  HEAP32[r20 + 2] = 0;
  __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(r4, r31, r25, r10, r11, r12, r13, r15, r18, r21);
  r4 = r22 | 0;
  r22 = HEAPU8[r27];
  r20 = (r22 & 1 | 0) == 0;
  if (r20) {
    r33 = r22 >>> 1;
  } else {
    r33 = HEAP32[r2 + 1];
  }
  r17 = HEAP32[r21 >> 2];
  if (r33 >>> 0 > r17 >>> 0) {
    if (r20) {
      r34 = r22 >>> 1;
    } else {
      r34 = HEAP32[r2 + 1];
    }
    r22 = HEAPU8[r19];
    if ((r22 & 1 | 0) == 0) {
      r35 = r22 >>> 1;
    } else {
      r35 = HEAP32[r18 + 4 >> 2];
    }
    r22 = HEAPU8[r16];
    if ((r22 & 1 | 0) == 0) {
      r36 = r22 >>> 1;
    } else {
      r36 = HEAP32[r15 + 4 >> 2];
    }
    r37 = (r34 - r17 << 1 | 1) + r35 + r36 | 0;
  } else {
    r36 = HEAPU8[r19];
    if ((r36 & 1 | 0) == 0) {
      r38 = r36 >>> 1;
    } else {
      r38 = HEAP32[r18 + 4 >> 2];
    }
    r36 = HEAPU8[r16];
    if ((r36 & 1 | 0) == 0) {
      r39 = r36 >>> 1;
    } else {
      r39 = HEAP32[r15 + 4 >> 2];
    }
    r37 = r39 + (r38 + 2) | 0;
  }
  r38 = r37 + r17 | 0;
  do {
    if (r38 >>> 0 > 100) {
      r37 = _malloc(r38 << 2);
      r39 = r37;
      if ((r37 | 0) != 0) {
        r40 = r39;
        r41 = r39;
        break;
      }
      __ZSt17__throw_bad_allocv();
      r40 = r39;
      r41 = r39;
    } else {
      r40 = r4;
      r41 = 0;
    }
  } while (0);
  r4 = HEAP8[r27];
  if ((r4 & 1) << 24 >> 24 == 0) {
    r42 = r7 + 4 | 0;
  } else {
    r42 = HEAP32[r2 + 2];
  }
  r7 = r4 & 255;
  if ((r7 & 1 | 0) == 0) {
    r43 = r7 >>> 1;
  } else {
    r43 = HEAP32[r2 + 1];
  }
  __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(r40, r23, r24, HEAP32[r5 + 4 >> 2], r42, (r43 << 2) + r42 | 0, r26, r31, r10, HEAP32[r11 >> 2], HEAP32[r12 >> 2], r13, r15, r18, r17);
  __ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_(r1, HEAP32[r3 >> 2], r40, HEAP32[r23 >> 2], HEAP32[r24 >> 2], r5, r6);
  if ((r41 | 0) == 0) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r18);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r15);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r13);
    __ZNSt3__16localeD1Ev(r25);
    STACKTOP = r8;
    return;
  }
  _free(r41);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r18);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(r15);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r13);
  __ZNSt3__16localeD1Ev(r25);
  STACKTOP = r8;
  return;
}
__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE["X"] = 1;
function __ZNSt3__18messagesIcED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(r1, r2, r3) {
  var r4;
  if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
    r4 = r2 + 1 | 0;
  } else {
    r4 = HEAP32[r2 + 8 >> 2];
  }
  r2 = __Z7catopenPKci(r4, 200);
  return r2 >>> (((r2 | 0) != -1 & 1) >>> 0);
}
function __ZNSt3__18messagesIwED1Ev(r1) {
  return;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED1Ev(r1) {
  return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED1Ev(r1) {
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7collateIcEEiEERT_T0_() {
  HEAP32[1315988] = 0;
  HEAP32[1315987] = 5265576;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7collateIwEEiEERT_T0_() {
  HEAP32[1315986] = 0;
  HEAP32[1315985] = 5265540;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_5ctypeIwEEiEERT_T0_() {
  HEAP32[1316036] = 0;
  HEAP32[1316035] = 5265868;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIcc10_mbstate_tEEiEERT_T0_() {
  HEAP32[1315993] = 0;
  HEAP32[1315992] = 5265664;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIDsc10_mbstate_tEEiEERT_T0_() {
  HEAP32[1315995] = 0;
  HEAP32[1315994] = 5265716;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIDic10_mbstate_tEEiEERT_T0_() {
  HEAP32[1315997] = 0;
  HEAP32[1315996] = 5265768;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_() {
  HEAP32[1315984] = 0;
  HEAP32[1315983] = 5265472;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_() {
  HEAP32[1315982] = 0;
  HEAP32[1315981] = 5265404;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_() {
  HEAP32[1315980] = 0;
  HEAP32[1315979] = 5265348;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_() {
  HEAP32[1315978] = 0;
  HEAP32[1315977] = 5265292;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEiEERT_T0_() {
  HEAP32[1316048] = 0;
  HEAP32[1316047] = 5267064;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEiEERT_T0_() {
  HEAP32[1316046] = 0;
  HEAP32[1316045] = 5267004;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEiEERT_T0_() {
  HEAP32[1316044] = 0;
  HEAP32[1316043] = 5266944;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEiEERT_T0_() {
  HEAP32[1316042] = 0;
  HEAP32[1316041] = 5266884;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_() {
  HEAP32[1315947] = 0;
  HEAP32[1315946] = 5264824;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_() {
  HEAP32[1315945] = 0;
  HEAP32[1315944] = 5264792;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_() {
  HEAP32[1315943] = 0;
  HEAP32[1315942] = 5264760;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_() {
  HEAP32[1315941] = 0;
  HEAP32[1315940] = 5264728;
  return;
}
function ___cxx_global_var_init34() {
  if (HEAP8[5274480] << 24 >> 24 != 0) {
    return;
  }
  HEAP32[1318620] = 1;
  HEAP32[1318621] = 0;
  return;
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18;
  r2 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r8 = r7;
  r9 = r8, r10 = r9 >> 2;
  HEAP32[r10] = 0;
  HEAP32[r10 + 1] = 0;
  HEAP32[r10 + 2] = 0;
  r10 = r1 >> 2;
  r11 = HEAP8[r6];
  if ((r11 & 1) << 24 >> 24 == 0) {
    r12 = r6 + 1 | 0;
  } else {
    r12 = HEAP32[r6 + 8 >> 2];
  }
  r13 = r11 & 255;
  if ((r13 & 1 | 0) == 0) {
    r14 = r13 >>> 1;
  } else {
    r14 = HEAP32[r6 + 4 >> 2];
  }
  r6 = r12 + r14 | 0;
  do {
    if (r12 >>> 0 < r6 >>> 0) {
      r14 = r12;
      while (1) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(r8, HEAP8[r14]);
        r13 = r14 + 1 | 0;
        if (r13 >>> 0 < r6 >>> 0) {
          r14 = r13;
        } else {
          break;
        }
      }
      r14 = (r3 | 0) == -1 ? -1 : r3 << 1;
      if ((HEAP8[r9] & 1) << 24 >> 24 == 0) {
        r15 = r14;
        r2 = 1758;
        break;
      }
      r16 = HEAP32[r8 + 8 >> 2];
      r17 = r14;
      break;
    } else {
      r15 = (r3 | 0) == -1 ? -1 : r3 << 1;
      r2 = 1758;
      break;
    }
  } while (0);
  if (r2 == 1758) {
    r16 = r8 + 1 | 0;
    r17 = r15;
  }
  r15 = __Z7catgetsP8_nl_catdiiPKc(r17, r4, r5, r16);
  HEAP32[r10] = 0;
  HEAP32[r10 + 1] = 0;
  HEAP32[r10 + 2] = 0;
  r10 = _strlen(r15);
  r16 = r15 + r10 | 0;
  if ((r10 | 0) > 0) {
    r18 = r15;
  } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r8);
    STACKTOP = r7;
    return;
  }
  while (1) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(r1, HEAP8[r18]);
    r15 = r18 + 1 | 0;
    if (r15 >>> 0 < r16 >>> 0) {
      r18 = r15;
    } else {
      break;
    }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r8);
  STACKTOP = r7;
  return;
}
__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE["X"] = 1;
function __ZNKSt3__18messagesIcE8do_closeEi(r1, r2) {
  __Z8catcloseP8_nl_catd((r2 | 0) == -1 ? -1 : r2 << 1);
  return;
}
function __ZNSt3__18messagesIwED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(r1, r2, r3) {
  var r4;
  if ((HEAP8[r2] & 1) << 24 >> 24 == 0) {
    r4 = r2 + 1 | 0;
  } else {
    r4 = HEAP32[r2 + 8 >> 2];
  }
  r2 = __Z7catopenPKci(r4, 200);
  return r2 >>> (((r2 | 0) != -1 & 1) >>> 0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35;
  r2 = 0;
  r7 = STACKTOP;
  STACKTOP = STACKTOP + 204 | 0;
  r8 = r7;
  r9 = r7 + 8;
  r10 = r7 + 40;
  r11 = r7 + 44, r12 = r11 >> 2;
  r13 = r7 + 48;
  r14 = r7 + 56;
  r15 = r7 + 184;
  r16 = r7 + 188, r17 = r16 >> 2;
  r18 = r7 + 192;
  r19 = r18, r20 = r19 >> 2;
  r21 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r22 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  HEAP32[r20] = 0;
  HEAP32[r20 + 1] = 0;
  HEAP32[r20 + 2] = 0;
  r20 = r1 >> 2;
  r23 = r21 | 0;
  HEAP32[r21 + 4 >> 2] = 0;
  HEAP32[r21 >> 2] = 5266212;
  r24 = HEAP8[r6];
  if ((r24 & 1) << 24 >> 24 == 0) {
    r25 = r6 + 4 | 0;
  } else {
    r25 = HEAP32[r6 + 8 >> 2];
  }
  r26 = r24 & 255;
  if ((r26 & 1 | 0) == 0) {
    r27 = r26 >>> 1;
  } else {
    r27 = HEAP32[r6 + 4 >> 2];
  }
  r6 = (r27 << 2) + r25 | 0;
  do {
    if (r25 >>> 0 < r6 >>> 0) {
      r27 = r21;
      r26 = r9 | 0;
      r24 = r9 + 32 | 0;
      r28 = r25;
      r29 = 5266212;
      while (1) {
        HEAP32[r12] = r28;
        r30 = (FUNCTION_TABLE[HEAP32[r29 + 12 >> 2]](r23, r8, r28, r6, r11, r26, r24, r10) | 0) == 2;
        if (r30 | (HEAP32[r12] | 0) == (r28 | 0)) {
          __ZNSt3__121__throw_runtime_errorEPKc(5244792);
        }
        L2053 : do {
          if (r26 >>> 0 < HEAP32[r10 >> 2] >>> 0) {
            r31 = r26;
            while (1) {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(r18, HEAP8[r31]);
              r32 = r31 + 1 | 0;
              if (r32 >>> 0 < HEAP32[r10 >> 2] >>> 0) {
                r31 = r32;
              } else {
                break L2053;
              }
            }
          }
        } while (0);
        r31 = HEAP32[r12];
        if (r31 >>> 0 >= r6 >>> 0 | r30) {
          break;
        }
        r28 = r31;
        r29 = HEAP32[r27 >> 2];
      }
      r27 = (r3 | 0) == -1 ? -1 : r3 << 1;
      if ((HEAP8[r19] & 1) << 24 >> 24 == 0) {
        r33 = r27;
        r2 = 1797;
        break;
      }
      r34 = HEAP32[r18 + 8 >> 2];
      r35 = r27;
      break;
    } else {
      r33 = (r3 | 0) == -1 ? -1 : r3 << 1;
      r2 = 1797;
      break;
    }
  } while (0);
  if (r2 == 1797) {
    r34 = r18 + 1 | 0;
    r35 = r33;
  }
  r33 = __Z7catgetsP8_nl_catdiiPKc(r35, r4, r5, r34);
  HEAP32[r20] = 0;
  HEAP32[r20 + 1] = 0;
  HEAP32[r20 + 2] = 0;
  r20 = r22 | 0;
  HEAP32[r22 + 4 >> 2] = 0;
  HEAP32[r22 >> 2] = 5266160;
  r34 = _strlen(r33);
  r5 = r33 + r34 | 0;
  if ((r34 | 0) < 1) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
    STACKTOP = r7;
    return;
  }
  r34 = r22;
  r22 = r5;
  r4 = r14 | 0;
  r35 = r14 + 128 | 0;
  r14 = r33;
  r33 = 5266160;
  while (1) {
    HEAP32[r17] = r14;
    r2 = (FUNCTION_TABLE[HEAP32[r33 + 16 >> 2]](r20, r13, r14, (r22 - r14 | 0) > 32 ? r14 + 32 | 0 : r5, r16, r4, r35, r15) | 0) == 2;
    if (r2 | (HEAP32[r17] | 0) == (r14 | 0)) {
      __ZNSt3__121__throw_runtime_errorEPKc(5244792);
    }
    L2075 : do {
      if (r4 >>> 0 < HEAP32[r15 >> 2] >>> 0) {
        r3 = r4;
        while (1) {
          __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(r1, HEAP32[r3 >> 2]);
          r19 = r3 + 4 | 0;
          if (r19 >>> 0 < HEAP32[r15 >> 2] >>> 0) {
            r3 = r19;
          } else {
            break L2075;
          }
        }
      }
    } while (0);
    r3 = HEAP32[r17];
    if (r3 >>> 0 >= r5 >>> 0 | r2) {
      break;
    }
    r14 = r3;
    r33 = HEAP32[r34 >> 2];
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r18);
  STACKTOP = r7;
  return;
}
__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE["X"] = 1;
function __ZNKSt3__18messagesIwE8do_closeEi(r1, r2) {
  __Z8catcloseP8_nl_catd((r2 | 0) == -1 ? -1 : r2 << 1);
  return;
}
function __ZNSt3__17codecvtIwc10_mbstate_tED2Ev(r1) {
  var r2;
  HEAP32[r1 >> 2] = 5265612;
  r2 = HEAP32[r1 + 8 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  _freelocale(r2);
  return;
}
function __ZNSt3__16locale5__impC1Ej() {
  __ZNSt3__16locale5__impC2Ej();
  return;
}
function __ZNSt3__16locale5__impC2Ej() {
  HEAP32[1315999] = 0;
  HEAP32[1315998] = 5265844;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(5264e3, 5250472, 1);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC1Ej();
  HEAP32[1316004] = HEAP32[1316003];
  __ZNSt3__112_GLOBAL__N_14makeINS_7collateIcEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7collateIwEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_5ctypeIcEEPtbiEERT_T0_T1_T2_();
  __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_5ctypeIwEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIcc10_mbstate_tEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7codecvtIcc10_mbstate_tEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIwc10_mbstate_tEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7codecvtIwc10_mbstate_tEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIDsc10_mbstate_tEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7codecvtIDsc10_mbstate_tEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIDic10_mbstate_tEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7codecvtIDic10_mbstate_tEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8numpunctIcEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8numpunctIwEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8messagesIcEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_();
  __ZNSt3__112_GLOBAL__N_14makeINS_8messagesIwEEiEERT_T0_();
  __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_();
  return;
}
__ZNSt3__16locale5__impC2Ej["X"] = 1;
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC1Ej() {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej();
  return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263948, __ZNSt3__16locale2id5__getEv(5273364));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263940, __ZNSt3__16locale2id5__getEv(5273356));
  return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5264148, __ZNSt3__16locale2id5__getEv(5273668));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_5ctypeIcEEPtbiEERT_T0_T1_T2_() {
  __ZNSt3__15ctypeIcEC1EPKtbj();
  return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5264140, __ZNSt3__16locale2id5__getEv(5273660));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc10_mbstate_tEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263968, __ZNSt3__16locale2id5__getEv(5273380));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc10_mbstate_tEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263956, __ZNSt3__16locale2id5__getEv(5273372));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIwc10_mbstate_tEEiEERT_T0_() {
  __ZNSt3__17codecvtIwc10_mbstate_tEC1Ej();
  return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc10_mbstate_tEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263976, __ZNSt3__16locale2id5__getEv(5273388));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic10_mbstate_tEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263984, __ZNSt3__16locale2id5__getEv(5273396));
  return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263868, __ZNSt3__16locale2id5__getEv(5273300));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8numpunctIcEEiEERT_T0_() {
  __ZNSt3__18numpunctIcEC1Ej();
  return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263840, __ZNSt3__16locale2id5__getEv(5273292));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8numpunctIwEEiEERT_T0_() {
  __ZNSt3__18numpunctIwEC1Ej();
  return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263932, __ZNSt3__16locale2id5__getEv(5273348));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263924, __ZNSt3__16locale2id5__getEv(5273340));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263916, __ZNSt3__16locale2id5__getEv(5273332));
  return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263908, __ZNSt3__16locale2id5__getEv(5273324));
  return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5264188, __ZNSt3__16locale2id5__getEv(5274168));
  return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5264180, __ZNSt3__16locale2id5__getEv(5274160));
  return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5264172, __ZNSt3__16locale2id5__getEv(5274152));
  return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5264164, __ZNSt3__16locale2id5__getEv(5274144));
  return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263784, __ZNSt3__16locale2id5__getEv(5273252));
  return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263776, __ZNSt3__16locale2id5__getEv(5273244));
  return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263768, __ZNSt3__16locale2id5__getEv(5273236));
  return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263760, __ZNSt3__16locale2id5__getEv(5273228));
  return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263828, __ZNSt3__16locale2id5__getEv(5273284));
  return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv() {
  var r1;
  r1 = ___cxa_allocate_exception(8);
  __ZNSt11logic_errorC2EPKc(r1, 5247680);
  HEAP32[r1 >> 2] = 5264680;
  ___cxa_throw(r1, 5271232, 84);
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8messagesIcEEiEERT_T0_() {
  HEAP32[1315976] = 0;
  HEAP32[1315975] = 5265212;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8messagesIwEEiEERT_T0_() {
  HEAP32[1315974] = 0;
  HEAP32[1315973] = 5265176;
  return;
}
function __ZNSt3__16locale5facetD1Ev(r1) {
  return;
}
function __ZNSt3__15ctypeIwED1Ev(r1) {
  return;
}
function __ZNKSt3__15ctypeIcE8do_widenEc(r1, r2) {
  return r2;
}
function __ZNKSt3__15ctypeIwE8do_widenEc(r1, r2) {
  return r2 << 24 >> 24;
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc(r1, r2, r3) {
  return r2 >>> 0 < 128 ? r2 & 255 : r3;
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc(r1, r2, r3) {
  return r2 << 24 >> 24 > -1 ? r2 : r3;
}
function __ZNKSt3__16locale5__imp9has_facetEl(r1, r2, r3) {
  var r4;
  if (r2 - r1 >> 2 >>> 0 <= r3 >>> 0) {
    r4 = 0;
    return r4;
  }
  r4 = (HEAP32[r1 + (r3 << 2) >> 2] | 0) != 0;
  return r4;
}
function __ZNSt3__16locale2id6__initEv(r1) {
  HEAP32[r1 + 4 >> 2] = (tempValue = HEAP32[1318351], HEAP32[1318351] = tempValue + 1, tempValue) + 1 | 0;
  return;
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw(r1, r2, r3, r4) {
  var r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    r5 = r2;
    return r5;
  } else {
    r6 = r2;
    r7 = r4;
  }
  while (1) {
    HEAP32[r7 >> 2] = HEAP8[r6] << 24 >> 24;
    r4 = r6 + 1 | 0;
    if ((r4 | 0) == (r3 | 0)) {
      r5 = r3;
      break;
    } else {
      r6 = r4;
      r7 = r7 + 4 | 0;
    }
  }
  return r5;
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc(r1, r2, r3, r4, r5) {
  var r6, r7, r8;
  if ((r2 | 0) == (r3 | 0)) {
    r6 = r2;
    return r6;
  }
  r1 = ((r3 - 4 + -r2 | 0) >>> 2) + 1 | 0;
  r7 = r2;
  r8 = r5;
  while (1) {
    r5 = HEAP32[r7 >> 2];
    HEAP8[r8] = r5 >>> 0 < 128 ? r5 & 255 : r4;
    r5 = r7 + 4 | 0;
    if ((r5 | 0) == (r3 | 0)) {
      break;
    } else {
      r7 = r5;
      r8 = r8 + 1 | 0;
    }
  }
  r6 = (r1 << 2) + r2 | 0;
  return r6;
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc(r1, r2, r3, r4) {
  var r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    r5 = r2;
    return r5;
  } else {
    r6 = r2;
    r7 = r4;
  }
  while (1) {
    HEAP8[r7] = HEAP8[r6];
    r4 = r6 + 1 | 0;
    if ((r4 | 0) == (r3 | 0)) {
      r5 = r3;
      break;
    } else {
      r6 = r4;
      r7 = r7 + 1 | 0;
    }
  }
  return r5;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_() {
  HEAP32[1315958] = 0;
  HEAP32[1315957] = 5265820;
  __ZNSt3__120__time_get_c_storageIcEC2Ev();
  HEAP32[1315957] = 5265e3;
  HEAP32[1315959] = 5265048;
  return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263816, __ZNSt3__16locale2id5__getEv(5273276));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_() {
  HEAP32[1315955] = 0;
  HEAP32[1315954] = 5265820;
  __ZNSt3__120__time_get_c_storageIwEC2Ev();
  HEAP32[1315954] = 5264912;
  HEAP32[1315956] = 5264960;
  return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263804, __ZNSt3__16locale2id5__getEv(5273268));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_() {
  HEAP32[1315952] = 0;
  HEAP32[1315951] = 5265820;
  HEAP32[1315953] = __ZNSt3__16__clocEv();
  HEAP32[1315951] = 5264884;
  return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263792, __ZNSt3__16locale2id5__getEv(5273260));
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_() {
  HEAP32[1315949] = 0;
  HEAP32[1315948] = 5265820;
  HEAP32[1315950] = __ZNSt3__16__clocEv();
  HEAP32[1315948] = 5264856;
  return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263900, __ZNSt3__16locale2id5__getEv(5273316));
  return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_() {
  __ZNSt3__16locale5__imp7installEPNS0_5facetEl(5263892, __ZNSt3__16locale2id5__getEv(5273308));
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED1Ev(r1) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(r1);
  return;
}
function __ZNSt3__16locale7classicEv() {
  do {
    if (HEAP8[5274280] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274280) | 0) == 0) {
        break;
      }
      __ZNSt3__16locale5__imp12make_classicEv();
      HEAP32[1315935] = 5263744;
    }
  } while (0);
  return HEAP32[1315935];
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl(r1, r2) {
  var r3, r4, r5, r6;
  __ZNSt3__114__shared_count12__add_sharedEv(r1 | 0);
  r3 = HEAP32[1316003];
  if (HEAP32[1316004] - r3 >> 2 >>> 0 > r2 >>> 0) {
    r4 = r3;
  } else {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(r2 + 1 | 0);
    r4 = HEAP32[1316003];
  }
  r3 = HEAP32[r4 + (r2 << 2) >> 2];
  if ((r3 | 0) == 0) {
    r5 = r4;
    r6 = (r2 << 2) + r5 | 0;
    HEAP32[r6 >> 2] = r1;
    return;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(r3 | 0);
  r5 = HEAP32[1316003];
  r6 = (r2 << 2) + r5 | 0;
  HEAP32[r6 >> 2] = r1;
  return;
}
function __ZNSt3__16locale5__impD0Ev(r1) {
  __ZNSt3__16locale5__impD1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__16locale5__impD1Ev(r1) {
  __ZNSt3__16locale5__impD2Ev(r1);
  return;
}
function __ZNSt3__16locale5__impD2Ev(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
  HEAP32[r1 >> 2] = 5265844;
  r2 = r1 + 20 | 0;
  r3 = r1 + 24 | 0;
  r4 = HEAP32[r3 >> 2];
  r5 = r2 | 0;
  r6 = HEAP32[r5 >> 2];
  L2214 : do {
    if ((r4 | 0) != (r6 | 0)) {
      r7 = 0;
      r8 = r6;
      r9 = r4;
      while (1) {
        r10 = HEAP32[r8 + (r7 << 2) >> 2];
        if ((r10 | 0) == 0) {
          r11 = r9;
          r12 = r8;
        } else {
          __ZNSt3__114__shared_count16__release_sharedEv(r10 | 0);
          r11 = HEAP32[r3 >> 2];
          r12 = HEAP32[r5 >> 2];
        }
        r10 = r7 + 1 | 0;
        if (r10 >>> 0 < r11 - r12 >> 2 >>> 0) {
          r7 = r10;
          r8 = r12;
          r9 = r11;
        } else {
          break L2214;
        }
      }
    }
  } while (0);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED1Ev(r2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1 + 8 | 0);
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(r1) {
  var r2, r3;
  r2 = HEAP32[1316003];
  r3 = HEAP32[1316004] - r2 >> 2;
  if (r3 >>> 0 < r1 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(r1 - r3 | 0);
    return;
  }
  if (r3 >>> 0 <= r1 >>> 0) {
    return;
  }
  HEAP32[1316004] = (r1 << 2) + r2 | 0;
  return;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
  __ZNSt3__112_GLOBAL__N_14makeINS_6locale5__impEiEERT_T0_();
  HEAP32[1315936] = 5263992;
  return;
}
function __ZNSt3__112_GLOBAL__N_14makeINS_6locale5__impEiEERT_T0_() {
  __ZNSt3__16locale5__impC1Ej();
  return;
}
function __ZNSt3__16locale5__imp11make_globalEv() {
  __ZNSt3__16localeC1ERKS0_(5263748, HEAP32[__ZNSt3__16locale7classicEv() >> 2]);
  return;
}
function __ZNSt3__16localeC1ERKS0_(r1, r2) {
  __ZNSt3__16localeC2ERKS0_(r1, r2);
  return;
}
function __ZNSt3__16locale8__globalEv() {
  do {
    if (HEAP8[5274272] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274272) | 0) == 0) {
        break;
      }
      __ZNSt3__16locale5__imp11make_globalEv();
      HEAP32[1315934] = 5263748;
    }
  } while (0);
  return HEAP32[1315934];
}
function __ZNSt3__16localeC1Ev(r1) {
  __ZNSt3__16localeC2Ev(r1);
  return;
}
function __ZNSt3__16localeC2ERKS0_(r1, r2) {
  HEAP32[r1 >> 2] = r2;
  __ZNSt3__114__shared_count12__add_sharedEv(r2 | 0);
  return;
}
function __ZNSt3__16localeD2Ev(r1) {
  __ZNSt3__114__shared_count16__release_sharedEv(r1 | 0);
  return;
}
function __ZNSt3__16locale2id5__getEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 24 | 0;
  r3 = r2 + 12;
  __ZNSt3__112_GLOBAL__N_111__fake_bindC1EMNS_6locale2idEFvvEPS3_(r3, r1);
  r4 = r1 | 0;
  if ((HEAP32[r4 >> 2] | 0) != -1) {
    r5 = r3 >> 2;
    r3 = r2, r6 = r3 >> 2;
    HEAP32[r6] = HEAP32[r5];
    HEAP32[r6 + 1] = HEAP32[r5 + 1];
    HEAP32[r6 + 2] = HEAP32[r5 + 2];
    __ZNSt3__111__call_onceERVmPvPFvS2_E(r4, r3);
  }
  STACKTOP = r2;
  return HEAP32[r1 + 4 >> 2] - 1 | 0;
}
function __ZNKSt3__16locale9use_facetERNS0_2idE(r1, r2) {
  var r3;
  r3 = __ZNSt3__16locale2id5__getEv(r2);
  return __ZNKSt3__16locale5__imp9use_facetEl(HEAP32[r1 + 20 >> 2], HEAP32[r1 + 24 >> 2], r3);
}
function __ZNSt3__16locale5facetD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__112_GLOBAL__N_111__fake_bindC1EMNS_6locale2idEFvvEPS3_(r1, r2) {
  __ZNSt3__112_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_(r1, r2);
  return;
}
function __ZNSt3__15ctypeIwED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw(r1, r2, r3) {
  var r4;
  if (r3 >>> 0 >= 128) {
    r4 = 0;
    return r4;
  }
  r4 = (HEAP16[__ZNSt3__15ctypeIcE13classic_tableEv() + (r3 << 1) >> 1] & r2) << 16 >> 16 != 0;
  return r4;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt(r1, r2, r3, r4) {
  var r5, r6, r7, r8;
  if ((r2 | 0) == (r3 | 0)) {
    r5 = r2;
    return r5;
  }
  r1 = ((r3 - 4 + -r2 | 0) >>> 2) + 1 | 0;
  r6 = r2;
  r7 = r4;
  while (1) {
    r4 = HEAP32[r6 >> 2];
    if (r4 >>> 0 < 128) {
      r8 = HEAP16[__ZNSt3__15ctypeIcE13classic_tableEv() + (r4 << 1) >> 1];
    } else {
      r8 = 0;
    }
    HEAP16[r7 >> 1] = r8;
    r4 = r6 + 4 | 0;
    if ((r4 | 0) == (r3 | 0)) {
      break;
    } else {
      r6 = r4;
      r7 = r7 + 2 | 0;
    }
  }
  r5 = (r1 << 2) + r2 | 0;
  return r5;
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_(r1, r2, r3, r4) {
  var r5, r6;
  L2268 : do {
    if ((r3 | 0) == (r4 | 0)) {
      r5 = r3;
    } else {
      r1 = r3;
      while (1) {
        r6 = HEAP32[r1 >> 2];
        if (r6 >>> 0 < 128) {
          if ((HEAP16[__ZNSt3__15ctypeIcE13classic_tableEv() + (r6 << 1) >> 1] & r2) << 16 >> 16 != 0) {
            r5 = r1;
            break L2268;
          }
        }
        r6 = r1 + 4 | 0;
        if ((r6 | 0) == (r4 | 0)) {
          r5 = r4;
          break L2268;
        } else {
          r1 = r6;
        }
      }
    }
  } while (0);
  return r5;
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_(r1, r2, r3, r4) {
  var r5;
  r1 = r3;
  while (1) {
    if ((r1 | 0) == (r4 | 0)) {
      r5 = r4;
      break;
    }
    r3 = HEAP32[r1 >> 2];
    if (r3 >>> 0 >= 128) {
      r5 = r1;
      break;
    }
    if ((HEAP16[__ZNSt3__15ctypeIcE13classic_tableEv() + (r3 << 1) >> 1] & r2) << 16 >> 16 == 0) {
      r5 = r1;
      break;
    } else {
      r1 = r1 + 4 | 0;
    }
  }
  return r5;
}
function __ZNKSt3__15ctypeIwE10do_toupperEw(r1, r2) {
  var r3;
  if (r2 >>> 0 >= 128) {
    r3 = r2;
    return r3;
  }
  r3 = HEAP32[__ZNSt3__15ctypeIcE21__classic_upper_tableEv() + (r2 << 2) >> 2];
  return r3;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    r4 = r2;
    return r4;
  }
  r1 = ((r3 - 4 + -r2 | 0) >>> 2) + 1 | 0;
  r5 = r2;
  while (1) {
    r6 = HEAP32[r5 >> 2];
    if (r6 >>> 0 < 128) {
      r7 = HEAP32[__ZNSt3__15ctypeIcE21__classic_upper_tableEv() + (r6 << 2) >> 2];
    } else {
      r7 = r6;
    }
    HEAP32[r5 >> 2] = r7;
    r6 = r5 + 4 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r6;
    }
  }
  r4 = (r1 << 2) + r2 | 0;
  return r4;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw(r1, r2) {
  var r3;
  if (r2 >>> 0 >= 128) {
    r3 = r2;
    return r3;
  }
  r3 = HEAP32[__ZNSt3__15ctypeIcE21__classic_lower_tableEv() + (r2 << 2) >> 2];
  return r3;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r2 | 0) == (r3 | 0)) {
    r4 = r2;
    return r4;
  }
  r1 = ((r3 - 4 + -r2 | 0) >>> 2) + 1 | 0;
  r5 = r2;
  while (1) {
    r6 = HEAP32[r5 >> 2];
    if (r6 >>> 0 < 128) {
      r7 = HEAP32[__ZNSt3__15ctypeIcE21__classic_lower_tableEv() + (r6 << 2) >> 2];
    } else {
      r7 = r6;
    }
    HEAP32[r5 >> 2] = r7;
    r6 = r5 + 4 | 0;
    if ((r6 | 0) == (r3 | 0)) {
      break;
    } else {
      r5 = r6;
    }
  }
  r4 = (r1 << 2) + r2 | 0;
  return r4;
}
function __ZNSt3__15ctypeIcEC1EPKtbj() {
  __ZNSt3__15ctypeIcEC2EPKtbj();
  return;
}
function __ZNSt3__15ctypeIcEC2EPKtbj() {
  HEAP32[1316038] = 0;
  HEAP32[1316037] = 5265940;
  HEAP32[1316039] = 0;
  HEAP8[5264160] = 0;
  HEAP32[1316039] = __ZNSt3__15ctypeIcE13classic_tableEv();
  return;
}
function __ZNSt3__15ctypeIcED0Ev(r1) {
  __ZNSt3__15ctypeIcED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__15ctypeIcED1Ev(r1) {
  __ZNSt3__15ctypeIcED2Ev(r1);
  return;
}
function __ZNSt3__15ctypeIcED2Ev(r1) {
  var r2;
  HEAP32[r1 >> 2] = 5265940;
  r2 = HEAP32[r1 + 8 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  if ((HEAP8[r1 + 12 | 0] & 1) << 24 >> 24 == 0) {
    return;
  }
  __ZdaPv(r2);
  return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc(r1, r2) {
  var r3;
  r1 = r2 << 24 >> 24;
  if (r2 << 24 >> 24 > -1) {
    r3 = HEAP32[__ZNSt3__15ctypeIcE21__classic_upper_tableEv() + (r1 << 2) >> 2];
  } else {
    r3 = r1;
  }
  return r3 & 255;
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc(r1, r2, r3) {
  var r4, r5, r6;
  if ((r2 | 0) == (r3 | 0)) {
    r4 = r2;
    return r4;
  } else {
    r5 = r2;
  }
  while (1) {
    r2 = HEAP8[r5];
    r1 = r2 << 24 >> 24;
    if (r2 << 24 >> 24 > -1) {
      r6 = HEAP32[__ZNSt3__15ctypeIcE21__classic_upper_tableEv() + (r1 << 2) >> 2];
    } else {
      r6 = r1;
    }
    HEAP8[r5] = r6 & 255;
    r1 = r5 + 1 | 0;
    if ((r1 | 0) == (r3 | 0)) {
      r4 = r3;
      break;
    } else {
      r5 = r1;
    }
  }
  return r4;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc(r1, r2) {
  var r3;
  r1 = r2 << 24 >> 24;
  if (r2 << 24 >> 24 > -1) {
    r3 = HEAP32[__ZNSt3__15ctypeIcE21__classic_lower_tableEv() + (r1 << 2) >> 2];
  } else {
    r3 = r1;
  }
  return r3 & 255;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc(r1, r2, r3) {
  var r4, r5, r6;
  if ((r2 | 0) == (r3 | 0)) {
    r4 = r2;
    return r4;
  } else {
    r5 = r2;
  }
  while (1) {
    r2 = HEAP8[r5];
    r1 = r2 << 24 >> 24;
    if (r2 << 24 >> 24 > -1) {
      r6 = HEAP32[__ZNSt3__15ctypeIcE21__classic_lower_tableEv() + (r1 << 2) >> 2];
    } else {
      r6 = r1;
    }
    HEAP8[r5] = r6 & 255;
    r1 = r5 + 1 | 0;
    if ((r1 | 0) == (r3 | 0)) {
      r4 = r3;
      break;
    } else {
      r5 = r1;
    }
  }
  return r4;
}
function __ZNKSt3__16locale5__imp9use_facetEl(r1, r2, r3) {
  if (__ZNKSt3__16locale5__imp9has_facetEl(r1, r2, r3)) {
    return HEAP32[r1 + (r3 << 2) >> 2];
  } else {
    r3 = ___cxa_allocate_exception(4);
    __ZNSt8bad_castC1Ev(r3);
    ___cxa_throw(r3, 5271208, 452);
  }
}
function __ZNSt3__16localeC2Ev(r1) {
  var r2;
  r2 = HEAP32[__ZNSt3__16locale8__globalEv() >> 2];
  HEAP32[r1 >> 2] = r2;
  __ZNSt3__114__shared_count12__add_sharedEv(r2 | 0);
  return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r1 >> 2] + 4 >> 2]](r1);
  return;
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
  return HEAP32[___ctype_b_loc() >> 2];
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
  return HEAP32[___ctype_toupper_loc() >> 2];
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
  return HEAP32[___ctype_tolower_loc() >> 2];
}
function __ZNSt3__17codecvtIcc10_mbstate_tED1Ev(r1) {
  return;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  HEAP32[r5 >> 2] = r3;
  HEAP32[r8 >> 2] = r6;
  return 3;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  HEAP32[r5 >> 2] = r3;
  HEAP32[r8 >> 2] = r6;
  return 3;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_(r1, r2, r3, r4, r5) {
  HEAP32[r5 >> 2] = r3;
  return 3;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE11do_encodingEv(r1) {
  return 1;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE16do_always_noconvEv(r1) {
  return 1;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE13do_max_lengthEv(r1) {
  return 1;
}
function __ZNSt3__17codecvtIwc10_mbstate_tEC2Ej() {
  HEAP32[1315990] = 0;
  HEAP32[1315989] = 5265612;
  HEAP32[1315991] = 0;
  return;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE16do_always_noconvEv(r1) {
  return 0;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE9do_lengthERS1_PKcS5_j(r1, r2, r3, r4, r5) {
  r2 = r4 - r3 | 0;
  return r2 >>> 0 < r5 >>> 0 ? r2 : r5;
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc(r1, r2, r3, r4, r5) {
  var r6, r7, r8;
  if ((r2 | 0) == (r3 | 0)) {
    r6 = r2;
    return r6;
  } else {
    r7 = r2;
    r8 = r5;
  }
  while (1) {
    r5 = HEAP8[r7];
    HEAP8[r8] = r5 << 24 >> 24 > -1 ? r5 : r4;
    r5 = r7 + 1 | 0;
    if ((r5 | 0) == (r3 | 0)) {
      r6 = r3;
      break;
    } else {
      r7 = r5;
      r8 = r8 + 1 | 0;
    }
  }
  return r6;
}
function __ZNSt3__17codecvtIcc10_mbstate_tED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__17codecvtIwc10_mbstate_tEC1Ej() {
  __ZNSt3__17codecvtIwc10_mbstate_tEC2Ej();
  return;
}
function __ZNSt3__17codecvtIwc10_mbstate_tED0Ev(r1) {
  __ZNSt3__17codecvtIwc10_mbstate_tED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__17codecvtIwc10_mbstate_tED1Ev(r1) {
  __ZNSt3__17codecvtIwc10_mbstate_tED2Ev(r1);
  return;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35;
  r9 = r8 >> 2;
  r8 = r5 >> 2;
  r10 = 0;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 12 | 0;
  r12 = r11;
  r13 = r11 + 8;
  r14 = r3;
  while (1) {
    if ((r14 | 0) == (r4 | 0)) {
      r15 = r4;
      break;
    }
    if ((HEAP32[r14 >> 2] | 0) == 0) {
      r15 = r14;
      break;
    } else {
      r14 = r14 + 4 | 0;
    }
  }
  HEAP32[r9] = r6;
  HEAP32[r8] = r3;
  L2394 : do {
    if ((r3 | 0) == (r4 | 0) | (r6 | 0) == (r7 | 0)) {
      r16 = r3;
    } else {
      r14 = r2;
      r17 = r12;
      r18 = r7;
      r19 = (r1 + 8 | 0) >> 2;
      r20 = r13 | 0;
      r21 = r6;
      r22 = r3;
      r23 = r15;
      while (1) {
        r24 = HEAP32[r14 + 4 >> 2];
        HEAP32[r17 >> 2] = HEAP32[r14 >> 2];
        HEAP32[r17 + 4 >> 2] = r24;
        r24 = _uselocale(HEAP32[r19]);
        r25 = _wcsnrtombs(r21, r5, r23 - r22 >> 2, r18 - r21 | 0, r2);
        if ((r24 | 0) != 0) {
          _uselocale(r24);
        }
        if ((r25 | 0) == 0) {
          r26 = 1;
          r10 = 2162;
          break;
        } else if ((r25 | 0) == -1) {
          r10 = 2124;
          break;
        }
        r24 = HEAP32[r9] + r25 | 0;
        HEAP32[r9] = r24;
        if ((r24 | 0) == (r7 | 0)) {
          r10 = 2157;
          break;
        }
        if ((r23 | 0) == (r4 | 0)) {
          r27 = r4;
          r28 = r24;
          r29 = HEAP32[r8];
        } else {
          r24 = _uselocale(HEAP32[r19]);
          r25 = _wcrtomb(r20, 0, r2);
          if ((r24 | 0) != 0) {
            _uselocale(r24);
          }
          if ((r25 | 0) == -1) {
            r26 = 2;
            r10 = 2161;
            break;
          }
          r24 = HEAP32[r9];
          if (r25 >>> 0 > (r18 - r24 | 0) >>> 0) {
            r26 = 1;
            r10 = 2160;
            break;
          }
          L2413 : do {
            if ((r25 | 0) != 0) {
              r30 = r25;
              r31 = r20;
              r32 = r24;
              while (1) {
                r33 = HEAP8[r31];
                HEAP32[r9] = r32 + 1 | 0;
                HEAP8[r32] = r33;
                r33 = r30 - 1 | 0;
                if ((r33 | 0) == 0) {
                  break L2413;
                }
                r30 = r33;
                r31 = r31 + 1 | 0;
                r32 = HEAP32[r9];
              }
            }
          } while (0);
          r24 = HEAP32[r8] + 4 | 0;
          HEAP32[r8] = r24;
          r25 = r24;
          while (1) {
            if ((r25 | 0) == (r4 | 0)) {
              r34 = r4;
              break;
            }
            if ((HEAP32[r25 >> 2] | 0) == 0) {
              r34 = r25;
              break;
            } else {
              r25 = r25 + 4 | 0;
            }
          }
          r27 = r34;
          r28 = HEAP32[r9];
          r29 = r24;
        }
        if ((r29 | 0) == (r4 | 0) | (r28 | 0) == (r7 | 0)) {
          r16 = r29;
          break L2394;
        } else {
          r21 = r28;
          r22 = r29;
          r23 = r27;
        }
      }
      if (r10 == 2160) {
        STACKTOP = r11;
        return r26;
      } else if (r10 == 2161) {
        STACKTOP = r11;
        return r26;
      } else if (r10 == 2162) {
        STACKTOP = r11;
        return r26;
      } else if (r10 == 2124) {
        HEAP32[r9] = r21;
        L2428 : do {
          if ((r22 | 0) == (HEAP32[r8] | 0)) {
            r35 = r22;
          } else {
            r23 = r22;
            r20 = r21;
            while (1) {
              r18 = HEAP32[r23 >> 2];
              r17 = _uselocale(HEAP32[r19]);
              r14 = _wcrtomb(r20, r18, r12);
              if ((r17 | 0) != 0) {
                _uselocale(r17);
              }
              if ((r14 | 0) == -1) {
                r35 = r23;
                break L2428;
              }
              r17 = HEAP32[r9] + r14 | 0;
              HEAP32[r9] = r17;
              r14 = r23 + 4 | 0;
              if ((r14 | 0) == (HEAP32[r8] | 0)) {
                r35 = r14;
                break L2428;
              } else {
                r23 = r14;
                r20 = r17;
              }
            }
          }
        } while (0);
        HEAP32[r8] = r35;
        r26 = 2;
        STACKTOP = r11;
        return r26;
      } else if (r10 == 2157) {
        r16 = HEAP32[r8];
        break;
      }
    }
  } while (0);
  r26 = (r16 | 0) != (r4 | 0) & 1;
  STACKTOP = r11;
  return r26;
}
__ZNKSt3__17codecvtIwc10_mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_["X"] = 1;
function __ZNKSt3__17codecvtIwc10_mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33;
  r9 = r8 >> 2;
  r8 = r5 >> 2;
  r10 = 0;
  r11 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r12 = r11;
  r13 = r3;
  while (1) {
    if ((r13 | 0) == (r4 | 0)) {
      r14 = r4;
      break;
    }
    if (HEAP8[r13] << 24 >> 24 == 0) {
      r14 = r13;
      break;
    } else {
      r13 = r13 + 1 | 0;
    }
  }
  HEAP32[r9] = r6;
  HEAP32[r8] = r3;
  L2446 : do {
    if ((r3 | 0) == (r4 | 0) | (r6 | 0) == (r7 | 0)) {
      r15 = r3;
    } else {
      r13 = r2;
      r16 = r12;
      r17 = r7;
      r18 = (r1 + 8 | 0) >> 2;
      r19 = r6;
      r20 = r3;
      r21 = r14;
      while (1) {
        r22 = HEAP32[r13 + 4 >> 2];
        HEAP32[r16 >> 2] = HEAP32[r13 >> 2];
        HEAP32[r16 + 4 >> 2] = r22;
        r23 = r21;
        r22 = _uselocale(HEAP32[r18]);
        r24 = _mbsnrtowcs(r19, r5, r23 - r20 | 0, r17 - r19 >> 2, r2);
        if ((r22 | 0) != 0) {
          _uselocale(r22);
        }
        if ((r24 | 0) == 0) {
          r25 = 2;
          r10 = 2219;
          break;
        } else if ((r24 | 0) == -1) {
          r10 = 2179;
          break;
        }
        r22 = (r24 << 2) + HEAP32[r9] | 0;
        HEAP32[r9] = r22;
        if ((r22 | 0) == (r7 | 0)) {
          r10 = 2211;
          break;
        }
        r24 = HEAP32[r8];
        if ((r21 | 0) == (r4 | 0)) {
          r26 = r4;
          r27 = r22;
          r28 = r24;
        } else {
          r29 = _uselocale(HEAP32[r18]);
          r30 = _mbrtowc(r22, r24, 1, r2);
          if ((r29 | 0) != 0) {
            _uselocale(r29);
          }
          if ((r30 | 0) != 0) {
            r25 = 2;
            r10 = 2218;
            break;
          }
          HEAP32[r9] = HEAP32[r9] + 4 | 0;
          r30 = HEAP32[r8] + 1 | 0;
          HEAP32[r8] = r30;
          r29 = r30;
          while (1) {
            if ((r29 | 0) == (r4 | 0)) {
              r31 = r4;
              break;
            }
            if (HEAP8[r29] << 24 >> 24 == 0) {
              r31 = r29;
              break;
            } else {
              r29 = r29 + 1 | 0;
            }
          }
          r26 = r31;
          r27 = HEAP32[r9];
          r28 = r30;
        }
        if ((r28 | 0) == (r4 | 0) | (r27 | 0) == (r7 | 0)) {
          r15 = r28;
          break L2446;
        } else {
          r19 = r27;
          r20 = r28;
          r21 = r26;
        }
      }
      if (r10 == 2218) {
        STACKTOP = r11;
        return r25;
      } else if (r10 == 2219) {
        STACKTOP = r11;
        return r25;
      } else if (r10 == 2211) {
        r15 = HEAP32[r8];
        break;
      } else if (r10 == 2179) {
        HEAP32[r9] = r19;
        L2473 : do {
          if ((r20 | 0) == (HEAP32[r8] | 0)) {
            r32 = r20;
          } else {
            r21 = r19;
            r17 = r20;
            while (1) {
              r16 = _uselocale(HEAP32[r18]);
              r13 = _mbrtowc(r21, r17, r23 - r17 | 0, r12);
              if ((r16 | 0) != 0) {
                _uselocale(r16);
              }
              if ((r13 | 0) == -1) {
                r10 = 2190;
                break;
              } else if ((r13 | 0) == -2) {
                r10 = 2191;
                break;
              } else if ((r13 | 0) == 0) {
                r33 = r17 + 1 | 0;
              } else {
                r33 = r17 + r13 | 0;
              }
              r13 = HEAP32[r9] + 4 | 0;
              HEAP32[r9] = r13;
              if ((r33 | 0) == (HEAP32[r8] | 0)) {
                r32 = r33;
                break L2473;
              } else {
                r21 = r13;
                r17 = r33;
              }
            }
            if (r10 == 2190) {
              HEAP32[r8] = r17;
              r25 = 2;
              STACKTOP = r11;
              return r25;
            } else if (r10 == 2191) {
              HEAP32[r8] = r17;
              r25 = 1;
              STACKTOP = r11;
              return r25;
            }
          }
        } while (0);
        HEAP32[r8] = r32;
        r25 = (r32 | 0) != (r4 | 0) & 1;
        STACKTOP = r11;
        return r25;
      }
    }
  } while (0);
  r25 = (r15 | 0) != (r4 | 0) & 1;
  STACKTOP = r11;
  return r25;
}
__ZNKSt3__17codecvtIwc10_mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_["X"] = 1;
function __ZNKSt3__17codecvtIwc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11;
  r6 = STACKTOP;
  STACKTOP = STACKTOP + 4 | 0;
  HEAP32[r5 >> 2] = r3;
  r3 = r6 | 0;
  r7 = _uselocale(HEAP32[r1 + 8 >> 2]);
  r1 = _wcrtomb(r3, 0, r2);
  if ((r7 | 0) != 0) {
    _uselocale(r7);
  }
  L2498 : do {
    if ((r1 | 0) == -1 | (r1 | 0) == 0) {
      r8 = 2;
    } else {
      r7 = r1 - 1 | 0;
      r2 = HEAP32[r5 >> 2];
      if (r7 >>> 0 > (r4 - r2 | 0) >>> 0) {
        r8 = 1;
        break;
      }
      if ((r7 | 0) == 0) {
        r8 = 0;
        break;
      } else {
        r9 = r7;
        r10 = r3;
        r11 = r2;
      }
      while (1) {
        r2 = HEAP8[r10];
        HEAP32[r5 >> 2] = r11 + 1 | 0;
        HEAP8[r11] = r2;
        r2 = r9 - 1 | 0;
        if ((r2 | 0) == 0) {
          r8 = 0;
          break L2498;
        }
        r9 = r2;
        r10 = r10 + 1 | 0;
        r11 = HEAP32[r5 >> 2];
      }
    }
  } while (0);
  STACKTOP = r6;
  return r8;
}
__ZNKSt3__17codecvtIwc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_["X"] = 1;
function __ZNKSt3__17codecvtIwc10_mbstate_tE11do_encodingEv(r1) {
  var r2, r3, r4, r5, r6;
  r2 = r1 + 8 | 0;
  r1 = _uselocale(HEAP32[r2 >> 2]);
  r3 = _mbtowc(0, 0, 1);
  if ((r1 | 0) != 0) {
    _uselocale(r1);
  }
  if ((r3 | 0) != 0) {
    r4 = -1;
    return r4;
  }
  r3 = HEAP32[r2 >> 2];
  if ((r3 | 0) == 0) {
    r4 = 1;
    return r4;
  }
  r4 = _uselocale(r3);
  r3 = ___locale_mb_cur_max();
  if ((r4 | 0) == 0) {
    r5 = (r3 | 0) == 1;
    r6 = r5 & 1;
    return r6;
  }
  _uselocale(r4);
  r5 = (r3 | 0) == 1;
  r6 = r5 & 1;
  return r6;
}
__ZNKSt3__17codecvtIwc10_mbstate_tE11do_encodingEv["X"] = 1;
function __ZNKSt3__17codecvtIwc10_mbstate_tE9do_lengthERS1_PKcS5_j(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14;
  r6 = 0;
  if ((r5 | 0) == 0 | (r3 | 0) == (r4 | 0)) {
    r7 = 0;
    return r7;
  }
  r8 = r4;
  r9 = r1 + 8 | 0;
  r1 = r3;
  r3 = 0;
  r10 = 0;
  while (1) {
    r11 = _uselocale(HEAP32[r9 >> 2]);
    r12 = _mbrlen(r1, r8 - r1 | 0, r2);
    if ((r11 | 0) != 0) {
      _uselocale(r11);
    }
    if ((r12 | 0) == 0) {
      r13 = 1;
      r14 = r1 + 1 | 0;
    } else if ((r12 | 0) == -1 | (r12 | 0) == -2) {
      r7 = r3;
      r6 = 2275;
      break;
    } else {
      r13 = r12;
      r14 = r1 + r12 | 0;
    }
    r12 = r13 + r3 | 0;
    r11 = r10 + 1 | 0;
    if (r11 >>> 0 >= r5 >>> 0 | (r14 | 0) == (r4 | 0)) {
      r7 = r12;
      r6 = 2276;
      break;
    } else {
      r1 = r14;
      r3 = r12;
      r10 = r11;
    }
  }
  if (r6 == 2275) {
    return r7;
  } else if (r6 == 2276) {
    return r7;
  }
}
function __ZNSt3__17codecvtIDsc10_mbstate_tED1Ev(r1) {
  return;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_(r1, r2, r3, r4, r5) {
  HEAP32[r5 >> 2] = r3;
  return 3;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE11do_encodingEv(r1) {
  return 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE16do_always_noconvEv(r1) {
  return 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE13do_max_lengthEv(r1) {
  return 4;
}
function __ZNSt3__17codecvtIDic10_mbstate_tED1Ev(r1) {
  return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14;
  r9 = r6 >> 2;
  r6 = r3 >> 2;
  r3 = 0;
  HEAP32[r6] = r1;
  HEAP32[r9] = r4;
  do {
    if ((r8 & 2 | 0) != 0) {
      if ((r5 - r4 | 0) < 3) {
        r10 = 1;
        return r10;
      } else {
        HEAP32[r9] = r4 + 1 | 0;
        HEAP8[r4] = -17;
        r1 = HEAP32[r9];
        HEAP32[r9] = r1 + 1 | 0;
        HEAP8[r1] = -69;
        r1 = HEAP32[r9];
        HEAP32[r9] = r1 + 1 | 0;
        HEAP8[r1] = -65;
        break;
      }
    }
  } while (0);
  r4 = r2;
  r8 = HEAP32[r6];
  if (r8 >>> 0 >= r2 >>> 0) {
    r10 = 0;
    return r10;
  }
  r1 = r5;
  r5 = r8;
  L2556 : while (1) {
    r8 = HEAP16[r5 >> 1];
    r11 = r8 & 65535;
    if (r11 >>> 0 > r7 >>> 0) {
      r10 = 2;
      r3 = 2318;
      break;
    }
    do {
      if ((r8 & 65535) < 128) {
        r12 = HEAP32[r9];
        if ((r1 - r12 | 0) < 1) {
          r10 = 1;
          r3 = 2314;
          break L2556;
        }
        HEAP32[r9] = r12 + 1 | 0;
        HEAP8[r12] = r8 & 255;
      } else {
        if ((r8 & 65535) < 2048) {
          r12 = HEAP32[r9];
          if ((r1 - r12 | 0) < 2) {
            r10 = 1;
            r3 = 2321;
            break L2556;
          }
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 >>> 6 | 192) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 & 63 | 128) & 255;
          break;
        }
        if ((r8 & 65535) < 55296) {
          r12 = HEAP32[r9];
          if ((r1 - r12 | 0) < 3) {
            r10 = 1;
            r3 = 2316;
            break L2556;
          }
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 >>> 12 | 224) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 >>> 6 & 63 | 128) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 & 63 | 128) & 255;
          break;
        }
        if ((r8 & 65535) >= 56320) {
          if ((r8 & 65535) < 57344) {
            r10 = 2;
            r3 = 2320;
            break L2556;
          }
          r12 = HEAP32[r9];
          if ((r1 - r12 | 0) < 3) {
            r10 = 1;
            r3 = 2313;
            break L2556;
          }
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 >>> 12 | 224) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 >>> 6 & 63 | 128) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r11 & 63 | 128) & 255;
          break;
        }
        if ((r4 - r5 | 0) < 4) {
          r10 = 1;
          r3 = 2315;
          break L2556;
        }
        r12 = r5 + 2 | 0;
        r13 = HEAPU16[r12 >> 1];
        if ((r13 & 64512 | 0) != 56320) {
          r10 = 2;
          r3 = 2319;
          break L2556;
        }
        if ((r1 - HEAP32[r9] | 0) < 4) {
          r10 = 1;
          r3 = 2317;
          break L2556;
        }
        r14 = r11 & 960;
        if (((r14 << 10) + 65536 | r11 << 10 & 64512 | r13 & 1023) >>> 0 > r7 >>> 0) {
          r10 = 2;
          r3 = 2322;
          break L2556;
        }
        HEAP32[r6] = r12;
        r12 = (r14 >>> 6) + 1 | 0;
        r14 = HEAP32[r9];
        HEAP32[r9] = r14 + 1 | 0;
        HEAP8[r14] = (r12 >>> 2 | 240) & 255;
        r14 = HEAP32[r9];
        HEAP32[r9] = r14 + 1 | 0;
        HEAP8[r14] = (r11 >>> 2 & 15 | r12 << 4 & 48 | 128) & 255;
        r12 = HEAP32[r9];
        HEAP32[r9] = r12 + 1 | 0;
        HEAP8[r12] = (r11 << 4 & 48 | r13 >>> 6 & 15 | 128) & 255;
        r12 = HEAP32[r9];
        HEAP32[r9] = r12 + 1 | 0;
        HEAP8[r12] = (r13 & 63 | 128) & 255;
      }
    } while (0);
    r11 = HEAP32[r6] + 2 | 0;
    HEAP32[r6] = r11;
    if (r11 >>> 0 < r2 >>> 0) {
      r5 = r11;
    } else {
      r10 = 0;
      r3 = 2311;
      break;
    }
  }
  if (r3 == 2311) {
    return r10;
  } else if (r3 == 2313) {
    return r10;
  } else if (r3 == 2314) {
    return r10;
  } else if (r3 == 2315) {
    return r10;
  } else if (r3 == 2320) {
    return r10;
  } else if (r3 == 2321) {
    return r10;
  } else if (r3 == 2322) {
    return r10;
  } else if (r3 == 2316) {
    return r10;
  } else if (r3 == 2317) {
    return r10;
  } else if (r3 == 2318) {
    return r10;
  } else if (r3 == 2319) {
    return r10;
  }
}
__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE["X"] = 1;
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22;
  r9 = r6 >> 2;
  r6 = r3 >> 2;
  r3 = 0;
  HEAP32[r6] = r1;
  HEAP32[r9] = r4;
  r4 = HEAP32[r6];
  do {
    if ((r8 & 4 | 0) == 0) {
      r10 = r4;
    } else {
      if ((r2 - r4 | 0) <= 2) {
        r10 = r4;
        break;
      }
      if (HEAP8[r4] << 24 >> 24 != -17) {
        r10 = r4;
        break;
      }
      if (HEAP8[r4 + 1 | 0] << 24 >> 24 != -69) {
        r10 = r4;
        break;
      }
      if (HEAP8[r4 + 2 | 0] << 24 >> 24 != -65) {
        r10 = r4;
        break;
      }
      r1 = r4 + 3 | 0;
      HEAP32[r6] = r1;
      r10 = r1;
    }
  } while (0);
  L2601 : do {
    if (r10 >>> 0 < r2 >>> 0) {
      r4 = r2;
      r8 = r5;
      r1 = HEAP32[r9], r11 = r1 >> 1;
      r12 = r10;
      L2603 : while (1) {
        if (r1 >>> 0 >= r5 >>> 0) {
          r13 = r12;
          break L2601;
        }
        r14 = HEAP8[r12];
        r15 = r14 & 255;
        if (r15 >>> 0 > r7 >>> 0) {
          r16 = 2;
          r3 = 2365;
          break;
        }
        do {
          if (r14 << 24 >> 24 > -1) {
            HEAP16[r11] = r14 & 255;
            HEAP32[r6] = HEAP32[r6] + 1 | 0;
          } else {
            if ((r14 & 255) < 194) {
              r16 = 2;
              r3 = 2377;
              break L2603;
            }
            if ((r14 & 255) < 224) {
              if ((r4 - r12 | 0) < 2) {
                r16 = 1;
                r3 = 2378;
                break L2603;
              }
              r17 = HEAPU8[r12 + 1 | 0];
              if ((r17 & 192 | 0) != 128) {
                r16 = 2;
                r3 = 2379;
                break L2603;
              }
              r18 = r17 & 63 | r15 << 6 & 1984;
              if (r18 >>> 0 > r7 >>> 0) {
                r16 = 2;
                r3 = 2380;
                break L2603;
              }
              HEAP16[r11] = r18 & 65535;
              HEAP32[r6] = HEAP32[r6] + 2 | 0;
              break;
            }
            if ((r14 & 255) < 240) {
              if ((r4 - r12 | 0) < 3) {
                r16 = 1;
                r3 = 2381;
                break L2603;
              }
              r18 = HEAP8[r12 + 1 | 0];
              r17 = HEAP8[r12 + 2 | 0];
              if ((r15 | 0) == 224) {
                if ((r18 & -32) << 24 >> 24 != -96) {
                  r16 = 2;
                  r3 = 2382;
                  break L2603;
                }
              } else if ((r15 | 0) == 237) {
                if ((r18 & -32) << 24 >> 24 != -128) {
                  r16 = 2;
                  r3 = 2383;
                  break L2603;
                }
              } else {
                if ((r18 & -64) << 24 >> 24 != -128) {
                  r16 = 2;
                  r3 = 2384;
                  break L2603;
                }
              }
              r19 = r17 & 255;
              if ((r19 & 192 | 0) != 128) {
                r16 = 2;
                r3 = 2374;
                break L2603;
              }
              r17 = (r18 & 255) << 6 & 4032 | r15 << 12 | r19 & 63;
              if ((r17 & 65535) >>> 0 > r7 >>> 0) {
                r16 = 2;
                r3 = 2367;
                break L2603;
              }
              HEAP16[r11] = r17 & 65535;
              HEAP32[r6] = HEAP32[r6] + 3 | 0;
              break;
            }
            if ((r14 & 255) >= 245) {
              r16 = 2;
              r3 = 2366;
              break L2603;
            }
            if ((r4 - r12 | 0) < 4) {
              r16 = 1;
              r3 = 2376;
              break L2603;
            }
            r17 = HEAP8[r12 + 1 | 0];
            r19 = HEAP8[r12 + 2 | 0];
            r18 = HEAP8[r12 + 3 | 0];
            if ((r15 | 0) == 240) {
              if ((r17 + 112 & 255) >= 48) {
                r16 = 2;
                r3 = 2369;
                break L2603;
              }
            } else if ((r15 | 0) == 244) {
              if ((r17 & -16) << 24 >> 24 != -128) {
                r16 = 2;
                r3 = 2370;
                break L2603;
              }
            } else {
              if ((r17 & -64) << 24 >> 24 != -128) {
                r16 = 2;
                r3 = 2375;
                break L2603;
              }
            }
            r20 = r19 & 255;
            if ((r20 & 192 | 0) != 128) {
              r16 = 2;
              r3 = 2364;
              break L2603;
            }
            r19 = r18 & 255;
            if ((r19 & 192 | 0) != 128) {
              r16 = 2;
              r3 = 2373;
              break L2603;
            }
            if ((r8 - r1 | 0) < 4) {
              r16 = 1;
              r3 = 2371;
              break L2603;
            }
            r18 = r15 & 7;
            r21 = r17 & 255;
            r17 = r20 << 6;
            r22 = r19 & 63;
            if ((r21 << 12 & 258048 | r18 << 18 | r17 & 4032 | r22) >>> 0 > r7 >>> 0) {
              r16 = 2;
              r3 = 2372;
              break L2603;
            }
            HEAP16[r11] = (r21 << 2 & 60 | r20 >>> 4 & 3 | ((r21 >>> 4 & 3 | r18 << 2) << 6) + 16320 | 55296) & 65535;
            r18 = HEAP32[r9] + 2 | 0;
            HEAP32[r9] = r18;
            HEAP16[r18 >> 1] = (r22 | r17 & 960 | 56320) & 65535;
            HEAP32[r6] = HEAP32[r6] + 4 | 0;
          }
        } while (0);
        r15 = HEAP32[r9] + 2 | 0;
        HEAP32[r9] = r15;
        r14 = HEAP32[r6];
        if (r14 >>> 0 < r2 >>> 0) {
          r1 = r15, r11 = r1 >> 1;
          r12 = r14;
        } else {
          r13 = r14;
          break L2601;
        }
      }
      if (r3 == 2379) {
        return r16;
      } else if (r3 == 2380) {
        return r16;
      } else if (r3 == 2381) {
        return r16;
      } else if (r3 == 2382) {
        return r16;
      } else if (r3 == 2383) {
        return r16;
      } else if (r3 == 2384) {
        return r16;
      } else if (r3 == 2372) {
        return r16;
      } else if (r3 == 2373) {
        return r16;
      } else if (r3 == 2374) {
        return r16;
      } else if (r3 == 2375) {
        return r16;
      } else if (r3 == 2376) {
        return r16;
      } else if (r3 == 2377) {
        return r16;
      } else if (r3 == 2378) {
        return r16;
      } else if (r3 == 2364) {
        return r16;
      } else if (r3 == 2365) {
        return r16;
      } else if (r3 == 2366) {
        return r16;
      } else if (r3 == 2367) {
        return r16;
      } else if (r3 == 2369) {
        return r16;
      } else if (r3 == 2370) {
        return r16;
      } else if (r3 == 2371) {
        return r16;
      }
    } else {
      r13 = r10;
    }
  } while (0);
  r16 = r13 >>> 0 < r2 >>> 0 & 1;
  return r16;
}
__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE["X"] = 1;
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r6 = 0;
  do {
    if ((r5 & 4 | 0) == 0) {
      r7 = r1;
    } else {
      if ((r2 - r1 | 0) <= 2) {
        r7 = r1;
        break;
      }
      if (HEAP8[r1] << 24 >> 24 != -17) {
        r7 = r1;
        break;
      }
      if (HEAP8[r1 + 1 | 0] << 24 >> 24 != -69) {
        r7 = r1;
        break;
      }
      r7 = HEAP8[r1 + 2 | 0] << 24 >> 24 == -65 ? r1 + 3 | 0 : r1;
    }
  } while (0);
  L2670 : do {
    if (r7 >>> 0 < r2 >>> 0 & (r3 | 0) != 0) {
      r5 = r2;
      r8 = 0;
      r9 = r7;
      L2672 : while (1) {
        r10 = HEAP8[r9];
        r11 = r10 & 255;
        if (r11 >>> 0 > r4 >>> 0) {
          r12 = r9;
          break L2670;
        }
        do {
          if (r10 << 24 >> 24 > -1) {
            r13 = r9 + 1 | 0;
            r14 = r8;
          } else {
            if ((r10 & 255) < 194) {
              r12 = r9;
              break L2670;
            }
            if ((r10 & 255) < 224) {
              if ((r5 - r9 | 0) < 2) {
                r12 = r9;
                break L2670;
              }
              r15 = HEAPU8[r9 + 1 | 0];
              if ((r15 & 192 | 0) != 128) {
                r12 = r9;
                break L2670;
              }
              if ((r15 & 63 | r11 << 6 & 1984) >>> 0 > r4 >>> 0) {
                r12 = r9;
                break L2670;
              }
              r13 = r9 + 2 | 0;
              r14 = r8;
              break;
            }
            if ((r10 & 255) < 240) {
              r16 = r9;
              if ((r5 - r16 | 0) < 3) {
                r12 = r9;
                break L2670;
              }
              r15 = HEAPU8[r9 + 1 | 0];
              r17 = HEAPU8[r9 + 2 | 0];
              r18 = r15 << 6 & 4032 | r11 << 12 & 61440 | r17 & 63;
              if ((r11 | 0) == 224) {
                if ((r15 & 224 | 0) != 160) {
                  r6 = 2405;
                  break L2672;
                }
              } else if ((r11 | 0) == 237) {
                if ((r15 & 224 | 0) != 128) {
                  r6 = 2407;
                  break L2672;
                }
              } else {
                if ((r15 & 192 | 0) != 128) {
                  r6 = 2409;
                  break L2672;
                }
              }
              if ((r17 & 192 | 0) != 128 | r18 >>> 0 > r4 >>> 0) {
                r12 = r9;
                break L2670;
              }
              r13 = r9 + 3 | 0;
              r14 = r8;
              break;
            }
            if ((r10 & 255) >= 245) {
              r12 = r9;
              break L2670;
            }
            r19 = r9;
            if ((r5 - r19 | 0) < 4) {
              r12 = r9;
              break L2670;
            }
            if ((r3 - r8 | 0) >>> 0 < 2) {
              r12 = r9;
              break L2670;
            }
            r18 = HEAP8[r9 + 1 | 0];
            r17 = HEAP8[r9 + 2 | 0];
            r15 = HEAP8[r9 + 3 | 0];
            if ((r11 | 0) == 240) {
              if ((r18 + 112 & 255) >= 48) {
                r6 = 2417;
                break L2672;
              }
            } else if ((r11 | 0) == 244) {
              if ((r18 & -16) << 24 >> 24 != -128) {
                r6 = 2419;
                break L2672;
              }
            } else {
              if ((r18 & -64) << 24 >> 24 != -128) {
                r6 = 2421;
                break L2672;
              }
            }
            r20 = r17 & 255;
            if ((r20 & 192 | 0) != 128) {
              r12 = r9;
              break L2670;
            }
            r17 = r15 & 255;
            if ((r17 & 192 | 0) != 128) {
              r12 = r9;
              break L2670;
            }
            if (((r18 & 255) << 12 & 258048 | r11 << 18 & 1835008 | r20 << 6 & 4032 | r17 & 63) >>> 0 > r4 >>> 0) {
              r12 = r9;
              break L2670;
            }
            r13 = r9 + 4 | 0;
            r14 = r8 + 1 | 0;
          }
        } while (0);
        r11 = r14 + 1 | 0;
        if (r13 >>> 0 < r2 >>> 0 & r11 >>> 0 < r3 >>> 0) {
          r8 = r11;
          r9 = r13;
        } else {
          r12 = r13;
          break L2670;
        }
      }
      if (r6 == 2405) {
        r21 = r16 - r1 | 0;
        return r21;
      } else if (r6 == 2407) {
        r21 = r16 - r1 | 0;
        return r21;
      } else if (r6 == 2409) {
        r21 = r16 - r1 | 0;
        return r21;
      } else if (r6 == 2417) {
        r21 = r19 - r1 | 0;
        return r21;
      } else if (r6 == 2419) {
        r21 = r19 - r1 | 0;
        return r21;
      } else if (r6 == 2421) {
        r21 = r19 - r1 | 0;
        return r21;
      }
    } else {
      r12 = r7;
    }
  } while (0);
  r21 = r12 - r1 | 0;
  return r21;
}
__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE["X"] = 1;
function __ZNSt3__17codecvtIDsc10_mbstate_tED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r1 = r2;
  r9 = r2 + 4;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r9 >> 2] = r6;
  r10 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(r3, r4, r1, r6, r7, r9, 1114111, 0);
  HEAP32[r5 >> 2] = (HEAP32[r1 >> 2] - r3 >> 1 << 1) + r3 | 0;
  HEAP32[r8 >> 2] = r6 + (HEAP32[r9 >> 2] - r6) | 0;
  STACKTOP = r2;
  return r10;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r1 = r2;
  r9 = r2 + 4;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r9 >> 2] = r6;
  r10 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(r3, r4, r1, r6, r7, r9, 1114111, 0);
  HEAP32[r5 >> 2] = r3 + (HEAP32[r1 >> 2] - r3) | 0;
  HEAP32[r8 >> 2] = (HEAP32[r9 >> 2] - r6 >> 1 << 1) + r6 | 0;
  STACKTOP = r2;
  return r10;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE9do_lengthERS1_PKcS5_j(r1, r2, r3, r4, r5) {
  return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(r3, r4, r5, 1114111, 0);
}
function __ZNSt3__17codecvtIDic10_mbstate_tED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r1 = r2;
  r9 = r2 + 4;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r9 >> 2] = r6;
  r10 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(r3, r4, r1, r6, r7, r9, 1114111, 0);
  HEAP32[r5 >> 2] = (HEAP32[r1 >> 2] - r3 >> 2 << 2) + r3 | 0;
  HEAP32[r8 >> 2] = r6 + (HEAP32[r9 >> 2] - r6) | 0;
  STACKTOP = r2;
  return r10;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE13do_max_lengthEv(r1) {
  var r2, r3, r4;
  r2 = HEAP32[r1 + 8 >> 2];
  do {
    if ((r2 | 0) == 0) {
      r3 = 1;
    } else {
      r1 = _uselocale(r2);
      r4 = ___locale_mb_cur_max();
      if ((r1 | 0) == 0) {
        r3 = r4;
        break;
      }
      _uselocale(r1);
      r3 = r4;
    }
  } while (0);
  return r3;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE10do_unshiftERS1_PcS4_RS4_(r1, r2, r3, r4, r5) {
  HEAP32[r5 >> 2] = r3;
  return 3;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE11do_encodingEv(r1) {
  return 0;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE16do_always_noconvEv(r1) {
  return 0;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE13do_max_lengthEv(r1) {
  return 4;
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12;
  r9 = r6 >> 2;
  r6 = 0;
  HEAP32[r3 >> 2] = r1;
  HEAP32[r9] = r4;
  do {
    if ((r8 & 2 | 0) != 0) {
      if ((r5 - r4 | 0) < 3) {
        r10 = 1;
        return r10;
      } else {
        HEAP32[r9] = r4 + 1 | 0;
        HEAP8[r4] = -17;
        r1 = HEAP32[r9];
        HEAP32[r9] = r1 + 1 | 0;
        HEAP8[r1] = -69;
        r1 = HEAP32[r9];
        HEAP32[r9] = r1 + 1 | 0;
        HEAP8[r1] = -65;
        break;
      }
    }
  } while (0);
  r4 = HEAP32[r3 >> 2];
  if (r4 >>> 0 >= r2 >>> 0) {
    r10 = 0;
    return r10;
  }
  r8 = r5;
  r5 = r4;
  L2749 : while (1) {
    r4 = HEAP32[r5 >> 2];
    if ((r4 & -2048 | 0) == 55296 | r4 >>> 0 > r7 >>> 0) {
      r10 = 2;
      r6 = 2483;
      break;
    }
    do {
      if (r4 >>> 0 < 128) {
        r1 = HEAP32[r9];
        if ((r8 - r1 | 0) < 1) {
          r10 = 1;
          r6 = 2482;
          break L2749;
        }
        HEAP32[r9] = r1 + 1 | 0;
        HEAP8[r1] = r4 & 255;
      } else {
        if (r4 >>> 0 < 2048) {
          r1 = HEAP32[r9];
          if ((r8 - r1 | 0) < 2) {
            r10 = 1;
            r6 = 2481;
            break L2749;
          }
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 >>> 6 | 192) & 255;
          r1 = HEAP32[r9];
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 & 63 | 128) & 255;
          break;
        }
        r1 = HEAP32[r9];
        r11 = r8 - r1 | 0;
        if (r4 >>> 0 < 65536) {
          if ((r11 | 0) < 3) {
            r10 = 1;
            r6 = 2478;
            break L2749;
          }
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 >>> 12 | 224) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r4 >>> 6 & 63 | 128) & 255;
          r12 = HEAP32[r9];
          HEAP32[r9] = r12 + 1 | 0;
          HEAP8[r12] = (r4 & 63 | 128) & 255;
          break;
        } else {
          if ((r11 | 0) < 4) {
            r10 = 1;
            r6 = 2484;
            break L2749;
          }
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 >>> 18 | 240) & 255;
          r1 = HEAP32[r9];
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 >>> 12 & 63 | 128) & 255;
          r1 = HEAP32[r9];
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 >>> 6 & 63 | 128) & 255;
          r1 = HEAP32[r9];
          HEAP32[r9] = r1 + 1 | 0;
          HEAP8[r1] = (r4 & 63 | 128) & 255;
          break;
        }
      }
    } while (0);
    r4 = HEAP32[r3 >> 2] + 4 | 0;
    HEAP32[r3 >> 2] = r4;
    if (r4 >>> 0 < r2 >>> 0) {
      r5 = r4;
    } else {
      r10 = 0;
      r6 = 2480;
      break;
    }
  }
  if (r6 == 2481) {
    return r10;
  } else if (r6 == 2483) {
    return r10;
  } else if (r6 == 2484) {
    return r10;
  } else if (r6 == 2482) {
    return r10;
  } else if (r6 == 2480) {
    return r10;
  } else if (r6 == 2478) {
    return r10;
  }
}
__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE["X"] = 1;
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  r9 = r3 >> 2;
  r3 = 0;
  HEAP32[r9] = r1;
  HEAP32[r6 >> 2] = r4;
  r4 = HEAP32[r9];
  do {
    if ((r8 & 4 | 0) == 0) {
      r10 = r4;
    } else {
      if ((r2 - r4 | 0) <= 2) {
        r10 = r4;
        break;
      }
      if (HEAP8[r4] << 24 >> 24 != -17) {
        r10 = r4;
        break;
      }
      if (HEAP8[r4 + 1 | 0] << 24 >> 24 != -69) {
        r10 = r4;
        break;
      }
      if (HEAP8[r4 + 2 | 0] << 24 >> 24 != -65) {
        r10 = r4;
        break;
      }
      r1 = r4 + 3 | 0;
      HEAP32[r9] = r1;
      r10 = r1;
    }
  } while (0);
  L2781 : do {
    if (r10 >>> 0 < r2 >>> 0) {
      r4 = r2;
      r8 = HEAP32[r6 >> 2], r1 = r8 >> 2;
      r11 = r10;
      L2783 : while (1) {
        if (r8 >>> 0 >= r5 >>> 0) {
          r12 = r11;
          break L2781;
        }
        r13 = HEAP8[r11];
        r14 = r13 & 255;
        do {
          if (r13 << 24 >> 24 > -1) {
            if (r14 >>> 0 > r7 >>> 0) {
              r15 = 2;
              r3 = 2540;
              break L2783;
            }
            HEAP32[r1] = r14;
            HEAP32[r9] = HEAP32[r9] + 1 | 0;
          } else {
            if ((r13 & 255) < 194) {
              r15 = 2;
              r3 = 2535;
              break L2783;
            }
            if ((r13 & 255) < 224) {
              if ((r4 - r11 | 0) < 2) {
                r15 = 1;
                r3 = 2532;
                break L2783;
              }
              r16 = HEAPU8[r11 + 1 | 0];
              if ((r16 & 192 | 0) != 128) {
                r15 = 2;
                r3 = 2526;
                break L2783;
              }
              r17 = r16 & 63 | r14 << 6 & 1984;
              if (r17 >>> 0 > r7 >>> 0) {
                r15 = 2;
                r3 = 2527;
                break L2783;
              }
              HEAP32[r1] = r17;
              HEAP32[r9] = HEAP32[r9] + 2 | 0;
              break;
            }
            if ((r13 & 255) < 240) {
              if ((r4 - r11 | 0) < 3) {
                r15 = 1;
                r3 = 2529;
                break L2783;
              }
              r17 = HEAP8[r11 + 1 | 0];
              r16 = HEAP8[r11 + 2 | 0];
              if ((r14 | 0) == 224) {
                if ((r17 & -32) << 24 >> 24 != -96) {
                  r15 = 2;
                  r3 = 2539;
                  break L2783;
                }
              } else if ((r14 | 0) == 237) {
                if ((r17 & -32) << 24 >> 24 != -128) {
                  r15 = 2;
                  r3 = 2543;
                  break L2783;
                }
              } else {
                if ((r17 & -64) << 24 >> 24 != -128) {
                  r15 = 2;
                  r3 = 2541;
                  break L2783;
                }
              }
              r18 = r16 & 255;
              if ((r18 & 192 | 0) != 128) {
                r15 = 2;
                r3 = 2531;
                break L2783;
              }
              r16 = (r17 & 255) << 6 & 4032 | r14 << 12 & 61440 | r18 & 63;
              if (r16 >>> 0 > r7 >>> 0) {
                r15 = 2;
                r3 = 2536;
                break L2783;
              }
              HEAP32[r1] = r16;
              HEAP32[r9] = HEAP32[r9] + 3 | 0;
              break;
            }
            if ((r13 & 255) >= 245) {
              r15 = 2;
              r3 = 2542;
              break L2783;
            }
            if ((r4 - r11 | 0) < 4) {
              r15 = 1;
              r3 = 2537;
              break L2783;
            }
            r16 = HEAP8[r11 + 1 | 0];
            r18 = HEAP8[r11 + 2 | 0];
            r17 = HEAP8[r11 + 3 | 0];
            if ((r14 | 0) == 244) {
              if ((r16 & -16) << 24 >> 24 != -128) {
                r15 = 2;
                r3 = 2533;
                break L2783;
              }
            } else if ((r14 | 0) == 240) {
              if ((r16 + 112 & 255) >= 48) {
                r15 = 2;
                r3 = 2538;
                break L2783;
              }
            } else {
              if ((r16 & -64) << 24 >> 24 != -128) {
                r15 = 2;
                r3 = 2528;
                break L2783;
              }
            }
            r19 = r18 & 255;
            if ((r19 & 192 | 0) != 128) {
              r15 = 2;
              r3 = 2530;
              break L2783;
            }
            r18 = r17 & 255;
            if ((r18 & 192 | 0) != 128) {
              r15 = 2;
              r3 = 2534;
              break L2783;
            }
            r17 = (r16 & 255) << 12 & 258048 | r14 << 18 & 1835008 | r19 << 6 & 4032 | r18 & 63;
            if (r17 >>> 0 > r7 >>> 0) {
              r15 = 2;
              r3 = 2525;
              break L2783;
            }
            HEAP32[r1] = r17;
            HEAP32[r9] = HEAP32[r9] + 4 | 0;
          }
        } while (0);
        r14 = HEAP32[r6 >> 2] + 4 | 0;
        HEAP32[r6 >> 2] = r14;
        r13 = HEAP32[r9];
        if (r13 >>> 0 < r2 >>> 0) {
          r8 = r14, r1 = r8 >> 2;
          r11 = r13;
        } else {
          r12 = r13;
          break L2781;
        }
      }
      if (r3 == 2538) {
        return r15;
      } else if (r3 == 2539) {
        return r15;
      } else if (r3 == 2540) {
        return r15;
      } else if (r3 == 2541) {
        return r15;
      } else if (r3 == 2542) {
        return r15;
      } else if (r3 == 2543) {
        return r15;
      } else if (r3 == 2531) {
        return r15;
      } else if (r3 == 2532) {
        return r15;
      } else if (r3 == 2533) {
        return r15;
      } else if (r3 == 2534) {
        return r15;
      } else if (r3 == 2535) {
        return r15;
      } else if (r3 == 2536) {
        return r15;
      } else if (r3 == 2537) {
        return r15;
      } else if (r3 == 2525) {
        return r15;
      } else if (r3 == 2526) {
        return r15;
      } else if (r3 == 2527) {
        return r15;
      } else if (r3 == 2528) {
        return r15;
      } else if (r3 == 2529) {
        return r15;
      } else if (r3 == 2530) {
        return r15;
      }
    } else {
      r12 = r10;
    }
  } while (0);
  r15 = r12 >>> 0 < r2 >>> 0 & 1;
  return r15;
}
__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE["X"] = 1;
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20;
  r6 = 0;
  do {
    if ((r5 & 4 | 0) == 0) {
      r7 = r1;
    } else {
      if ((r2 - r1 | 0) <= 2) {
        r7 = r1;
        break;
      }
      if (HEAP8[r1] << 24 >> 24 != -17) {
        r7 = r1;
        break;
      }
      if (HEAP8[r1 + 1 | 0] << 24 >> 24 != -69) {
        r7 = r1;
        break;
      }
      r7 = HEAP8[r1 + 2 | 0] << 24 >> 24 == -65 ? r1 + 3 | 0 : r1;
    }
  } while (0);
  L2848 : do {
    if (r7 >>> 0 < r2 >>> 0 & (r3 | 0) != 0) {
      r5 = r2;
      r8 = 1;
      r9 = r7;
      L2850 : while (1) {
        r10 = HEAP8[r9];
        r11 = r10 & 255;
        do {
          if (r10 << 24 >> 24 > -1) {
            if (r11 >>> 0 > r4 >>> 0) {
              r12 = r9;
              break L2848;
            }
            r13 = r9 + 1 | 0;
          } else {
            if ((r10 & 255) < 194) {
              r12 = r9;
              break L2848;
            }
            if ((r10 & 255) < 224) {
              if ((r5 - r9 | 0) < 2) {
                r12 = r9;
                break L2848;
              }
              r14 = HEAPU8[r9 + 1 | 0];
              if ((r14 & 192 | 0) != 128) {
                r12 = r9;
                break L2848;
              }
              if ((r14 & 63 | r11 << 6 & 1984) >>> 0 > r4 >>> 0) {
                r12 = r9;
                break L2848;
              }
              r13 = r9 + 2 | 0;
              break;
            }
            if ((r10 & 255) < 240) {
              r15 = r9;
              if ((r5 - r15 | 0) < 3) {
                r12 = r9;
                break L2848;
              }
              r14 = HEAP8[r9 + 1 | 0];
              r16 = HEAP8[r9 + 2 | 0];
              if ((r11 | 0) == 237) {
                if ((r14 & -32) << 24 >> 24 != -128) {
                  r6 = 2567;
                  break L2850;
                }
              } else if ((r11 | 0) == 224) {
                if ((r14 & -32) << 24 >> 24 != -96) {
                  r6 = 2565;
                  break L2850;
                }
              } else {
                if ((r14 & -64) << 24 >> 24 != -128) {
                  r6 = 2569;
                  break L2850;
                }
              }
              r17 = r16 & 255;
              if ((r17 & 192 | 0) != 128) {
                r12 = r9;
                break L2848;
              }
              if (((r14 & 255) << 6 & 4032 | r11 << 12 & 61440 | r17 & 63) >>> 0 > r4 >>> 0) {
                r12 = r9;
                break L2848;
              }
              r13 = r9 + 3 | 0;
              break;
            }
            if ((r10 & 255) >= 245) {
              r12 = r9;
              break L2848;
            }
            r18 = r9;
            if ((r5 - r18 | 0) < 4) {
              r12 = r9;
              break L2848;
            }
            r17 = HEAP8[r9 + 1 | 0];
            r14 = HEAP8[r9 + 2 | 0];
            r16 = HEAP8[r9 + 3 | 0];
            if ((r11 | 0) == 240) {
              if ((r17 + 112 & 255) >= 48) {
                r6 = 2577;
                break L2850;
              }
            } else if ((r11 | 0) == 244) {
              if ((r17 & -16) << 24 >> 24 != -128) {
                r6 = 2579;
                break L2850;
              }
            } else {
              if ((r17 & -64) << 24 >> 24 != -128) {
                r6 = 2581;
                break L2850;
              }
            }
            r19 = r14 & 255;
            if ((r19 & 192 | 0) != 128) {
              r12 = r9;
              break L2848;
            }
            r14 = r16 & 255;
            if ((r14 & 192 | 0) != 128) {
              r12 = r9;
              break L2848;
            }
            if (((r17 & 255) << 12 & 258048 | r11 << 18 & 1835008 | r19 << 6 & 4032 | r14 & 63) >>> 0 > r4 >>> 0) {
              r12 = r9;
              break L2848;
            }
            r13 = r9 + 4 | 0;
          }
        } while (0);
        if (!(r13 >>> 0 < r2 >>> 0 & r8 >>> 0 < r3 >>> 0)) {
          r12 = r13;
          break L2848;
        }
        r8 = r8 + 1 | 0;
        r9 = r13;
      }
      if (r6 == 2565) {
        r20 = r15 - r1 | 0;
        return r20;
      } else if (r6 == 2567) {
        r20 = r15 - r1 | 0;
        return r20;
      } else if (r6 == 2569) {
        r20 = r15 - r1 | 0;
        return r20;
      } else if (r6 == 2577) {
        r20 = r18 - r1 | 0;
        return r20;
      } else if (r6 == 2579) {
        r20 = r18 - r1 | 0;
        return r20;
      } else if (r6 == 2581) {
        r20 = r18 - r1 | 0;
        return r20;
      }
    } else {
      r12 = r7;
    }
  } while (0);
  r20 = r12 - r1 | 0;
  return r20;
}
__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE["X"] = 1;
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv(r1) {
  return HEAP8[r1 + 8 | 0];
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv(r1) {
  return HEAP32[r1 + 8 >> 2];
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv(r1) {
  return HEAP8[r1 + 9 | 0];
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv(r1) {
  return HEAP32[r1 + 12 >> 2];
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_(r1, r2, r3, r4, r5, r6, r7, r8) {
  var r9, r10;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  r1 = r2;
  r9 = r2 + 4;
  HEAP32[r1 >> 2] = r3;
  HEAP32[r9 >> 2] = r6;
  r10 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(r3, r4, r1, r6, r7, r9, 1114111, 0);
  HEAP32[r5 >> 2] = r3 + (HEAP32[r1 >> 2] - r3) | 0;
  HEAP32[r8 >> 2] = (HEAP32[r9 >> 2] - r6 >> 2 << 2) + r6 | 0;
  STACKTOP = r2;
  return r10;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE9do_lengthERS1_PKcS5_j(r1, r2, r3, r4, r5) {
  return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(r3, r4, r5, 1114111, 0);
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18numpunctIcEC1Ej() {
  __ZNSt3__18numpunctIcEC2Ej();
  return;
}
function __ZNSt3__18numpunctIcEC2Ej() {
  HEAP32[1315968] = 0;
  HEAP32[1315967] = 5265132;
  HEAP8[5263876] = 46;
  HEAP8[5263877] = 44;
  HEAP32[1315970] = 0;
  HEAP32[1315971] = 0;
  HEAP32[1315972] = 0;
  return;
}
function __ZNSt3__18numpunctIwEC1Ej() {
  __ZNSt3__18numpunctIwEC2Ej();
  return;
}
function __ZNSt3__18numpunctIwEC2Ej() {
  HEAP32[1315961] = 0;
  HEAP32[1315960] = 5265088;
  HEAP32[1315962] = 46;
  HEAP32[1315963] = 44;
  HEAP32[1315964] = 0;
  HEAP32[1315965] = 0;
  HEAP32[1315966] = 0;
  return;
}
function __ZNSt3__18numpunctIcED0Ev(r1) {
  __ZNSt3__18numpunctIcED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18numpunctIcED1Ev(r1) {
  __ZNSt3__18numpunctIcED2Ev(r1);
  return;
}
function __ZNSt3__18numpunctIcED2Ev(r1) {
  HEAP32[r1 >> 2] = 5265132;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1 + 12 | 0);
  return;
}
function __ZNSt3__18numpunctIwED0Ev(r1) {
  __ZNSt3__18numpunctIwED1Ev(r1);
  __ZdlPv(r1);
  return;
}
function __ZNSt3__18numpunctIwED1Ev(r1) {
  __ZNSt3__18numpunctIwED2Ev(r1);
  return;
}
function __ZNSt3__18numpunctIwED2Ev(r1) {
  HEAP32[r1 >> 2] = 5265088;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(r1 + 16 | 0);
  return;
}
function __ZNKSt3__18numpunctIcE11do_groupingEv(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_(r1, r2 + 12 | 0);
  return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_(r1, r2 + 16 | 0);
  return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r1, 5245868, 4);
  return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv(r1, r2) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(r1, 5245812, _wcslen(5245812));
  return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv(r1, r2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(r1, 5245776, 5);
  return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv(r1, r2) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(r1, 5245708, _wcslen(5245708));
  return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv(r1) {
  do {
    if (HEAP8[5274368] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274368) | 0) == 0) {
        break;
      }
      __ZNSt3__1L10init_weeksEv();
      HEAP32[1316136] = 5263280;
    }
  } while (0);
  return HEAP32[1316136];
}
function __ZNSt3__1L10init_weeksEv() {
  var r1, r2;
  do {
    if (HEAP8[5274256] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274256) | 0) == 0) {
        break;
      }
      for (r1 = 1315820, r2 = r1 + 42; r1 < r2; r1++) {
        HEAP32[r1] = 0;
      }
      _atexit(544, 0, ___dso_handle);
    }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263280, 5250896);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263292, 5250888);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263304, 5250880);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263316, 5250868);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263328, 5250856);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263340, 5250848);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263352, 5250724);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263364, 5250668);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263376, 5250664);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263388, 5250648);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263400, 5250608);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263412, 5250596);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263424, 5250592);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263436, 5250588);
  return;
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv(r1) {
  do {
    if (HEAP8[5274312] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274312) | 0) == 0) {
        break;
      }
      __ZNSt3__1L11init_wweeksEv();
      HEAP32[1316121] = 5262536;
    }
  } while (0);
  return HEAP32[1316121];
}
function __ZNSt3__1L11init_wweeksEv() {
  var r1, r2;
  do {
    if (HEAP8[5274232] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274232) | 0) == 0) {
        break;
      }
      for (r1 = 1315634, r2 = r1 + 42; r1 < r2; r1++) {
        HEAP32[r1] = 0;
      }
      _atexit(276, 0, ___dso_handle);
    }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262536, 5251728);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262548, 5251596);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262560, 5251484);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262572, 5251388);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262584, 5251352);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262596, 5251284);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262608, 5251248);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262620, 5251232);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262632, 5251216);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262644, 5251200);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262656, 5251184);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262668, 5251068);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262680, 5250996);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262692, 5250964);
  return;
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv(r1) {
  do {
    if (HEAP8[5274360] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274360) | 0) == 0) {
        break;
      }
      __ZNSt3__1L11init_monthsEv();
      HEAP32[1316135] = 5262992;
    }
  } while (0);
  return HEAP32[1316135];
}
function __ZNSt3__1L11init_monthsEv() {
  var r1, r2;
  do {
    if (HEAP8[5274248] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274248) | 0) == 0) {
        break;
      }
      for (r1 = 1315748, r2 = r1 + 72; r1 < r2; r1++) {
        HEAP32[r1] = 0;
      }
      _atexit(492, 0, ___dso_handle);
    }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5262992, 5252400);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263004, 5252344);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263016, 5252336);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263028, 5252328);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263040, 5252208);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263052, 5252136);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263064, 5252092);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263076, 5252084);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263088, 5252028);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263100, 5251984);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263112, 5251972);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263124, 5251960);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263136, 5251956);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263148, 5251952);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263160, 5251936);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263172, 5251932);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263184, 5252208);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263196, 5251852);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263208, 5251848);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263220, 5251828);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263232, 5251784);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263244, 5251780);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263256, 5251760);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263268, 5251756);
  return;
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv(r1) {
  do {
    if (HEAP8[5274304] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274304) | 0) == 0) {
        break;
      }
      __ZNSt3__1L12init_wmonthsEv();
      HEAP32[1316120] = 5262248;
    }
  } while (0);
  return HEAP32[1316120];
}
function __ZNSt3__1L12init_wmonthsEv() {
  var r1, r2;
  do {
    if (HEAP8[5274224] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274224) | 0) == 0) {
        break;
      }
      for (r1 = 1315562, r2 = r1 + 72; r1 < r2; r1++) {
        HEAP32[r1] = 0;
      }
      _atexit(540, 0, ___dso_handle);
    }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262248, 5243964);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262260, 5243864);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262272, 5243652);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262284, 5243596);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262296, 5252928);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262308, 5243576);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262320, 5243480);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262332, 5243452);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262344, 5243404);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262356, 5243348);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262368, 5243164);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262380, 5243128);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262392, 5243064);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262404, 5243024);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262416, 5242952);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262428, 5242936);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262440, 5252928);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262452, 5252912);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262464, 5252896);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262476, 5252784);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262488, 5252712);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262500, 5252696);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262512, 5252472);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262524, 5252424);
  return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv(r1) {
  do {
    if (HEAP8[5274376] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274376) | 0) == 0) {
        break;
      }
      __ZNSt3__1L10init_am_pmEv();
      HEAP32[1316137] = 5263448;
    }
  } while (0);
  return HEAP32[1316137];
}
function __ZNSt3__1L10init_am_pmEv() {
  var r1, r2;
  do {
    if (HEAP8[5274264] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274264) | 0) == 0) {
        break;
      }
      for (r1 = 1315862, r2 = r1 + 72; r1 < r2; r1++) {
        HEAP32[r1] = 0;
      }
      _atexit(542, 0, ___dso_handle);
    }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263448, 5244320);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(5263460, 5244152);
  return;
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv(r1) {
  do {
    if (HEAP8[5274320] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274320) | 0) == 0) {
        break;
      }
      __ZNSt3__1L11init_wam_pmEv();
      HEAP32[1316122] = 5262704;
    }
  } while (0);
  return HEAP32[1316122];
}
function __ZNSt3__1L11init_wam_pmEv() {
  var r1, r2;
  do {
    if (HEAP8[5274240] << 24 >> 24 == 0) {
      if ((___cxa_guard_acquire(5274240) | 0) == 0) {
        break;
      }
      for (r1 = 1315676, r2 = r1 + 72; r1 < r2; r1++) {
        HEAP32[r1] = 0;
      }
      _atexit(850, 0, ___dso_handle);
    }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262704, 5244396);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(5262716, 5244368);
  return;
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv(r1) {
  if (HEAP8[5274384] << 24 >> 24 != 0) {
    return 5264552;
  }
  if ((___cxa_guard_acquire(5274384) | 0) == 0) {
    return 5264552;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(5264552, 5245564, 8);
  _atexit(888, 5264552, ___dso_handle);
  return 5264552;
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv(r1) {
  if (HEAP8[5274328] << 24 >> 24 != 0) {
    return 5264492;
  }
  if ((___cxa_guard_acquire(5274328) | 0) == 0) {
    return 5264492;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(5264492, 5245500, _wcslen(5245500));
  _atexit(622, 5264492, ___dso_handle);
  return 5264492;
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv(r1) {
  if (HEAP8[5274408] << 24 >> 24 != 0) {
    return 5264588;
  }
  if ((___cxa_guard_acquire(5274408) | 0) == 0) {
    return 5264588;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(5264588, 5245488, 8);
  _atexit(888, 5264588, ___dso_handle);
  return 5264588;
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv(r1) {
  if (HEAP8[5274352] << 24 >> 24 != 0) {
    return 5264528;
  }
  if ((___cxa_guard_acquire(5274352) | 0) == 0) {
    return 5264528;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(5264528, 5245412, _wcslen(5245412));
  _atexit(622, 5264528, ___dso_handle);
  return 5264528;
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv(r1) {
  if (HEAP8[5274400] << 24 >> 24 != 0) {
    return 5264576;
  }
  if ((___cxa_guard_acquire(5274400) | 0) == 0) {
    return 5264576;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(5264576, 5245164, 20);
  _atexit(888, 5264576, ___dso_handle);
  return 5264576;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(r1) {
  return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(r1) {
  return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD1Ev(r1) {
  return;
}
function __ZN10__cxxabiv117__class_type_infoD1Ev(r1) {
  return;
}
function __ZN10__cxxabiv120__si_class_type_infoD1Ev(r1) {
  return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD1Ev(r1) {
  return;
}
function __ZN10__cxxabiv119__pointer_type_infoD1Ev(r1) {
  return;
}
function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1, r2) {
  return (r1 | 0) == (r2 | 0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(r1) {
  var r2, r3, r4, r5;
  r2 = r1;
  r1 = HEAP32[1316004];
  while (1) {
    if ((r1 | 0) == 0) {
      r3 = 0;
    } else {
      HEAP32[r1 >> 2] = 0;
      r3 = HEAP32[1316004];
    }
    r4 = r3 + 4 | 0;
    HEAP32[1316004] = r4;
    r5 = r2 - 1 | 0;
    if ((r5 | 0) == 0) {
      break;
    } else {
      r2 = r5;
      r1 = r4;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(r1, r2) {
  var r3, r4, r5, r6;
  r3 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r3];
  while (1) {
    if ((r2 | 0) == 0) {
      r4 = 0;
    } else {
      HEAP32[r2 >> 2] = 0;
      r4 = HEAP32[r3];
    }
    r5 = r4 + 4 | 0;
    HEAP32[r3] = r5;
    r6 = r1 - 1 | 0;
    if ((r6 | 0) == 0) {
      break;
    } else {
      r1 = r6;
      r2 = r5;
    }
  }
  return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r1, r2, r3) {
  var r4, r5, r6, r7;
  if ((r3 | 0) == (r2 | 0)) {
    return;
  }
  r4 = (r1 + 8 | 0) >> 2;
  r1 = r2;
  r2 = HEAP32[r4];
  while (1) {
    if ((r2 | 0) == 0) {
      r5 = 0;
    } else {
      HEAP32[r2 >> 2] = HEAP32[r1 >> 2];
      r5 = HEAP32[r4];
    }
    r6 = r5 + 4 | 0;
    HEAP32[r4] = r6;
    r7 = r1 + 4 | 0;
    if ((r7 | 0) == (r3 | 0)) {
      break;
    } else {
      r1 = r7;
      r2 = r6;
    }
  }
  return;
}
function __ZNSt3__112_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_(r1, r2) {
  HEAP32[r1 >> 2] = r2;
  r2 = r1 + 4 | 0;
  HEAP32[r2 >> 2] = 34;
  HEAP32[r2 + 4 >> 2] = 0;
  return;
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv(r1) {
  if (HEAP8[5274344] << 24 >> 24 != 0) {
    return 5264516;
  }
  if ((___cxa_guard_acquire(5274344) | 0) == 0) {
    return 5264516;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(5264516, 5244980, _wcslen(5244980));
  _atexit(622, 5264516, ___dso_handle);
  return 5264516;
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv(r1) {
  if (HEAP8[5274392] << 24 >> 24 != 0) {
    return 5264564;
  }
  if ((___cxa_guard_acquire(5274392) | 0) == 0) {
    return 5264564;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(5264564, 5244968, 11);
  _atexit(888, 5264564, ___dso_handle);
  return 5264564;
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv(r1) {
  if (HEAP8[5274336] << 24 >> 24 != 0) {
    return 5264504;
  }
  if ((___cxa_guard_acquire(5274336) | 0) == 0) {
    return 5264504;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(5264504, 5244848, _wcslen(5244848));
  _atexit(622, 5264504, ___dso_handle);
  return 5264504;
}
function __ZNSt3__117__call_once_proxyINS_12_GLOBAL__N_111__fake_bindEEEvPv(r1) {
  var r2;
  r2 = r1 + 4 | 0;
  __ZNKSt3__112_GLOBAL__N_111__fake_bindclEv(HEAP32[r1 >> 2], HEAP32[r2 >> 2], HEAP32[r2 + 4 >> 2]);
  return;
}
function __ZNKSt3__112_GLOBAL__N_111__fake_bindclEv(r1, r2, r3) {
  var r4;
  r4 = r1 + r3 | 0;
  r3 = r4;
  r1 = r2;
  if ((r1 & 1 | 0) == 0) {
    r2 = r1;
    FUNCTION_TABLE[r2](r3);
    return;
  } else {
    r2 = HEAP32[HEAP32[r4 >> 2] + (r1 - 1) >> 2];
    FUNCTION_TABLE[r2](r3);
    return;
  }
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC1EjjS6_(r1, r2, r3, r4) {
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(r1, r2, r3, r4);
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r1) {
  var r2, r3, r4, r5, r6, r7;
  r2 = HEAP32[1316004];
  r3 = HEAP32[1316003];
  L71 : do {
    if (r3 >>> 0 < r2 >>> 0) {
      r4 = r2;
      while (1) {
        r5 = r4 - 4 | 0;
        __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE10push_frontERKS3_(r1, r5);
        r6 = HEAP32[1316003];
        if (r6 >>> 0 < r5 >>> 0) {
          r4 = r5;
        } else {
          r7 = r6;
          break L71;
        }
      }
    } else {
      r7 = r3;
    }
  } while (0);
  r3 = (r1 + 4 | 0) >> 2;
  HEAP32[1316003] = HEAP32[r3];
  HEAP32[r3] = r7;
  r7 = r1 + 8 | 0;
  r2 = HEAP32[1316004];
  HEAP32[1316004] = HEAP32[r7 >> 2];
  HEAP32[r7 >> 2] = r2;
  r2 = r1 + 12 | 0;
  r7 = HEAP32[1316005];
  HEAP32[1316005] = HEAP32[r2 >> 2];
  HEAP32[r2 >> 2] = r7;
  HEAP32[r1 >> 2] = HEAP32[r3];
  return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED1Ev(r1) {
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(r1);
  return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(r1) {
  var r2, r3;
  HEAP32[r1 + 8 >> 2] = HEAP32[r1 + 4 >> 2];
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  r3 = HEAP32[r1 + 16 >> 2];
  if ((r2 | 0) == (r3 | 0)) {
    HEAP8[r3 + 112 | 0] = 0;
    return;
  } else {
    __ZdlPv(r2);
    return;
  }
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE10push_frontERKS3_(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r3 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r4 = r3;
  r5 = (r1 + 4 | 0) >> 2;
  r6 = HEAP32[r5];
  r7 = (r1 | 0) >> 2;
  do {
    if ((r6 | 0) == (HEAP32[r7] | 0)) {
      r8 = (r1 + 8 | 0) >> 2;
      r9 = HEAP32[r8];
      r10 = (r1 + 12 | 0) >> 2;
      r11 = HEAP32[r10];
      r12 = r11;
      if (r9 >>> 0 < r11 >>> 0) {
        r11 = r9;
        r13 = (r12 - r11 + 4 >> 2 | 0) / 2 & -1;
        r14 = r11 - r6 | 0;
        r11 = (r13 - (r14 >> 2) << 2) + r9 | 0;
        _memmove(r11, r6, r14, 4, 0);
        HEAP32[r5] = r11;
        HEAP32[r8] = (r13 << 2) + HEAP32[r8] | 0;
        r15 = r11;
        break;
      } else {
        r11 = r12 - r6 >> 1;
        r12 = (r11 | 0) == 0 ? 1 : r11;
        __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC1EjjS6_(r4, r12, (r12 + 3 | 0) >>> 2, HEAP32[r1 + 16 >> 2]);
        __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_(r4, HEAP32[r5], HEAP32[r8]);
        r12 = r4 | 0;
        r11 = HEAP32[r7];
        HEAP32[r7] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 4 | 0;
        r12 = HEAP32[r5];
        HEAP32[r5] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        r12 = r4 + 8 | 0;
        r11 = HEAP32[r8];
        HEAP32[r8] = HEAP32[r12 >> 2];
        HEAP32[r12 >> 2] = r11;
        r11 = r4 + 12 | 0;
        r12 = HEAP32[r10];
        HEAP32[r10] = HEAP32[r11 >> 2];
        HEAP32[r11 >> 2] = r12;
        __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED1Ev(r4);
        r15 = HEAP32[r5];
        break;
      }
    } else {
      r15 = r6;
    }
  } while (0);
  r6 = r15 - 4 | 0;
  if ((r6 | 0) == 0) {
    r16 = r15;
    r17 = r16 - 4 | 0;
    HEAP32[r5] = r17;
    STACKTOP = r3;
    return;
  }
  HEAP32[r6 >> 2] = HEAP32[r2 >> 2];
  r16 = HEAP32[r5];
  r17 = r16 - 4 | 0;
  HEAP32[r5] = r17;
  STACKTOP = r3;
  return;
}
__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE10push_frontERKS3_["X"] = 1;
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = r1 + 12 | 0;
  HEAP32[r5 >> 2] = 0;
  HEAP32[r1 + 16 >> 2] = r4;
  do {
    if ((r2 | 0) == 0) {
      r6 = 0;
    } else {
      r7 = r4 + 112 | 0;
      if ((HEAP8[r7] & 1) << 24 >> 24 == 0 & r2 >>> 0 < 29) {
        HEAP8[r7] = 1;
        r6 = r4;
        break;
      } else {
        r6 = __Znwj(r2 << 2);
        break;
      }
    }
  } while (0);
  HEAP32[r1 >> 2] = r6;
  r4 = (r3 << 2) + r6 | 0;
  HEAP32[r1 + 8 >> 2] = r4;
  HEAP32[r1 + 4 >> 2] = r4;
  HEAP32[r5 >> 2] = (r2 << 2) + r6 | 0;
  return;
}
function __ZNSt3__112_GLOBAL__N_17releaseclEPNS_6locale5facetE(r1) {
  __ZNSt3__114__shared_count16__release_sharedEv(r1 | 0);
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj() {
  var r1;
  if ((HEAP8[5264136] & 1) << 24 >> 24 == 0) {
    HEAP8[5264136] = 1;
    r1 = 5264024;
  } else {
    r1 = __Znwj(112);
  }
  HEAP32[1316004] = r1;
  HEAP32[1316003] = r1;
  HEAP32[1316005] = r1 + 112 | 0;
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej() {
  HEAP32[1316003] = 0;
  HEAP32[1316004] = 0;
  HEAP32[1316005] = 0;
  HEAP8[5264136] = 0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj();
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(28);
  return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(r1) {
  var r2;
  r2 = HEAP32[r1 >> 2];
  if ((r2 | 0) == 0) {
    return;
  }
  HEAP32[r1 + 4 >> 2] = r2;
  if ((r2 | 0) == (r1 + 12 | 0)) {
    HEAP8[r1 + 124 | 0] = 0;
    return;
  } else {
    __ZdlPv(r2);
    return;
  }
}
function ___cxx_global_array_dtor(r1) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262980);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262968);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262956);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262944);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262932);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262920);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262908);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262896);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262884);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262872);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262860);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262848);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262836);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262824);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262812);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262800);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262788);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262776);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262764);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262752);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262740);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262728);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262716);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262704);
  return;
}
function ___cxx_global_array_dtor80(r1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263724);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263712);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263700);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263688);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263676);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263664);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263652);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263640);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263628);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263616);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263604);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263592);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263580);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263568);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263556);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263544);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263532);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263520);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263508);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263496);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263484);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263472);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263460);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263448);
  return;
}
function ___cxx_global_array_dtor83(r1) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262524);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262512);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262500);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262488);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262476);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262464);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262452);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262440);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262428);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262416);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262404);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262392);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262380);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262368);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262356);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262344);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262332);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262320);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262308);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262296);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262284);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262272);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262260);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262248);
  return;
}
function ___cxx_global_array_dtor108(r1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263268);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263256);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263244);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263232);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263220);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263208);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263196);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263184);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263172);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263160);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263148);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263136);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263124);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263112);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263100);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263088);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263076);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263064);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263052);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263040);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263028);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263016);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263004);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5262992);
  return;
}
function ___cxx_global_array_dtor132(r1) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262692);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262680);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262668);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262656);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262644);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262632);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262620);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262608);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262596);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262584);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262572);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262560);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262548);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(5262536);
  return;
}
function ___cxx_global_array_dtor147(r1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263436);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263424);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263412);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263400);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263388);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263376);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263364);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263352);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263340);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263328);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263316);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263304);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263292);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(5263280);
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(r1) {
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(r1 | 0);
  return;
}
function __GLOBAL__I_a291() {
  ___cxx_global_var_init270();
  ___cxx_global_var_init1271();
  ___cxx_global_var_init2272();
  ___cxx_global_var_init3275();
  ___cxx_global_var_init4276();
  ___cxx_global_var_init9277();
  ___cxx_global_var_init10278();
  ___cxx_global_var_init151069();
  ___cxx_global_var_init20();
  ___cxx_global_var_init21();
  ___cxx_global_var_init22();
  ___cxx_global_var_init23();
  ___cxx_global_var_init24();
  ___cxx_global_var_init25();
  ___cxx_global_var_init261070();
  ___cxx_global_var_init29();
  ___cxx_global_var_init30();
  ___cxx_global_var_init32();
  ___cxx_global_var_init33();
  ___cxx_global_var_init34();
  return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZN10__cxxabiv119__pointer_type_infoD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv(r1, r2, r3) {
  return __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, r2 | 0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = r2;
  r5 = r3 - r4 | 0;
  r6 = r5 >> 2;
  if (r6 >>> 0 > 1073741822) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r6 >>> 0 < 2) {
    HEAP8[r1] = r5 >>> 1 & 255;
    r7 = r1 + 4 | 0;
  } else {
    r5 = r6 + 4 & -4;
    r8 = __Znwj(r5 << 2);
    HEAP32[r1 + 8 >> 2] = r8;
    HEAP32[r1 >> 2] = r5 | 1;
    HEAP32[r1 + 4 >> 2] = r6;
    r7 = r8;
  }
  if ((r2 | 0) == (r3 | 0)) {
    r9 = r7;
    HEAP32[r9 >> 2] = 0;
    return;
  }
  r8 = ((r3 - 4 + -r4 | 0) >>> 2) + 1 | 0;
  r4 = r7;
  r6 = r2;
  while (1) {
    HEAP32[r4 >> 2] = HEAP32[r6 >> 2];
    r2 = r6 + 4 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      break;
    } else {
      r4 = r4 + 4 | 0;
      r6 = r2;
    }
  }
  r9 = (r8 << 2) + r7 | 0;
  HEAP32[r9 >> 2] = 0;
  return;
}
__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_["X"] = 1;
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9;
  r4 = r2;
  r5 = r3 - r4 | 0;
  if ((r5 | 0) == -1) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if (r5 >>> 0 < 11) {
    HEAP8[r1] = r5 << 1 & 255;
    r6 = r1 + 1 | 0;
  } else {
    r7 = r5 + 16 & -16;
    r8 = __Znwj(r7);
    HEAP32[r1 + 8 >> 2] = r8;
    HEAP32[r1 >> 2] = r7 | 1;
    HEAP32[r1 + 4 >> 2] = r5;
    r6 = r8;
  }
  if ((r2 | 0) == (r3 | 0)) {
    r9 = r6;
    HEAP8[r9] = 0;
    return;
  }
  r8 = r3 + -r4 | 0;
  r4 = r6;
  r5 = r2;
  while (1) {
    HEAP8[r4] = HEAP8[r5];
    r2 = r5 + 1 | 0;
    if ((r2 | 0) == (r3 | 0)) {
      break;
    } else {
      r4 = r4 + 1 | 0;
      r5 = r2;
    }
  }
  r9 = r6 + r8 | 0;
  HEAP8[r9] = 0;
  return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9;
  r2 = STACKTOP;
  STACKTOP = STACKTOP + 20 | 0;
  r3 = r2;
  r4 = HEAP32[1316005];
  r5 = HEAP32[1316004];
  if (r4 - r5 >> 2 >>> 0 >= r1 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(r1);
    STACKTOP = r2;
    return;
  }
  r6 = HEAP32[1316003];
  r7 = r5 - r6 >> 2;
  r5 = r7 + r1 | 0;
  if (r5 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  }
  r8 = r4 - r6 | 0;
  if (r8 >> 2 >>> 0 > 536870910) {
    r9 = 1073741823;
  } else {
    r6 = r8 >> 1;
    r9 = r6 >>> 0 < r5 >>> 0 ? r5 : r6;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC1EjjS6_(r3, r9, r7, 5264024);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(r3, r1);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(r3);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED1Ev(r3);
  STACKTOP = r2;
  return;
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(r1, r2, r3) {
  var r4, r5;
  r4 = r1 + 16 | 0;
  r5 = HEAP32[r4 >> 2];
  if ((r5 | 0) == 0) {
    HEAP32[r4 >> 2] = r2;
    HEAP32[r1 + 24 >> 2] = r3;
    HEAP32[r1 + 36 >> 2] = 1;
    return;
  }
  if ((r5 | 0) != (r2 | 0)) {
    r2 = r1 + 36 | 0;
    HEAP32[r2 >> 2] = HEAP32[r2 >> 2] + 1 | 0;
    HEAP32[r1 + 24 >> 2] = 2;
    HEAP8[r1 + 54 | 0] = 1;
    return;
  }
  r2 = r1 + 24 | 0;
  if ((HEAP32[r2 >> 2] | 0) != 2) {
    return;
  }
  HEAP32[r2 >> 2] = r3;
  return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = r1 >> 2;
  HEAP8[r1 + 53 | 0] = 1;
  if ((HEAP32[r5 + 1] | 0) != (r3 | 0)) {
    return;
  }
  HEAP8[r1 + 52 | 0] = 1;
  r3 = r1 + 16 | 0;
  r6 = HEAP32[r3 >> 2];
  if ((r6 | 0) == 0) {
    HEAP32[r3 >> 2] = r2;
    HEAP32[r5 + 6] = r4;
    HEAP32[r5 + 9] = 1;
    if (!((HEAP32[r5 + 12] | 0) == 1 & (r4 | 0) == 1)) {
      return;
    }
    HEAP8[r1 + 54 | 0] = 1;
    return;
  }
  if ((r6 | 0) != (r2 | 0)) {
    r2 = r1 + 36 | 0;
    HEAP32[r2 >> 2] = HEAP32[r2 >> 2] + 1 | 0;
    HEAP8[r1 + 54 | 0] = 1;
    return;
  }
  r2 = r1 + 24 | 0;
  r6 = HEAP32[r2 >> 2];
  if ((r6 | 0) == 2) {
    HEAP32[r2 >> 2] = r4;
    r7 = r4;
  } else {
    r7 = r6;
  }
  if (!((HEAP32[r5 + 12] | 0) == 1 & (r7 | 0) == 1)) {
    return;
  }
  HEAP8[r1 + 54 | 0] = 1;
  return;
}
__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i["X"] = 1;
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(r1, r2, r3) {
  if ((HEAP32[r1 + 4 >> 2] | 0) != (r2 | 0)) {
    return;
  }
  r2 = r1 + 28 | 0;
  if ((HEAP32[r2 >> 2] | 0) == 1) {
    return;
  }
  HEAP32[r2 >> 2] = r3;
  return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 56 | 0;
  r5 = r4, r6 = r5 >> 2;
  do {
    if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, r2 | 0)) {
      r7 = 1;
    } else {
      if ((r2 | 0) == 0) {
        r7 = 0;
        break;
      }
      r8 = ___dynamic_cast(r2, 5272848, 5272836);
      r9 = r8;
      if ((r8 | 0) == 0) {
        r7 = 0;
        break;
      }
      r10 = r5;
      for (r11 = r10 >> 2, r12 = r11 + 14; r11 < r12; r11++) {
        HEAP32[r11] = 0;
      }
      HEAP32[r6] = r9;
      HEAP32[r6 + 2] = r1;
      HEAP32[r6 + 3] = -1;
      HEAP32[r6 + 12] = 1;
      FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 28 >> 2]](r9, r5, HEAP32[r3 >> 2], 1);
      if ((HEAP32[r6 + 6] | 0) != 1) {
        r7 = 0;
        break;
      }
      HEAP32[r3 >> 2] = HEAP32[r6 + 4];
      r7 = 1;
    }
  } while (0);
  STACKTOP = r4;
  return r7;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(r1, r2, r3, r4) {
  if (!__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, HEAP32[r2 + 8 >> 2] | 0)) {
    return;
  }
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(r2, r3, r4);
  return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(r1, r2, r3, r4) {
  var r5;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, HEAP32[r2 + 8 >> 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(r2, r3, r4);
    return;
  } else {
    r5 = HEAP32[r1 + 8 >> 2];
    FUNCTION_TABLE[HEAP32[HEAP32[r5 >> 2] + 28 >> 2]](r5, r2, r3, r4);
    return;
  }
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(r1, r2, r3, r4) {
  var r5, r6, r7;
  r5 = HEAP32[r1 + 4 >> 2];
  r6 = r5 >> 8;
  if ((r5 & 1 | 0) == 0) {
    r7 = r6;
  } else {
    r7 = HEAP32[HEAP32[r3 >> 2] + r6 >> 2];
  }
  r6 = HEAP32[r1 >> 2];
  FUNCTION_TABLE[HEAP32[HEAP32[r6 >> 2] + 28 >> 2]](r6, r2, r3 + r7 | 0, (r5 & 2 | 0) != 0 ? r4 : 2);
  return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(r1, r2, r3, r4) {
  var r5, r6, r7, r8;
  r5 = 0;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, HEAP32[r2 + 8 >> 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(r2, r3, r4);
    return;
  }
  r6 = HEAP32[r1 + 12 >> 2];
  r7 = (r6 << 3) + r1 + 16 | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(r1 + 16 | 0, r2, r3, r4);
  if ((r6 | 0) <= 1) {
    return;
  }
  r6 = r2 + 54 | 0;
  r8 = r1 + 24 | 0;
  while (1) {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(r8, r2, r3, r4);
    if ((HEAP8[r6] & 1) << 24 >> 24 != 0) {
      r5 = 222;
      break;
    }
    r1 = r8 + 8 | 0;
    if (r1 >>> 0 < r7 >>> 0) {
      r8 = r1;
    } else {
      r5 = 221;
      break;
    }
  }
  if (r5 == 221) {
    return;
  } else if (r5 == 222) {
    return;
  }
}
function __ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv(r1, r2) {
  var r3, r4;
  r3 = r2 | 0;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, r3)) {
    r4 = 1;
    return r4;
  }
  r4 = __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r3, 5271280);
  return r4;
}
function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 56 | 0;
  r5 = r4, r6 = r5 >> 2;
  HEAP32[r3 >> 2] = HEAP32[HEAP32[r3 >> 2] >> 2];
  do {
    if (__ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv(r1 | 0, r2)) {
      r7 = 1;
    } else {
      if ((r2 | 0) == 0) {
        r7 = 0;
        break;
      }
      r8 = ___dynamic_cast(r2, 5272848, 5272812);
      if ((r8 | 0) == 0) {
        r7 = 0;
        break;
      }
      if ((HEAP32[r8 + 8 >> 2] & (HEAP32[r1 + 8 >> 2] ^ -1) | 0) != 0) {
        r7 = 0;
        break;
      }
      r9 = HEAP32[r1 + 12 >> 2];
      r10 = r9 | 0;
      r11 = r8 + 12 | 0;
      if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r10, HEAP32[r11 >> 2] | 0)) {
        r7 = 1;
        break;
      }
      if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r10, 5271172)) {
        r7 = 1;
        break;
      }
      if ((r9 | 0) == 0) {
        r7 = 0;
        break;
      }
      r10 = ___dynamic_cast(r9, 5272848, 5272836);
      r9 = r10;
      if ((r10 | 0) == 0) {
        r7 = 0;
        break;
      }
      r10 = HEAP32[r11 >> 2];
      if ((r10 | 0) == 0) {
        r7 = 0;
        break;
      }
      r11 = ___dynamic_cast(r10, 5272848, 5272836);
      r10 = r11;
      if ((r11 | 0) == 0) {
        r7 = 0;
        break;
      }
      r8 = r5;
      for (r12 = r8 >> 2, r13 = r12 + 14; r12 < r13; r12++) {
        HEAP32[r12] = 0;
      }
      HEAP32[r6] = r10;
      HEAP32[r6 + 2] = r9;
      HEAP32[r6 + 3] = -1;
      HEAP32[r6 + 12] = 1;
      FUNCTION_TABLE[HEAP32[HEAP32[r11 >> 2] + 28 >> 2]](r10, r5, HEAP32[r3 >> 2], 1);
      if ((HEAP32[r6 + 6] | 0) != 1) {
        r7 = 0;
        break;
      }
      HEAP32[r3 >> 2] = HEAP32[r6 + 4];
      r7 = 1;
    }
  } while (0);
  STACKTOP = r4;
  return r7;
}
__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv["X"] = 1;
function ___dynamic_cast(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  r4 = STACKTOP;
  STACKTOP = STACKTOP + 56 | 0;
  r5 = r4, r6 = r5 >> 2;
  r7 = HEAP32[r1 >> 2];
  r8 = r1 + HEAP32[r7 - 8 >> 2] | 0;
  r9 = HEAP32[r7 - 4 >> 2];
  r7 = r9;
  HEAP32[r6] = r3;
  HEAP32[r6 + 1] = r1;
  HEAP32[r6 + 2] = r2;
  HEAP32[r6 + 3] = -1;
  r2 = r5 + 16 | 0;
  r1 = r5 + 20 | 0;
  r10 = r5 + 24 | 0;
  r11 = r5 + 28 | 0;
  r12 = r5 + 32 | 0;
  r13 = r5 + 40 | 0;
  r14 = __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r9, r3 | 0);
  r3 = r2;
  for (r15 = r3 >> 2, r16 = r15 + 9; r15 < r16; r15++) {
    HEAP32[r15] = 0;
  }
  HEAP16[r3 + 36 >> 1] = 0;
  HEAP8[r3 + 38 | 0] = 0;
  if (r14) {
    HEAP32[r6 + 12] = 1;
    FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 20 >> 2]](r7, r5, r8, r8, 1, 0);
    STACKTOP = r4;
    return (HEAP32[r10 >> 2] | 0) == 1 ? r8 : 0;
  }
  FUNCTION_TABLE[HEAP32[HEAP32[r9 >> 2] + 24 >> 2]](r7, r5, r8, 1, 0);
  r8 = HEAP32[r6 + 9];
  if ((r8 | 0) == 1) {
    do {
      if ((HEAP32[r10 >> 2] | 0) != 1) {
        if ((HEAP32[r13 >> 2] | 0) != 0) {
          r17 = 0;
          STACKTOP = r4;
          return r17;
        }
        if ((HEAP32[r11 >> 2] | 0) != 1) {
          r17 = 0;
          STACKTOP = r4;
          return r17;
        }
        if ((HEAP32[r12 >> 2] | 0) == 1) {
          break;
        } else {
          r17 = 0;
        }
        STACKTOP = r4;
        return r17;
      }
    } while (0);
    r17 = HEAP32[r2 >> 2];
    STACKTOP = r4;
    return r17;
  } else if ((r8 | 0) == 0) {
    if ((HEAP32[r13 >> 2] | 0) != 1) {
      r17 = 0;
      STACKTOP = r4;
      return r17;
    }
    if ((HEAP32[r11 >> 2] | 0) != 1) {
      r17 = 0;
      STACKTOP = r4;
      return r17;
    }
    r17 = (HEAP32[r12 >> 2] | 0) == 1 ? HEAP32[r1 >> 2] : 0;
    STACKTOP = r4;
    return r17;
  } else {
    r17 = 0;
    STACKTOP = r4;
    return r17;
  }
}
___dynamic_cast["X"] = 1;
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26;
  r6 = r2 >> 2;
  r7 = 0;
  r8 = r1 | 0;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r8, HEAP32[r6 + 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(r2, r3, r4);
    return;
  }
  if (!__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r8, HEAP32[r6] | 0)) {
    r8 = HEAP32[r1 + 12 >> 2];
    r9 = (r8 << 3) + r1 + 16 | 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r1 + 16 | 0, r2, r3, r4, r5);
    r10 = r1 + 24 | 0;
    if ((r8 | 0) <= 1) {
      return;
    }
    r8 = HEAP32[r1 + 8 >> 2];
    do {
      if ((r8 & 2 | 0) == 0) {
        r11 = (r2 + 36 | 0) >> 2;
        if ((HEAP32[r11] | 0) == 1) {
          break;
        }
        if ((r8 & 1 | 0) == 0) {
          r12 = r2 + 54 | 0;
          r13 = r10;
          while (1) {
            if ((HEAP8[r12] & 1) << 24 >> 24 != 0) {
              r7 = 314;
              break;
            }
            if ((HEAP32[r11] | 0) == 1) {
              r7 = 315;
              break;
            }
            __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r13, r2, r3, r4, r5);
            r14 = r13 + 8 | 0;
            if (r14 >>> 0 < r9 >>> 0) {
              r13 = r14;
            } else {
              r7 = 316;
              break;
            }
          }
          if (r7 == 314) {
            return;
          } else if (r7 == 315) {
            return;
          } else if (r7 == 316) {
            return;
          }
        }
        r13 = r2 + 24 | 0;
        r12 = r2 + 54 | 0;
        r14 = r10;
        while (1) {
          if ((HEAP8[r12] & 1) << 24 >> 24 != 0) {
            r7 = 311;
            break;
          }
          if ((HEAP32[r11] | 0) == 1) {
            if ((HEAP32[r13 >> 2] | 0) == 1) {
              r7 = 312;
              break;
            }
          }
          __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r14, r2, r3, r4, r5);
          r15 = r14 + 8 | 0;
          if (r15 >>> 0 < r9 >>> 0) {
            r14 = r15;
          } else {
            r7 = 313;
            break;
          }
        }
        if (r7 == 311) {
          return;
        } else if (r7 == 312) {
          return;
        } else if (r7 == 313) {
          return;
        }
      }
    } while (0);
    r8 = r2 + 54 | 0;
    r14 = r10;
    while (1) {
      if ((HEAP8[r8] & 1) << 24 >> 24 != 0) {
        r7 = 309;
        break;
      }
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r14, r2, r3, r4, r5);
      r10 = r14 + 8 | 0;
      if (r10 >>> 0 < r9 >>> 0) {
        r14 = r10;
      } else {
        r7 = 310;
        break;
      }
    }
    if (r7 == 309) {
      return;
    } else if (r7 == 310) {
      return;
    }
  }
  do {
    if ((HEAP32[r6 + 4] | 0) != (r3 | 0)) {
      r14 = r2 + 20 | 0;
      if ((HEAP32[r14 >> 2] | 0) == (r3 | 0)) {
        break;
      }
      HEAP32[r6 + 8] = r4;
      r9 = (r2 + 44 | 0) >> 2;
      if ((HEAP32[r9] | 0) == 4) {
        return;
      }
      r8 = HEAP32[r1 + 12 >> 2];
      r10 = (r8 << 3) + r1 + 16 | 0;
      L349 : do {
        if ((r8 | 0) > 0) {
          r13 = r2 + 52 | 0;
          r11 = r2 + 53 | 0;
          r12 = r2 + 54 | 0;
          r15 = r1 + 8 | 0;
          r16 = r2 + 24 | 0;
          r17 = 0;
          r18 = r1 + 16 | 0;
          r19 = 0;
          L351 : while (1) {
            HEAP8[r13] = 0;
            HEAP8[r11] = 0;
            __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r18, r2, r3, r3, 1, r5);
            if ((HEAP8[r12] & 1) << 24 >> 24 != 0) {
              r20 = r19;
              r21 = r17;
              break;
            }
            do {
              if ((HEAP8[r11] & 1) << 24 >> 24 == 0) {
                r22 = r19;
                r23 = r17;
              } else {
                if ((HEAP8[r13] & 1) << 24 >> 24 == 0) {
                  if ((HEAP32[r15 >> 2] & 1 | 0) == 0) {
                    r20 = 1;
                    r21 = r17;
                    break L351;
                  } else {
                    r22 = 1;
                    r23 = r17;
                    break;
                  }
                }
                if ((HEAP32[r16 >> 2] | 0) == 1) {
                  break L349;
                }
                if ((HEAP32[r15 >> 2] & 2 | 0) == 0) {
                  break L349;
                } else {
                  r22 = 1;
                  r23 = 1;
                }
              }
            } while (0);
            r24 = r18 + 8 | 0;
            if (r24 >>> 0 < r10 >>> 0) {
              r17 = r23;
              r18 = r24;
              r19 = r22;
            } else {
              r20 = r22;
              r21 = r23;
              break;
            }
          }
          if ((r21 & 1) << 24 >> 24 == 0) {
            r25 = r20;
            r7 = 279;
            break;
          } else {
            r26 = r20;
            r7 = 282;
            break;
          }
        } else {
          r25 = 0;
          r7 = 279;
        }
      } while (0);
      do {
        if (r7 == 279) {
          HEAP32[r14 >> 2] = r3;
          r10 = r2 + 40 | 0;
          HEAP32[r10 >> 2] = HEAP32[r10 >> 2] + 1 | 0;
          if ((HEAP32[r6 + 9] | 0) != 1) {
            r26 = r25;
            r7 = 282;
            break;
          }
          if ((HEAP32[r6 + 6] | 0) != 2) {
            r26 = r25;
            r7 = 282;
            break;
          }
          HEAP8[r2 + 54 | 0] = 1;
          r26 = r25;
          r7 = 282;
          break;
        }
      } while (0);
      do {
        if (r7 == 282) {
          if ((r26 & 1) << 24 >> 24 != 0) {
            break;
          }
          HEAP32[r9] = 4;
          return;
        }
      } while (0);
      HEAP32[r9] = 3;
      return;
    }
  } while (0);
  if ((r4 | 0) != 1) {
    return;
  }
  HEAP32[r6 + 8] = 1;
  return;
}
__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib["X"] = 1;
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9;
  r7 = HEAP32[r1 + 4 >> 2];
  r8 = r7 >> 8;
  if ((r7 & 1 | 0) == 0) {
    r9 = r8;
  } else {
    r9 = HEAP32[HEAP32[r4 >> 2] + r8 >> 2];
  }
  r8 = HEAP32[r1 >> 2];
  FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 20 >> 2]](r8, r2, r3, r4 + r9 | 0, (r7 & 2 | 0) != 0 ? r5 : 2, r6);
  return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r1, r2, r3, r4, r5) {
  var r6, r7, r8;
  r6 = HEAP32[r1 + 4 >> 2];
  r7 = r6 >> 8;
  if ((r6 & 1 | 0) == 0) {
    r8 = r7;
  } else {
    r8 = HEAP32[HEAP32[r3 >> 2] + r7 >> 2];
  }
  r7 = HEAP32[r1 >> 2];
  FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 24 >> 2]](r7, r2, r3 + r8 | 0, (r6 & 2 | 0) != 0 ? r4 : 2, r5);
  return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r1, r2, r3, r4, r5) {
  var r6, r7, r8, r9, r10, r11, r12, r13;
  r6 = r2 >> 2;
  r7 = 0;
  r8 = r1 | 0;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r8, HEAP32[r6 + 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(r2, r3, r4);
    return;
  }
  if (!__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r8, HEAP32[r6] | 0)) {
    r8 = HEAP32[r1 + 8 >> 2];
    FUNCTION_TABLE[HEAP32[HEAP32[r8 >> 2] + 24 >> 2]](r8, r2, r3, r4, r5);
    return;
  }
  do {
    if ((HEAP32[r6 + 4] | 0) != (r3 | 0)) {
      r8 = r2 + 20 | 0;
      if ((HEAP32[r8 >> 2] | 0) == (r3 | 0)) {
        break;
      }
      HEAP32[r6 + 8] = r4;
      r9 = (r2 + 44 | 0) >> 2;
      if ((HEAP32[r9] | 0) == 4) {
        return;
      }
      r10 = r2 + 52 | 0;
      HEAP8[r10] = 0;
      r11 = r2 + 53 | 0;
      HEAP8[r11] = 0;
      r12 = HEAP32[r1 + 8 >> 2];
      FUNCTION_TABLE[HEAP32[HEAP32[r12 >> 2] + 20 >> 2]](r12, r2, r3, r3, 1, r5);
      do {
        if ((HEAP8[r11] & 1) << 24 >> 24 == 0) {
          r13 = 0;
          r7 = 333;
        } else {
          if ((HEAP8[r10] & 1) << 24 >> 24 == 0) {
            r13 = 1;
            r7 = 333;
            break;
          } else {
            break;
          }
        }
      } while (0);
      L402 : do {
        if (r7 == 333) {
          HEAP32[r8 >> 2] = r3;
          r10 = r2 + 40 | 0;
          HEAP32[r10 >> 2] = HEAP32[r10 >> 2] + 1 | 0;
          do {
            if ((HEAP32[r6 + 9] | 0) == 1) {
              if ((HEAP32[r6 + 6] | 0) != 2) {
                r7 = 336;
                break;
              }
              HEAP8[r2 + 54 | 0] = 1;
              if (r13) {
                break L402;
              } else {
                break;
              }
            } else {
              r7 = 336;
            }
          } while (0);
          if (r7 == 336) {
            if (r13) {
              break;
            }
          }
          HEAP32[r9] = 4;
          return;
        }
      } while (0);
      HEAP32[r9] = 3;
      return;
    }
  } while (0);
  if ((r4 | 0) != 1) {
    return;
  }
  HEAP32[r6 + 8] = 1;
  return;
}
__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib["X"] = 1;
function __ZNSt8bad_castD1Ev(r1) {
  return;
}
function __ZNKSt8bad_cast4whatEv(r1) {
  return 5252408;
}
function __ZNSt8bad_castC2Ev(r1) {
  HEAP32[r1 >> 2] = 5264632;
  return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(r1, r2, r3, r4, r5) {
  var r6;
  r5 = r2 >> 2;
  r6 = r1 | 0;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r6, HEAP32[r5 + 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(r2, r3, r4);
    return;
  }
  if (!__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r6, HEAP32[r5] | 0)) {
    return;
  }
  do {
    if ((HEAP32[r5 + 4] | 0) != (r3 | 0)) {
      r6 = r2 + 20 | 0;
      if ((HEAP32[r6 >> 2] | 0) == (r3 | 0)) {
        break;
      }
      HEAP32[r5 + 8] = r4;
      HEAP32[r6 >> 2] = r3;
      r6 = r2 + 40 | 0;
      HEAP32[r6 >> 2] = HEAP32[r6 >> 2] + 1 | 0;
      do {
        if ((HEAP32[r5 + 9] | 0) == 1) {
          if ((HEAP32[r5 + 6] | 0) != 2) {
            break;
          }
          HEAP8[r2 + 54 | 0] = 1;
        }
      } while (0);
      HEAP32[r5 + 11] = 4;
      return;
    }
  } while (0);
  if ((r4 | 0) != 1) {
    return;
  }
  HEAP32[r5 + 8] = 1;
  return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r1, r2, r3, r4, r5, r6) {
  var r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, HEAP32[r2 + 8 >> 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(r2, r3, r4, r5);
    return;
  }
  r7 = r2 + 52 | 0;
  r8 = HEAP8[r7] & 1;
  r9 = r2 + 53 | 0;
  r10 = HEAP8[r9] & 1;
  r11 = HEAP32[r1 + 12 >> 2];
  r12 = (r11 << 3) + r1 + 16 | 0;
  HEAP8[r7] = 0;
  HEAP8[r9] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r1 + 16 | 0, r2, r3, r4, r5, r6);
  L447 : do {
    if ((r11 | 0) > 1) {
      r13 = r2 + 24 | 0;
      r14 = r1 + 8 | 0;
      r15 = r2 + 54 | 0;
      r16 = r1 + 24 | 0;
      while (1) {
        if ((HEAP8[r15] & 1) << 24 >> 24 != 0) {
          break L447;
        }
        do {
          if ((HEAP8[r7] & 1) << 24 >> 24 == 0) {
            if ((HEAP8[r9] & 1) << 24 >> 24 == 0) {
              break;
            }
            if ((HEAP32[r14 >> 2] & 1 | 0) == 0) {
              break L447;
            }
          } else {
            if ((HEAP32[r13 >> 2] | 0) == 1) {
              break L447;
            }
            if ((HEAP32[r14 >> 2] & 2 | 0) == 0) {
              break L447;
            }
          }
        } while (0);
        HEAP8[r7] = 0;
        HEAP8[r9] = 0;
        __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r16, r2, r3, r4, r5, r6);
        r17 = r16 + 8 | 0;
        if (r17 >>> 0 < r12 >>> 0) {
          r16 = r17;
        } else {
          break L447;
        }
      }
    }
  } while (0);
  HEAP8[r7] = r8;
  HEAP8[r9] = r10;
  return;
}
__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib["X"] = 1;
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r1, r2, r3, r4, r5, r6) {
  var r7;
  if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, HEAP32[r2 + 8 >> 2] | 0)) {
    __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(r2, r3, r4, r5);
    return;
  } else {
    r7 = HEAP32[r1 + 8 >> 2];
    FUNCTION_TABLE[HEAP32[HEAP32[r7 >> 2] + 20 >> 2]](r7, r2, r3, r4, r5, r6);
    return;
  }
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(r1, r2, r3, r4, r5, r6) {
  if (!__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b(r1 | 0, HEAP32[r2 + 8 >> 2] | 0)) {
    return;
  }
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(r2, r3, r4, r5);
  return;
}
function __ZNSt8bad_castC1Ev(r1) {
  __ZNSt8bad_castC2Ev(r1);
  return;
}
function __ZNSt8bad_castD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function _malloc(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
  do {
    if (r1 >>> 0 < 245) {
      if (r1 >>> 0 < 11) {
        r2 = 16;
      } else {
        r2 = r1 + 11 & -8;
      }
      r3 = r2 >>> 3;
      r4 = HEAP32[1313261];
      r5 = r4 >>> (r3 >>> 0);
      if ((r5 & 3 | 0) != 0) {
        r6 = (r5 & 1 ^ 1) + r3 | 0;
        r7 = r6 << 1;
        r8 = (r7 << 2) + 5253084 | 0;
        r9 = (r7 + 2 << 2) + 5253084 | 0;
        r7 = HEAP32[r9 >> 2];
        r10 = r7 + 8 | 0;
        r11 = HEAP32[r10 >> 2];
        do {
          if ((r8 | 0) == (r11 | 0)) {
            HEAP32[1313261] = r4 & (1 << r6 ^ -1);
          } else {
            if (r11 >>> 0 < HEAP32[1313265] >>> 0) {
              _abort();
            } else {
              HEAP32[r9 >> 2] = r11;
              HEAP32[r11 + 12 >> 2] = r8;
              break;
            }
          }
        } while (0);
        r8 = r6 << 3;
        HEAP32[r7 + 4 >> 2] = r8 | 3;
        r11 = r7 + (r8 | 4) | 0;
        HEAP32[r11 >> 2] = HEAP32[r11 >> 2] | 1;
        r12 = r10;
        return r12;
      }
      if (r2 >>> 0 <= HEAP32[1313263] >>> 0) {
        r13 = r2;
        break;
      }
      if ((r5 | 0) == 0) {
        if ((HEAP32[1313262] | 0) == 0) {
          r13 = r2;
          break;
        }
        r11 = _tmalloc_small(r2);
        if ((r11 | 0) == 0) {
          r13 = r2;
          break;
        } else {
          r12 = r11;
        }
        return r12;
      }
      r11 = 2 << r3;
      r8 = r5 << r3 & (r11 | -r11);
      r11 = (r8 & -r8) - 1 | 0;
      r8 = r11 >>> 12 & 16;
      r9 = r11 >>> (r8 >>> 0);
      r11 = r9 >>> 5 & 8;
      r14 = r9 >>> (r11 >>> 0);
      r9 = r14 >>> 2 & 4;
      r15 = r14 >>> (r9 >>> 0);
      r14 = r15 >>> 1 & 2;
      r16 = r15 >>> (r14 >>> 0);
      r15 = r16 >>> 1 & 1;
      r17 = (r11 | r8 | r9 | r14 | r15) + (r16 >>> (r15 >>> 0)) | 0;
      r15 = r17 << 1;
      r16 = (r15 << 2) + 5253084 | 0;
      r14 = (r15 + 2 << 2) + 5253084 | 0;
      r15 = HEAP32[r14 >> 2];
      r9 = r15 + 8 | 0;
      r8 = HEAP32[r9 >> 2];
      do {
        if ((r16 | 0) == (r8 | 0)) {
          HEAP32[1313261] = r4 & (1 << r17 ^ -1);
        } else {
          if (r8 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          } else {
            HEAP32[r14 >> 2] = r8;
            HEAP32[r8 + 12 >> 2] = r16;
            break;
          }
        }
      } while (0);
      r16 = r17 << 3;
      r8 = r16 - r2 | 0;
      HEAP32[r15 + 4 >> 2] = r2 | 3;
      r14 = r15;
      r4 = r14 + r2 | 0;
      HEAP32[r14 + (r2 | 4) >> 2] = r8 | 1;
      HEAP32[r14 + r16 >> 2] = r8;
      r16 = HEAP32[1313263];
      if ((r16 | 0) != 0) {
        r14 = HEAP32[1313266];
        r3 = r16 >>> 3;
        r16 = r3 << 1;
        r5 = (r16 << 2) + 5253084 | 0;
        r10 = HEAP32[1313261];
        r7 = 1 << r3;
        do {
          if ((r10 & r7 | 0) == 0) {
            HEAP32[1313261] = r10 | r7;
            r18 = r5;
            r19 = (r16 + 2 << 2) + 5253084 | 0;
          } else {
            r3 = (r16 + 2 << 2) + 5253084 | 0;
            r6 = HEAP32[r3 >> 2];
            if (r6 >>> 0 >= HEAP32[1313265] >>> 0) {
              r18 = r6;
              r19 = r3;
              break;
            }
            _abort();
          }
        } while (0);
        HEAP32[r19 >> 2] = r14;
        HEAP32[r18 + 12 >> 2] = r14;
        HEAP32[r14 + 8 >> 2] = r18;
        HEAP32[r14 + 12 >> 2] = r5;
      }
      HEAP32[1313263] = r8;
      HEAP32[1313266] = r4;
      r12 = r9;
      return r12;
    } else {
      if (r1 >>> 0 > 4294967231) {
        r13 = -1;
        break;
      }
      r16 = r1 + 11 & -8;
      if ((HEAP32[1313262] | 0) == 0) {
        r13 = r16;
        break;
      }
      r7 = _tmalloc_large(r16);
      if ((r7 | 0) == 0) {
        r13 = r16;
        break;
      } else {
        r12 = r7;
      }
      return r12;
    }
  } while (0);
  r1 = HEAP32[1313263];
  if (r13 >>> 0 > r1 >>> 0) {
    r18 = HEAP32[1313264];
    if (r13 >>> 0 < r18 >>> 0) {
      r19 = r18 - r13 | 0;
      HEAP32[1313264] = r19;
      r18 = HEAP32[1313267];
      r2 = r18;
      HEAP32[1313267] = r2 + r13 | 0;
      HEAP32[r13 + (r2 + 4) >> 2] = r19 | 1;
      HEAP32[r18 + 4 >> 2] = r13 | 3;
      r12 = r18 + 8 | 0;
      return r12;
    } else {
      r12 = _sys_alloc(r13);
      return r12;
    }
  } else {
    r18 = r1 - r13 | 0;
    r19 = HEAP32[1313266];
    if (r18 >>> 0 > 15) {
      r2 = r19;
      HEAP32[1313266] = r2 + r13 | 0;
      HEAP32[1313263] = r18;
      HEAP32[r13 + (r2 + 4) >> 2] = r18 | 1;
      HEAP32[r2 + r1 >> 2] = r18;
      HEAP32[r19 + 4 >> 2] = r13 | 3;
    } else {
      HEAP32[1313263] = 0;
      HEAP32[1313266] = 0;
      HEAP32[r19 + 4 >> 2] = r1 | 3;
      r13 = r1 + (r19 + 4) | 0;
      HEAP32[r13 >> 2] = HEAP32[r13 >> 2] | 1;
    }
    r12 = r19 + 8 | 0;
    return r12;
  }
}
_malloc["X"] = 1;
function _tmalloc_small(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21;
  r2 = HEAP32[1313262];
  r3 = (r2 & -r2) - 1 | 0;
  r2 = r3 >>> 12 & 16;
  r4 = r3 >>> (r2 >>> 0);
  r3 = r4 >>> 5 & 8;
  r5 = r4 >>> (r3 >>> 0);
  r4 = r5 >>> 2 & 4;
  r6 = r5 >>> (r4 >>> 0);
  r5 = r6 >>> 1 & 2;
  r7 = r6 >>> (r5 >>> 0);
  r6 = r7 >>> 1 & 1;
  r8 = HEAP32[((r3 | r2 | r4 | r5 | r6) + (r7 >>> (r6 >>> 0)) << 2) + 5253348 >> 2];
  r6 = r8;
  r7 = r8, r5 = r7 >> 2;
  r4 = (HEAP32[r8 + 4 >> 2] & -8) - r1 | 0;
  while (1) {
    r8 = HEAP32[r6 + 16 >> 2];
    if ((r8 | 0) == 0) {
      r2 = HEAP32[r6 + 20 >> 2];
      if ((r2 | 0) == 0) {
        break;
      } else {
        r9 = r2;
      }
    } else {
      r9 = r8;
    }
    r8 = (HEAP32[r9 + 4 >> 2] & -8) - r1 | 0;
    r2 = r8 >>> 0 < r4 >>> 0;
    r6 = r9;
    r7 = r2 ? r9 : r7, r5 = r7 >> 2;
    r4 = r2 ? r8 : r4;
  }
  r9 = r7;
  r6 = HEAP32[1313265];
  if (r9 >>> 0 < r6 >>> 0) {
    _abort();
  }
  r8 = r9 + r1 | 0;
  r2 = r8;
  if (r9 >>> 0 >= r8 >>> 0) {
    _abort();
  }
  r8 = HEAP32[r5 + 6];
  r3 = HEAP32[r5 + 3];
  L543 : do {
    if ((r3 | 0) == (r7 | 0)) {
      r10 = r7 + 20 | 0;
      r11 = HEAP32[r10 >> 2];
      do {
        if ((r11 | 0) == 0) {
          r12 = r7 + 16 | 0;
          r13 = HEAP32[r12 >> 2];
          if ((r13 | 0) == 0) {
            r14 = 0, r15 = r14 >> 2;
            break L543;
          } else {
            r16 = r13;
            r17 = r12;
            break;
          }
        } else {
          r16 = r11;
          r17 = r10;
        }
      } while (0);
      while (1) {
        r10 = r16 + 20 | 0;
        r11 = HEAP32[r10 >> 2];
        if ((r11 | 0) != 0) {
          r16 = r11;
          r17 = r10;
          continue;
        }
        r10 = r16 + 16 | 0;
        r11 = HEAP32[r10 >> 2];
        if ((r11 | 0) == 0) {
          break;
        } else {
          r16 = r11;
          r17 = r10;
        }
      }
      if (r17 >>> 0 < r6 >>> 0) {
        _abort();
      } else {
        HEAP32[r17 >> 2] = 0;
        r14 = r16, r15 = r14 >> 2;
        break;
      }
    } else {
      r10 = HEAP32[r5 + 2];
      if (r10 >>> 0 < r6 >>> 0) {
        _abort();
      } else {
        HEAP32[r10 + 12 >> 2] = r3;
        HEAP32[r3 + 8 >> 2] = r10;
        r14 = r3, r15 = r14 >> 2;
        break;
      }
    }
  } while (0);
  L559 : do {
    if ((r8 | 0) != 0) {
      r3 = r7 + 28 | 0;
      r6 = (HEAP32[r3 >> 2] << 2) + 5253348 | 0;
      do {
        if ((r7 | 0) == (HEAP32[r6 >> 2] | 0)) {
          HEAP32[r6 >> 2] = r14;
          if ((r14 | 0) != 0) {
            break;
          }
          HEAP32[1313262] = HEAP32[1313262] & (1 << HEAP32[r3 >> 2] ^ -1);
          break L559;
        } else {
          if (r8 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          }
          r16 = r8 + 16 | 0;
          if ((HEAP32[r16 >> 2] | 0) == (r7 | 0)) {
            HEAP32[r16 >> 2] = r14;
          } else {
            HEAP32[r8 + 20 >> 2] = r14;
          }
          if ((r14 | 0) == 0) {
            break L559;
          }
        }
      } while (0);
      if (r14 >>> 0 < HEAP32[1313265] >>> 0) {
        _abort();
      }
      HEAP32[r15 + 6] = r8;
      r3 = HEAP32[r5 + 4];
      do {
        if ((r3 | 0) != 0) {
          if (r3 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          } else {
            HEAP32[r15 + 4] = r3;
            HEAP32[r3 + 24 >> 2] = r14;
            break;
          }
        }
      } while (0);
      r3 = HEAP32[r5 + 5];
      if ((r3 | 0) == 0) {
        break;
      }
      if (r3 >>> 0 < HEAP32[1313265] >>> 0) {
        _abort();
      } else {
        HEAP32[r15 + 5] = r3;
        HEAP32[r3 + 24 >> 2] = r14;
        break;
      }
    }
  } while (0);
  if (r4 >>> 0 < 16) {
    r14 = r4 + r1 | 0;
    HEAP32[r5 + 1] = r14 | 3;
    r15 = r14 + (r9 + 4) | 0;
    HEAP32[r15 >> 2] = HEAP32[r15 >> 2] | 1;
    r18 = r7 + 8 | 0;
    r19 = r18;
    return r19;
  }
  HEAP32[r5 + 1] = r1 | 3;
  HEAP32[r1 + (r9 + 4) >> 2] = r4 | 1;
  HEAP32[r9 + r4 + r1 >> 2] = r4;
  r1 = HEAP32[1313263];
  if ((r1 | 0) != 0) {
    r9 = HEAP32[1313266];
    r5 = r1 >>> 3;
    r1 = r5 << 1;
    r15 = (r1 << 2) + 5253084 | 0;
    r14 = HEAP32[1313261];
    r8 = 1 << r5;
    do {
      if ((r14 & r8 | 0) == 0) {
        HEAP32[1313261] = r14 | r8;
        r20 = r15;
        r21 = (r1 + 2 << 2) + 5253084 | 0;
      } else {
        r5 = (r1 + 2 << 2) + 5253084 | 0;
        r3 = HEAP32[r5 >> 2];
        if (r3 >>> 0 >= HEAP32[1313265] >>> 0) {
          r20 = r3;
          r21 = r5;
          break;
        }
        _abort();
      }
    } while (0);
    HEAP32[r21 >> 2] = r9;
    HEAP32[r20 + 12 >> 2] = r9;
    HEAP32[r9 + 8 >> 2] = r20;
    HEAP32[r9 + 12 >> 2] = r15;
  }
  HEAP32[1313263] = r4;
  HEAP32[1313266] = r2;
  r18 = r7 + 8 | 0;
  r19 = r18;
  return r19;
}
_tmalloc_small["X"] = 1;
function _sys_alloc(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22;
  r2 = 0;
  if ((HEAP32[1310728] | 0) == 0) {
    _init_mparams();
  }
  L604 : do {
    if ((HEAP32[1313371] & 4 | 0) == 0) {
      r3 = HEAP32[1313267];
      do {
        if ((r3 | 0) == 0) {
          r2 = 498;
        } else {
          r4 = _segment_holding(r3);
          if ((r4 | 0) == 0) {
            r2 = 498;
            break;
          }
          r5 = HEAP32[1310730];
          r6 = r1 + 47 - HEAP32[1313264] + r5 & -r5;
          if (r6 >>> 0 >= 2147483647) {
            r7 = 0;
            break;
          }
          r5 = _sbrk(r6);
          r8 = (r5 | 0) == (HEAP32[r4 >> 2] + HEAP32[r4 + 4 >> 2] | 0);
          r9 = r8 ? r5 : -1;
          r10 = r8 ? r6 : 0;
          r11 = r5;
          r12 = r6;
          r2 = 505;
          break;
        }
      } while (0);
      do {
        if (r2 == 498) {
          r3 = _sbrk(0);
          if ((r3 | 0) == -1) {
            r7 = 0;
            break;
          }
          r6 = HEAP32[1310730];
          r5 = r6 + (r1 + 47) & -r6;
          r6 = r3;
          r8 = HEAP32[1310729];
          r4 = r8 - 1 | 0;
          if ((r4 & r6 | 0) == 0) {
            r13 = r5;
          } else {
            r13 = r5 - r6 + (r4 + r6 & -r8) | 0;
          }
          if (r13 >>> 0 >= 2147483647) {
            r7 = 0;
            break;
          }
          r8 = _sbrk(r13);
          r6 = (r8 | 0) == (r3 | 0);
          r9 = r6 ? r3 : -1;
          r10 = r6 ? r13 : 0;
          r11 = r8;
          r12 = r13;
          r2 = 505;
          break;
        }
      } while (0);
      L617 : do {
        if (r2 == 505) {
          r8 = -r12 | 0;
          if ((r9 | 0) != -1) {
            r14 = r10;
            r15 = r9;
            r2 = 518;
            break L604;
          }
          do {
            if ((r11 | 0) != -1 & r12 >>> 0 < 2147483647) {
              if (r12 >>> 0 >= (r1 + 48 | 0) >>> 0) {
                r16 = r12;
                break;
              }
              r6 = HEAP32[1310730];
              r3 = r1 + 47 - r12 + r6 & -r6;
              if (r3 >>> 0 >= 2147483647) {
                r16 = r12;
                break;
              }
              if ((_sbrk(r3) | 0) == -1) {
                _sbrk(r8);
                r7 = r10;
                break L617;
              } else {
                r16 = r3 + r12 | 0;
                break;
              }
            } else {
              r16 = r12;
            }
          } while (0);
          if ((r11 | 0) != -1) {
            r14 = r16;
            r15 = r11;
            r2 = 518;
            break L604;
          }
          HEAP32[1313371] = HEAP32[1313371] | 4;
          r17 = r10;
          r2 = 515;
          break L604;
        }
      } while (0);
      HEAP32[1313371] = HEAP32[1313371] | 4;
      r17 = r7;
      r2 = 515;
      break;
    } else {
      r17 = 0;
      r2 = 515;
    }
  } while (0);
  do {
    if (r2 == 515) {
      r7 = HEAP32[1310730];
      r10 = r7 + (r1 + 47) & -r7;
      if (r10 >>> 0 >= 2147483647) {
        break;
      }
      r7 = _sbrk(r10);
      r10 = _sbrk(0);
      if (!((r10 | 0) != -1 & (r7 | 0) != -1 & r7 >>> 0 < r10 >>> 0)) {
        break;
      }
      r11 = r10 - r7 | 0;
      r10 = r11 >>> 0 > (r1 + 40 | 0) >>> 0;
      r16 = r10 ? r7 : -1;
      if ((r16 | 0) == -1) {
        break;
      } else {
        r14 = r10 ? r11 : r17;
        r15 = r16;
        r2 = 518;
        break;
      }
    }
  } while (0);
  do {
    if (r2 == 518) {
      r17 = HEAP32[1313369] + r14 | 0;
      HEAP32[1313369] = r17;
      if (r17 >>> 0 > HEAP32[1313370] >>> 0) {
        HEAP32[1313370] = r17;
      }
      r17 = HEAP32[1313267];
      L639 : do {
        if ((r17 | 0) == 0) {
          r16 = HEAP32[1313265];
          if ((r16 | 0) == 0 | r15 >>> 0 < r16 >>> 0) {
            HEAP32[1313265] = r15;
          }
          HEAP32[1313372] = r15;
          HEAP32[1313373] = r14;
          HEAP32[1313375] = 0;
          HEAP32[1313270] = HEAP32[1310728];
          HEAP32[1313269] = -1;
          _init_bins();
          _init_top(r15, r14 - 40 | 0);
        } else {
          r16 = 5253488, r11 = r16 >> 2;
          while (1) {
            r18 = HEAP32[r11];
            r19 = r16 + 4 | 0;
            r20 = HEAP32[r19 >> 2];
            if ((r15 | 0) == (r18 + r20 | 0)) {
              r2 = 526;
              break;
            }
            r10 = HEAP32[r11 + 2];
            if ((r10 | 0) == 0) {
              break;
            } else {
              r16 = r10, r11 = r16 >> 2;
            }
          }
          do {
            if (r2 == 526) {
              if ((HEAP32[r11 + 3] & 8 | 0) != 0) {
                break;
              }
              r16 = r17;
              if (!(r16 >>> 0 >= r18 >>> 0 & r16 >>> 0 < r15 >>> 0)) {
                break;
              }
              HEAP32[r19 >> 2] = r20 + r14 | 0;
              _init_top(HEAP32[1313267], HEAP32[1313264] + r14 | 0);
              break L639;
            }
          } while (0);
          if (r15 >>> 0 < HEAP32[1313265] >>> 0) {
            HEAP32[1313265] = r15;
          }
          r11 = r15 + r14 | 0;
          r16 = 5253488;
          while (1) {
            r21 = r16 | 0;
            if ((HEAP32[r21 >> 2] | 0) == (r11 | 0)) {
              r2 = 534;
              break;
            }
            r10 = HEAP32[r16 + 8 >> 2];
            if ((r10 | 0) == 0) {
              break;
            } else {
              r16 = r10;
            }
          }
          do {
            if (r2 == 534) {
              if ((HEAP32[r16 + 12 >> 2] & 8 | 0) != 0) {
                break;
              }
              HEAP32[r21 >> 2] = r15;
              r10 = r16 + 4 | 0;
              HEAP32[r10 >> 2] = HEAP32[r10 >> 2] + r14 | 0;
              r22 = _prepend_alloc(r15, r11, r1);
              return r22;
            }
          } while (0);
          _add_segment(r15, r14);
        }
      } while (0);
      r17 = HEAP32[1313264];
      if (r17 >>> 0 <= r1 >>> 0) {
        break;
      }
      r11 = r17 - r1 | 0;
      HEAP32[1313264] = r11;
      r17 = HEAP32[1313267];
      r16 = r17;
      HEAP32[1313267] = r16 + r1 | 0;
      HEAP32[r1 + (r16 + 4) >> 2] = r11 | 1;
      HEAP32[r17 + 4 >> 2] = r1 | 3;
      r22 = r17 + 8 | 0;
      return r22;
    }
  } while (0);
  HEAP32[___errno_location() >> 2] = 12;
  r22 = 0;
  return r22;
}
_sys_alloc["X"] = 1;
function _tmalloc_large(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36;
  r2 = r1 >> 2;
  r3 = 0;
  r4 = -r1 | 0;
  r5 = r1 >>> 8;
  do {
    if ((r5 | 0) == 0) {
      r6 = 0;
    } else {
      if (r1 >>> 0 > 16777215) {
        r6 = 31;
        break;
      }
      r7 = (r5 + 1048320 | 0) >>> 16 & 8;
      r8 = r5 << r7;
      r9 = (r8 + 520192 | 0) >>> 16 & 4;
      r10 = r8 << r9;
      r8 = (r10 + 245760 | 0) >>> 16 & 2;
      r11 = 14 - (r9 | r7 | r8) + (r10 << r8 >>> 15) | 0;
      r6 = r1 >>> ((r11 + 7 | 0) >>> 0) & 1 | r11 << 1;
    }
  } while (0);
  r5 = HEAP32[(r6 << 2) + 5253348 >> 2];
  L673 : do {
    if ((r5 | 0) == 0) {
      r12 = 0;
      r13 = r4;
      r14 = 0;
    } else {
      if ((r6 | 0) == 31) {
        r15 = 0;
      } else {
        r15 = 25 - (r6 >>> 1) | 0;
      }
      r11 = 0;
      r8 = r4;
      r10 = r5, r7 = r10 >> 2;
      r9 = r1 << r15;
      r16 = 0;
      while (1) {
        r17 = HEAP32[r7 + 1] & -8;
        r18 = r17 - r1 | 0;
        if (r18 >>> 0 < r8 >>> 0) {
          if ((r17 | 0) == (r1 | 0)) {
            r12 = r10;
            r13 = r18;
            r14 = r10;
            break L673;
          } else {
            r19 = r10;
            r20 = r18;
          }
        } else {
          r19 = r11;
          r20 = r8;
        }
        r18 = HEAP32[r7 + 5];
        r17 = HEAP32[((r9 >>> 31 << 2) + 16 >> 2) + r7];
        r21 = (r18 | 0) == 0 | (r18 | 0) == (r17 | 0) ? r16 : r18;
        if ((r17 | 0) == 0) {
          r12 = r19;
          r13 = r20;
          r14 = r21;
          break L673;
        } else {
          r11 = r19;
          r8 = r20;
          r10 = r17, r7 = r10 >> 2;
          r9 = r9 << 1;
          r16 = r21;
        }
      }
    }
  } while (0);
  do {
    if ((r14 | 0) == 0 & (r12 | 0) == 0) {
      r20 = 2 << r6;
      r19 = HEAP32[1313262] & (r20 | -r20);
      if ((r19 | 0) == 0) {
        r22 = 0;
        return r22;
      } else {
        r20 = (r19 & -r19) - 1 | 0;
        r19 = r20 >>> 12 & 16;
        r15 = r20 >>> (r19 >>> 0);
        r20 = r15 >>> 5 & 8;
        r5 = r15 >>> (r20 >>> 0);
        r15 = r5 >>> 2 & 4;
        r4 = r5 >>> (r15 >>> 0);
        r5 = r4 >>> 1 & 2;
        r16 = r4 >>> (r5 >>> 0);
        r4 = r16 >>> 1 & 1;
        r23 = HEAP32[((r20 | r19 | r15 | r5 | r4) + (r16 >>> (r4 >>> 0)) << 2) + 5253348 >> 2];
        break;
      }
    } else {
      r23 = r14;
    }
  } while (0);
  L690 : do {
    if ((r23 | 0) == 0) {
      r24 = r13;
      r25 = r12, r26 = r25 >> 2;
    } else {
      r14 = r23, r6 = r14 >> 2;
      r4 = r13;
      r16 = r12;
      while (1) {
        r5 = (HEAP32[r6 + 1] & -8) - r1 | 0;
        r15 = r5 >>> 0 < r4 >>> 0;
        r19 = r15 ? r5 : r4;
        r5 = r15 ? r14 : r16;
        r15 = HEAP32[r6 + 4];
        if ((r15 | 0) != 0) {
          r14 = r15, r6 = r14 >> 2;
          r4 = r19;
          r16 = r5;
          continue;
        }
        r15 = HEAP32[r6 + 5];
        if ((r15 | 0) == 0) {
          r24 = r19;
          r25 = r5, r26 = r25 >> 2;
          break L690;
        } else {
          r14 = r15, r6 = r14 >> 2;
          r4 = r19;
          r16 = r5;
        }
      }
    }
  } while (0);
  if ((r25 | 0) == 0) {
    r22 = 0;
    return r22;
  }
  if (r24 >>> 0 >= (HEAP32[1313263] - r1 | 0) >>> 0) {
    r22 = 0;
    return r22;
  }
  r12 = r25, r13 = r12 >> 2;
  r23 = HEAP32[1313265];
  if (r12 >>> 0 < r23 >>> 0) {
    _abort();
  }
  r16 = r12 + r1 | 0;
  r4 = r16;
  if (r12 >>> 0 >= r16 >>> 0) {
    _abort();
  }
  r14 = HEAP32[r26 + 6];
  r6 = HEAP32[r26 + 3];
  L707 : do {
    if ((r6 | 0) == (r25 | 0)) {
      r5 = r25 + 20 | 0;
      r19 = HEAP32[r5 >> 2];
      do {
        if ((r19 | 0) == 0) {
          r15 = r25 + 16 | 0;
          r20 = HEAP32[r15 >> 2];
          if ((r20 | 0) == 0) {
            r27 = 0, r28 = r27 >> 2;
            break L707;
          } else {
            r29 = r20;
            r30 = r15;
            break;
          }
        } else {
          r29 = r19;
          r30 = r5;
        }
      } while (0);
      while (1) {
        r5 = r29 + 20 | 0;
        r19 = HEAP32[r5 >> 2];
        if ((r19 | 0) != 0) {
          r29 = r19;
          r30 = r5;
          continue;
        }
        r5 = r29 + 16 | 0;
        r19 = HEAP32[r5 >> 2];
        if ((r19 | 0) == 0) {
          break;
        } else {
          r29 = r19;
          r30 = r5;
        }
      }
      if (r30 >>> 0 < r23 >>> 0) {
        _abort();
      } else {
        HEAP32[r30 >> 2] = 0;
        r27 = r29, r28 = r27 >> 2;
        break;
      }
    } else {
      r5 = HEAP32[r26 + 2];
      if (r5 >>> 0 < r23 >>> 0) {
        _abort();
      } else {
        HEAP32[r5 + 12 >> 2] = r6;
        HEAP32[r6 + 8 >> 2] = r5;
        r27 = r6, r28 = r27 >> 2;
        break;
      }
    }
  } while (0);
  L723 : do {
    if ((r14 | 0) == 0) {
      r31 = r25;
    } else {
      r6 = r25 + 28 | 0;
      r23 = (HEAP32[r6 >> 2] << 2) + 5253348 | 0;
      do {
        if ((r25 | 0) == (HEAP32[r23 >> 2] | 0)) {
          HEAP32[r23 >> 2] = r27;
          if ((r27 | 0) != 0) {
            break;
          }
          HEAP32[1313262] = HEAP32[1313262] & (1 << HEAP32[r6 >> 2] ^ -1);
          r31 = r25;
          break L723;
        } else {
          if (r14 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          }
          r29 = r14 + 16 | 0;
          if ((HEAP32[r29 >> 2] | 0) == (r25 | 0)) {
            HEAP32[r29 >> 2] = r27;
          } else {
            HEAP32[r14 + 20 >> 2] = r27;
          }
          if ((r27 | 0) == 0) {
            r31 = r25;
            break L723;
          }
        }
      } while (0);
      if (r27 >>> 0 < HEAP32[1313265] >>> 0) {
        _abort();
      }
      HEAP32[r28 + 6] = r14;
      r6 = HEAP32[r26 + 4];
      do {
        if ((r6 | 0) != 0) {
          if (r6 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          } else {
            HEAP32[r28 + 4] = r6;
            HEAP32[r6 + 24 >> 2] = r27;
            break;
          }
        }
      } while (0);
      r6 = HEAP32[r26 + 5];
      if ((r6 | 0) == 0) {
        r31 = r25;
        break;
      }
      if (r6 >>> 0 < HEAP32[1313265] >>> 0) {
        _abort();
      } else {
        HEAP32[r28 + 5] = r6;
        HEAP32[r6 + 24 >> 2] = r27;
        r31 = r25;
        break;
      }
    }
  } while (0);
  do {
    if (r24 >>> 0 < 16) {
      r25 = r24 + r1 | 0;
      HEAP32[r31 + 4 >> 2] = r25 | 3;
      r27 = r25 + (r12 + 4) | 0;
      HEAP32[r27 >> 2] = HEAP32[r27 >> 2] | 1;
    } else {
      HEAP32[r31 + 4 >> 2] = r1 | 3;
      HEAP32[r2 + (r13 + 1)] = r24 | 1;
      HEAP32[(r24 >> 2) + r13 + r2] = r24;
      r27 = r24 >>> 3;
      if (r24 >>> 0 < 256) {
        r25 = r27 << 1;
        r28 = (r25 << 2) + 5253084 | 0;
        r26 = HEAP32[1313261];
        r14 = 1 << r27;
        do {
          if ((r26 & r14 | 0) == 0) {
            HEAP32[1313261] = r26 | r14;
            r32 = r28;
            r33 = (r25 + 2 << 2) + 5253084 | 0;
          } else {
            r27 = (r25 + 2 << 2) + 5253084 | 0;
            r6 = HEAP32[r27 >> 2];
            if (r6 >>> 0 >= HEAP32[1313265] >>> 0) {
              r32 = r6;
              r33 = r27;
              break;
            }
            _abort();
          }
        } while (0);
        HEAP32[r33 >> 2] = r4;
        HEAP32[r32 + 12 >> 2] = r4;
        HEAP32[r2 + (r13 + 2)] = r32;
        HEAP32[r2 + (r13 + 3)] = r28;
        break;
      }
      r25 = r16;
      r14 = r24 >>> 8;
      do {
        if ((r14 | 0) == 0) {
          r34 = 0;
        } else {
          if (r24 >>> 0 > 16777215) {
            r34 = 31;
            break;
          }
          r26 = (r14 + 1048320 | 0) >>> 16 & 8;
          r27 = r14 << r26;
          r6 = (r27 + 520192 | 0) >>> 16 & 4;
          r23 = r27 << r6;
          r27 = (r23 + 245760 | 0) >>> 16 & 2;
          r29 = 14 - (r6 | r26 | r27) + (r23 << r27 >>> 15) | 0;
          r34 = r24 >>> ((r29 + 7 | 0) >>> 0) & 1 | r29 << 1;
        }
      } while (0);
      r14 = (r34 << 2) + 5253348 | 0;
      HEAP32[r2 + (r13 + 7)] = r34;
      HEAP32[r2 + (r13 + 5)] = 0;
      HEAP32[r2 + (r13 + 4)] = 0;
      r28 = HEAP32[1313262];
      r29 = 1 << r34;
      if ((r28 & r29 | 0) == 0) {
        HEAP32[1313262] = r28 | r29;
        HEAP32[r14 >> 2] = r25;
        HEAP32[r2 + (r13 + 6)] = r14;
        HEAP32[r2 + (r13 + 3)] = r25;
        HEAP32[r2 + (r13 + 2)] = r25;
        break;
      }
      if ((r34 | 0) == 31) {
        r35 = 0;
      } else {
        r35 = 25 - (r34 >>> 1) | 0;
      }
      r29 = r24 << r35;
      r28 = HEAP32[r14 >> 2];
      while (1) {
        if ((HEAP32[r28 + 4 >> 2] & -8 | 0) == (r24 | 0)) {
          break;
        }
        r36 = (r29 >>> 31 << 2) + r28 + 16 | 0;
        r14 = HEAP32[r36 >> 2];
        if ((r14 | 0) == 0) {
          r3 = 613;
          break;
        } else {
          r29 = r29 << 1;
          r28 = r14;
        }
      }
      if (r3 == 613) {
        if (r36 >>> 0 < HEAP32[1313265] >>> 0) {
          _abort();
        } else {
          HEAP32[r36 >> 2] = r25;
          HEAP32[r2 + (r13 + 6)] = r28;
          HEAP32[r2 + (r13 + 3)] = r25;
          HEAP32[r2 + (r13 + 2)] = r25;
          break;
        }
      }
      r29 = r28 + 8 | 0;
      r14 = HEAP32[r29 >> 2];
      r27 = HEAP32[1313265];
      if (r28 >>> 0 < r27 >>> 0) {
        _abort();
      }
      if (r14 >>> 0 < r27 >>> 0) {
        _abort();
      } else {
        HEAP32[r14 + 12 >> 2] = r25;
        HEAP32[r29 >> 2] = r25;
        HEAP32[r2 + (r13 + 2)] = r14;
        HEAP32[r2 + (r13 + 3)] = r28;
        HEAP32[r2 + (r13 + 6)] = 0;
        break;
      }
    }
  } while (0);
  r22 = r31 + 8 | 0;
  return r22;
}
_tmalloc_large["X"] = 1;
function _release_unused_segments() {
  var r1, r2;
  r1 = 5253496;
  while (1) {
    r2 = HEAP32[r1 >> 2];
    if ((r2 | 0) == 0) {
      break;
    } else {
      r1 = r2 + 8 | 0;
    }
  }
  HEAP32[1313269] = -1;
  return;
}
function _sys_trim() {
  var r1, r2, r3, r4, r5, r6, r7;
  if ((HEAP32[1310728] | 0) == 0) {
    _init_mparams();
  }
  r1 = HEAP32[1313267];
  if ((r1 | 0) == 0) {
    return;
  }
  r2 = HEAP32[1313264];
  do {
    if (r2 >>> 0 > 40) {
      r3 = HEAP32[1310730];
      r4 = Math.imul(Math.floor(((r2 - 41 + r3 | 0) >>> 0) / (r3 >>> 0)) - 1 | 0, r3);
      r5 = _segment_holding(r1);
      if ((HEAP32[r5 + 12 >> 2] & 8 | 0) != 0) {
        break;
      }
      r6 = _sbrk(0);
      r7 = (r5 + 4 | 0) >> 2;
      if ((r6 | 0) != (HEAP32[r5 >> 2] + HEAP32[r7] | 0)) {
        break;
      }
      r5 = _sbrk(-(r4 >>> 0 > 2147483646 ? -2147483648 - r3 | 0 : r4) | 0);
      r4 = _sbrk(0);
      if (!((r5 | 0) != -1 & r4 >>> 0 < r6 >>> 0)) {
        break;
      }
      r5 = r6 - r4 | 0;
      if ((r6 | 0) == (r4 | 0)) {
        break;
      }
      HEAP32[r7] = HEAP32[r7] - r5 | 0;
      HEAP32[1313369] = HEAP32[1313369] - r5 | 0;
      _init_top(HEAP32[1313267], HEAP32[1313264] - r5 | 0);
      return;
    }
  } while (0);
  if (HEAP32[1313264] >>> 0 <= HEAP32[1313268] >>> 0) {
    return;
  }
  HEAP32[1313268] = -1;
  return;
}
_sys_trim["X"] = 1;
function _free(r1) {
  var r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40;
  r2 = r1 >> 2;
  r3 = 0;
  if ((r1 | 0) == 0) {
    return;
  }
  r4 = r1 - 8 | 0;
  r5 = r4;
  r6 = HEAP32[1313265];
  if (r4 >>> 0 < r6 >>> 0) {
    _abort();
  }
  r7 = HEAP32[r1 - 4 >> 2];
  r8 = r7 & 3;
  if ((r8 | 0) == 1) {
    _abort();
  }
  r9 = r7 & -8, r10 = r9 >> 2;
  r11 = r1 + (r9 - 8) | 0;
  r12 = r11;
  L822 : do {
    if ((r7 & 1 | 0) == 0) {
      r13 = HEAP32[r4 >> 2];
      if ((r8 | 0) == 0) {
        return;
      }
      r14 = -8 - r13 | 0, r15 = r14 >> 2;
      r16 = r1 + r14 | 0;
      r17 = r16;
      r18 = r13 + r9 | 0;
      if (r16 >>> 0 < r6 >>> 0) {
        _abort();
      }
      if ((r17 | 0) == (HEAP32[1313266] | 0)) {
        r19 = (r1 + (r9 - 4) | 0) >> 2;
        if ((HEAP32[r19] & 3 | 0) != 3) {
          r20 = r17, r21 = r20 >> 2;
          r22 = r18;
          break;
        }
        HEAP32[1313263] = r18;
        HEAP32[r19] = HEAP32[r19] & -2;
        HEAP32[r15 + (r2 + 1)] = r18 | 1;
        HEAP32[r11 >> 2] = r18;
        return;
      }
      r19 = r13 >>> 3;
      if (r13 >>> 0 < 256) {
        r13 = HEAP32[r15 + (r2 + 2)];
        r23 = HEAP32[r15 + (r2 + 3)];
        if ((r13 | 0) == (r23 | 0)) {
          HEAP32[1313261] = HEAP32[1313261] & (1 << r19 ^ -1);
          r20 = r17, r21 = r20 >> 2;
          r22 = r18;
          break;
        }
        r24 = (r19 << 3) + 5253084 | 0;
        if ((r13 | 0) != (r24 | 0) & r13 >>> 0 < r6 >>> 0) {
          _abort();
        }
        if ((r23 | 0) == (r24 | 0) | r23 >>> 0 >= r6 >>> 0) {
          HEAP32[r13 + 12 >> 2] = r23;
          HEAP32[r23 + 8 >> 2] = r13;
          r20 = r17, r21 = r20 >> 2;
          r22 = r18;
          break;
        } else {
          _abort();
        }
      }
      r13 = r16;
      r16 = HEAP32[r15 + (r2 + 6)];
      r23 = HEAP32[r15 + (r2 + 3)];
      L847 : do {
        if ((r23 | 0) == (r13 | 0)) {
          r24 = r14 + (r1 + 20) | 0;
          r19 = HEAP32[r24 >> 2];
          do {
            if ((r19 | 0) == 0) {
              r25 = r14 + (r1 + 16) | 0;
              r26 = HEAP32[r25 >> 2];
              if ((r26 | 0) == 0) {
                r27 = 0, r28 = r27 >> 2;
                break L847;
              } else {
                r29 = r26;
                r30 = r25;
                break;
              }
            } else {
              r29 = r19;
              r30 = r24;
            }
          } while (0);
          while (1) {
            r24 = r29 + 20 | 0;
            r19 = HEAP32[r24 >> 2];
            if ((r19 | 0) != 0) {
              r29 = r19;
              r30 = r24;
              continue;
            }
            r24 = r29 + 16 | 0;
            r19 = HEAP32[r24 >> 2];
            if ((r19 | 0) == 0) {
              break;
            } else {
              r29 = r19;
              r30 = r24;
            }
          }
          if (r30 >>> 0 < r6 >>> 0) {
            _abort();
          } else {
            HEAP32[r30 >> 2] = 0;
            r27 = r29, r28 = r27 >> 2;
            break;
          }
        } else {
          r24 = HEAP32[r15 + (r2 + 2)];
          if (r24 >>> 0 < r6 >>> 0) {
            _abort();
          } else {
            HEAP32[r24 + 12 >> 2] = r23;
            HEAP32[r23 + 8 >> 2] = r24;
            r27 = r23, r28 = r27 >> 2;
            break;
          }
        }
      } while (0);
      if ((r16 | 0) == 0) {
        r20 = r17, r21 = r20 >> 2;
        r22 = r18;
        break;
      }
      r23 = r14 + (r1 + 28) | 0;
      r24 = (HEAP32[r23 >> 2] << 2) + 5253348 | 0;
      do {
        if ((r13 | 0) == (HEAP32[r24 >> 2] | 0)) {
          HEAP32[r24 >> 2] = r27;
          if ((r27 | 0) != 0) {
            break;
          }
          HEAP32[1313262] = HEAP32[1313262] & (1 << HEAP32[r23 >> 2] ^ -1);
          r20 = r17, r21 = r20 >> 2;
          r22 = r18;
          break L822;
        } else {
          if (r16 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          }
          r19 = r16 + 16 | 0;
          if ((HEAP32[r19 >> 2] | 0) == (r13 | 0)) {
            HEAP32[r19 >> 2] = r27;
          } else {
            HEAP32[r16 + 20 >> 2] = r27;
          }
          if ((r27 | 0) == 0) {
            r20 = r17, r21 = r20 >> 2;
            r22 = r18;
            break L822;
          }
        }
      } while (0);
      if (r27 >>> 0 < HEAP32[1313265] >>> 0) {
        _abort();
      }
      HEAP32[r28 + 6] = r16;
      r13 = HEAP32[r15 + (r2 + 4)];
      do {
        if ((r13 | 0) != 0) {
          if (r13 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          } else {
            HEAP32[r28 + 4] = r13;
            HEAP32[r13 + 24 >> 2] = r27;
            break;
          }
        }
      } while (0);
      r13 = HEAP32[r15 + (r2 + 5)];
      if ((r13 | 0) == 0) {
        r20 = r17, r21 = r20 >> 2;
        r22 = r18;
        break;
      }
      if (r13 >>> 0 < HEAP32[1313265] >>> 0) {
        _abort();
      } else {
        HEAP32[r28 + 5] = r13;
        HEAP32[r13 + 24 >> 2] = r27;
        r20 = r17, r21 = r20 >> 2;
        r22 = r18;
        break;
      }
    } else {
      r20 = r5, r21 = r20 >> 2;
      r22 = r9;
    }
  } while (0);
  r5 = r20, r27 = r5 >> 2;
  if (r5 >>> 0 >= r11 >>> 0) {
    _abort();
  }
  r5 = r1 + (r9 - 4) | 0;
  r28 = HEAP32[r5 >> 2];
  if ((r28 & 1 | 0) == 0) {
    _abort();
  }
  do {
    if ((r28 & 2 | 0) == 0) {
      if ((r12 | 0) == (HEAP32[1313267] | 0)) {
        r6 = HEAP32[1313264] + r22 | 0;
        HEAP32[1313264] = r6;
        HEAP32[1313267] = r20;
        HEAP32[r21 + 1] = r6 | 1;
        if ((r20 | 0) == (HEAP32[1313266] | 0)) {
          HEAP32[1313266] = 0;
          HEAP32[1313263] = 0;
        }
        if (r6 >>> 0 <= HEAP32[1313268] >>> 0) {
          return;
        }
        _sys_trim();
        return;
      }
      if ((r12 | 0) == (HEAP32[1313266] | 0)) {
        r6 = HEAP32[1313263] + r22 | 0;
        HEAP32[1313263] = r6;
        HEAP32[1313266] = r20;
        HEAP32[r21 + 1] = r6 | 1;
        HEAP32[(r6 >> 2) + r27] = r6;
        return;
      }
      r6 = (r28 & -8) + r22 | 0;
      r29 = r28 >>> 3;
      L912 : do {
        if (r28 >>> 0 < 256) {
          r30 = HEAP32[r2 + r10];
          r8 = HEAP32[((r9 | 4) >> 2) + r2];
          if ((r30 | 0) == (r8 | 0)) {
            HEAP32[1313261] = HEAP32[1313261] & (1 << r29 ^ -1);
            break;
          }
          r4 = (r29 << 3) + 5253084 | 0;
          do {
            if ((r30 | 0) != (r4 | 0)) {
              if (r30 >>> 0 >= HEAP32[1313265] >>> 0) {
                break;
              }
              _abort();
            }
          } while (0);
          do {
            if ((r8 | 0) != (r4 | 0)) {
              if (r8 >>> 0 >= HEAP32[1313265] >>> 0) {
                break;
              }
              _abort();
            }
          } while (0);
          HEAP32[r30 + 12 >> 2] = r8;
          HEAP32[r8 + 8 >> 2] = r30;
        } else {
          r4 = r11;
          r7 = HEAP32[r10 + (r2 + 4)];
          r13 = HEAP32[((r9 | 4) >> 2) + r2];
          L914 : do {
            if ((r13 | 0) == (r4 | 0)) {
              r16 = r9 + (r1 + 12) | 0;
              r23 = HEAP32[r16 >> 2];
              do {
                if ((r23 | 0) == 0) {
                  r24 = r9 + (r1 + 8) | 0;
                  r14 = HEAP32[r24 >> 2];
                  if ((r14 | 0) == 0) {
                    r31 = 0, r32 = r31 >> 2;
                    break L914;
                  } else {
                    r33 = r14;
                    r34 = r24;
                    break;
                  }
                } else {
                  r33 = r23;
                  r34 = r16;
                }
              } while (0);
              while (1) {
                r16 = r33 + 20 | 0;
                r23 = HEAP32[r16 >> 2];
                if ((r23 | 0) != 0) {
                  r33 = r23;
                  r34 = r16;
                  continue;
                }
                r16 = r33 + 16 | 0;
                r23 = HEAP32[r16 >> 2];
                if ((r23 | 0) == 0) {
                  break;
                } else {
                  r33 = r23;
                  r34 = r16;
                }
              }
              if (r34 >>> 0 < HEAP32[1313265] >>> 0) {
                _abort();
              } else {
                HEAP32[r34 >> 2] = 0;
                r31 = r33, r32 = r31 >> 2;
                break;
              }
            } else {
              r16 = HEAP32[r2 + r10];
              if (r16 >>> 0 < HEAP32[1313265] >>> 0) {
                _abort();
              } else {
                HEAP32[r16 + 12 >> 2] = r13;
                HEAP32[r13 + 8 >> 2] = r16;
                r31 = r13, r32 = r31 >> 2;
                break;
              }
            }
          } while (0);
          if ((r7 | 0) == 0) {
            break;
          }
          r13 = r9 + (r1 + 20) | 0;
          r30 = (HEAP32[r13 >> 2] << 2) + 5253348 | 0;
          do {
            if ((r4 | 0) == (HEAP32[r30 >> 2] | 0)) {
              HEAP32[r30 >> 2] = r31;
              if ((r31 | 0) != 0) {
                break;
              }
              HEAP32[1313262] = HEAP32[1313262] & (1 << HEAP32[r13 >> 2] ^ -1);
              break L912;
            } else {
              if (r7 >>> 0 < HEAP32[1313265] >>> 0) {
                _abort();
              }
              r8 = r7 + 16 | 0;
              if ((HEAP32[r8 >> 2] | 0) == (r4 | 0)) {
                HEAP32[r8 >> 2] = r31;
              } else {
                HEAP32[r7 + 20 >> 2] = r31;
              }
              if ((r31 | 0) == 0) {
                break L912;
              }
            }
          } while (0);
          if (r31 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          }
          HEAP32[r32 + 6] = r7;
          r4 = HEAP32[r10 + (r2 + 2)];
          do {
            if ((r4 | 0) != 0) {
              if (r4 >>> 0 < HEAP32[1313265] >>> 0) {
                _abort();
              } else {
                HEAP32[r32 + 4] = r4;
                HEAP32[r4 + 24 >> 2] = r31;
                break;
              }
            }
          } while (0);
          r4 = HEAP32[r10 + (r2 + 3)];
          if ((r4 | 0) == 0) {
            break;
          }
          if (r4 >>> 0 < HEAP32[1313265] >>> 0) {
            _abort();
          } else {
            HEAP32[r32 + 5] = r4;
            HEAP32[r4 + 24 >> 2] = r31;
            break;
          }
        }
      } while (0);
      HEAP32[r21 + 1] = r6 | 1;
      HEAP32[(r6 >> 2) + r27] = r6;
      if ((r20 | 0) != (HEAP32[1313266] | 0)) {
        r35 = r6;
        break;
      }
      HEAP32[1313263] = r6;
      return;
    } else {
      HEAP32[r5 >> 2] = r28 & -2;
      HEAP32[r21 + 1] = r22 | 1;
      HEAP32[(r22 >> 2) + r27] = r22;
      r35 = r22;
    }
  } while (0);
  r22 = r35 >>> 3;
  if (r35 >>> 0 < 256) {
    r27 = r22 << 1;
    r28 = (r27 << 2) + 5253084 | 0;
    r5 = HEAP32[1313261];
    r31 = 1 << r22;
    do {
      if ((r5 & r31 | 0) == 0) {
        HEAP32[1313261] = r5 | r31;
        r36 = r28;
        r37 = (r27 + 2 << 2) + 5253084 | 0;
      } else {
        r22 = (r27 + 2 << 2) + 5253084 | 0;
        r32 = HEAP32[r22 >> 2];
        if (r32 >>> 0 >= HEAP32[1313265] >>> 0) {
          r36 = r32;
          r37 = r22;
          break;
        }
        _abort();
      }
    } while (0);
    HEAP32[r37 >> 2] = r20;
    HEAP32[r36 + 12 >> 2] = r20;
    HEAP32[r21 + 2] = r36;
    HEAP32[r21 + 3] = r28;
    return;
  }
  r28 = r20;
  r36 = r35 >>> 8;
  do {
    if ((r36 | 0) == 0) {
      r38 = 0;
    } else {
      if (r35 >>> 0 > 16777215) {
        r38 = 31;
        break;
      }
      r37 = (r36 + 1048320 | 0) >>> 16 & 8;
      r27 = r36 << r37;
      r31 = (r27 + 520192 | 0) >>> 16 & 4;
      r5 = r27 << r31;
      r27 = (r5 + 245760 | 0) >>> 16 & 2;
      r22 = 14 - (r31 | r37 | r27) + (r5 << r27 >>> 15) | 0;
      r38 = r35 >>> ((r22 + 7 | 0) >>> 0) & 1 | r22 << 1;
    }
  } while (0);
  r36 = (r38 << 2) + 5253348 | 0;
  HEAP32[r21 + 7] = r38;
  HEAP32[r21 + 5] = 0;
  HEAP32[r21 + 4] = 0;
  r22 = HEAP32[1313262];
  r27 = 1 << r38;
  do {
    if ((r22 & r27 | 0) == 0) {
      HEAP32[1313262] = r22 | r27;
      HEAP32[r36 >> 2] = r28;
      HEAP32[r21 + 6] = r36;
      HEAP32[r21 + 3] = r20;
      HEAP32[r21 + 2] = r20;
    } else {
      if ((r38 | 0) == 31) {
        r39 = 0;
      } else {
        r39 = 25 - (r38 >>> 1) | 0;
      }
      r5 = r35 << r39;
      r37 = HEAP32[r36 >> 2];
      while (1) {
        if ((HEAP32[r37 + 4 >> 2] & -8 | 0) == (r35 | 0)) {
          break;
        }
        r40 = (r5 >>> 31 << 2) + r37 + 16 | 0;
        r31 = HEAP32[r40 >> 2];
        if ((r31 | 0) == 0) {
          r3 = 766;
          break;
        } else {
          r5 = r5 << 1;
          r37 = r31;
        }
      }
      if (r3 == 766) {
        if (r40 >>> 0 < HEAP32[1313265] >>> 0) {
          _abort();
        } else {
          HEAP32[r40 >> 2] = r28;
          HEAP32[r21 + 6] = r37;
          HEAP32[r21 + 3] = r20;
          HEAP32[r21 + 2] = r20;
          break;
        }
      }
      r5 = r37 + 8 | 0;
      r6 = HEAP32[r5 >> 2];
      r31 = HEAP32[1313265];
      if (r37 >>> 0 < r31 >>> 0) {
        _abort();
      }
      if (r6 >>> 0 < r31 >>> 0) {
        _abort();
      } else {
        HEAP32[r6 + 12 >> 2] = r28;
        HEAP32[r5 >> 2] = r28;
        HEAP32[r21 + 2] = r6;
        HEAP32[r21 + 3] = r37;
        HEAP32[r21 + 6] = 0;
        break;
      }
    }
  } while (0);
  r21 = HEAP32[1313269] - 1 | 0;
  HEAP32[1313269] = r21;
  if ((r21 | 0) != 0) {
    return;
  }
  _release_unused_segments();
  return;
}
_free["X"] = 1;
function _mmap_resize(r1, r2) {
  var r3, r4;
  r3 = HEAP32[r1 + 4 >> 2] & -8;
  do {
    if (r2 >>> 0 < 256) {
      r4 = 0;
    } else {
      if (r3 >>> 0 >= (r2 + 4 | 0) >>> 0) {
        if ((r3 - r2 | 0) >>> 0 <= HEAP32[1310730] << 1 >>> 0) {
          r4 = r1;
          break;
        }
      }
      r4 = 0;
    }
  } while (0);
  return r4;
}
function _segment_holding(r1) {
  var r2, r3, r4, r5, r6;
  r2 = 0;
  r3 = 5253488, r4 = r3 >> 2;
  while (1) {
    r5 = HEAP32[r4];
    if (r5 >>> 0 <= r1 >>> 0) {
      if ((r5 + HEAP32[r4 + 1] | 0) >>> 0 > r1 >>> 0) {
        r6 = r3;
        r2 = 808;
        break;
      }
    }
    r5 = HEAP32[r4 + 2];
    if ((r5 | 0) == 0) {
      r6 = 0;
      r2 = 809;
      break;
    } else {
      r3 = r5, r4 = r3 >> 2;
    }
  }
  if (r2 == 808) {
    return r6;
  } else if (r2 == 809) {
    return r6;
  }
}
function _init_top(r1, r2) {
  var r3, r4, r5;
  r3 = r1;
  r4 = r1 + 8 | 0;
  if ((r4 & 7 | 0) == 0) {
    r5 = 0;
  } else {
    r5 = -r4 & 7;
  }
  r4 = r2 - r5 | 0;
  HEAP32[1313267] = r3 + r5 | 0;
  HEAP32[1313264] = r4;
  HEAP32[r5 + (r3 + 4) >> 2] = r4 | 1;
  HEAP32[r2 + (r3 + 4) >> 2] = 40;
  HEAP32[1313268] = HEAP32[1310732];
  return;
}
function _init_bins() {
  var r1, r2, r3;
  r1 = 0;
  while (1) {
    r2 = r1 << 1;
    r3 = (r2 << 2) + 5253084 | 0;
    HEAP32[(r2 + 3 << 2) + 5253084 >> 2] = r3;
    HEAP32[(r2 + 2 << 2) + 5253084 >> 2] = r3;
    r3 = r1 + 1 | 0;
    if ((r3 | 0) == 32) {
      break;
    } else {
      r1 = r3;
    }
  }
  return;
}
function _realloc(r1, r2) {
  var r3;
  if ((r1 | 0) == 0) {
    r3 = _malloc(r2);
  } else {
    r3 = _internal_realloc(r1, r2);
  }
  return r3;
}
Module["_realloc"] = _realloc;
function _internal_realloc(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r3 = 0;
  if (r2 >>> 0 > 4294967231) {
    HEAP32[___errno_location() >> 2] = 12;
    r4 = 0;
    return r4;
  }
  r5 = r1 - 8 | 0;
  r6 = r5;
  r7 = (r1 - 4 | 0) >> 2;
  r8 = HEAP32[r7];
  r9 = r8 & -8;
  r10 = r9 - 8 | 0;
  r11 = r1 + r10 | 0;
  if (r5 >>> 0 < HEAP32[1313265] >>> 0) {
    _abort();
  }
  r5 = r8 & 3;
  if (!((r5 | 0) != 1 & (r10 | 0) > -8)) {
    _abort();
  }
  r10 = (r1 + (r9 - 4) | 0) >> 2;
  if ((HEAP32[r10] & 1 | 0) == 0) {
    _abort();
  }
  if (r2 >>> 0 < 11) {
    r12 = 16;
  } else {
    r12 = r2 + 11 & -8;
  }
  do {
    if ((r5 | 0) == 0) {
      r13 = _mmap_resize(r6, r12);
      r14 = 0;
      r3 = 836;
      break;
    } else {
      if (r9 >>> 0 >= r12 >>> 0) {
        r15 = r9 - r12 | 0;
        if (r15 >>> 0 <= 15) {
          r13 = r6;
          r14 = 0;
          r3 = 836;
          break;
        }
        HEAP32[r7] = r12 | r8 & 1 | 2;
        HEAP32[r1 + (r12 - 4) >> 2] = r15 | 3;
        HEAP32[r10] = HEAP32[r10] | 1;
        r13 = r6;
        r14 = r1 + r12 | 0;
        r3 = 836;
        break;
      }
      if ((r11 | 0) != (HEAP32[1313267] | 0)) {
        break;
      }
      r15 = HEAP32[1313264] + r9 | 0;
      if (r15 >>> 0 <= r12 >>> 0) {
        break;
      }
      r16 = r15 - r12 | 0;
      HEAP32[r7] = r12 | r8 & 1 | 2;
      HEAP32[r1 + (r12 - 4) >> 2] = r16 | 1;
      HEAP32[1313267] = r1 + (r12 - 8) | 0;
      HEAP32[1313264] = r16;
      r13 = r6;
      r14 = 0;
      r3 = 836;
      break;
    }
  } while (0);
  do {
    if (r3 == 836) {
      if ((r13 | 0) == 0) {
        break;
      }
      if ((r14 | 0) != 0) {
        _free(r14);
      }
      r4 = r13 + 8 | 0;
      return r4;
    }
  } while (0);
  r13 = _malloc(r2);
  if ((r13 | 0) == 0) {
    r4 = 0;
    return r4;
  }
  r14 = r9 - ((HEAP32[r7] & 3 | 0) == 0 ? 8 : 4) | 0;
  _memcpy(r13, r1, r14 >>> 0 < r2 >>> 0 ? r14 : r2);
  _free(r1);
  r4 = r13;
  return r4;
}
_internal_realloc["X"] = 1;
function _init_mparams() {
  var r1;
  if ((HEAP32[1310728] | 0) != 0) {
    return;
  }
  r1 = _sysconf(8);
  if ((r1 - 1 & r1 | 0) != 0) {
    _abort();
  }
  HEAP32[1310730] = r1;
  HEAP32[1310729] = r1;
  HEAP32[1310731] = -1;
  HEAP32[1310732] = 2097152;
  HEAP32[1310733] = 0;
  HEAP32[1313371] = 0;
  HEAP32[1310728] = _time(0) & -16 ^ 1431655768;
  return;
}
function _prepend_alloc(r1, r2, r3) {
  var r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40;
  r4 = r2 >> 2;
  r5 = r1 >> 2;
  r6 = 0;
  r7 = r1 + 8 | 0;
  if ((r7 & 7 | 0) == 0) {
    r8 = 0;
  } else {
    r8 = -r7 & 7;
  }
  r7 = r2 + 8 | 0;
  if ((r7 & 7 | 0) == 0) {
    r9 = 0, r10 = r9 >> 2;
  } else {
    r9 = -r7 & 7, r10 = r9 >> 2;
  }
  r7 = r2 + r9 | 0;
  r11 = r7;
  r12 = r8 + r3 | 0, r13 = r12 >> 2;
  r14 = r1 + r12 | 0;
  r12 = r14;
  r15 = r7 - (r1 + r8) - r3 | 0;
  HEAP32[(r8 + 4 >> 2) + r5] = r3 | 3;
  if ((r11 | 0) == (HEAP32[1313267] | 0)) {
    r3 = HEAP32[1313264] + r15 | 0;
    HEAP32[1313264] = r3;
    HEAP32[1313267] = r12;
    HEAP32[r13 + (r5 + 1)] = r3 | 1;
    r16 = r8 | 8;
    r17 = r1 + r16 | 0;
    return r17;
  }
  if ((r11 | 0) == (HEAP32[1313266] | 0)) {
    r3 = HEAP32[1313263] + r15 | 0;
    HEAP32[1313263] = r3;
    HEAP32[1313266] = r12;
    HEAP32[r13 + (r5 + 1)] = r3 | 1;
    HEAP32[(r3 >> 2) + r5 + r13] = r3;
    r16 = r8 | 8;
    r17 = r1 + r16 | 0;
    return r17;
  }
  r3 = HEAP32[r10 + (r4 + 1)];
  if ((r3 & 3 | 0) == 1) {
    r18 = r3 & -8;
    r19 = r3 >>> 3;
    L1104 : do {
      if (r3 >>> 0 < 256) {
        r20 = HEAP32[((r9 | 8) >> 2) + r4];
        r21 = HEAP32[r10 + (r4 + 3)];
        if ((r20 | 0) == (r21 | 0)) {
          HEAP32[1313261] = HEAP32[1313261] & (1 << r19 ^ -1);
          break;
        }
        r22 = (r19 << 3) + 5253084 | 0;
        do {
          if ((r20 | 0) != (r22 | 0)) {
            if (r20 >>> 0 >= HEAP32[1313265] >>> 0) {
              break;
            }
            _abort();
          }
        } while (0);
        do {
          if ((r21 | 0) != (r22 | 0)) {
            if (r21 >>> 0 >= HEAP32[1313265] >>> 0) {
              break;
            }
            _abort();
          }
        } while (0);
        HEAP32[r20 + 12 >> 2] = r21;
        HEAP32[r21 + 8 >> 2] = r20;
      } else {
        r22 = r7;
        r23 = HEAP32[((r9 | 24) >> 2) + r4];
        r24 = HEAP32[r10 + (r4 + 3)];
        L1118 : do {
          if ((r24 | 0) == (r22 | 0)) {
            r25 = r9 | 16;
            r26 = r25 + (r2 + 4) | 0;
            r27 = HEAP32[r26 >> 2];
            do {
              if ((r27 | 0) == 0) {
                r28 = r2 + r25 | 0;
                r29 = HEAP32[r28 >> 2];
                if ((r29 | 0) == 0) {
                  r30 = 0, r31 = r30 >> 2;
                  break L1118;
                } else {
                  r32 = r29;
                  r33 = r28;
                  break;
                }
              } else {
                r32 = r27;
                r33 = r26;
              }
            } while (0);
            while (1) {
              r26 = r32 + 20 | 0;
              r27 = HEAP32[r26 >> 2];
              if ((r27 | 0) != 0) {
                r32 = r27;
                r33 = r26;
                continue;
              }
              r26 = r32 + 16 | 0;
              r27 = HEAP32[r26 >> 2];
              if ((r27 | 0) == 0) {
                break;
              } else {
                r32 = r27;
                r33 = r26;
              }
            }
            if (r33 >>> 0 < HEAP32[1313265] >>> 0) {
              _abort();
            } else {
              HEAP32[r33 >> 2] = 0;
              r30 = r32, r31 = r30 >> 2;
              break;
            }
          } else {
            r26 = HEAP32[((r9 | 8) >> 2) + r4];
            if (r26 >>> 0 < HEAP32[1313265] >>> 0) {
              _abort();
            } else {
              HEAP32[r26 + 12 >> 2] = r24;
              HEAP32[r24 + 8 >> 2] = r26;
              r30 = r24, r31 = r30 >> 2;
              break;
            }
          }
        } while (0);
        if ((r23 | 0) == 0) {
          break;
        }
        r24 = r9 + (r2 + 28) | 0;
        r20 = (HEAP32[r24 >> 2] << 2) + 5253348 | 0;
        do {
          if ((r22 | 0) == (HEAP32[r20 >> 2] | 0)) {
            HEAP32[r20 >> 2] = r30;
            if ((r30 | 0) != 0) {
              break;
            }
            HEAP32[1313262] = HEAP32[1313262] & (1 << HEAP32[r24 >> 2] ^ -1);
            break L1104;
          } else {
            if (r23 >>> 0 < HEAP32[1313265] >>> 0) {
              _abort();
            }
            r21 = r23 + 16 | 0;
            if ((HEAP32[r21 >> 2] | 0) == (r22 | 0)) {
              HEAP32[r21 >> 2] = r30;
            } else {
              HEAP32[r23 + 20 >> 2] = r30;
            }
            if ((r30 | 0) == 0) {
              break L1104;
            }
          }
        } while (0);
        if (r30 >>> 0 < HEAP32[1313265] >>> 0) {
          _abort();
        }
        HEAP32[r31 + 6] = r23;
        r22 = r9 | 16;
        r24 = HEAP32[(r22 >> 2) + r4];
        do {
          if ((r24 | 0) != 0) {
            if (r24 >>> 0 < HEAP32[1313265] >>> 0) {
              _abort();
            } else {
              HEAP32[r31 + 4] = r24;
              HEAP32[r24 + 24 >> 2] = r30;
              break;
            }
          }
        } while (0);
        r24 = HEAP32[(r22 + 4 >> 2) + r4];
        if ((r24 | 0) == 0) {
          break;
        }
        if (r24 >>> 0 < HEAP32[1313265] >>> 0) {
          _abort();
        } else {
          HEAP32[r31 + 5] = r24;
          HEAP32[r24 + 24 >> 2] = r30;
          break;
        }
      }
    } while (0);
    r34 = r2 + (r18 | r9) | 0;
    r35 = r18 + r15 | 0;
  } else {
    r34 = r11;
    r35 = r15;
  }
  r15 = r34 + 4 | 0;
  HEAP32[r15 >> 2] = HEAP32[r15 >> 2] & -2;
  HEAP32[r13 + (r5 + 1)] = r35 | 1;
  HEAP32[(r35 >> 2) + r5 + r13] = r35;
  r15 = r35 >>> 3;
  if (r35 >>> 0 < 256) {
    r34 = r15 << 1;
    r11 = (r34 << 2) + 5253084 | 0;
    r18 = HEAP32[1313261];
    r9 = 1 << r15;
    do {
      if ((r18 & r9 | 0) == 0) {
        HEAP32[1313261] = r18 | r9;
        r36 = r11;
        r37 = (r34 + 2 << 2) + 5253084 | 0;
      } else {
        r15 = (r34 + 2 << 2) + 5253084 | 0;
        r2 = HEAP32[r15 >> 2];
        if (r2 >>> 0 >= HEAP32[1313265] >>> 0) {
          r36 = r2;
          r37 = r15;
          break;
        }
        _abort();
      }
    } while (0);
    HEAP32[r37 >> 2] = r12;
    HEAP32[r36 + 12 >> 2] = r12;
    HEAP32[r13 + (r5 + 2)] = r36;
    HEAP32[r13 + (r5 + 3)] = r11;
    r16 = r8 | 8;
    r17 = r1 + r16 | 0;
    return r17;
  }
  r11 = r14;
  r14 = r35 >>> 8;
  do {
    if ((r14 | 0) == 0) {
      r38 = 0;
    } else {
      if (r35 >>> 0 > 16777215) {
        r38 = 31;
        break;
      }
      r36 = (r14 + 1048320 | 0) >>> 16 & 8;
      r12 = r14 << r36;
      r37 = (r12 + 520192 | 0) >>> 16 & 4;
      r34 = r12 << r37;
      r12 = (r34 + 245760 | 0) >>> 16 & 2;
      r9 = 14 - (r37 | r36 | r12) + (r34 << r12 >>> 15) | 0;
      r38 = r35 >>> ((r9 + 7 | 0) >>> 0) & 1 | r9 << 1;
    }
  } while (0);
  r14 = (r38 << 2) + 5253348 | 0;
  HEAP32[r13 + (r5 + 7)] = r38;
  HEAP32[r13 + (r5 + 5)] = 0;
  HEAP32[r13 + (r5 + 4)] = 0;
  r9 = HEAP32[1313262];
  r12 = 1 << r38;
  if ((r9 & r12 | 0) == 0) {
    HEAP32[1313262] = r9 | r12;
    HEAP32[r14 >> 2] = r11;
    HEAP32[r13 + (r5 + 6)] = r14;
    HEAP32[r13 + (r5 + 3)] = r11;
    HEAP32[r13 + (r5 + 2)] = r11;
    r16 = r8 | 8;
    r17 = r1 + r16 | 0;
    return r17;
  }
  if ((r38 | 0) == 31) {
    r39 = 0;
  } else {
    r39 = 25 - (r38 >>> 1) | 0;
  }
  r38 = r35 << r39;
  r39 = HEAP32[r14 >> 2];
  while (1) {
    if ((HEAP32[r39 + 4 >> 2] & -8 | 0) == (r35 | 0)) {
      break;
    }
    r40 = (r38 >>> 31 << 2) + r39 + 16 | 0;
    r14 = HEAP32[r40 >> 2];
    if ((r14 | 0) == 0) {
      r6 = 923;
      break;
    } else {
      r38 = r38 << 1;
      r39 = r14;
    }
  }
  if (r6 == 923) {
    if (r40 >>> 0 < HEAP32[1313265] >>> 0) {
      _abort();
    }
    HEAP32[r40 >> 2] = r11;
    HEAP32[r13 + (r5 + 6)] = r39;
    HEAP32[r13 + (r5 + 3)] = r11;
    HEAP32[r13 + (r5 + 2)] = r11;
    r16 = r8 | 8;
    r17 = r1 + r16 | 0;
    return r17;
  }
  r40 = r39 + 8 | 0;
  r6 = HEAP32[r40 >> 2];
  r38 = HEAP32[1313265];
  if (r39 >>> 0 < r38 >>> 0) {
    _abort();
  }
  if (r6 >>> 0 < r38 >>> 0) {
    _abort();
  }
  HEAP32[r6 + 12 >> 2] = r11;
  HEAP32[r40 >> 2] = r11;
  HEAP32[r13 + (r5 + 2)] = r6;
  HEAP32[r13 + (r5 + 3)] = r39;
  HEAP32[r13 + (r5 + 6)] = 0;
  r16 = r8 | 8;
  r17 = r1 + r16 | 0;
  return r17;
}
_prepend_alloc["X"] = 1;
function __ZNSt9bad_allocD1Ev(r1) {
  return;
}
function __ZNKSt9bad_alloc4whatEv(r1) {
  return 5248344;
}
function __ZSt15get_new_handlerv() {
  return tempValue = HEAP32[1318555], HEAP32[1318555] = tempValue, tempValue;
}
function __ZNSt9bad_allocC2Ev(r1) {
  HEAP32[r1 >> 2] = 5264608;
  return;
}
function __ZNSt9bad_allocC1Ev(r1) {
  __ZNSt9bad_allocC2Ev(r1);
  return;
}
function __ZdlPv(r1) {
  if ((r1 | 0) == 0) {
    return;
  }
  _free(r1);
  return;
}
function __ZdaPv(r1) {
  __ZdlPv(r1);
  return;
}
function __ZNSt9bad_allocD0Ev(r1) {
  __ZdlPv(r1);
  return;
}
function _add_segment(r1, r2) {
  var r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16;
  r3 = 0;
  r4 = HEAP32[1313267], r5 = r4 >> 2;
  r6 = r4;
  r7 = _segment_holding(r6);
  r8 = HEAP32[r7 >> 2];
  r9 = HEAP32[r7 + 4 >> 2];
  r7 = r8 + r9 | 0;
  r10 = r8 + (r9 - 39) | 0;
  if ((r10 & 7 | 0) == 0) {
    r11 = 0;
  } else {
    r11 = -r10 & 7;
  }
  r10 = r8 + (r9 - 47) + r11 | 0;
  r11 = r10 >>> 0 < (r4 + 16 | 0) >>> 0 ? r6 : r10;
  r10 = r11 + 8 | 0, r9 = r10 >> 2;
  _init_top(r1, r2 - 40 | 0);
  HEAP32[r11 + 4 >> 2] = 27;
  HEAP32[r9] = HEAP32[1313372];
  HEAP32[r9 + 1] = HEAP32[1313373];
  HEAP32[r9 + 2] = HEAP32[1313374];
  HEAP32[r9 + 3] = HEAP32[1313375];
  HEAP32[1313372] = r1;
  HEAP32[1313373] = r2;
  HEAP32[1313375] = 0;
  HEAP32[1313374] = r10;
  r10 = r11 + 28 | 0;
  HEAP32[r10 >> 2] = 7;
  L1215 : do {
    if ((r11 + 32 | 0) >>> 0 < r7 >>> 0) {
      r2 = r10;
      while (1) {
        r1 = r2 + 4 | 0;
        HEAP32[r1 >> 2] = 7;
        if ((r2 + 8 | 0) >>> 0 < r7 >>> 0) {
          r2 = r1;
        } else {
          break L1215;
        }
      }
    }
  } while (0);
  if ((r11 | 0) == (r6 | 0)) {
    return;
  }
  r7 = r11 - r4 | 0;
  r11 = r7 + (r6 + 4) | 0;
  HEAP32[r11 >> 2] = HEAP32[r11 >> 2] & -2;
  HEAP32[r5 + 1] = r7 | 1;
  HEAP32[r6 + r7 >> 2] = r7;
  r6 = r7 >>> 3;
  if (r7 >>> 0 < 256) {
    r11 = r6 << 1;
    r10 = (r11 << 2) + 5253084 | 0;
    r2 = HEAP32[1313261];
    r1 = 1 << r6;
    do {
      if ((r2 & r1 | 0) == 0) {
        HEAP32[1313261] = r2 | r1;
        r12 = r10;
        r13 = (r11 + 2 << 2) + 5253084 | 0;
      } else {
        r6 = (r11 + 2 << 2) + 5253084 | 0;
        r9 = HEAP32[r6 >> 2];
        if (r9 >>> 0 >= HEAP32[1313265] >>> 0) {
          r12 = r9;
          r13 = r6;
          break;
        }
        _abort();
      }
    } while (0);
    HEAP32[r13 >> 2] = r4;
    HEAP32[r12 + 12 >> 2] = r4;
    HEAP32[r5 + 2] = r12;
    HEAP32[r5 + 3] = r10;
    return;
  }
  r10 = r4;
  r12 = r7 >>> 8;
  do {
    if ((r12 | 0) == 0) {
      r14 = 0;
    } else {
      if (r7 >>> 0 > 16777215) {
        r14 = 31;
        break;
      }
      r13 = (r12 + 1048320 | 0) >>> 16 & 8;
      r11 = r12 << r13;
      r1 = (r11 + 520192 | 0) >>> 16 & 4;
      r2 = r11 << r1;
      r11 = (r2 + 245760 | 0) >>> 16 & 2;
      r6 = 14 - (r1 | r13 | r11) + (r2 << r11 >>> 15) | 0;
      r14 = r7 >>> ((r6 + 7 | 0) >>> 0) & 1 | r6 << 1;
    }
  } while (0);
  r12 = (r14 << 2) + 5253348 | 0;
  HEAP32[r5 + 7] = r14;
  HEAP32[r5 + 5] = 0;
  HEAP32[r5 + 4] = 0;
  r6 = HEAP32[1313262];
  r11 = 1 << r14;
  if ((r6 & r11 | 0) == 0) {
    HEAP32[1313262] = r6 | r11;
    HEAP32[r12 >> 2] = r10;
    HEAP32[r5 + 6] = r12;
    HEAP32[r5 + 3] = r4;
    HEAP32[r5 + 2] = r4;
    return;
  }
  if ((r14 | 0) == 31) {
    r15 = 0;
  } else {
    r15 = 25 - (r14 >>> 1) | 0;
  }
  r14 = r7 << r15;
  r15 = HEAP32[r12 >> 2];
  while (1) {
    if ((HEAP32[r15 + 4 >> 2] & -8 | 0) == (r7 | 0)) {
      break;
    }
    r16 = (r14 >>> 31 << 2) + r15 + 16 | 0;
    r12 = HEAP32[r16 >> 2];
    if ((r12 | 0) == 0) {
      r3 = 974;
      break;
    } else {
      r14 = r14 << 1;
      r15 = r12;
    }
  }
  if (r3 == 974) {
    if (r16 >>> 0 < HEAP32[1313265] >>> 0) {
      _abort();
    }
    HEAP32[r16 >> 2] = r10;
    HEAP32[r5 + 6] = r15;
    HEAP32[r5 + 3] = r4;
    HEAP32[r5 + 2] = r4;
    return;
  }
  r4 = r15 + 8 | 0;
  r16 = HEAP32[r4 >> 2];
  r3 = HEAP32[1313265];
  if (r15 >>> 0 < r3 >>> 0) {
    _abort();
  }
  if (r16 >>> 0 < r3 >>> 0) {
    _abort();
  }
  HEAP32[r16 + 12 >> 2] = r10;
  HEAP32[r4 >> 2] = r10;
  HEAP32[r5 + 2] = r16;
  HEAP32[r5 + 3] = r15;
  HEAP32[r5 + 6] = 0;
  return;
}
_add_segment["X"] = 1;
function __Znwj(r1) {
  var r2, r3, r4;
  r2 = 0;
  r3 = (r1 | 0) == 0 ? 1 : r1;
  while (1) {
    r4 = _malloc(r3);
    if ((r4 | 0) != 0) {
      r2 = 998;
      break;
    }
    r1 = __ZSt15get_new_handlerv();
    if ((r1 | 0) == 0) {
      break;
    }
    FUNCTION_TABLE[r1]();
  }
  if (r2 == 998) {
    return r4;
  }
  r4 = ___cxa_allocate_exception(4);
  __ZNSt9bad_allocC1Ev(r4);
  ___cxa_throw(r4, 5271196, 420);
}
function __Znaj(r1) {
  return __Znwj(r1);
}
function __ZSt17__throw_bad_allocv() {
  var r1;
  r1 = ___cxa_allocate_exception(4);
  __ZNSt9bad_allocC1Ev(r1);
  ___cxa_throw(r1, 5271196, 420);
}





// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    add: function(xl, xh, yl, yh) {
      var x = new goog.math.Long(xl, xh);
      var y = new goog.math.Long(yl, yh);
      var ret = x.add(y);
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    subtract: function(xl, xh, yl, yh) {
      var x = new goog.math.Long(xl, xh);
      var y = new goog.math.Long(yl, yh);
      var ret = x.subtract(y);
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    multiply: function(xl, xh, yl, yh) {
      var x = new goog.math.Long(xl, xh);
      var y = new goog.math.Long(yl, yh);
      var ret = x.multiply(y);
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    divide: function(xl, xh, yl, yh, unsigned) {
      Wrapper.ensureTemps();
      if (!unsigned) {
        var x = new goog.math.Long(xl, xh);
        var y = new goog.math.Long(yl, yh);
        var ret = x.div(y);
        HEAP32[tempDoublePtr>>2] = ret.low_;
        HEAP32[tempDoublePtr+4>>2] = ret.high_;
      } else {
        // slow precise bignum division
        var x = Wrapper.lh2bignum(xl >>> 0, xh >>> 0);
        var y = Wrapper.lh2bignum(yl >>> 0, yh >>> 0);
        var z = new BigInteger();
        x.divRemTo(y, z, null);
        var l = new BigInteger();
        var h = new BigInteger();
        z.divRemTo(Wrapper.two32, h, l);
        HEAP32[tempDoublePtr>>2] = parseInt(l.toString()) | 0;
        HEAP32[tempDoublePtr+4>>2] = parseInt(h.toString()) | 0;
      }
    },
    modulo: function(xl, xh, yl, yh, unsigned) {
      Wrapper.ensureTemps();
      if (!unsigned) {
        var x = new goog.math.Long(xl, xh);
        var y = new goog.math.Long(yl, yh);
        var ret = x.modulo(y);
        HEAP32[tempDoublePtr>>2] = ret.low_;
        HEAP32[tempDoublePtr+4>>2] = ret.high_;
      } else {
        // slow precise bignum division
        var x = Wrapper.lh2bignum(xl >>> 0, xh >>> 0);
        var y = Wrapper.lh2bignum(yl >>> 0, yh >>> 0);
        var z = new BigInteger();
        x.divRemTo(y, null, z);
        var l = new BigInteger();
        var h = new BigInteger();
        z.divRemTo(Wrapper.two32, h, l);
        HEAP32[tempDoublePtr>>2] = parseInt(l.toString()) | 0;
        HEAP32[tempDoublePtr+4>>2] = parseInt(h.toString()) | 0;
      }
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

Module.callMain = function callMain(args) {
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_STATIC) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_STATIC));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_STATIC);


  var ret;

  ret = Module['_main'](argc, argv, 0);


  return ret;
}




function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return 0;
  }

  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    var toRun = Module['preRun'];
    Module['preRun'] = [];
    for (var i = toRun.length-1; i >= 0; i--) {
      toRun[i]();
    }
    if (runDependencies > 0) {
      // a preRun added a dependency, run will be called later
      return 0;
    }
  }

  function doRun() {
    var ret = 0;
    calledRun = true;
    if (Module['_main']) {
      preMain();
      ret = Module.callMain(args);
      if (!Module['noExitRuntime']) {
        exitRuntime();
      }
    }
    if (Module['postRun']) {
      if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
      while (Module['postRun'].length > 0) {
        Module['postRun'].pop()();
      }
    }
    return ret;
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
    return 0;
  } else {
    return doRun();
  }
}
Module['run'] = Module.run = run;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

initRuntime();

var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

if (shouldRunNow) {
  var ret = run();
}

// {{POST_RUN_ADDITIONS}}






  // {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["__ZNSt3__18messagesIwED0Ev","__ZNSt3__14pairIN5Avoid7ConnEndES2_ED1Ev","__ZN5Avoid4NodeC2EPNS_12ShiftSegmentEd","__ZNKSt3__18numpunctIcE12do_falsenameEv","__ZNSt11logic_errorD1Ev","__ZNKSt3__120__time_get_c_storageIwE3__rEv","__ZN5Avoid6Router25improveOrthogonalTopologyEv","__ZNSt3__111__call_onceERVmPvPFvS2_E","__ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED1Ev","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE4findIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm","__ZN5Avoid7VertInfC1EPNS_6RouterERKNS_6VertIDERKNS_5PointEb","__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_","__ZNSt3__110__stdinbufIwE9__getcharEb","__ZNSt3__112_GLOBAL__N_14makeINS_6locale5__impEiEERT_T0_","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED1Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEEC2Ej","__ZN5Avoid22UnsatisfiableExceptionD1Ev","__ZNSt3__116__pad_and_outputIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_","___cxx_global_var_init6","___cxx_global_var_init7","__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC2EjjS7_","__ZN5Avoid5PointC1Edd","__ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev","__ZNK5Avoid5PointmiERKS0_","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE8__detachEv","___cxx_global_var_init8","___cxx_global_var_init9","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_","__ZN5Avoid7ConnRef10makeActiveEv","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE10push_frontERKS3_","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_","__ZN5Avoid8VariableD2Ev","__ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv","__ZNK5Avoid6Router33isInCrossingPenaltyReroutingStageEv","___cxx_global_var_init12","__ZN5Avoid7EdgeInfD1Ev","__ZN5Avoid5PointC2Edd","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED2Ev","__ZNK5Avoid8EdgePaireqERKS0_","__ZN5Avoid16PolygonInterfaceC2Ev","__ZN5Avoid6Router25destroyOrthogonalVisGraphEv","__ZN5Avoid22improveHyperedgeRoutesEPNS_6RouterE","__ZNK5Avoid6Router13validConnTypeENS_8ConnTypeE","__ZN5Avoid9aStarPathEPNS_7ConnRefEPNS_7VertInfES3_S3_","__ZN5Avoid7EdgeInf19setHyperedgeSegmentEb","__ZNSt3__113__fill_n_trueINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0EEENS6_9size_typeE","__ZNSt3__112_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEED2Ev","__ZNSt9bad_allocD0Ev","__ZNSt3__112_GLOBAL__N_14makeINS_7collateIwEEiEERT_T0_","__ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb","__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_","__ZNK5Avoid8Variable4dfdvEv","__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev","__ZNKSt3__120__time_get_c_storageIwE3__cEv","_connect","__ZN5Avoid4Node13isInsideShapeEj","__ZN5Avoid19NudgingShiftSegmentD0Ev","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_","__ZN5Avoid17HyperEdgeTreeNode27moveJunctionAlongCommonEdgeEPS0_","__ZNSt3__112_GLOBAL__N_19incrementIlEET_RS2_","__ZN5Avoid6Router21adjustContainsWithDelEi","__ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIwc10_mbstate_tEEiEERT_T0_","__ZN5Avoid19NudgingShiftSegment25updatePositionsFromSolverEv","__ZNK5Avoid19NudgingShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj","__ZN5Avoid17HyperedgeRerouter23calcHyperedgeConnectorsEv","__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv","__ZNSt3__113__vector_baseIPN5Avoid8VariableENS_9allocatorIS3_EEED2Ev","__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_SA_EEiEESD_RKT_","__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZN5Avoid8EdgeList5clearEv","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_","__ZNKSt3__17codecvtIDsc10_mbstate_tE13do_max_lengthEv","__ZNSt3__116__push_heap_backIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv","___cxx_global_var_init1271","__ZN5Avoid7ConnEndC1EPNS_11JunctionRefE","__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC2EjjS6_","__ZN5Avoid7ConnRef12makeInactiveEv","__ZNSt3__16locale5facet16__on_zero_sharedEv","__ZNSt3__16__clocEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc","___cxx_global_var_init23","__ZNSt3__110__stdinbufIcE5uflowEv","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE13__lower_boundIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_SF_SF_","__ZNSt3__110__stdinbufIcEC2EP7__sFILE","__ZNSt3__16locale5facetD1Ev","__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev","__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d120","__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_","__ZN5Avoid7EdgeInf11setMtstDistEd","__ZN5Avoid17HyperedgeRerouter9setRouterEPNS_6RouterE","__ZNSt3__112_GLOBAL__N_14makeINS_7collateIcEEiEERT_T0_","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZNK5Avoid17HyperEdgeTreeEdge14hasOrientationEj","__ZNSt3__16localeC1Ev","__ZNSt3__110moneypunctIwLb0EED0Ev","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_","__ZN5Avoid17HyperEdgeTreeEdge11replaceNodeEPNS_17HyperEdgeTreeNodeES2_","__ZN5Avoid7Polygon5clearEv","__ZN5Avoid8Obstacle12makeInactiveEv","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv","__ZNK5Avoid7ConnRef2idEv","__ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEEC1Ej","__ZN5Avoid5PointC2Ev","__ZN5AvoidL18setForCrossingConnERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_","__ZN5Avoid7VertInfD2Ev","__ZNSt3__112_GLOBAL__N_14makeINS_5ctypeIcEEPtbiEERT_T0_T1_T2_","__ZN5Avoid7VertInf5ResetERKNS_6VertIDERKNS_5PointE","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC2EjjS5_","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_","__ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_7ConnRefEPNS_11JunctionRefERNSt3__13setIS2_NS5_4lessIS2_EENS5_9allocatorIS2_EEEE","__ZNK10__cxxabiv116__shim_type_info5noop1Ev","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_","__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__construct_nodeERSA_","__ZNSt3__110__stdinbufIcED1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_","__ZNSt3__16vectorIbNS_9allocatorIbEEE4swapERS3_","__ZNSt3__14listIPbNS_9allocatorIS1_EEED2Ev","__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE","___cxx_global_var_init5","__ZN5Avoid21HyperEdgeShiftSegment9highPointEv","__ZN5Avoid18ShapeConnectionPinC1EPNS_8ShapeRefEjdddj","__ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEE18__construct_at_endEj","__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNKSt3__16locale5__imp9has_facetEl","__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE6__sortINS2_21CmpOrderedConnCostRefEEENS_15__list_iteratorIS5_PvEESD_SD_jRT_","__ZNSt3__18numpunctIcED0Ev","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1ERKS5_","__ZNSt3__112_GLOBAL__N_14makeINS_8messagesIwEEiEERT_T0_","__ZNSt3__121__throw_runtime_errorEPKc","__ZNSt3__17codecvtIDic10_mbstate_tED1Ev","___cxx_global_var_init2","__ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5eraseENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEE","___cxx_global_var_init3","__ZNK5Avoid6Router16objectIdIsUnusedEj","__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi","__ZN5Avoid5Block11addVariableEPNS_8VariableE","__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_","__ZNSt13runtime_errorD2Ev","__ZN5Avoid7EdgeInf10makeActiveEv","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE10push_frontERKj","__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC1EjjS9_","__ZNSt3__17__sort5IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_S5_T_","__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED1Ev","__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_","__ZNKSt3__17codecvtIDic10_mbstate_tE11do_encodingEv","__ZN5Avoid12CmpLineOrderC2ERNSt3__13mapINS_5PointENS_7PtOrderENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEEj","__ZNK5Avoid10ClusterRef2idEv","_internal_realloc","__ZNSt3__17collateIwED1Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm","__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintE","__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_","__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej","__ZNSt3__110__list_impIN5Avoid7ConnEndENS_9allocatorIS2_EEED2Ev","__ZN5Avoid18ShapeConnectionPin12setExclusiveEb","__ZNSt3__16vectorIcNS_9allocatorIcEEED2Ev","__ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED1Ev","__ZNK5Avoid7VertInf12hasNeighbourEPS0_b","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_","__ZNSt3__112_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED1Ev","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueERKS5_","__ZNSt3__113__vector_baseINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED2Ev","__ZN5Avoid17HyperedgeRerouterC2Ev","__ZNSt3__117__widen_from_utf8ILj32EED0Ev","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8__appendEj","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev","__ZN5Avoid6inPolyERKNS_7PolygonERKNS_5PointEb","__ZNKSt3__18numpunctIwE16do_thousands_sepEv","__ZNK5Avoid10PosVertInfltERKS0_","__ZN5Avoid5Timer5StartEv","__ZN5Avoid19NudgingShiftSegment20createSolverVariableEb","__ZN5Avoid9IncSolverD2Ev","__ZN5Avoid18ConnectorCrossingsC2ERNS_7PolygonEbS2_PNS_7ConnRefES4_","__ZNSt3__13setIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED1Ev","__ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED1Ev","__ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEE5clearEv","__ZN5AvoidL16processEventHoriEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev","__ZNK5Avoid7EdgeInf12isOrthogonalEv","__ZNK5Avoid5PointeqERKS0_","__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv","__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_","__ZN5AvoidL18cheapEstimatedCostEPNS_7ConnRefE","__ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED1Ev","__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZN5Avoid8VariableC2Eiddd","__ZN5Avoid7EdgeInf5addedEv","__ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED1Ev","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_","__ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEED2Ev","__ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE18__construct_at_endEj","__ZN5Avoid17HyperEdgeTreeEdge21removeZeroLengthEdgesEPNS_17HyperEdgeTreeNodeE","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","__ZN5Avoid6VertIDC1Ejtt","__ZNSt3__110__list_impINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEE5clearEv","__ZNSt3__14listIPbNS_9allocatorIS1_EEE9push_backERKS1_","__ZNKSt3__18numpunctIwE16do_decimal_pointEv","_processTransaction","__ZNK5Avoid18ShapeConnectionPin10directionsEv","__ZNSt3__111__stdoutbufIcEC2EP7__sFILE","__ZN5Avoid6Router16generateContainsEPNS_7VertInfE","__ZN5Avoid26PotentialSegmentConstraintC2EjjRKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE","__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZN5Avoid7EdgeInf11setDisabledEb","__ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_7ConnRefE","__ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED2Ev","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_","__ZN5Avoid27MinimumTerminalSpanningTree7addNodeEPNS_7VertInfEPNS_17HyperEdgeTreeNodeE","__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji","__ZNSt3__16localeC2ERKS0_","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_","__ZN5Avoid7EdgeInf10alertConnsEv","__ZN5Avoid10ActionInfoC1ERKS0_","__ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_","__ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE8__appendEj","___cxx_global_var_init1998","__ZN5Avoid15isBoundingShapeC1ERNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZNSt3__18numpunctIwEC1Ej","__ZN5Avoid14compare_eventsEPKvS1_","__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE","__ZNSt3__113__vector_baseIN5Avoid5ANodeENS_9allocatorIS2_EEED2Ev","__ZNK5Avoid7VertInf15treeRootPointerEv","__ZN5Avoid9IncSolver7satisfyEv","__ZN5AvoidL21pointAlignedWithOneOfERKNS_5PointERKNSt3__16vectorIS0_NS3_9allocatorIS0_EEEEj","__ZNSt3__116__pad_and_outputIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEET0_S5_PKT_S8_S8_RNS_8ios_baseES6_","__ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEE9push_backERKS5_","__ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE","__ZN10__cxxabiv120__si_class_type_infoD1Ev","__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","_moveShape","__ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEED1Ev","__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE","__ZN5Avoid4Node18firstObstacleAboveEj","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE","__ZN5Avoid17ImproveHyperEdges24mergeOverlappingSegmentsERNSt3__14listIPNS_12ShiftSegmentENS1_9allocatorIS4_EEEE","__ZN5Avoid8Obstacle9firstVertEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEaSERKS8_","__ZNKSt3__17codecvtIwc10_mbstate_tE16do_always_noconvEv","__ZNK5Avoid7EdgeInf9otherVertEPKNS_7VertInfE","__ZN5Avoid7ConnRefC2EPNS_6RouterEj","__ZN5Avoid11JunctionRef11setPositionERKNS_5PointE","__ZN5Avoid5BlockD1Ev","__ZN5Avoid22TopologyAddonInterface25improveOrthogonalTopologyEPNS_6RouterE","__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE","__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji","__ZNK5Avoid7ConnEnd18getHyperedgeVertexEPNS_6RouterE","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8__appendEj","__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_","__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE10deallocateEv","__ZN5AvoidL3DotERKNS_5PointES2_","__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc","__ZN5Avoid8ShapeRefD2Ev","__ZNSt3__17collateIcED1Ev","__ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEE9push_backERKS4_","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev","__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d226","__ZN5Avoid11LineSegment16horiCommitFinishEPNS_6RouterEPNS_7VertInfE","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC1Ej","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESG_SG_","__ZN5Avoid7ConnRef12generatePathEv","__ZN5Avoid22TopologyAddonInterfaceD0Ev","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev","__ZN5Avoid6Router14deleteJunctionEPNS_11JunctionRefE","__ZNK5Avoid19NudgingShiftSegment13nudgeDistanceEv","__ZNSt3__17codecvtIwc10_mbstate_tED0Ev","__ZSt9terminatev","__ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev","__ZNSt3__112_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_","__ZN5Avoid11LineSegmentC2ERKdS2_S2_bPNS_7VertInfES4_","__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv","__ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED2Ev","__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endINS_13move_iteratorIPS6_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESF_SF_","__ZNKSt3__120__time_get_c_storageIcE7__weeksEv","__ZNSt3__110__list_impIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED2Ev","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC2EjjS6_","__ZNSt8bad_castD1Ev","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZN5Avoid9RectangleD2Ev","__ZN5Avoid10ConstraintC2EPNS_8VariableES2_db","__ZN5Avoid7ConnEndC1ERKNS_5PointEj","__ZNSt3__18ios_baseD1Ev","__ZNK5Avoid8EdgePairltERKS0_","__ZN5Avoid6Router20checkAllBlockedEdgesEi","__ZNSt3__110__list_impINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED2Ev","__ZN5AvoidL11vertexSweepEPNS_7VertInfE","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE13__lower_boundIjEENS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEEiEERKT_SB_SB_","__ZNSt3__110__list_impINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE5clearEv","__ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE","__ZNSt3__18ios_base4InitD2Ev","__ZN5Avoid7EdgeInf12makeInactiveEv","__ZNKSt3__15ctypeIwE5do_isEtw","_displayRoute","__ZN10__cxxabiv119__pointer_type_infoD1Ev","__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev","__ZNSt3__14listIjNS_9allocatorIjEEE9push_backERKj","__ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_","__ZNSt3__114error_categoryD1Ev","__ZN5Avoid17HyperEdgeTreeNodeD1Ev","__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i","__ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEED2Ev","__ZN5Avoid7ConnEndC2EPNS_8ShapeRefEj","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED2Ev","__ZN5Avoid7ConnRef14freeActivePinsEv","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED2Ev","__ZN5Avoid7ConnRef12displayRouteEv","__ZN5Avoid12CmpLineOrderC1ERNSt3__13mapINS_5PointENS_7PtOrderENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEEj","__ZNK5Avoid10ActionInfo8obstacleEv","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE8allocateEj","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv","__ZN5Avoid17HyperEdgeTreeNode15spliceEdgesFromEPS0_","__ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED2Ev","__ZN5Avoid12ShiftSegmentD1Ev","__ZNSt3__111__sprintf_lEPcPvPKcz","__ZN5Avoid7PolygonD0Ev","__ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw","__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_PvEEiEERKS2_","__ZN5Avoid11VertInfList9addVertexEPNS_7VertInfE","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm","__ZNK5Avoid7ConnRef3srcEv","__ZNKSt3__119__iostream_category4nameEv","__ZNSt3__113__vector_baseIN5Avoid10CheckpointENS_9allocatorIS2_EEED2Ev","__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv","__ZN5Avoid8ObstacleD2Ev","__ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEiEERT_T0_","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI10_mbstate_tEEj","__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_","__ZNK5Avoid7EdgeInf6pointsEv","__ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev","__ZNKSt3__15ctypeIcE9do_narrowEcc","__ZN5Avoid5ANodeC2EPNS_7VertInfEi","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__110__list_impINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED2Ev","__ZNK5Avoid18CmpVisEdgeRotationclEPKNS_7EdgeInfES3_","__ZN5Avoid27MinimumTerminalSpanningTree20commitToBridgingEdgeEPNS_7EdgeInfERj","__ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC1ERKS9_","_createShapeConnectionPin","__ZNSt3__110__stdinbufIcE9__getcharEb","__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED2Ev","__ZNK5Avoid7VertInf13directionFromEPKS0_","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_","__ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEED1Ev","__ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE","__ZNSt3__112_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv","__ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEEC2Ej","__ZN5Avoid6VertIDC2ERKS0_","__ZN5Avoid21segmentIntersectPointERKNS_5PointES2_S2_S2_PdS3_","__ZN5Avoid6Router14processActionsEv","__ZNSt3__112system_errorD0Ev","__ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI10_mbstate_tEEj","__ZN5Avoid7ConnRefD1Ev","__ZN5Avoid10ActionInfoD2Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE8allocateEj","__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv","__ZN5Avoid8Obstacle22computeVisibilitySweepEv","__ZNKSt3__18numpunctIcE16do_thousands_sepEv","__ZN5Avoid10CmpIndexesC2EPNS_7ConnRefEj","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj","__ZN5Avoid5ANodeC1EPNS_7VertInfEi","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC2ERKS4_","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__15ctypeIcED0Ev","__ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE","__ZNSt3__110__list_impINS_4pairIjjEENS_9allocatorIS2_EEED2Ev","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev","__ZN5AvoidL15orthogTurnOrderERKNS_5PointES2_S2_","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED2Ev","__ZNSt3__113__vector_baseINS_6vectorIbNS_9allocatorIbEEEENS2_IS4_EEED2Ev","__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE10push_frontERKS3_","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev","__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EEPS2_","__ZNSt3__110__list_impINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED2Ev","__ZNSt8bad_castC1Ev","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv","__ZN5Avoid7VertInf19makeTreeRootPointerEPS0_","__ZNSt3__111__stdoutbufIcE4syncEv","__ZNKSt3__17codecvtIwc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNK5Avoid18ShapeConnectionPinltERKS0_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__116__push_heap_backIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE","__ZNK5Avoid7EdgeInf8mtstDistEv","__ZN5Avoid22UnsatisfiableExceptionC2Ev","__ZN5Avoid21HyperEdgeShiftSegment8lowPointEv","__ZNSt3__110__list_impINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE5clearEv","__ZNKSt3__17collateIwE12do_transformEPKwS3_","__ZN5Avoid19NudgingShiftSegmentD2Ev","__ZNK5Avoid26PotentialSegmentConstraintltES0_","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED2Ev","__ZN5Avoid11VertInfListC2Ev","__ZNSt3__110__list_impIPN5Avoid10ClusterRefENS_9allocatorIS3_EEE5clearEv","__ZNSt3__114__shared_count12__add_sharedEv","__ZNSt3__113__vector_baseINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE15__insert_uniqueENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEERKS5_","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEEC1EjjS6_","__ZNKSt3__120__time_get_c_storageIcE3__rEv","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev","__ZNSt3__110__list_impIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev","__ZN5Avoid27MinimumTerminalSpanningTreeD2Ev","__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_","__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw","__ZNSt9bad_allocC2Ev","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce","__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED2Ev","__ZNKSt3__18messagesIwE8do_closeEi","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED1Ev","__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC1EjjS4_","__ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED2Ev","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZNSt3__16localeD1Ev","__ZNSt3__110__list_impIN5Avoid8EdgePairENS_9allocatorIS2_EEE5clearEv","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","__ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_7PolygonE","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx","__ZN5Avoid8Obstacle27updatePinPolyLineVisibilityEv","__ZN5Avoid27MinimumTerminalSpanningTree17resetDistsForPathEPNS_7VertInfEPS2_","__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC2ERKS2_","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt","__ZN5Avoid17ImproveHyperEdges21removeZeroLengthEdgesEv","__ZN5Avoid10PosVertInfC1EdPNS_7VertInfEj","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl","__ZNSt3__14pairIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEEED2Ev","__ZN5AvoidL12sweepVisibleERNSt3__14listINS_8EdgePairENS0_9allocatorIS2_EEEERKNS_9PointPairERNS0_3setIjNS0_4lessIjEENS3_IjEEEEPi","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe","__ZN5Avoid11VertInfList13getVertexByIDERKNS_6VertIDE","__ZNK5Avoid10Constraint5slackEv","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf","__ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_","__ZN5AvoidL8linesortEbNSt3__14listIPNS_12ShiftSegmentENS0_9allocatorIS3_EEEERNS_12CmpLineOrderE","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC2Ej","__ZNK5Avoid19NudgingShiftSegment5orderEv","__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZN5Avoid7PtOrderC1Ev","__ZNSt3__112__asprintf_lEPPcPvPKcz","__ZNK5Avoid7Polygon8simplifyEv","__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE","__ZNKSt3__16locale9use_facetERNS0_2idE","__ZN5Avoid18SegmentListWrapperC1Ev","__ZN5Avoid18ShapeConnectionPin16updateVisibilityEv","__ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE18__construct_at_endEj","__ZNSt3__18ios_base4InitC2Ev","__ZN5Avoid8Obstacle10setNewPolyERKNS_7PolygonE","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESG_SG_","__ZN5Avoid27MinimumTerminalSpanningTree22rewriteRestOfHyperedgeEPNS_7VertInfEPS2_","__ZNKSt3__17collateIcE12do_transformEPKcS3_","__ZN5Avoid17HyperEdgeTreeEdge26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE","__ZN5Avoid8EdgeListC1Eb","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","__ZNSt3__16vectorINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endEj","__ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEESF_RKT_","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_","__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEE16__construct_nodeERSB_","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc","__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb","__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv","__ZN12_GLOBAL__N_114__libcpp_nmstrC1EPKc","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_","__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj","__ZNSt3__110__list_impINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_","__ZN5Avoid17HyperedgeRerouter16performReroutingEv","__ZN5Avoid13euclideanDistERKNS_5PointES2_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv","__ZNSt3__16locale5__imp7installINS_7codecvtIwc10_mbstate_tEEEEvPT_","__ZN5Avoid4NodeC1EPNS_12ShiftSegmentEd","__ZN5Avoid8ObstacleC2EPNS_6RouterENS_7PolygonEj","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm","__ZN5Avoid11JunctionRefD1Ev","__ZNSt3__18messagesIcED1Ev","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeERKj","__ZNK5Avoid17HyperedgeRerouter5countEv","__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE12__move_rangeEPS3_S7_S7_","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj","__ZN5Avoid7EdgeInf7getDistEv","__ZNSt3__17__sort3IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_T_","__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc","__ZNK5Avoid8ShapeRef7polygonEv","__ZN5Avoid5EventC2ENS_9EventTypeEPNS_4NodeEd","__ZN5Avoid22TopologyAddonInterfaceC2Ev","__ZNKSt3__120__time_get_c_storageIwE3__XEv","__ZN5Avoid10CmpIndexesclEjj","__ZN5Avoid6Router18processTransactionEv","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_","__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED2Ev","__ZNSt3__17codecvtIcc10_mbstate_tED1Ev","__ZNKSt3__17codecvtIDic10_mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_","__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEEC2ERKS4_","__ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE10deallocateEv","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_","__ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__15ctypeIcE21__classic_lower_tableEv","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx","__ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS9_EE","__ZN5Avoid7ConnRef15makePathInvalidEv","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC2ERKS7_","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe","__ZN5Avoid27MinimumTerminalSpanningTree24buildHyperEdgeTreeToRootEPNS_7VertInfEPNS_17HyperEdgeTreeNodeES2_b","__ZNSt3__113__vector_baseIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf","__ZNSt3__18ios_base4initEPv","__ZNSt3__14pairIN5Avoid5PointENS1_7PtOrderEED1Ev","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb","__Znaj","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__113__vector_baseIN5Avoid7PolygonENS_9allocatorIS2_EEED2Ev","__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE8allocateEj","__ZN5AvoidL17intersectSegmentsEPNS_6RouterERNSt3__14listINS_11LineSegmentENS2_9allocatorIS4_EEEERS4_","__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZNSt3__110__list_impIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5clearEv","__ZNSt3__15ctypeIcE13classic_tableEv","__ZNSt3__1L10init_am_pmEv","__ZN5Avoid7PtOrder11positionForEjPKNS_7ConnRefE","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_","__ZN5Avoid9IncSolver5solveEv","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi","__ZN5Avoid18ShapeConnectionPinC1EPNS_11JunctionRefEjj","__ZNSt3__113__vector_baseIjNS_9allocatorIjEEED2Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZN5Avoid17HyperEdgeTreeNode21removeZeroLengthEdgesEPNS_17HyperEdgeTreeEdgeE","__ZNK5Avoid16PolygonInterface13offsetPolygonEd","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_","__ZNK5Avoid10ActionInfoltERKS0_","__ZNK5Avoid8ShapeRef10outputCodeEP7__sFILE","__ZN5Avoid7ConnEndC2EPNS_11JunctionRefE","__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EjjS8_","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE","__ZN5Avoid17ImproveHyperEdges7executeEv","__ZNSt3__13setIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev","__ZN5Avoid11LineSegment22insertBreakpointsBeginEPNS_6RouterERS0_","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj","__ZNSt3__113__vector_baseINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev","__ZN5Avoid21HyperEdgeShiftSegment15setBalanceCountEv","__ZN5Avoid23ConnRerouteFlagDelegate10alertConnsEv","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED2Ev","__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_","__ZNSt3__15ctypeIcED2Ev","__ZN5Avoid9inBetweenERKNS_5PointES2_S2_","__ZNSt3__116__narrow_to_utf8ILj32EED1Ev","__ZN5Avoid17ImproveHyperEdgesD2Ev","__ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjbbjdd","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev","__ZNSt3__112_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_","__ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEED2Ev","__ZNKSt3__15ctypeIcE10do_tolowerEc","__ZN5Avoid8Obstacle8lastVertEv","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE","_release_unused_segments","__ZN5Avoid18CmpVisEdgeRotationC2EPKNS_7VertInfE","__ZN5Avoid7PtOrderD1Ev","__ZNSt3__112_GLOBAL__N_14makeINS_5ctypeIwEEiEERT_T0_","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_","__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv","__ZNK5Avoid21HyperEdgeShiftSegment9immovableEv","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZNK5Avoid7ConnEnd10directionsEv","__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE5eraseENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEE","__ZNSt3__13setIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZN5Avoid7ConnRef12setEndpointsERKNS_7ConnEndES3_","_sys_alloc","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev","__ZNKSt3__17collateIcE7do_hashEPKcS3_","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEEC1ERKS6_","__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED2Ev","__ZN5Avoid21HyperEdgeShiftSegmentD2Ev","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC2ERKS6_","__ZN5Avoid18SegmentListWrapperD2Ev","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED1Ev","__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE","__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d598","__ZN5Avoid8EdgeListD2Ev","__ZNKSt3__15ctypeIcE10do_toupperEPcPKc","__ZNK5Avoid11LineSegment12beginVertInfEv","__ZNSt3__16locale5__imp7installEPNS0_5facetEl","__ZNSt3__111__stdoutbufIcEC1EP7__sFILE","__ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED2Ev","__ZNK5Avoid7Polygon19checkpointOnSegmentEj","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9push_backERKS3_","__ZNSt3__18ios_base7failureD2Ev","__ZN5Avoid8ShapeRef17moveAttachedConnsERKNS_7PolygonE","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_","__ZNSt3__117iostream_categoryEv","__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d","__ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_","__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEEC1EjjS8_","__ZN5Avoid5PointixEj","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6resizeEj","__ZN5Avoid11JunctionRefC2EPNS_6RouterENS_5PointEj","__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev","__ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev","__ZNSt3__16locale5__impC2Ej","__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE10push_frontERKS3_","__ZNSt3__16locale2id5__getEv","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv","__ZNSt3__110__stdinbufIcE9underflowEv","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEEC1ERKS6_","__ZN5Avoid27MinimumTerminalSpanningTree23popInvalidBridgingEdgesEv","__ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi","__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE","__ZNK5Avoid7Polygon2atEj","__ZN5Avoid18SegmentListWrapper6insertENS_11LineSegmentE","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC2EjjSB_","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE9pop_frontEv","_shapeConnectionPinSetExclusive","__ZNKSt3__18numpunctIwE11do_groupingEv","__ZN5Avoid17HyperEdgeTreeNode17deleteEdgesExceptEPNS_17HyperEdgeTreeEdgeE","__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev","__ZNK5Avoid21CmpOrderedConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_","__ZNK5Avoid27MinimumTerminalSpanningTree12rootJunctionEv","__ZN5Avoid27MinimumTerminalSpanningTree20constructInterleavedEv","__ZN5Avoid23ConnRerouteFlagDelegateC1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","__ZNSt3__110__stdinbufIcED0Ev","__ZN5Avoid7ConnRef9set_routeERKNS_7PolygonE","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj","__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev","__ZNK5Avoid7VertInf15pathLeadsBackToEPKS0_","__ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_","__ZNK5Avoid8Obstacle7polygonEv","__ZN5Avoid18SegmentListWrapper4listEv","__ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEED2Ev","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_","__ZNSt3__17codecvtIwc10_mbstate_tED1Ev","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endEj","__ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE6resizeEj","__ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_","__ZNK5Avoid22TopologyAddonInterface5cloneEv","__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj","__ZNSt13runtime_errorC1EPKc","__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE","__ZN5Avoid7ConnEnd6usePinEPNS_18ShapeConnectionPinE","__ZN5Avoid8ObstacleD0Ev","__ZNSt3__112__deque_baseIjNS_9allocatorIjEEED2Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC2ERKS4_","__ZN5Avoid22TopologyAddonInterfaceC1ERKS0_","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE5clearEv","__ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEE8allocateEj","__ZN5Avoid13manhattanDistERKNS_5PointES2_","__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw","__ZNKSt3__18numpunctIcE11do_groupingEv","__ZN10__cxxabiv119__pointer_type_infoD0Ev","__ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE10deallocateEv","__ZNK5Avoid10CmpVertInfclEPKNS_7VertInfES3_","__ZN5Avoid21HyperEdgeShiftSegmentC1EPNS_17HyperEdgeTreeNodeES2_jb","__ZNSt3__17codecvtIwc10_mbstate_tEC1Ej","__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc","__ZNK5Avoid5PointltERKS0_","__ZNSt3__111__tree_leafIPNS_16__tree_node_baseIPvEEEET_S5_","__ZNSt3__119__iostream_categoryD1Ev","__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv","__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_","__ZNKSt3__18messagesIcE8do_closeEi","__ZN5Avoid7Polygon9translateEdd","__ZNSt3__16vectorIjNS_9allocatorIjEEED1Ev","__ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED2Ev","__ZN5Avoid7PolygonD1Ev","__ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED1Ev","__ZN5Avoid6Router14markConnectorsEPNS_8ObstacleE","__ZN5Avoid12ShiftSegmentD0Ev","__ZNSt3__110__list_impIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5clearEv","__ZNK5Avoid8Variable8positionEv","__ZNSt3__14pairIjN5Avoid7ConnEndEED1Ev","__ZNSt3__16locale7classicEv","__ZN5Avoid9RectangleC1ERKNS_5PointES3_","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC1ERS3_","__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv","__ZN5Avoid13delete_vertexclEPNS_7VertInfE","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZNK5Avoid14CmpConnCostRefclERKNSt3__14pairIdPNS_7ConnRefEEES7_","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED2Ev","__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE","__ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev","_mmap_resize","__ZNSt3__18numpunctIwED2Ev","__ZN5AvoidL16processEventVertEPNS_6RouterERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS2_9allocatorIS5_EEEERNS_18SegmentListWrapperEPNS_5EventEj","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm","__ZNK5Avoid8Obstacle10routingBoxEv","__ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5clearEv","__ZNKSt13runtime_error4whatEv","__ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj","__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED1Ev","__ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE5clearEv","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED1Ev","__ZN5Avoid27MinimumTerminalSpanningTree28getOrthogonalEdgesFromVertexEPNS_7VertInfES2_","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_","__ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev","__ZN5Avoid4NodeC1EPNS_8ObstacleEd","__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC2EjjSA_","__ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_","__ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEEC2ERKS5_","__ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv","__ZN5Avoid10cornerSideERKNS_5PointES2_S2_S2_","__ZN5Avoid7PolygonC1ERKNS_16PolygonInterfaceE","__ZNK5Avoid10ActionInfo5shapeEv","__ZNSt3__110__list_impIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE5clearEv","_tmalloc_small","__ZNSt3__1L11init_wweeksEv","__ZNK5Avoid7ConnRef15endpointAnchorsEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEESE_","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_15__list_iteratorIS3_PvEEEESA_NS_21__list_const_iteratorIS3_S9_EET_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE","__ZN5Avoid8Obstacle19addFollowingConnEndEPNS_7ConnEndE","__ZNSt3__17collateIwED0Ev","__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv","__ZNKSt3__17codecvtIDsc10_mbstate_tE9do_lengthERS1_PKcS5_j","__ZNKSt3__17codecvtIwc10_mbstate_tE13do_max_lengthEv","__ZNSt11logic_errorD2Ev","__ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeEdgeEjPNS_17HyperEdgeTreeNodeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE","__ZNSt3__111__stdoutbufIwEC2EP7__sFILE","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC2ERKSB_","__ZN5Avoid5Block10split_pathEPNS_8VariableES2_S2_RPNS_10ConstraintEb","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEESB_RKT_","__ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED1Ev","__ZN5Avoid19NudgingShiftSegmentC1EPNS_7ConnRefEjjj","__ZNSt3__111__stdoutbufIcED2Ev","__ZNK5Avoid6Router13routingOptionENS_13RoutingOptionE","__ZNSt3__16locale8__globalEv","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE10push_frontERKS2_","__ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_","__ZN5Avoid7ConnRef21common_updateEndPointEjNS_7ConnEndE","__ZdlPv","__ZN5Avoid7ConnRefC1EPNS_6RouterEj","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE8allocateEj","__ZNSt3__18numpunctIcED2Ev","__ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED1Ev","__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEE10push_frontERKS6_","__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endEj","__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv","__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZNK5Avoid7ConnEnd8positionEv","__ZN5Avoid6BlocksC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev","__ZNKSt3__120__time_get_c_storageIcE3__XEv","__ZNK5Avoid5PointneERKS0_","__ZNKSt3__15ctypeIwE9do_narrowEwc","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endEj","_realloc","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS7_","__ZN5Avoid23ConnRerouteFlagDelegateD2Ev","__ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZNSt3__110__time_putD2Ev","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE18__construct_at_endEj","__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv","__ZNSt12length_errorD2Ev","__ZNSt3__110moneypunctIwLb0EED1Ev","__ZNK5Avoid19NudgingShiftSegment6zigzagEv","__ZNSt3__110__list_impIPN5Avoid8ObstacleENS_9allocatorIS3_EEE5clearEv","__ZNSt3__118__insertion_sort_3IRN5Avoid10CmpIndexesEPjEEvT0_S5_T_","__ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEED2Ev","__ZNK5Avoid7ConnRef11routingTypeEv","__ZNK5Avoid11LineSegment13finishVertInfEv","__ZN5Avoid17validateBendPointEPNS_7VertInfES1_S1_","_disconnect","__ZNKSt3__17codecvtIcc10_mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd","__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZN5Avoid16PolygonInterfaceD1Ev","__ZNSt3__110__stdinbufIwED2Ev","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEEC1ERKS4_","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZNSt11logic_errorC2EPKc","__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv","__ZNSt3__110moneypunctIcLb1EED0Ev","__ZN5Avoid13delete_objectclINS_10ConstraintEEEvPT_","__ZN5Avoid5Timer8RegisterENS_10TimerIndexEb","__ZNK5Avoid19NudgingShiftSegment5highCEv","__ZN5Avoid6Router9moveShapeEPNS_8ShapeRefERKNS_7PolygonEb","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjS8_EEiEESB_RKT_","__ZNK5Avoid7ConnRef20possibleDstPinPointsEv","__ZNK5Avoid6VertID16isDummyPinHelperEv","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE","__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_","__ZN5Avoid7EdgeInf10addBlockerEi","__ZN5Avoid3BoxC2Ev","_createShape","__ZN5Avoid8EdgeList10removeEdgeEPNS_7EdgeInfE","__ZN5Avoid7ConnRef15performCallbackEv","__ZN5Avoid13CmpNodesInDimC1Ej","__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EEPj","__ZN5Avoid27MinimumTerminalSpanningTree10drawForestEPNS_7VertInfES2_","__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED2Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED2Ev","__ZN5Avoid6RouterD2Ev","__ZN5Avoid17HyperedgeRerouterD1Ev","__ZN5AvoidL17processShiftEventERNSt3__13setIPNS_4NodeENS_10CmpNodePosENS0_9allocatorIS3_EEEEPNS_5EventEjj","__ZNSt9bad_allocD1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZNK5Avoid7ConnRef27getConnEndForEndpointVertexEPNS_7VertInfERNS_7ConnEndE","__ZN10__cxxabiv120__si_class_type_infoD0Ev","__ZNSt3__112_GLOBAL__N_111__fake_bindC1EMNS_6locale2idEFvvEPS3_","__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESE_RKT_","__ZNSt3__1L10init_weeksEv","__ZN5Avoid6BlocksD1Ev","__ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefERKNS_7PolygonEb","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_","__ZN5Avoid11LineSegment15horiCommitBeginEPNS_6RouterEPNS_7VertInfE","__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjbbjdd","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE19__node_insert_multiEPNS_11__tree_nodeIS3_PvEE","__ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED2Ev","__ZN5Avoid6VertIDC2Ejtt","__ZN5Avoid17ImproveHyperEdges29moveJunctionsAlongCommonEdgesEv","__ZN5Avoid5Block9findMinLMEv","__ZNK5Avoid7EdgeInf16rotationLessThanEPKNS_7VertInfEPKS0_","__ZNK5Avoid5Point6equalsERKS0_d","__ZN5Avoid11LineSegment27setLongRangeVisibilityFlagsEj","__ZN5Avoid11LineSegmentD2Ev","__ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj","__ZN5Avoid7PtOrder11insertPointEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEE","__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE","__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__16vectorINS0_IN5Avoid5PointENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE","__ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEj","__ZN5Avoid6VertIDC1ERKS0_","__ZNSt3__114error_categoryC2Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc","__ZN5Avoid11JunctionRefD0Ev","__ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi","__ZNSt3__14listIPbNS_9allocatorIS1_EEED1Ev","__ZN5Avoid10ActionInfoC2ERKS0_","__ZNSt3__14listIjNS_9allocatorIjEEED2Ev","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED2Ev","__ZNSt3__110__list_impIN5Avoid8EdgePairENS_9allocatorIS2_EEED2Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZNSt3__110__list_impIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev","__ZNSt3__110__list_impIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev","__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt","__ZNSt3__16locale5__impD0Ev","__ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_8ShapeRefE","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED2Ev","___cxx_global_array_dtor108","__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv","__ZN5Avoid6Router26performSlowRoutingCallBackEd","__ZN5Avoid7EdgeInf8checkVisEv","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC1EjjS3_","__ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_","__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev","__ZN5Avoid8VariableC1Eiddd","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd","__ZNSt3__117__call_once_proxyINS_12_GLOBAL__N_111__fake_bindEEEvPv","__ZNSt8bad_castD0Ev","__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw","__ZNSt3__18ios_base7failureC1EPKcRKNS_10error_codeE","__ZNSt3__112_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_","__ZSt17__throw_bad_allocv","__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE6resizeEj","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE10push_frontERKS3_","__ZNSt3__16vectorIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED1Ev","__ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_18ShapeConnectionPinE","__ZNSt3__15dequeIjNS_9allocatorIjEEED1Ev","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEEC2ERKS7_","__ZNSt3__16locale5__imp7installINS_7codecvtIcc10_mbstate_tEEEEvPT_","__ZNSt3__17collateIcED0Ev","__ZN5Avoid7EdgeInf9isBetweenEPNS_7VertInfES2_","__ZN10__cxxabiv117__class_type_infoD1Ev","__ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED2Ev","__ZNSt3__113__vector_baseIcNS_9allocatorIcEEED2Ev","__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC1EjjS6_","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS6_","__ZN5Avoid9RectangleD0Ev","__ZNSt3__110__stdinbufIwE5uflowEv","__ZNKSt3__18numpunctIcE11do_truenameEv","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_","__ZN5Avoid26PotentialSegmentConstraintC1EjjRKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE","__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv","__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC1INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE","__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE","__ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED2Ev","__ZNSt3__112_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_","__ZN5Avoid27MinimumTerminalSpanningTreeC2EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE","__ZNKSt3__110error_code7messageEv","__ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED1Ev","__ZN5Avoid7PtOrder16addOrderedPointsEjRKNSt3__14pairIPNS_5PointEPNS_7ConnRefEEES9_b","__ZNSt3__110__list_impIPN5Avoid8ObstacleENS_9allocatorIS3_EEED2Ev","_add_segment","__ZN5Avoid7ConnEnd7connectEPNS_7ConnRefE","__ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED2Ev","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_13move_iteratorIPjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZN5Avoid21HyperEdgeShiftSegmentD0Ev","__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev","__ZNK5Avoid6VertID15isConnectionPinEv","__ZN5AvoidL24simplifyOrthogonalRoutesEPNS_6RouterE","__ZNK5Avoid12CmpLineOrderclEPKNS_12ShiftSegmentES3_Pb","__ZNKSt3__18ios_base6getlocEv","__ZN5Avoid11LineSegment17addEdgeHorizontalEPNS_6RouterE","__ZN5Avoid10CmpIndexesC1EPNS_7ConnRefEj","__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE18__construct_at_endINS_13move_iteratorIPS7_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESH_SH_","__ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueENS5_IPjEEE4typeES8_SA_SA_","__ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEE18__construct_at_endINS_15__list_iteratorIS3_PvEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_","__ZNSt3__119__iostream_categoryC2Ev","__ZN5Avoid21HyperEdgeShiftSegment14adjustPositionEv","__ZN5Avoid6Router8assignIdEj","__ZNSt3__116__push_heap_backIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE","__ZN5Avoid10ClusterRef7polygonEv","__ZNSt3__112__do_messageC2Ev","__ZN5AvoidL23getPosVertInfDirectionsEPNS_7VertInfEj","__ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD1Ev","__ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEED2Ev","__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE","__ZNSt3__18ios_base7failureD0Ev","__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEED2Ev","__ZN5Avoid16PolygonInterfaceC2ERKS0_","__ZNSt3__110__stdinbufIcED2Ev","__ZN5AvoidltERKNS_5ANodeES2_","__ZN5Avoid7VertInf8orphanedEv","__ZNSt3__15ctypeIcE21__classic_upper_tableEv","__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZNK5Avoid19NudgingShiftSegment9highPointEv","__ZNSt3__16vectorIcNS_9allocatorIcEEEC1ERKS3_","__ZNSt3__18ios_base5clearEj","__ZN5AvoidL10pathLengthEPPNS_5PointES2_j","__ZNKSt3__15ctypeIwE10do_toupperEPwPKw","__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev","__ZNSt3__16vectorIcNS_9allocatorIcEEE10deallocateEv","__ZN5Avoid17ImproveHyperEdges37writeHyperEdgeSegmentsBackToConnPathsEv","__ZN5Avoid6Router11addJunctionEPNS_11JunctionRefE","__ZNKSt3__17codecvtIcc10_mbstate_tE13do_max_lengthEv","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_","__ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_7ConnRefE","__ZN5AvoidL16insideRectBoundsERKNS_5PointERKNSt3__14pairIS0_S0_EE","__ZN5Avoid4NodeD0Ev","__ZN5Avoid7ConnRef23generateCheckpointsPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE","__ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEEC2ERKS7_","__ZN5Avoid8Obstacle16addConnectionPinEPNS_18ShapeConnectionPinE","__ZN5Avoid18ShapeConnectionPinC2EPNS_11JunctionRefEjj","__ZNSt3__112system_errorD2Ev","__ZN5Avoid7EdgeInfD2Ev","__ZN5Avoid8EdgePair12setCurrAngleERKNS_9PointPairE","__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_13move_iteratorIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_","__ZNK5Avoid17HyperEdgeTreeEdge10zeroLengthEv","__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev","__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_","__ZNSt3__16locale5__impD1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS4_","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_SC_EEiEESF_RKT_","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi","__ZN5Avoid7VertInf15removeFromGraphEb","__ZNKSt3__17codecvtIcc10_mbstate_tE11do_encodingEv","__ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED1Ev","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE","__ZN5AvoidL4costEPNS_7ConnRefEdPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi","__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv","__ZN5Avoid12ShiftSegmentC2Ej","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_","__ZNSt3__18numpunctIcEC2Ej","__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC2ERKS5_","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE9push_backERKS2_","__ZNSt3__14pairIN5Avoid7ConnEndES2_ED2Ev","__ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED2Ev","__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev","__ZNSt3__14pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEED1Ev","__ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED1Ev","__ZNSt3__111__make_heapIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_","__ZN5Avoid10ActionInfoC1ENS_10ActionTypeEPNS_11JunctionRefE","__ZNSt3__14listIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED2Ev","__ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev","__ZNSt3__110__list_impIjNS_9allocatorIjEEE5clearEv","___cxx_global_var_init270","__ZN5Avoid21HyperEdgeShiftSegmentC2EPNS_17HyperEdgeTreeNodeES2_jb","__ZNSt3__14listINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev","__ZNSt3__112__snprintf_lEPcjPvPKcz","__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED1Ev","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE","__ZN5Avoid4NodeC1EPNS_7VertInfEd","__ZNSt3__18ios_baseD2Ev","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev","__ZNSt3__16vectorIbNS_9allocatorIbEEE8allocateEj","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSL_SL_","__ZN5Avoid6Blocks6insertEPNS_5BlockE","__ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC2EjjS9_","__ZN5Avoid6Router15deleteConnectorEPNS_7ConnRefE","__ZNSt3__16vectorIcNS_9allocatorIcEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_","__ZNSt3__112_GLOBAL__N_19decrementIlEET_RS2_","__ZNSt3__110moneypunctIwLb1EED1Ev","__ZN12_GLOBAL__N_114__libcpp_nmstrD1Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE5eraseENS_21__list_const_iteratorISA_PvEE","__ZN5Avoid6Router15modifyConnectorEPNS_7ConnRefEjRKNS_7ConnEndEb","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endEj","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSC_SC_","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc","__ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev","__ZNSt3__110__list_impIPPN5Avoid7VertInfENS_9allocatorIS4_EEED2Ev","__ZNK5Avoid6Router16routingParameterENS_16RoutingParameterE","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE","__ZN5Avoid8ObstacleD1Ev","__ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED2Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj","__ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEEC2Ej","__ZNSt3__110__list_impINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE5clearEv","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_","__ZN5Avoid5Block12splitBetweenEPNS_8VariableES2_RPS0_S4_","__ZN5Avoid23ConnRerouteFlagDelegateD1Ev","__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv","__ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev","__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev","__ZNSt3__15ctypeIcEC2EPKtbj","__ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED1Ev","__ZN5Avoid7VertInfD1Ev","__ZN5Avoid7PolygonaSERKS0_","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS7_","_init_bins","__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE10push_frontERKS3_","__ZNSt3__110__list_impIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE5clearEv","__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_","___cxx_global_array_dtor","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev","__ZN5Avoid7PolygonC2Ev","__ZN5Avoid7PolygonC2Ei","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEEC1ERKS7_","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_","__ZNSt3__111__stdoutbufIwED1Ev","__ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIDic10_mbstate_tEEiEERT_T0_","__ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE9push_backERKS3_","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_","__ZNK5Avoid21HyperEdgeShiftSegment12balanceCountEv","__ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE18__construct_at_endEj","_init_mparams","__ZNSt3__17codecvtIcc10_mbstate_tED0Ev","__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_","__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE","__ZN5Avoid5BlockD2Ev","__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC2EjjS6_","__ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9pop_frontEv","__ZN5Avoid18ShapeConnectionPinD2Ev","__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEEC1EjjS6_","__ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_11JunctionRefE","__ZNSt3__16localeC1ERKS0_","__ZN5Avoid7ConnRefD2Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNK5Avoid5Block14canFollowRightEPKNS_10ConstraintEPKNS_8VariableE","__ZNSt3__110__list_impIPN5Avoid7VertInfENS_9allocatorIS3_EEE5clearEv","__ZNK5Avoid6Blocks2atEj","__ZNK5Avoid18ShapeConnectionPin8positionERKNS_7PolygonE","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev","__ZN5Avoid11LineSegment40generateVisibilityEdgesFromBreakpointSetEPNS_6RouterEj","___cxx_global_var_init9277","__ZN5Avoid23improveOrthogonalRoutesEPNS_6RouterE","__ZNK5Avoid11VertInfList9connsSizeEv","__ZN5Avoid7PtOrderC2Ev","__ZN5Avoid17HyperEdgeTreeEdge20splitFromNodeAtPointEPNS_17HyperEdgeTreeNodeERKNS_5PointE","__ZNK5Avoid8ShapeRef8positionEv","__ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEEC2ERKS9_","__ZN5Avoid19NudgingShiftSegment9highPointEv","__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC2EjjS5_","__ZNSt12length_errorD0Ev","__ZNK5Avoid19NudgingShiftSegment9immovableEv","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm","__ZN5Avoid17HyperEdgeTreeEdge8addConnsEPNS_17HyperEdgeTreeNodeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEE","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6resizeEj","__ZNSt12length_errorD1Ev","__ZN5Avoid5BlockC2EPNS_6BlocksEPNS_8VariableE","__ZNSt3__110__stdinbufIcE9pbackfailEi","__ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEEC1ERKS7_","__ZNK5Avoid18ShapeConnectionPin10outputCodeEP7__sFILE","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE4findIS5_EENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEEiEERKT_","__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED2Ev","__ZN5Avoid17HyperEdgeTreeNodeC1Ev","__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZN5Avoid11VertInfList11shapesBeginEv","__ZNK5Avoid7ConnRef16endpointConnEndsEv","__ZN5Avoid11JunctionRef13makeRectangleEPNS_6RouterERKNS_5PointE","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","__ZN5Avoid5TimerC2Ev","__ZNSt3__14listIPN5Avoid10ClusterRefENS_9allocatorIS3_EEED1Ev","__ZNSt3__112_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_","__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED1Ev","__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv","__ZNSt3__112_GLOBAL__N_14makeINS_8numpunctIcEEiEERT_T0_","__ZN5Avoid5BlockC1EPNS_6BlocksEPNS_8VariableE","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS3_","__ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_","__ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED2Ev","__ZNK5Avoid7ConnEnd15isPinConnectionEv","__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNK5Avoid6VertID16isConnCheckpointEv","__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1INS_15__list_iteratorIS3_PvEEEET_SB_PNS_9enable_ifIXsr21__is_forward_iteratorISB_EE5valueEvE4typeE","__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEEC1EjjSA_","__ZNSt3__13mapIPN5Avoid11JunctionRefEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEED1Ev","__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_","__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev","__ZNSt3__16vectorINS_4listIN5Avoid7ConnEndENS_9allocatorIS3_EEEENS4_IS6_EEED1Ev","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev","__ZN5Avoid5EventC1ENS_9EventTypeEPNS_4NodeEd","__GLOBAL__I_a291","__ZNKSt3__17codecvtIDsc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9push_backERKS2_","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","___cxx_global_var_init30","___cxx_global_var_init32","___cxx_global_var_init33","___cxx_global_var_init34","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev","__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev","__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEED1Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE","_sys_trim","__ZNK5Avoid19NudgingShiftSegment4lowCEv","__ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEEC1ERKS4_","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEEC1ERKS2_","__ZNSt3__110__list_impINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE5clearEv","__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEEC1ERKS5_","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED1Ev","___cxx_global_var_init4276","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev","__ZN5Avoid22UnsatisfiableExceptionC1Ev","__ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEED1Ev","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_","__ZN5Avoid6Router21adjustContainsWithAddERKNS_7PolygonEi","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE","__ZNSt3__17codecvtIDsc10_mbstate_tED1Ev","__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv","__ZN5Avoid4Node15firstPointBelowEj","__ZNK5Avoid16PolygonInterface17offsetBoundingBoxEd","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_","__ZNSt3__110__list_impIPbNS_9allocatorIS1_EEE5clearEv","__ZNK5Avoid8Obstacle18attachedConnectorsEv","__ZNK5Avoid10CmpEdgeInfclEPKNS_7EdgeInfES3_","__ZNKSt3__17codecvtIDsc10_mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_","__ZNKSt3__15ctypeIcE8do_widenEc","__ZN5Avoid6Router29removeObjectFromQueuedActionsEPKv","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE18__construct_at_endINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZN5Avoid17HyperEdgeTreeEdge17writeEdgesToConnsEPNS_17HyperEdgeTreeNodeEj","__ZNKSt3__17codecvtIDic10_mbstate_tE9do_lengthERS1_PKcS5_j","__ZNSt3__111__tree_nextIPKNS_16__tree_node_baseIPvEEEET_S6_","__ZN5Avoid17ImproveHyperEdges40createShiftSegmentsForDimensionExcludingEPNS_17HyperEdgeTreeNodeEjPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_12ShiftSegmentENS5_9allocatorIS8_EEEE","__ZNSt3__16locale5__imp7installINS_7codecvtIDsc10_mbstate_tEEEEvPT_","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev","__ZN5Avoid15rotationalAngleERKNS_5PointE","__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri","__ZNSt3__117__push_heap_frontIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE","__ZNSt3__112_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj","__ZN5Avoid7EdgeInf12existingEdgeEPNS_7VertInfES2_","__ZNK5Avoid26PotentialSegmentConstraint11sepDistanceEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__insert_multiERKS3_","__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEE10push_frontERKS2_","__ZNK5Avoid26PotentialSegmentConstraint10stillValidEv","__ZN5Avoid7ConnEnd10disconnectEb","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE10push_frontERKS2_","__ZN5Avoid9IncSolver12mostViolatedERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEE","__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b","__ZN5Avoid17HyperEdgeTreeNodeD2Ev","__ZNSt3__16vectorINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED2Ev","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC2ERKSB_","__ZN5Avoid6Blocks7cleanupEv","__ZNKSt3__17codecvtIcc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv","__ZN5Avoid9IncSolverC2ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE","__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED1Ev","__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv","__ZNSt3__16vectorINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev","__ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEED1Ev","__ZN5Avoid11JunctionRefD2Ev","__ZN5Avoid7ConnEndD1Ev","__ZN5Avoid13delete_objectclINS_12ShiftSegmentEEEvPT_","__ZNSt13runtime_errorC2EPKc","__ZNKSt3__15ctypeIwE10do_toupperEw","__ZN5Avoid5ANodeC2Ev","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE10push_frontERKS9_","__ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_","__ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED1Ev","__ZN5Avoid6Blocks4costEv","__ZNK5Avoid21HyperEdgeShiftSegment12overlapsWithEPKNS_12ShiftSegmentEj","__ZN5Avoid27MinimumTerminalSpanningTree17orthogonalPartnerEPNS_7VertInfEd","__ZNSt3__16locale5__imp12make_classicEv","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_","__ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc","__ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEED2Ev","__ZNSt3__15ctypeIwED0Ev","__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE5clearEv","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEED2Ev","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZN5Avoid8ShapeRefD1Ev","_moveShapeRect","__ZN5Avoid18ConnectorCrossings15countForSegmentEjb","__ZN10__cxxabiv123__fundamental_type_infoD0Ev","__ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEj","__ZNSt3__119__iostream_categoryD0Ev","__ZNSt8bad_castC2Ev","__ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEE8allocateEj","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_","__ZNSt3__16locale5__impC1Ej","_connectShapes","__ZN5AvoidL11CrossLengthERKNS_5PointES2_","__ZNSt3__113__vector_baseINS_4pairIjN5Avoid5PointEEENS_9allocatorIS4_EEED2Ev","__ZNKSt3__18numpunctIcE16do_decimal_pointEv","__ZNK5Avoid10ActionInfo8junctionEv","__ZN5Avoid4Node18firstObstacleBelowEj","__ZNSt3__113__vector_baseIN5Avoid5PointENS_9allocatorIS2_EEED2Ev","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev","__ZSt15get_new_handlerv","__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEE10push_frontERKS3_","__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__18ios_base4InitD1Ev","__ZN5Avoid8VariableD1Ev","__ZNSt3__114error_categoryD0Ev","__ZNKSt3__16locale5__imp9use_facetEl","__ZN5Avoid17HyperEdgeTreeNode14disconnectEdgeEPNS_17HyperEdgeTreeEdgeE","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb","__ZN5Avoid7VertInf20setVisibleDirectionsEj","__ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE","__ZN5Avoid7VertInf5ResetERKNS_5PointE","__ZN5Avoid22UnsatisfiableExceptionD2Ev","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE4findIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_","__ZN5Avoid21HyperEdgeShiftSegmentD1Ev","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE8__appendEj","__ZNSt3__16locale5__imp7installINS_7codecvtIDic10_mbstate_tEEEEvPT_","__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji","__ZN5Avoid9PointPairC2ERKNS_5PointEPNS_7VertInfE","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEE18__construct_at_endIPS4_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZN5Avoid17ImproveHyperEdgesC1EPNS_6RouterE","__ZN5Avoid34buildConnectorRouteCheckpointCacheEPNS_6RouterE","__ZN5Avoid5Block4costEv","__ZN5Avoid8EdgeList7addEdgeEPNS_7EdgeInfE","__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","___cxx_global_var_init24","___cxx_global_var_init29","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endINS_11__wrap_iterIPKjEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZNSt3__113__vector_baseINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED2Ev","___cxx_global_var_init22","___cxx_global_var_init21","___cxx_global_var_init20","__ZNSt3__110__list_impINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED2Ev","___cxx_global_var_init25","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj","__ZN5Avoid17HyperEdgeTreeNode24removeOtherJunctionsFromEPNS_17HyperEdgeTreeEdgeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE","__ZN5Avoid8Obstacle22computeVisibilityNaiveEv","__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SD_SC_SC_RKT1_Rjb","__ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE18__construct_at_endEj","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED1Ev","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC1ERKS6_","__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE","__ZNK5Avoid8Obstacle17possiblePinPointsEj","__ZNKSt3__17collateIwE7do_hashEPKwS3_","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","___cxx_global_array_dtor147","__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZN5Avoid4NodeD1Ev","__ZN5AvoidL30buildOrthogonalNudgingSegmentsEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev","_init_top","__ZN5Avoid16vertexVisibilityEPNS_7VertInfES1_bb","__ZN5Avoid17HyperEdgeTreeNode17writeEdgesToConnsEPNS_17HyperEdgeTreeEdgeEj","___cxx_global_var_init10278","__ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIDsc10_mbstate_tEEiEERT_T0_","__ZN5Avoid16PolygonInterfaceD0Ev","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci","__ZNKSt3__17codecvtIDic10_mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEEC1Ej","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_","__ZNKSt3__17codecvtIDic10_mbstate_tE13do_max_lengthEv","__ZN5AvoidL17unitNormalForEdgeERKNS_5PointES2_","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC1ERKS9_","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_","__ZNK5Avoid11LineSegment8overlapsERKS0_","__ZNKSt3__120__time_get_c_storageIwE8__monthsEv","__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_","__ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_","__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d182","__ZN5Avoid9IncSolverD1Ev","__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED2Ev","__ZNSt3__16vectorIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED1Ev","__ZNSt3__18ios_base4InitC1Ev","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_","__ZN10__cxxabiv117__class_type_infoD0Ev","__ZNK5Avoid10ActionInfoeqERKS0_","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","__ZNKSt3__18numpunctIwE11do_truenameEv","__ZN5Avoid17ImproveHyperEdgesC2EPNS_6RouterE","__ZN5Avoid7ConnEndC1ERKNS_5PointE","__ZNSt3__110__stdinbufIwE9underflowEv","__ZNK5Avoid6VertID15isOrthShapeEdgeEv","__ZNK5Avoid5Block13canFollowLeftEPKNS_10ConstraintEPKNS_8VariableE","___cxx_global_var_init3275","__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i","__ZNSt3__110moneypunctIwLb1EED0Ev","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED1Ev","__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED2Ev","__ZNK5Avoid7ConnRef6routerEv","__ZNK5Avoid21HyperEdgeShiftSegment7settledEv","__ZNK10__cxxabiv116__shim_type_info5noop2Ev","__ZN5Avoid7ConnRef8routeRefEv","__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE","__ZN5Avoid7EdgeInfC2EPNS_7VertInfES2_b","__ZN5AvoidL17connsKnownToCrossERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC2ERKS6_","__ZNSt3__14pairIjN5Avoid7ConnEndEED2Ev","__ZNSt3__111__stdoutbufIcED1Ev","__ZN5Avoid17HyperEdgeTreeEdge14disconnectEdgeEv","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEED2Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNK5Avoid7EdgeInf10isDisabledEv","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEED2Ev","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_","__ZNK5Avoid6Blocks4sizeEv","__ZNSt3__16localeD2Ev","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEED2Ev","__ZNSt3__18ios_base7failureD1Ev","__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE","__ZN5AvoidL31buildOrthogonalNudgingOrderInfoEPNS_6RouterERNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEE","__ZN5Avoid6Router19modifyConnectionPinEPNS_18ShapeConnectionPinE","__ZNK5Avoid7ConnRef5routeEv","__ZNSt3__16vectorIiNS_9allocatorIiEEEC1Ej","__ZN5Avoid17HyperedgeRerouter19findAttachedObjectsEjPNS_11JunctionRefEPNS_7ConnRefERNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE","__ZN5Avoid7ConnEndC1Ev","__ZNSt3__110moneypunctIcLb0EED0Ev","__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNK5Avoid8EdgeList4sizeEv","__ZN5Avoid19NudgingShiftSegmentC2EPNS_7ConnRefEjjj","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE12__move_rangeEPS2_S6_S6_","__ZNSt3__14listIPPN5Avoid7VertInfENS_9allocatorIS4_EEED2Ev","__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv","__ZN5Avoid6Router20checkAllMissingEdgesEv","__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEEC1EjjS7_","__ZN5Avoid13PositionStats11addVariableEPNS_8VariableE","__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe","__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEED1Ev","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_","__ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe","__ZSt13get_terminatev","__ZN5Avoid10PosVertInfC2EdPNS_7VertInfEj","__ZNK5Avoid19NudgingShiftSegment10fixedOrderERb","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED2Ev","__ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZN5Avoid19NudgingShiftSegment8lowPointEv","___cxx_global_var_init14","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv","__ZN5Avoid27MinimumTerminalSpanningTree28realVerticesCountingPartnersEPNS_7EdgeInfE","___cxx_global_var_init13","___cxx_global_var_init10","___cxx_global_var_init11","__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEE9push_backERKS5_","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SA_EEiEESD_RKT_","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZNK5Avoid7ConnRef18routingCheckpointsEv","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueES9_E4typeENS7_IPKS2_EESB_SB_","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE6insertINS_21__list_const_iteratorIS3_PvEEEENS_15__list_iteratorIS3_S9_EESA_T_SD_PNS_9enable_ifIXsr19__is_input_iteratorISD_EE5valueEvE4typeE","__ZNSt3__110__list_impIjNS_9allocatorIjEEED2Ev","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev","__ZN5AvoidL13estimatedCostEPNS_7ConnRefEPKNS_5PointERS3_S5_","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__112__do_messageD0Ev","___cxx_global_array_dtor132","__ZNKSt3__17codecvtIwc10_mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_","__ZN5Avoid6VertIDaSERKS0_","__ZNSt3__16vectorIbNS_9allocatorIbEEED2Ev","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEEC1Ej","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd","__ZNSt3__18ios_base16__call_callbacksENS0_5eventE","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev","__ZN5Avoid18SegmentListWrapperD1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev","_createRouter","__ZN10__cxxabiv121__vmi_class_type_infoD0Ev","__ZNSt3__16vectorIcNS_9allocatorIcEEE6assignIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_","__ZN5Avoid8EdgeListD1Ev","__ZN5AvoidL12angleBetweenERKNS_5PointES2_S2_","__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE","__ZNSt3__110__list_impIN5Avoid7ConnEndENS_9allocatorIS2_EEE5clearEv","__ZNSt3__13setIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZN5Avoid8Obstacle15removeFromGraphEv","__ZNKSt3__114error_category23default_error_conditionEi","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEEEEvT_SH_","__ZN5Avoid4NodeC2EPNS_8ObstacleEd","__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEED2Ev","__ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEE16__construct_nodeERSD_","__ZNSt3__120__time_get_c_storageIwEC2Ev","__ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE","__ZN5Avoid16segmentIntersectERKNS_5PointES2_S2_S2_","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE","__ZN5Avoid7ConnEnd13freeActivePinEv","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZN5Avoid3BoxC1Ev","__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_","__ZN5Avoid11JunctionRef22setRecommendedPositionERKNS_5PointE","__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEEC1ERKS7_","__ZN5Avoid22UnsatisfiableExceptionC2ERKS0_","__ZN5Avoid7EdgeInf7addConnEPb","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_","__ZN5Avoid7ConnEnd21assignPinVisibilityToEPNS_7VertInfES2_","__ZNK5Avoid21HyperEdgeShiftSegment9highPointEv","__ZNSt3__13setIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_","__ZNSt3__14pairIN5Avoid5PointENS1_7PtOrderEED2Ev","__ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS9_RSA_EE","__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC2EjjS6_","__ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEED2Ev","__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv","__ZNSt3__17__sort4IRN5Avoid10CmpIndexesEPjEEjT0_S5_S5_S5_T_","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueENS_21__tree_const_iteratorIjPKNS_11__tree_nodeIjPvEEiEERKj","__ZN5Avoid17HyperEdgeTreeNode26listJunctionsAndConnectorsEPNS_17HyperEdgeTreeEdgeERNSt3__14listIPNS_11JunctionRefENS3_9allocatorIS6_EEEERNS4_IPNS_7ConnRefENS7_ISC_EEEE","__ZNSt3__110__list_impINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEED2Ev","__ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEED2Ev","__ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEED1Ev","__ZN5Avoid27MinimumTerminalSpanningTreeC1EPNS_6RouterENSt3__13setIPNS_7VertInfENS3_4lessIS6_EENS3_9allocatorIS6_EEEEPNS3_3mapIPNS_11JunctionRefEPNS_17HyperEdgeTreeNodeENS7_ISE_EENS9_INS3_4pairIKSE_SG_EEEEEE","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev","__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_","__ZNSt3__113__vector_baseINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED2Ev","__ZN5Avoid11LineSegmentD1Ev","__ZNSt3__18messagesIcED0Ev","__ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC1ERKSD_","__ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE8__appendEj","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE","__ZN5Avoid9IncSolverC1ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEERKNS2_IPNS_10ConstraintENS5_ISB_EEEE","__ZNSt3__15dequeIjNS_9allocatorIjEEE9pop_frontEv","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED1Ev","__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw","__ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEE6__sortINS1_18CmpVisEdgeRotationEEENS_15__list_iteratorIS3_PvEESB_SB_jRT_","__ZN5Avoid8EdgeList5beginEv","__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEED1Ev","__ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEED2Ev","__ZNSt3__113__vector_baseIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev","__ZNSt3__112_GLOBAL__N_17releaseclEPNS_6locale5facetE","__ZN5Avoid7ConnRef14updateEndPointEjRKNS_7ConnEndE","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEEC2EjjS6_","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc","__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEED1Ev","__ZN5Avoid7ConnEndC2ERKNS_5PointEj","__ZNSt3__15ctypeIcEC1EPKtbj","__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS4_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE","__ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEEixERSD_","__ZN5Avoid5PointC1Ev","__ZNK5Avoid9PointPairltERKS0_","__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC2EjjS6_","__ZNKSt3__120__time_get_c_storageIcE3__cEv","__ZN5Avoid21segmentShapeIntersectERKNS_5PointES2_S2_S2_Rb","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__16vectorIPN5Avoid8VariableENS_9allocatorIS3_EEED1Ev","__ZNSt3__127__insertion_sort_incompleteIRN5Avoid10CmpIndexesEPjEEbT0_S5_T_","__ZN5Avoid6BlocksC1ERKNSt3__16vectorIPNS_8VariableENS1_9allocatorIS4_EEEE","__ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_8VariableE","__ZNSt3__13setIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEED1Ev","__ZNK5Avoid7VertInf8treeRootEv","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEEC2ERKS6_","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi","__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNSt3__13mapIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEENS_4lessIS3_EENS7_INS_4pairIKS3_S9_EEEEED1Ev","__ZNSt3__111__stdoutbufIwE8overflowEj","__ZNKSt3__17codecvtIDsc10_mbstate_tE11do_encodingEv","__ZN5AvoidL25addCrossingConnsToSetListERNSt3__14listINS0_3setINS0_4pairIdPNS_7ConnRefEEENS_14CmpConnCostRefENS0_9allocatorIS6_EEEENS8_ISA_EEEES6_S6_","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev","__ZNSt3__16vectorIcNS_9allocatorIcEEED1Ev","__ZN5Avoid21HyperEdgeShiftSegment10mergesWithEPS0_","__ZN5Avoid27MinimumTerminalSpanningTreeD1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEEC1EjjS6_","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNSt3__18messagesIwED1Ev","__ZNSt3__113__vector_baseIPN5Avoid10ConstraintENS_9allocatorIS3_EEED2Ev","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEEC2ERKS6_","__ZNK5Avoid10ActionInfo4connEv","__ZNSt3__16__treeIN5Avoid10PosVertInfENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE","__ZN5Avoid22TopologyAddonInterfaceD1Ev","__ZN5Avoid9RectangleC2ERKNS_5PointES3_","__ZN5Avoid6RouterD0Ev","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEES8_","__ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEED1Ev","__ZNSt3__14pairIPN5Avoid11JunctionRefENS_4listIPNS1_12ShiftSegmentENS_9allocatorIS6_EEEEED1Ev","__ZNSt3__114priority_queueIPN5Avoid10ConstraintENS_6vectorIS3_NS_9allocatorIS3_EEEENS1_18CompareConstraintsEED2Ev","__ZNKSt3__17codecvtIDsc10_mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_","__ZNSt3__15ctypeIwED1Ev","_segment_holding","__ZNSt3__16vectorINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEED1Ev","__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEED1Ev","__ZNSt3__15dequeIjNS_9allocatorIjEEED2Ev","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv","__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE","__ZNSt3__13setIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZN5Avoid13PositionStatsC2Ev","__ZN5Avoid17HyperedgeRerouterC1Ev","__ZN5Avoid23ConnRerouteFlagDelegateC2Ev","__ZN5Avoid7VertInf18setTreeRootPointerEPPS0_","__ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEE8allocateEj","__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZN5Avoid8Obstacle10makeActiveEv","__ZN5Avoid11VertInfListC1Ev","__ZNSt3__119__iostream_categoryC1Ev","__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE15__insert_uniqueERKj","__ZN5Avoid7VertInfC2EPNS_6RouterERKNS_6VertIDERKNS_5PointEb","__ZN5Avoid6RouterC1Ej","__ZNSt3__13setIjNS_4lessIjEENS_9allocatorIjEEED2Ev","__ZN5Avoid11LineSegment15addSegmentsUpToEd","__ZN5Avoid17HyperEdgeTreeEdge17deleteNodesExceptEPNS_17HyperEdgeTreeNodeE","__ZN5Avoid5Block12compute_dfdvEPNS_8VariableES2_RPNS_10ConstraintE","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc","__ZNSt3__1L12init_wmonthsEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE10push_frontERKS4_","__ZNK5Avoid5Block27isActiveDirectedPathBetweenEPKNS_8VariableES3_","__ZNK5Avoid5PointixEj","__ZNKSt3__15ctypeIcE10do_toupperEc","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEEC1EjjS6_","__ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE9push_backERKS2_","__ZNK5Avoid13CmpConnPinPtrclEPKNS_18ShapeConnectionPinES3_","__ZNSt3__13setIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZNSt3__16locale2id6__initEv","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEEC1ERKS4_","__ZNK5Avoid13CmpNodesInDimclEPKNS_17HyperEdgeTreeNodeES3_","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv","__ZNSt3__110__stdinbufIwED0Ev","__ZN5Avoid18ShapeConnectionPinC2EPNS_8ShapeRefEjdddj","__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI10_mbstate_tEEj","__ZNSt11logic_errorD0Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE8__detachEPNS_11__tree_nodeIS3_PvEE","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNSt13runtime_errorD1Ev","__ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEED1Ev","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc","__ZNSt3__111__stdoutbufIwEC1EP7__sFILE","__ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev","__ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev","__ZN5Avoid7ConnRef20generateStandardPathERNSt3__16vectorINS_5PointENS1_9allocatorIS3_EEEERNS2_IPNS_7VertInfENS4_IS9_EEEE","__ZNSt3__13setIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED2Ev","___cxx_global_var_init2272","__ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_8ShapeRefE","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_","__ZN5Avoid13inValidRegionEbRKNS_5PointES2_S2_S2_","__ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEED1Ev","__ZNK5Avoid22TopologyAddonInterface18outputDeletionCodeEP7__sFILE","__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_","__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEEC2EjjS4_","__ZNK5Avoid19NudgingShiftSegment8lowPointEv","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc","__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv","__ZNSt3__18numpunctIwEC2Ej","__ZN12_GLOBAL__N_114__libcpp_nmstrC2EPKc","__ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEED1Ev","__ZN5AvoidL6vecDirERKNS_5PointES2_S2_d272","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEED2Ev","__ZNSt3__1L11init_wam_pmEv","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNSt3__112_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_","__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv","__ZNSt3__13setIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","___cxx_global_var_init4999","__ZNSt3__16locale5facetD0Ev","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EEPS3_","__ZNSt3__16vectorIN5Avoid7PolygonENS_9allocatorIS2_EEE8allocateEj","__ZN5Avoid18ShapeConnectionPin14updatePositionERKNS_5PointE","__ZNKSt3__112__do_message7messageEi","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZNKSt3__17codecvtIwc10_mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_","__ZNSt3__110__list_impINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE5clearEv","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl","__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev","__ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEED1Ev","__ZN5Avoid7ConnEnd12usePinVertexEPNS_7VertInfE","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd","__ZNKSt3__17codecvtIwc10_mbstate_tE11do_encodingEv","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb","__ZN5Avoid32generateStaticOrthogonalVisGraphEPNS_6RouterE","__ZNSt3__111__make_heapIRN5Avoid14HeapCmpVertInfENS_11__wrap_iterIPPNS1_7VertInfEEEEEvT0_S9_T_","__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i","__ZN5Avoid4Node27findFirstPointAboveAndBelowEjdRdS1_S1_S1_","__ZN5Avoid8EdgeListC2Eb","__ZN5Avoid6VertIDppEi","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE14__erase_uniqueIjEEjRKT_","__ZN5Avoid10ActionInfoC2ENS_10ActionTypeEPNS_18ShapeConnectionPinE","__ZN5Avoid10ConstraintC1EPNS_8VariableES2_db","__ZNKSt3__17codecvtIwc10_mbstate_tE9do_lengthERS1_PKcS5_j","__ZN5Avoid17HyperEdgeTreeNode8addConnsEPNS_17HyperEdgeTreeEdgeEPNS_6RouterERNSt3__14listIPNS_7ConnRefENS5_9allocatorIS8_EEEES8_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__18numpunctIcEC1Ej","__ZNKSt3__120__time_get_c_storageIwE7__weeksEv","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEEC1ERKSF_","__ZN5Avoid10ActionInfoD1Ev","__ZNSt3__110__sscanf_lEPKcPvS1_z","__ZNSt3__112_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiEERT_T0_","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC1EjjS6_","__ZN5Avoid6RouterC2Ej","__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEED1Ev","__ZNKSt3__15ctypeIwE8do_widenEc","__ZNSt3__18numpunctIcED1Ev","__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_","__ZNSt3__16vectorIjNS_9allocatorIjEEE12__move_rangeEPjS4_S4_","__ZN5Avoid17HyperedgeRerouterD2Ev","__ZNK5Avoid7Polygon4sizeEv","__ZNSt3__16locale5__imp11make_globalEv","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv","__ZN5Avoid6BlocksD2Ev","__ZNSt3__110__list_impIN5Avoid10ActionInfoENS_9allocatorIS2_EEE5clearEv","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE","__ZN5Avoid7PolygonC2ERKS0_","__ZNSt3__114__split_bufferIN5Avoid5ANodeERNS_9allocatorIS2_EEEC1EjjS5_","__ZNK5Avoid7EdgeInf3idsEv","_malloc","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEE18__construct_at_endEj","__ZN5AvoidL15midVertexNumberERKNS_5PointES2_S2_","__ZNSt3__1L11init_monthsEv","__ZNSt3__112_GLOBAL__N_14makeINS_8messagesIcEEiEERT_T0_","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS5_","__ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEED1Ev","__ZN5Avoid17HyperEdgeTreeEdgeC1EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE","__ZNK5Avoid17HyperEdgeTreeEdge10followFromEPNS_17HyperEdgeTreeNodeE","__ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_","__ZNSt3__16locale5__impD2Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEEC1EjjS5_","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEE10push_frontERKS3_","__ZN5Avoid7PtOrderD2Ev","__ZN5Avoid7PolygonC1ERKS0_","__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv","__ZN5Avoid4Node22markShiftSegmentsAboveEj","__ZN5Avoid11LineSegmentC2ERKdS2_PNS_7VertInfE","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZN5Avoid5Timer4StopEv","__ZN5Avoid13PositionStatsC1Ev","__ZN5Avoid18SegmentListWrapperC2Ev","__ZN5Avoid6Router25setStaticGraphInvalidatedEb","__ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__110__stdinbufIwEC2EP7__sFILE","__ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev","__ZN5Avoid8EdgePair16setNegativeAngleEv","__ZN5Avoid23ConnRerouteFlagDelegate10removeConnEPNS_7ConnRefE","__ZNKSt3__120__time_get_c_storageIwE3__xEv","__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv","__ZNSt3__110__stdinbufIwE9pbackfailEj","__ZN5Avoid7EdgeInf12firstBlockerEv","__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEED1Ev","__ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED1Ev","__ZNSt3__110__stdinbufIcEC1EP7__sFILE","__ZN5Avoid7PtOrder4sortEj","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEEC1EjjSB_","__ZNSt3__114__num_put_base12__format_intEPcPKcbj","__ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc","__ZNSt3__120__time_get_c_storageIcEC2Ev","__ZN5Avoid7ConnRef10freeRoutesEv","__ZNSt3__14listINS_4pairIjN5Avoid7ConnEndEEENS_9allocatorIS4_EEE9push_backERKS4_","__ZNSt3__114__fill_n_falseINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0EEENS6_9size_typeE","__ZN5AvoidL24posInlineWithConnEndSegsEdjRKNS_7PolygonES2_","__ZNSt3__16vectorIN5Avoid5ANodeENS_9allocatorIS2_EEED1Ev","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZN5Avoid9PointPairC1ERKNS_5PointEPNS_7VertInfE","__ZN5Avoid11JunctionRef17moveAttachedConnsERKNS_5PointE","__ZNSt3__14listIN5Avoid10ActionInfoENS_9allocatorIS2_EEE6__sortINS_6__lessIS2_S2_EEEENS_15__list_iteratorIS2_PvEESB_SB_jRT_","__ZN5Avoid4Node22markShiftSegmentsBelowEj","__ZN5Avoid17ImproveHyperEdges22nudgeHyperEdgeSegmentsEjRj","__ZNSt3__16vectorIbNS_9allocatorIbEEE6assignEjRKb","__ZN5Avoid11VertInfList10connsBeginEv","__ZN5Avoid9RectangleD1Ev","__ZN5Avoid18ConnectorCrossings5clearEv","__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv","__ZNK5Avoid7ConnEnd8junctionEv","__ZNSt3__13setINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEED2Ev","__ZNSt3__15ctypeIcED1Ev","__ZNSt3__110moneypunctIcLb0EED1Ev","__ZN5Avoid10ActionInfo16addConnEndUpdateEjRKNS_7ConnEndEb","__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE","__ZN5Avoid13CmpNodesInDimC2Ej","__ZdaPv","__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv","__ZN5Avoid6RouterD1Ev","__ZNK5Avoid6VertID8isConnPtEv","__ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE6resizeEj","_free","__ZN5Avoid9IncSolver10moveBlocksEv","__ZNKSt3__17codecvtIDic10_mbstate_tE16do_always_noconvEv","__ZN5Avoid8Obstacle22removeFollowingConnEndEPNS_7ConnEndE","__ZNK5Avoid7ConnEnd12endpointTypeEv","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__110moneypunctIcLb1EED1Ev","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEE18__construct_at_endINS_13move_iteratorIPS9_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESI_SI_","__ZNSt3__16vectorINS0_IbNS_9allocatorIbEEEENS1_IS3_EEEC1Ej","__ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEE9pop_frontEv","__ZN5Avoid7ConnRefC2EPNS_6RouterERKNS_7ConnEndES5_j","__ZNK5Avoid8Obstacle8isActiveEv","__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_","__ZNKSt3__120__time_get_c_storageIcE3__xEv","_tmalloc_large","__ZNKSt3__17codecvtIDsc10_mbstate_tE16do_always_noconvEv","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED1Ev","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_","__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi","__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__construct_nodeERSA_","__ZNSt3__16vectorIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC2INS_15__list_iteratorIS3_PvEEEET_SB_PNS_9enable_ifIXsr21__is_forward_iteratorISB_EE5valueEvE4typeE","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj","__ZNSt3__15dequeIjNS_9allocatorIjEEE9push_backERKj","_prepend_alloc","__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SD_SC_SC_RKT1_Rjb","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__113__vector_baseIPN5Avoid7ConnRefENS_9allocatorIS3_EEED2Ev","__ZN5Avoid8ShapeRefD0Ev","__ZNSt3__16__treeIPN5Avoid18ShapeConnectionPinENS1_13CmpConnPinPtrENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__114__split_bufferIPN5Avoid7EdgeInfERNS_9allocatorIS3_EEED1Ev","__ZN5Avoid7EdgeInf7setDistEd","__ZN5Avoid17HyperEdgeTreeNodeC2Ev","__ZNSt3__14listIN5Avoid8EdgePairENS_9allocatorIS2_EEE6removeERKS2_","__ZN5Avoid6Router16improveCrossingsEv","__ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEE6insertENS_21__list_const_iteratorIS3_PvEERKS3_","__ZN5Avoid19NudgingShiftSegmentD1Ev","__ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED2Ev","__ZNKSt11logic_error4whatEv","__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_","__ZNSt3__112__do_messageD1Ev","__ZN5Avoid17rayIntersectPointERKNS_5PointES2_S2_S2_PdS3_","__ZNSt3__111__stdoutbufIwE4syncEv","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc","__ZN5Avoid7ConnRef5startEv","__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SE_SE_","___dynamic_cast","__ZNSt3__17codecvtIwc10_mbstate_tEC2Ej","__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev","__ZNK5Avoid8Obstacle2idEv","__ZNK5Avoid18ShapeConnectionPin18containingObjectIdEv","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE","__ZN10__cxxabiv121__vmi_class_type_infoD1Ev","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEEC1ERKSB_","___cxx_global_var_init151069","__ZNSt3__16vectorIPN5Avoid11JunctionRefENS_9allocatorIS3_EEED2Ev","__ZN5Avoid18CmpVisEdgeRotationC1EPKNS_7VertInfE","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZNK5Avoid11JunctionRef8positionEv","__ZNSt3__110__list_impIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5clearEv","__ZNSt3__18ios_baseD0Ev","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEiEERT_T0_","__ZNSt3__110__list_impIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev","__ZN10__cxxabiv123__fundamental_type_infoD1Ev","__ZN5Avoid17ImproveHyperEdgesD1Ev","__ZNSt3__13setIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEED2Ev","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEE18__construct_at_endEj","__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_","__ZNSt3__110__list_impIPbNS_9allocatorIS1_EEED2Ev","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEaSERKS5_","__ZNSt3__113__vector_baseIPN5Avoid5BlockENS_9allocatorIS3_EEED2Ev","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv","__ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEE9push_backERKS3_","__ZNSt3__16__treeINS_4pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_19__map_value_compareIS3_S9_NS5_IS3_EELb1EEENS7_ISA_EEEC2ERKSD_","__ZNSt3__112system_errorC2ENS_10error_codeEPKc","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeERKS3_","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_SD_SD_","__ZNSt3__111__stdoutbufIcE8overflowEi","__ZNK5Avoid22TopologyAddonInterface10outputCodeEP7__sFILE","__ZN5Avoid22TopologyAddonInterfaceC1Ev","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEEC1ERKS6_","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_","__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji","__ZNSt3__14listINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED1Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev","__ZN5Avoid5Block18populateSplitBlockEPS0_PNS_8VariableEPKS2_","__ZNK5Avoid7ConnEnd17possiblePinPointsEv","__ZN5Avoid11pointOnLineERKNS_5PointES2_S2_d","__ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE5eraseENS_21__list_const_iteratorIS2_PvEE","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci","__ZNSt3__114__split_bufferINS_6vectorIN5Avoid5PointENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev","__ZN5Avoid6Router16newBlockingShapeERKNS_7PolygonEi","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE","__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv","__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc","__ZN5Avoid4Node15firstPointAboveEj","__ZNSt3__17codecvtIDsc10_mbstate_tED0Ev","__ZNSt3__16__treeIPN5Avoid7ConnRefENS_4lessIS3_EENS_9allocatorIS3_EEED1Ev","__ZN5Avoid11LineSegment33addEdgeHorizontalTillIntersectionEPNS_6RouterERS0_","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC2ERKS8_","__ZNSt3__114__split_bufferIN5Avoid5PointERNS_9allocatorIS2_EEE18__construct_at_endEj","__ZN5Avoid9IncSolver11splitBlocksEv","__GLOBAL__I_a1000","__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev","__ZNK5Avoid6VertIDltERKS0_","__ZN5Avoid4NodeC2EPNS_7VertInfEd","__ZN5Avoid6Router9moveShapeEPNS_8ShapeRefEdd","__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE","__ZN5Avoid10err_printfEPKcz","__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv","__ZN5Avoid6Router28rerouteAndCallbackConnectorsEv","__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc","__ZNSt3__110__list_impIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEED2Ev","__ZNK5Avoid7EdgeInf7blockerEv","__ZNK5Avoid6Router11newObjectIdEv","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEEC2EjjS9_","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEEC2ERKSF_","__ZN5Avoid18ConnectorCrossingsC1ERNS_7PolygonEbS2_PNS_7ConnRefES4_","__ZNSt9bad_allocC1Ev","__ZNSt3__114__split_bufferIPN5Avoid7VertInfERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZN5Avoid6Router26regenerateStaticBuiltGraphEv","__ZN5AvoidlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_10ConstraintE","__ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEE18__construct_at_endEj","__ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_16__tree_node_baseIPvEERS9_S9_","__ZN5Avoid5Timer5ResetEv","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZN5Avoid11LineSegmentC2ERKS0_","__ZNSt3__111__tree_prevIPKNS_16__tree_node_baseIPvEEEET_S6_","__ZN5Avoid5ANodeC1Ev","__ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev","__ZNSt3__17codecvtIDic10_mbstate_tED0Ev","__ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS8_","__ZNSt3__16__sortIRN5Avoid10CmpIndexesEPjEEvT0_S5_T_","__ZNSt3__14listINS_4pairIPN5Avoid7ConnRefEbEENS_9allocatorIS5_EEED2Ev","__ZNSt3__14listIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev","__ZNSt3__14listIPN5Avoid7VertInfENS_9allocatorIS3_EEE9push_backERKS3_","__ZN5Avoid5Block16findMinLMBetweenEPNS_8VariableES2_","__ZNSt3__114__split_bufferINS_4pairIjN5Avoid5PointEEERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_","__ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEiEERT_T0_","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEED2Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS8_","__ZN5Avoid11VertInfList14getVertexByPosERKNS_5PointE","__ZNK5Avoid14HeapCmpVertInfclEPKNS_7VertInfES3_","__ZN5Avoid15isBoundingShapeC2ERNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw","__ZN5AvoidL6segDirERKNS_5PointES2_","__ZNSt3__14listINS_4pairIdPN5Avoid7ConnRefEEENS_9allocatorIS5_EEEC2INS_21__tree_const_iteratorIS5_PKNS_11__tree_nodeIS5_PvEEiEEEET_SH_PNS_9enable_ifIXsr19__is_input_iteratorISH_EE5valueEvE4typeE","__ZN5Avoid7ConnEndD2Ev","__ZN5Avoid5Block5mergeEPS0_PNS_10ConstraintEd","__ZNK5Avoid5Block20getActivePathBetweenERNSt3__16vectorIPNS_10ConstraintENS1_9allocatorIS4_EEEEPKNS_8VariableESB_SB_","__ZNSt3__13setIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_","__ZN5AvoidL20constructPolygonPathERNS_7PolygonEPNS_7VertInfES3_RNSt3__16vectorINS_5ANodeENS4_9allocatorIS6_EEEEi","__ZN5Avoid8EdgePairC2ERKNS_9PointPairEPNS_7VertInfE","__ZNSt3__112_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_","__ZNSt3__117__widen_from_utf8ILj32EED1Ev","__ZNSt3__15queueIjNS_5dequeIjNS_9allocatorIjEEEEED1Ev","__ZNSt3__112__do_nothingEPv","__ZNK5Avoid21HyperEdgeShiftSegment8lowPointEv","___cxx_global_array_dtor83","___cxx_global_array_dtor80","__ZNSt3__16vectorIcNS_9allocatorIcEEE8allocateEj","__ZN5Avoid7EdgeInfC1EPNS_7VertInfES2_b","__ZN5Avoid17ImproveHyperEdges22buildHyperEdgeSegmentsEj","__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv","__ZNKSt3__18numpunctIwE12do_falsenameEv","__ZN5Avoid11LineSegment13mergeVertInfsERKS0_","__ZN5Avoid18ShapeConnectionPinD1Ev","__ZNK5Avoid19NudgingShiftSegment15shouldAlignWithEPKNS_12ShiftSegmentEj","__ZNSt3__111__stdoutbufIcED0Ev","__ZN5Avoid7PolygonC2ERKNS_16PolygonInterfaceE","__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev","__ZN5Avoid5Block22updateWeightedPositionEv","__ZN5Avoid7PolygonC1Ev","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEED2Ev","__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_","__ZNKSt3__17codecvtIcc10_mbstate_tE9do_lengthERS1_PKcS5_j","__ZNK5Avoid7Polygon2idEv","__ZNSt3__16localeC2Ev","__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEED1Ev","__ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZNSt3__13mapIPN5Avoid7VertInfEPNS1_17HyperEdgeTreeNodeENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEED1Ev","__ZN5Avoid22splitBranchingSegmentsERNS_7PolygonEbS1_d","__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEEC2ERKS9_","__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEERKS3_","__ZNSt3__14listIN5Avoid7ConnEndENS_9allocatorIS2_EEED1Ev","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_","__ZNKSt3__120__time_get_c_storageIcE8__monthsEv","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_","__ZNK5Avoid11JunctionRef13positionFixedEv","__ZNSt3__16vectorIN5Avoid10CheckpointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt8bad_cast4whatEv","__ZNSt3__18numpunctIwED0Ev","__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev","__ZNSt3__16vectorIPN5Avoid7VertInfENS_9allocatorIS3_EEEC2ERKS6_","__ZNKSt3__112_GLOBAL__N_111__fake_bindclEv","__ZNSt3__16vectorIcNS_9allocatorIcEEEC2ERKS3_","__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev","__ZNKSt3__15ctypeIwE10do_tolowerEw","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEE6assignINS_21__list_const_iteratorIS3_PvEEEEvT_SB_PNS_9enable_ifIXsr19__is_input_iteratorISB_EE5valueEvE4typeE","__ZNSt3__14listIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev","__ZNSt3__13setIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEED1Ev","__ZN5Avoid13delete_objectclINS_8VariableEEEvPT_","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE9push_backERKS3_","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE10deallocateEv","__ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EEENS5_IS6_XT0_EEES8_S7_","__ZN5Avoid11LineSegmentC1ERKdS2_PNS_7VertInfE","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE8allocateEj","__ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_","__ZN5Avoid11JunctionRefC1EPNS_6RouterENS_5PointEj","__ZNSt3__112_GLOBAL__N_14makeINS_8numpunctIwEEiEERT_T0_","__ZNSt3__114__split_bufferIPN5Avoid5BlockERNS_9allocatorIS3_EEE18__construct_at_endEj","__ZNSt3__110__stdinbufIwED1Ev","__ZN5Avoid11VertInfList12removeVertexEPNS_7VertInfE","__ZNSt3__114__split_bufferIPN5Avoid10ConstraintERNS_9allocatorIS3_EEED2Ev","__ZNK5Avoid11JunctionRef10outputCodeEP7__sFILE","__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri","___cxx_global_var_init997","__ZN5Avoid22TopologyAddonInterfaceC2ERKS0_","__ZNSt3__18numpunctIwED1Ev","__ZN5Avoid9inPolyGenERKNS_16PolygonInterfaceERKNS_5PointE","__ZNSt3__110__stdinbufIwEC1EP7__sFILE","___cxx_global_var_init261070","__ZNSt3__14listIPN5Avoid12ShiftSegmentENS_9allocatorIS3_EEEC2ERKS6_","__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE","__ZNKSt3__17codecvtIDic10_mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZN5Avoid11LineSegmentC1ERKS0_","__ZNK5Avoid8Obstacle14routingPolygonEv","__ZN5Avoid11LineSegmentC1ERKdS2_S2_bPNS_7VertInfES4_","__ZNSt3__16vectorINS_4pairIN5Avoid5PointES3_EENS_9allocatorIS4_EEED1Ev","__ZNSt3__16vectorINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEENS5_IS7_EEE6resizeEj","__ZN5Avoid17HyperEdgeTreeEdgeC2EPNS_17HyperEdgeTreeNodeES2_PNS_7ConnRefE","__ZN5Avoid7ConnEndC2ERKNS_5PointE","__ZNSt3__16vectorIN5Avoid5PointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE","__ZNSt3__14pairIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEED2Ev","__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri","__ZN5Avoid6Router8addShapeEPNS_8ShapeRefE","__ZNKSt3__17codecvtIcc10_mbstate_tE16do_always_noconvEv","__ZN5Avoid8ShapeRefC1EPNS_6RouterERNS_7PolygonEj","__ZN5Avoid7ConnRef29assignConnectionPinVisibilityEb","__ZNSt3__114__split_bufferINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEERNS7_IS9_EEED1Ev","__ZN5Avoid5Block5splitERPS0_S2_PNS_10ConstraintE","__ZNSt3__113__vector_baseIPN5Avoid7VertInfENS_9allocatorIS3_EEED2Ev","__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_","__ZNKSt9bad_alloc4whatEv","__ZNSt3__111__stdoutbufIwED2Ev","__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_","__ZNSt3__16__treeINS_4pairIN5Avoid5PointENS2_7PtOrderEEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSG_SG_","__ZNSt3__112_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEiEERT_T0_","__ZNSt3__114__shared_count16__release_sharedEv","__ZNSt3__112__deque_baseIjNS_9allocatorIjEEE3endEv","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__erase_uniqueIS5_EEjRKT_","__ZNSt3__112_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiEERT_T0_","__ZNSt3__114__split_bufferIPN5Avoid17HyperEdgeTreeEdgeERNS_9allocatorIS3_EEEC1EjjS6_","__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj","__ZNSt3__16__treeIPN5Avoid7VertInfENS1_10CmpVertInfENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESD_RKT_","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEED2Ev","__ZN5Avoid10ClusterRef18rectangularPolygonEv","__ZNSt3__16vectorIjNS_9allocatorIjEEED2Ev","__ZNSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE16__construct_nodeERKS5_","__ZN5Avoid17HyperEdgeTreeEdge24removeOtherJunctionsFromEPNS_17HyperEdgeTreeNodeERNSt3__13setIPNS_11JunctionRefENS3_4lessIS6_EENS3_9allocatorIS6_EEEE","__ZNSt3__13mapIN5Avoid6VertIDENS_3setIjNS_4lessIjEENS_9allocatorIjEEEENS4_IS2_EENS6_INS_4pairIKS2_S8_EEEEEixERSB_","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_","__ZNSt3__110__list_impINS_4pairIjjEENS_9allocatorIS2_EEE5clearEv","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi","__ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED1Ev","__ZNK5Avoid11LineSegmentltERKS0_","__ZNSt3__16__treeINS_4pairIPN5Avoid11JunctionRefENS_4listIPNS2_12ShiftSegmentENS_9allocatorIS7_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS8_ISB_EEE5clearEv","__ZNKSt3__119__iostream_category7messageEi","__ZNK5Avoid10CmpNodePosclEPKNS_4NodeES3_","__ZNK5Avoid8Obstacle6routerEv","__ZN5Avoid7ConnEndC2Ev","__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv","__ZN5Avoid8Obstacle19removeConnectionPinEPNS_18ShapeConnectionPinE","__ZN5Avoid11LineSegment15commitPositionXEPNS_6RouterEd","__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNK5Avoid7EdgeInf17isDummyConnectionEv","__ZNKSt3__17codecvtIcc10_mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_","__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE","__ZNSt3__113__vector_baseINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEED2Ev","__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_","__ZN5AvoidL21nudgeOrthogonalRoutesEPNS_6RouterEjRNSt3__13mapINS_5PointENS_7PtOrderENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS2_4listIPNS_12ShiftSegmentENS8_ISH_EEEEb","__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEED1Ev","__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj","__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv","__ZNSt3__14listIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE9push_backERKS2_","__ZN5Avoid7ConnEndC1EPNS_8ShapeRefEj","__ZN5AvoidL26buildOrthogonalChannelInfoEPNS_6RouterEjRNSt3__14listIPNS_12ShiftSegmentENS2_9allocatorIS5_EEEE","__ZNSt3__16__treeIPN5Avoid4NodeENS1_10CmpNodePosENS_9allocatorIS3_EEE5eraseENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_PvEEiEE","__ZNSt3__16vectorIPN5Avoid10ConstraintENS_9allocatorIS3_EEE18__construct_at_endEj","__ZNSt3__114__num_put_base14__format_floatEPcPKcj","__ZNSt3__16__treeIPN5Avoid7ConnEndENS_4lessIS3_EENS_9allocatorIS3_EEE14__erase_uniqueIS3_EEjRKT_","__ZNSt3__16vectorINS_3setIPN5Avoid7VertInfENS_4lessIS4_EENS_9allocatorIS4_EEEENS7_IS9_EEE8__appendEj","__Znwj","__ZNSt3__13mapIN5Avoid5PointENS1_7PtOrderENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__construct_nodeERS8_","__ZN5Avoid7PolygonD2Ev","__ZNSt3__112_GLOBAL__N_14makeINS_7codecvtIcc10_mbstate_tEEiEERT_T0_","__ZNSt3__16vectorIPN5Avoid5BlockENS_9allocatorIS3_EEED1Ev","__ZN5Avoid8ShapeRefC2EPNS_6RouterERNS_7PolygonEj","__ZN5Avoid5TimerC1Ev","__ZNSt3__114__split_bufferINS_4listIPN5Avoid11JunctionRefENS_9allocatorIS4_EEEERNS5_IS7_EEE10push_frontERKS7_","__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_","__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv","__ZNSt3__14listIPN5Avoid11JunctionRefENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEES9_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE","__ZNSt3__14listIPN5Avoid7ConnRefENS_9allocatorIS3_EEEC1ERKS6_","__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZN5Avoid34clearConnectorRouteCheckpointCacheEPNS_6RouterE","__ZNK5Avoid7Polygon5emptyEv","__ZNSt3__14listINS_4pairIjjEENS_9allocatorIS2_EEED2Ev","__ZNSt3__111__stdoutbufIwED0Ev","__ZNSt3__114__split_bufferIPN5Avoid8VariableERNS_9allocatorIS3_EEED1Ev","__ZNSt3__17codecvtIwc10_mbstate_tED2Ev","__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci","__ZNSt3__16vectorIPN5Avoid17HyperEdgeTreeEdgeENS_9allocatorIS3_EEED2Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PKNS_11__tree_nodeIS3_SB_EEiEESE_RKT_","__ZNSt3__14listINS_3setINS_4pairIdPN5Avoid7ConnRefEEENS3_14CmpConnCostRefENS_9allocatorIS6_EEEENS8_ISA_EEE9push_backERKSA_","__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc","__ZN5Avoid7EdgeInf19checkEdgeVisibilityEPNS_7VertInfES2_b","__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev","__ZNSt3__14listIjNS_9allocatorIjEEED1Ev","__ZN5Avoid26PotentialSegmentConstraint12rewriteIndexEjj","__ZNSt3__16__treeIN5Avoid5PointENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEEC1ERKS5_","__ZNSt3__16__treeIPN5Avoid11JunctionRefENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE","__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm","__ZNSt3__117__push_heap_frontIRN5Avoid10CmpEdgeInfENS_11__wrap_iterIPPNS1_7EdgeInfEEEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE","__ZNKSt3__16__treeINS_4pairIdPN5Avoid7ConnRefEEENS2_14CmpConnCostRefENS_9allocatorIS5_EEE14__count_uniqueIS5_EEjRKT_","__ZNSt3__16__treeIPN5Avoid17HyperEdgeTreeNodeENS1_13CmpNodesInDimENS_9allocatorIS3_EEEC2ERKS4_","__ZNSt3__110__list_impIN5Avoid26PotentialSegmentConstraintENS_9allocatorIS2_EEE5clearEv","__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev","__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_","__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZN5Avoid7ConnRefC1EPNS_6RouterERKNS_7ConnEndES5_j","__ZN5Avoid8EdgePairC1ERKNS_9PointPairEPNS_7VertInfE","__ZNSt3__116__narrow_to_utf8ILj32EED0Ev","__ZNSt3__114__split_bufferINS_4pairIPN5Avoid5PointEPNS2_7ConnRefEEERNS_9allocatorIS7_EEE10push_frontERKS7_","__ZNSt3__16__treeIN5Avoid9PointPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_","__ZN5Avoid11LineSegment23insertBreakpointsFinishEPNS_6RouterERS0_","__ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZN5Avoid5Block15reset_active_lmEPNS_8VariableES2_","__ZN5Avoid22UnsatisfiableExceptionC1ERKS0_","__ZN5Avoid9IncSolver10copyResultEv","__ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEED2Ev","__ZN5Avoid19NudgingShiftSegment9mergeWithEPKNS_12ShiftSegmentEj","__ZNSt3__16vectorIbNS_9allocatorIbEEED1Ev","__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE","__ZNSt3__117__push_heap_frontIRNS_6__lessIN5Avoid5ANodeES3_EENS_11__wrap_iterIPS3_EEEEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeE","__ZNSt13runtime_errorD0Ev","__ZNSt3__113__vector_baseIPN5Avoid7EdgeInfENS_9allocatorIS3_EEED2Ev","__ZNK5Avoid6VertIDneERKS0_","__ZNSt3__112system_errorD1Ev","__ZNK5Avoid6VertIDeqERKS0_","__ZNSt3__14listIPN5Avoid8ObstacleENS_9allocatorIS3_EEE5eraseENS_21__list_const_iteratorIS3_PvEE","__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE","__ZN5Avoid23ConnRerouteFlagDelegate7addConnEPNS_7ConnRefE","__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev","__ZNSt3__14listINS_4pairIPN5Avoid7EdgeInfEPNS2_7VertInfEEENS_9allocatorIS7_EEE9push_backERKS7_","__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi","__ZNK5Avoid7ConnRef3dstEv","__ZNSt3__14listIN5Avoid11LineSegmentENS_9allocatorIS2_EEE9push_backERKS2_","__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev","__ZNSt3__16__treeINS_4pairIPN5Avoid7VertInfEPNS2_17HyperEdgeTreeNodeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE","__ZNSt3__114__split_bufferINS_4listIPN5Avoid7ConnRefENS_9allocatorIS4_EEEERNS5_IS7_EEED1Ev","__ZNSt3__16__treeIPN5Avoid7VertInfENS_4lessIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEEiEERKT_","__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi","__ZNSt3__112__deque_baseIjNS_9allocatorIjEEE5beginEv"]



